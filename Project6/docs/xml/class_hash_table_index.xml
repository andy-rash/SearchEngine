<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="class_hash_table_index" kind="class" language="C++" prot="public">
    <compoundname>HashTableIndex</compoundname>
    <basecompoundref refid="class_index_interface" prot="public" virt="non-virtual">IndexInterface</basecompoundref>
    <includes refid="_hash_table_index_8hpp" local="no">HashTableIndex.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hash_table_index_1a20bf60fb5857280ba83934836d2b92e0" prot="private" static="no" mutable="no">
        <type>index_type</type>
        <definition>index_type HashTableIndex::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
<para>An index_type to contain the index itself. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="27" column="1" bodyfile="HashTableIndex.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hash_table_index_1a13c1c8deae84226c8bef382adf103b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HashTableIndex::HashTableIndex</definition>
        <argsstring>()</argsstring>
        <name>HashTableIndex</name>
        <briefdescription>
<para>Initializes the member data with default values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="36" column="1" bodyfile="HashTableIndex.cpp" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="class_hash_table_index_1af4d2eeae8263c353f91140cb2583fb58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HashTableIndex::~HashTableIndex</definition>
        <argsstring>()</argsstring>
        <name>~HashTableIndex</name>
        <briefdescription>
<para>Destructor for proper memory management of this and child classes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="43" column="1" bodyfile="HashTableIndex.cpp" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_hash_table_index_1a5387a8b9f0e585105a79624a93cd6ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>HashTableIndex::addDocument</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>addDocument</name>
        <reimplements refid="class_index_interface_1aa7601d76e8cc3f0657e800efdc4c127e">addDocument</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Function for adding a document. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>- a path to a file to add to the index. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="51" column="1" bodyfile="HashTableIndex.cpp" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_hash_table_index_1a69b31cc0bb54877b628bd67dadc5973f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>HashTableIndex::clearIndex</definition>
        <argsstring>()</argsstring>
        <name>clearIndex</name>
        <reimplements refid="class_index_interface_1aac36b4561598ee84c0c68958a1e3f82b">clearIndex</reimplements>
        <briefdescription>
<para>Function for clearing the index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="58" column="1" bodyfile="HashTableIndex.cpp" bodystart="14" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_hash_table_index_1a19b62a531429e670b25cd92be4333890" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>HashTableIndex::emptyIndex</definition>
        <argsstring>() const </argsstring>
        <name>emptyIndex</name>
        <reimplements refid="class_index_interface_1aaf90058a62e096bf607ea3dec2545ee4">emptyIndex</reimplements>
        <briefdescription>
<para>Function for returning whether the index is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>boolean whether the index is empty. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="66" column="1" bodyfile="HashTableIndex.cpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_hash_table_index_1a3d4c8e0244943cc44f33a35b742f7578" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_token" kindref="compound">Token</ref></type>
        <definition>HashTableIndex::findWord</definition>
        <argsstring>(std::string &amp;term)</argsstring>
        <name>findWord</name>
        <reimplements refid="class_index_interface_1aa0ea18e7daa9984240d108bd765b2816">findWord</reimplements>
        <param>
          <type>std::string &amp;</type>
          <declname>term</declname>
        </param>
        <briefdescription>
<para>Function for finding a word in the index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>- term to search for in the index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="class_token" kindref="compound">Token</ref> (by value for <ref refid="class_hash_table_index" kindref="compound">HashTableIndex</ref> compatibility) representing the searched word. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="75" column="1" bodyfile="HashTableIndex.cpp" bodystart="26" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_hash_table_index_1ac5cc9451bce6e13739af7c5f154eea0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="class_document" kindref="compound">Document</ref> &amp;</type>
        <definition>HashTableIndex::getDocumentByID</definition>
        <argsstring>(const int &amp;docID)</argsstring>
        <name>getDocumentByID</name>
        <reimplements refid="class_index_interface_1aa694a3e8feb722519b45f7313281bfad">getDocumentByID</reimplements>
        <param>
          <type>const int &amp;</type>
          <declname>docID</declname>
        </param>
        <briefdescription>
<para>Function for getting a document pertaining to a given ID number. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>docID</parametername>
</parameternamelist>
<parameterdescription>
<para>- a document ID number. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="class_document" kindref="compound">Document</ref> reference. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="84" column="1" bodyfile="HashTableIndex.cpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_hash_table_index_1aea9366ff9299d41bd3447bc6c95a3960" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>HashTableIndex::hasWord</definition>
        <argsstring>(std::string &amp;term)</argsstring>
        <name>hasWord</name>
        <reimplements refid="class_index_interface_1a8ccd80a03123406cb4b1e2494349f9da">hasWord</reimplements>
        <param>
          <type>std::string &amp;</type>
          <declname>term</declname>
        </param>
        <briefdescription>
<para>Function for returning whether the index contains a given word. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>- a term to search the index for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean whether the index contains the word. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="93" column="1" bodyfile="HashTableIndex.cpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_hash_table_index_1a42bbd9b325fb95b54a546c3c98c67624" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>HashTableIndex::listIndex</definition>
        <argsstring>()</argsstring>
        <name>listIndex</name>
        <reimplements refid="class_index_interface_1ad8567919eafa87ac20c35928c929084d">listIndex</reimplements>
        <briefdescription>
<para>Function for writing the persistent index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="100" column="1" bodyfile="HashTableIndex.cpp" bodystart="43" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_hash_table_index_1a8c483a83b40b49b0f35be9fea0674501" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>HashTableIndex::loadIndex</definition>
        <argsstring>()</argsstring>
        <name>loadIndex</name>
        <reimplements refid="class_index_interface_1a006f773f4e143745474e847cfb9f27fc">loadIndex</reimplements>
        <briefdescription>
<para>Function for loading an index in from persistent state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>boolean whether the index was successfully loaded. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="108" column="1" bodyfile="HashTableIndex.cpp" bodystart="77" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_hash_table_index_1a5105f715d8c5fd3b74d6bec462cb0c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>HashTableIndex::makeIndex</definition>
        <argsstring>(const std::string &amp;fileName)</argsstring>
        <name>makeIndex</name>
        <reimplements refid="class_index_interface_1a7b2ae510fa62eebb654708b90972c1b6">makeIndex</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>Function for creating the index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>- a directory containing files to be put in the index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean whether the index was successfully created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HashTableIndex.hpp" line="117" column="1" bodyfile="HashTableIndex.cpp" bodystart="135" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for dealing with the index in hash table form. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_a_v_l_tree_index" kindref="compound">AVLTreeIndex</ref>. </para></simplesect>
<simplesect kind="see"><para><ref refid="class_index_interface" kindref="compound">IndexInterface</ref>. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="17">
        <label>IndexInterface</label>
        <link refid="class_index_interface"/>
      </node>
      <node id="16">
        <label>HashTableIndex</label>
        <link refid="class_hash_table_index"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="19">
        <label>IndexInterface</label>
        <link refid="class_index_interface"/>
      </node>
      <node id="18">
        <label>HashTableIndex</label>
        <link refid="class_hash_table_index"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="HashTableIndex.hpp" line="21" column="1" bodyfile="HashTableIndex.hpp" bodystart="21" bodyend="119"/>
    <listofallmembers>
      <member refid="class_hash_table_index_1a5387a8b9f0e585105a79624a93cd6ec0" prot="public" virt="virtual"><scope>HashTableIndex</scope><name>addDocument</name></member>
      <member refid="class_hash_table_index_1a69b31cc0bb54877b628bd67dadc5973f" prot="public" virt="virtual"><scope>HashTableIndex</scope><name>clearIndex</name></member>
      <member refid="class_hash_table_index_1a19b62a531429e670b25cd92be4333890" prot="public" virt="virtual"><scope>HashTableIndex</scope><name>emptyIndex</name></member>
      <member refid="class_hash_table_index_1a3d4c8e0244943cc44f33a35b742f7578" prot="public" virt="virtual"><scope>HashTableIndex</scope><name>findWord</name></member>
      <member refid="class_hash_table_index_1ac5cc9451bce6e13739af7c5f154eea0b" prot="public" virt="virtual"><scope>HashTableIndex</scope><name>getDocumentByID</name></member>
      <member refid="class_index_interface_1af5d7e170720c26b3d38499d4e5e1dd69" prot="public" virt="non-virtual"><scope>HashTableIndex</scope><name>getNumDocs</name></member>
      <member refid="class_index_interface_1a3260a1213d90bd6cb6fd33043fb28b44" prot="public" virt="non-virtual"><scope>HashTableIndex</scope><name>getNumTokens</name></member>
      <member refid="class_hash_table_index_1a13c1c8deae84226c8bef382adf103b53" prot="public" virt="non-virtual"><scope>HashTableIndex</scope><name>HashTableIndex</name></member>
      <member refid="class_hash_table_index_1aea9366ff9299d41bd3447bc6c95a3960" prot="public" virt="virtual"><scope>HashTableIndex</scope><name>hasWord</name></member>
      <member refid="class_hash_table_index_1a20bf60fb5857280ba83934836d2b92e0" prot="private" virt="non-virtual"><scope>HashTableIndex</scope><name>index</name></member>
      <member refid="class_index_interface_1a7b1e7eae7faa652d2f63efeecf0ca2de" prot="public" virt="non-virtual"><scope>HashTableIndex</scope><name>IndexInterface</name></member>
      <member refid="class_hash_table_index_1a42bbd9b325fb95b54a546c3c98c67624" prot="public" virt="virtual"><scope>HashTableIndex</scope><name>listIndex</name></member>
      <member refid="class_hash_table_index_1a8c483a83b40b49b0f35be9fea0674501" prot="public" virt="virtual"><scope>HashTableIndex</scope><name>loadIndex</name></member>
      <member refid="class_hash_table_index_1a5105f715d8c5fd3b74d6bec462cb0c38" prot="public" virt="virtual"><scope>HashTableIndex</scope><name>makeIndex</name></member>
      <member refid="class_hash_table_index_1af4d2eeae8263c353f91140cb2583fb58" prot="public" virt="non-virtual"><scope>HashTableIndex</scope><name>~HashTableIndex</name></member>
      <member refid="class_index_interface_1a3927fabe77a7da5845dc0495b2c1c2b2" prot="public" virt="virtual"><scope>HashTableIndex</scope><name>~IndexInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
