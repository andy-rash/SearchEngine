<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="classhash__iterator" kind="class" language="C++" prot="public">
    <compoundname>hash_iterator</compoundname>
    <includes refid="hash__table_8hpp" local="no">hash_table.hpp</includes>
    <templateparamlist>
      <param>
        <type>class _NodePtr</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classhash__iterator_1a3c0a7b7e87f226b9571f5d9097bc50cd" prot="private" static="no">
        <type>_NodePtr</type>
        <definition>typedef _NodePtr hash_iterator&lt; _NodePtr &gt;::node_pointer</definition>
        <argsstring></argsstring>
        <name>node_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="44" column="1" bodyfile="hash_table.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhash__iterator_1ac7f22b21b9e812be82ff6e2d22aa5b22" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>typedef std::forward_iterator_tag hash_iterator&lt; _NodePtr &gt;::iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="50" column="1" bodyfile="hash_table.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhash__iterator_1a2fe8b2e7a76ef651b9e3dd75e176d708" prot="public" static="no">
        <type>std::pointer_traits&lt; node_pointer &gt;::element_type::value_type</type>
        <definition>typedef std::pointer_traits&lt;node_pointer&gt;::element_type::value_type hash_iterator&lt; _NodePtr &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="51" column="1" bodyfile="hash_table.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhash__iterator_1a594d7f0375d027ee463e7ab5d72cfe50" prot="public" static="no">
        <type>std::pointer_traits&lt; node_pointer &gt;::<ref refid="classhash__iterator_1a594d7f0375d027ee463e7ab5d72cfe50" kindref="member">difference_type</ref></type>
        <definition>typedef std::pointer_traits&lt;node_pointer&gt;::difference_type hash_iterator&lt; _NodePtr &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="52" column="1" bodyfile="hash_table.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhash__iterator_1aaa355159b91ef00385b0c4256e9a9eaf" prot="public" static="no">
        <type><ref refid="classhash__iterator_1a2fe8b2e7a76ef651b9e3dd75e176d708" kindref="member">value_type</ref> &amp;</type>
        <definition>typedef value_type&amp; hash_iterator&lt; _NodePtr &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="53" column="1" bodyfile="hash_table.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhash__iterator_1a7e43a9eb7cc16f1e13c47e3b76762bb7" prot="public" static="no">
        <type>std::pointer_traits&lt; node_pointer &gt;::template rebind&lt; <ref refid="classhash__iterator_1a2fe8b2e7a76ef651b9e3dd75e176d708" kindref="member">value_type</ref> &gt;</type>
        <definition>typedef std::pointer_traits&lt;node_pointer&gt;::template rebind&lt;value_type&gt; hash_iterator&lt; _NodePtr &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="54" column="1" bodyfile="hash_table.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhash__iterator_1a29bd15e9e058299476e28af7d8191504" prot="private" static="no" mutable="no">
        <type>node_pointer</type>
        <definition>node_pointer hash_iterator&lt; _NodePtr &gt;::_ref</definition>
        <argsstring></argsstring>
        <name>_ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="46" column="1" bodyfile="hash_table.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classhash__iterator_1a39f140c37d8ec7b0c08b23083c94562e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class hash_table</definition>
        <argsstring></argsstring>
        <name>hash_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="113" column="1" bodyfile="hash_table.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classhash__iterator_1ab1e3d7f01b4a220194ffa3e42ab260dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class hash_const_iterator</definition>
        <argsstring></argsstring>
        <name>hash_const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="114" column="1" bodyfile="hash_table.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classhash__iterator_1a1333d4e2a00e08b19d4efb85faabfb1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const hash_iterator &amp;lhs, const hash_iterator &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classhash__iterator" kindref="compound">hash_iterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classhash__iterator" kindref="compound">hash_iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="101" column="1" bodyfile="hash_table.hpp" bodystart="101" bodyend="102"/>
      </memberdef>
      <memberdef kind="friend" id="classhash__iterator_1a309d75f119087716a5713beaa07fe247" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const hash_iterator &amp;lhs, const hash_iterator &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classhash__iterator" kindref="compound">hash_iterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classhash__iterator" kindref="compound">hash_iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="105" column="1" bodyfile="hash_table.hpp" bodystart="105" bodyend="106"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhash__iterator_1ad0f7235a73c26d87f377e0263e597fd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hash_iterator&lt; _NodePtr &gt;::hash_iterator</definition>
        <argsstring>()</argsstring>
        <name>hash_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="57" column="1" bodyfile="hash_table.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classhash__iterator_1ae7fa00c1d11ed898074461d91fd6f0c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hash_iterator&lt; _NodePtr &gt;::hash_iterator</definition>
        <argsstring>(const hash_iterator &amp;copy)</argsstring>
        <name>hash_iterator</name>
        <param>
          <type>const <ref refid="classhash__iterator" kindref="compound">hash_iterator</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="60" column="1" bodyfile="hash_table.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classhash__iterator_1a9bdd951d9dfabdb244c5abcdd2e34255" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hash_iterator&lt; _NodePtr &gt;::~hash_iterator</definition>
        <argsstring>()</argsstring>
        <name>~hash_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="63" column="1" bodyfile="hash_table.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classhash__iterator_1a8915109ae1efcefb8fd9d23ccdafcf11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhash__iterator" kindref="compound">hash_iterator</ref> &amp;</type>
        <definition>hash_iterator&amp; hash_iterator&lt; _NodePtr &gt;::operator=</definition>
        <argsstring>(const hash_iterator &amp;copy)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhash__iterator" kindref="compound">hash_iterator</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="66" column="1" bodyfile="hash_table.hpp" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classhash__iterator_1a36d9980c71a1da8e85c225ffe5c6ee19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhash__iterator_1aaa355159b91ef00385b0c4256e9a9eaf" kindref="member">reference</ref></type>
        <definition>reference hash_iterator&lt; _NodePtr &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="75" column="1" bodyfile="hash_table.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classhash__iterator_1ad3099e64ec3d4c9627c2203b0cc6cdc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhash__iterator_1a7e43a9eb7cc16f1e13c47e3b76762bb7" kindref="member">pointer</ref></type>
        <definition>pointer hash_iterator&lt; _NodePtr &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="78" column="1" bodyfile="hash_table.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classhash__iterator_1a2ba5444dbf9ee440994fa4f2266512f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhash__iterator" kindref="compound">hash_iterator</ref> &amp;</type>
        <definition>hash_iterator&amp; hash_iterator&lt; _NodePtr &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="81" column="1" bodyfile="hash_table.hpp" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classhash__iterator_1ac4ad4e8f01e526a6ccef90764224a09a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhash__iterator" kindref="compound">hash_iterator</ref></type>
        <definition>hash_iterator hash_iterator&lt; _NodePtr &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="90" column="1" bodyfile="hash_table.hpp" bodystart="90" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhash__iterator_1af56029f28a084c6b9b09b7d72e1bdd8c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hash_iterator&lt; _NodePtr &gt;::hash_iterator</definition>
        <argsstring>(node_pointer ref)</argsstring>
        <name>hash_iterator</name>
        <param>
          <type>node_pointer</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hash_table.hpp" line="111" column="1" bodyfile="hash_table.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="hash_table.hpp" line="42" column="1" bodyfile="hash_table.hpp" bodystart="42" bodyend="116"/>
    <listofallmembers>
      <member refid="classhash__iterator_1a29bd15e9e058299476e28af7d8191504" prot="private" virt="non-virtual"><scope>hash_iterator</scope><name>_ref</name></member>
      <member refid="classhash__iterator_1a594d7f0375d027ee463e7ab5d72cfe50" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>difference_type</name></member>
      <member refid="classhash__iterator_1ab1e3d7f01b4a220194ffa3e42ab260dd" prot="private" virt="non-virtual"><scope>hash_iterator</scope><name>hash_const_iterator</name></member>
      <member refid="classhash__iterator_1ad0f7235a73c26d87f377e0263e597fd5" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>hash_iterator</name></member>
      <member refid="classhash__iterator_1ae7fa00c1d11ed898074461d91fd6f0c8" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>hash_iterator</name></member>
      <member refid="classhash__iterator_1af56029f28a084c6b9b09b7d72e1bdd8c" prot="private" virt="non-virtual"><scope>hash_iterator</scope><name>hash_iterator</name></member>
      <member refid="classhash__iterator_1a39f140c37d8ec7b0c08b23083c94562e" prot="private" virt="non-virtual"><scope>hash_iterator</scope><name>hash_table</name></member>
      <member refid="classhash__iterator_1ac7f22b21b9e812be82ff6e2d22aa5b22" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>iterator_category</name></member>
      <member refid="classhash__iterator_1a3c0a7b7e87f226b9571f5d9097bc50cd" prot="private" virt="non-virtual"><scope>hash_iterator</scope><name>node_pointer</name></member>
      <member refid="classhash__iterator_1a309d75f119087716a5713beaa07fe247" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>operator!=</name></member>
      <member refid="classhash__iterator_1a36d9980c71a1da8e85c225ffe5c6ee19" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>operator*</name></member>
      <member refid="classhash__iterator_1a2ba5444dbf9ee440994fa4f2266512f2" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>operator++</name></member>
      <member refid="classhash__iterator_1ac4ad4e8f01e526a6ccef90764224a09a" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>operator++</name></member>
      <member refid="classhash__iterator_1ad3099e64ec3d4c9627c2203b0cc6cdc1" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>operator-&gt;</name></member>
      <member refid="classhash__iterator_1a8915109ae1efcefb8fd9d23ccdafcf11" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>operator=</name></member>
      <member refid="classhash__iterator_1a1333d4e2a00e08b19d4efb85faabfb1d" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>operator==</name></member>
      <member refid="classhash__iterator_1a7e43a9eb7cc16f1e13c47e3b76762bb7" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>pointer</name></member>
      <member refid="classhash__iterator_1aaa355159b91ef00385b0c4256e9a9eaf" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>reference</name></member>
      <member refid="classhash__iterator_1a2fe8b2e7a76ef651b9e3dd75e176d708" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>value_type</name></member>
      <member refid="classhash__iterator_1a9bdd951d9dfabdb244c5abcdd2e34255" prot="public" virt="non-virtual"><scope>hash_iterator</scope><name>~hash_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
