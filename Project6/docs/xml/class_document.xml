<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="class_document" kind="class" language="C++" prot="public">
    <compoundname>Document</compoundname>
    <includes refid="_document_8hpp" local="no">Document.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_document_1a04ae4bee63a62d446c0f6007598d4051" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Document::_body</definition>
        <argsstring></argsstring>
        <name>_body</name>
        <briefdescription>
<para>A std::string to contain the body text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="22" column="1" bodyfile="Document.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_document_1a5d9dd56b0af38bd84d1dcacf0c7ce5a9" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Document::_date</definition>
        <argsstring></argsstring>
        <name>_date</name>
        <briefdescription>
<para>A std::string to contain the date a document was added to the corpus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="23" column="1" bodyfile="Document.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_document_1ad9c0c14ae52f04af231ae9fbebae10df" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Document::_time</definition>
        <argsstring></argsstring>
        <name>_time</name>
        <briefdescription>
<para>A std::string to contain the time a document was added to the corpus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="24" column="1" bodyfile="Document.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_document_1ac21a0c8503c8f62484fcbe319aa3c754" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Document::_title</definition>
        <argsstring></argsstring>
        <name>_title</name>
        <briefdescription>
<para>A std::string to contain the title. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="25" column="1" bodyfile="Document.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_document_1a462b4bbe2c25638e5cab3feee64116bd" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Document::_username</definition>
        <argsstring></argsstring>
        <name>_username</name>
        <briefdescription>
<para>A std::string to contain the username of the contributor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="26" column="1" bodyfile="Document.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_document_1a2a43ee1034d17567784d7c4a0c9c1125" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Document::_id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
<para>An integer containing the document ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="27" column="1" bodyfile="Document.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_document_1ac81fac7a8d9ba85529addc5b3299f2ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct std::hash&lt; Document &gt;</definition>
        <argsstring></argsstring>
        <name>std::hash&lt; Document &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="27" column="1" bodyfile="Document.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_document_1ad4716fc286025a1c6b8020e517833e03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>Document::operator==</definition>
        <argsstring>(const Document &amp;lhs, const Document &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_document" kindref="compound">Document</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_document" kindref="compound">Document</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Compares two <ref refid="class_document" kindref="compound">Document</ref> objects for equality. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>- A constant <ref refid="class_document" kindref="compound">Document</ref> reference. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>- A constant <ref refid="class_document" kindref="compound">Document</ref> reference. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean whether two Tokens are the same. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="209" column="1" bodyfile="Document.hpp" bodystart="209" bodyend="210"/>
      </memberdef>
      <memberdef kind="friend" id="class_document_1a333a5550c36ff69a94c749828fcf0165" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>Document::operator!=</definition>
        <argsstring>(const Document &amp;lhs, const Document &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_document" kindref="compound">Document</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_document" kindref="compound">Document</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Compares two <ref refid="class_document" kindref="compound">Document</ref> objects for inequality. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>- A constant <ref refid="class_document" kindref="compound">Document</ref> reference. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>- A constant <ref refid="class_document" kindref="compound">Document</ref> reference. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean whether two Tokens are not the same. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="221" column="1" bodyfile="Document.hpp" bodystart="221" bodyend="222"/>
      </memberdef>
      <memberdef kind="friend" id="class_document_1a180fade9b73b45b1619be1e857b5b39e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>Document::operator&lt;</definition>
        <argsstring>(const Document &amp;lhs, const Document &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_document" kindref="compound">Document</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_document" kindref="compound">Document</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Returns whether one <ref refid="class_document" kindref="compound">Document</ref> is less than another. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>- A constant <ref refid="class_document" kindref="compound">Document</ref> reference. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>- A constant <ref refid="class_document" kindref="compound">Document</ref> reference. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boolean whether one <ref refid="class_token" kindref="compound">Token</ref> is less than another. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="233" column="1" bodyfile="Document.hpp" bodystart="233" bodyend="234"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_document_1acdbcbe550084e8c20f4f67eb229ad66a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Document::Document</definition>
        <argsstring>()</argsstring>
        <name>Document</name>
        <briefdescription>
<para>Initializes the member data with default values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="38" column="1" bodyfile="Document.hpp" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1a37880d88667c09cc39ef46937f2cf6e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Document::Document</definition>
        <argsstring>(const std::string &amp;body, const std::string &amp;date, const std::string &amp;time, const std::string &amp;title, const std::string &amp;username, int id)</argsstring>
        <name>Document</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>date</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>username</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="56" column="1" bodyfile="Document.hpp" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1ad90511280d1b3815e57ed78003002ea1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_document" kindref="compound">Document</ref> &amp;</type>
        <definition>Document&amp; Document::operator=</definition>
        <argsstring>(const Document &amp;copy)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_document" kindref="compound">Document</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="75" column="1" bodyfile="Document.hpp" bodystart="75" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1a878497826a1ca34e778ef05f1a809d1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; Document::body</definition>
        <argsstring>() const </argsstring>
        <name>body</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="99" column="1" bodyfile="Document.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1a239171caccf983622b557898846c46e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>Document::body</definition>
        <argsstring>(const std::string &amp;body)</argsstring>
        <name>body</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
        </param>
        <briefdescription>
<para>Sets the <ref refid="class_document" kindref="compound">Document</ref>&apos;s body text. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>- a string to set the <ref refid="class_document" kindref="compound">Document</ref> body text to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="108" column="1" bodyfile="Document.hpp" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1a1185d78c1c5c5ea69572c20d1c8e552a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; Document::date</definition>
        <argsstring>() const </argsstring>
        <name>date</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="117" column="1" bodyfile="Document.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1a7e1af2cd6cb30c92b5f434863898019e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>Document::date</definition>
        <argsstring>(const std::string &amp;date)</argsstring>
        <name>date</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>date the <ref refid="class_document" kindref="compound">Document</ref>&apos;s date. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>- a string to set the <ref refid="class_document" kindref="compound">Document</ref> date to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="126" column="1" bodyfile="Document.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1acda3a6caa3bc958024aa795cde6c7081" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int &amp;</type>
        <definition>const int&amp; Document::id</definition>
        <argsstring>() const </argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="135" column="1" bodyfile="Document.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1ab538b0d75fd467eea80868917c63fbe5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>Document::id</definition>
        <argsstring>(const int &amp;id)</argsstring>
        <name>id</name>
        <param>
          <type>const int &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Sets the <ref refid="class_document" kindref="compound">Document</ref>&apos;s ID number. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>- an integer to set the <ref refid="class_document" kindref="compound">Document</ref> ID to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="144" column="1" bodyfile="Document.hpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1afda77c47efd90655ba5bb2ab8bf9ba00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; Document::time</definition>
        <argsstring>() const </argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="153" column="1" bodyfile="Document.hpp" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1a351642ea8074b80657d34a034797e53c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>Document::time</definition>
        <argsstring>(const std::string &amp;time)</argsstring>
        <name>time</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Sets the <ref refid="class_document" kindref="compound">Document</ref>&apos;s time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>- a string to set the <ref refid="class_document" kindref="compound">Document</ref> time to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="162" column="1" bodyfile="Document.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1a4aac8266d0fea88e39ee390159130787" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; Document::title</definition>
        <argsstring>() const </argsstring>
        <name>title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="171" column="1" bodyfile="Document.hpp" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1ae586532a45e61a77afd0c0cfe95089ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>Document::title</definition>
        <argsstring>(const std::string &amp;title)</argsstring>
        <name>title</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Sets the <ref refid="class_document" kindref="compound">Document</ref>&apos;s title. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>- a string to set the <ref refid="class_document" kindref="compound">Document</ref> title to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="180" column="1" bodyfile="Document.hpp" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1a52990ba26536e2e3a08593444e0ccdf3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; Document::username</definition>
        <argsstring>() const </argsstring>
        <name>username</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="189" column="1" bodyfile="Document.hpp" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_document_1a24faf5e067badd65b55330535dec8c6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>Document::username</definition>
        <argsstring>(const std::string &amp;username)</argsstring>
        <name>username</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>username</declname>
        </param>
        <briefdescription>
<para>Sets the <ref refid="class_document" kindref="compound">Document</ref>&apos;s username. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>- a string to set the <ref refid="class_document" kindref="compound">Document</ref> username to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Document.hpp" line="198" column="1" bodyfile="Document.hpp" bodystart="198" bodyend="198"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for holding the information contained in a single page from WikiBooks. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_document_processor" kindref="compound">DocumentProcessor</ref>. </para></simplesect>
</para>    </detaileddescription>
    <location file="Document.hpp" line="18" column="1" bodyfile="Document.hpp" bodystart="18" bodyend="237"/>
    <listofallmembers>
      <member refid="class_document_1a04ae4bee63a62d446c0f6007598d4051" prot="private" virt="non-virtual"><scope>Document</scope><name>_body</name></member>
      <member refid="class_document_1a5d9dd56b0af38bd84d1dcacf0c7ce5a9" prot="private" virt="non-virtual"><scope>Document</scope><name>_date</name></member>
      <member refid="class_document_1a2a43ee1034d17567784d7c4a0c9c1125" prot="private" virt="non-virtual"><scope>Document</scope><name>_id</name></member>
      <member refid="class_document_1ad9c0c14ae52f04af231ae9fbebae10df" prot="private" virt="non-virtual"><scope>Document</scope><name>_time</name></member>
      <member refid="class_document_1ac21a0c8503c8f62484fcbe319aa3c754" prot="private" virt="non-virtual"><scope>Document</scope><name>_title</name></member>
      <member refid="class_document_1a462b4bbe2c25638e5cab3feee64116bd" prot="private" virt="non-virtual"><scope>Document</scope><name>_username</name></member>
      <member refid="class_document_1a878497826a1ca34e778ef05f1a809d1a" prot="public" virt="non-virtual"><scope>Document</scope><name>body</name></member>
      <member refid="class_document_1a239171caccf983622b557898846c46e5" prot="public" virt="non-virtual"><scope>Document</scope><name>body</name></member>
      <member refid="class_document_1a1185d78c1c5c5ea69572c20d1c8e552a" prot="public" virt="non-virtual"><scope>Document</scope><name>date</name></member>
      <member refid="class_document_1a7e1af2cd6cb30c92b5f434863898019e" prot="public" virt="non-virtual"><scope>Document</scope><name>date</name></member>
      <member refid="class_document_1acdbcbe550084e8c20f4f67eb229ad66a" prot="public" virt="non-virtual"><scope>Document</scope><name>Document</name></member>
      <member refid="class_document_1a37880d88667c09cc39ef46937f2cf6e4" prot="public" virt="non-virtual"><scope>Document</scope><name>Document</name></member>
      <member refid="class_document_1acda3a6caa3bc958024aa795cde6c7081" prot="public" virt="non-virtual"><scope>Document</scope><name>id</name></member>
      <member refid="class_document_1ab538b0d75fd467eea80868917c63fbe5" prot="public" virt="non-virtual"><scope>Document</scope><name>id</name></member>
      <member refid="class_document_1a333a5550c36ff69a94c749828fcf0165" prot="public" virt="non-virtual"><scope>Document</scope><name>operator!=</name></member>
      <member refid="class_document_1a180fade9b73b45b1619be1e857b5b39e" prot="public" virt="non-virtual"><scope>Document</scope><name>operator&lt;</name></member>
      <member refid="class_document_1ad90511280d1b3815e57ed78003002ea1" prot="public" virt="non-virtual"><scope>Document</scope><name>operator=</name></member>
      <member refid="class_document_1ad4716fc286025a1c6b8020e517833e03" prot="public" virt="non-virtual"><scope>Document</scope><name>operator==</name></member>
      <member refid="class_document_1ac81fac7a8d9ba85529addc5b3299f2ff" prot="public" virt="non-virtual"><scope>Document</scope><name>std::hash&lt; Document &gt;</name></member>
      <member refid="class_document_1afda77c47efd90655ba5bb2ab8bf9ba00" prot="public" virt="non-virtual"><scope>Document</scope><name>time</name></member>
      <member refid="class_document_1a351642ea8074b80657d34a034797e53c" prot="public" virt="non-virtual"><scope>Document</scope><name>time</name></member>
      <member refid="class_document_1a4aac8266d0fea88e39ee390159130787" prot="public" virt="non-virtual"><scope>Document</scope><name>title</name></member>
      <member refid="class_document_1ae586532a45e61a77afd0c0cfe95089ab" prot="public" virt="non-virtual"><scope>Document</scope><name>title</name></member>
      <member refid="class_document_1a52990ba26536e2e3a08593444e0ccdf3" prot="public" virt="non-virtual"><scope>Document</scope><name>username</name></member>
      <member refid="class_document_1a24faf5e067badd65b55330535dec8c6a" prot="public" virt="non-virtual"><scope>Document</scope><name>username</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
