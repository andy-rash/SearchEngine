<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="_index_handler_8cpp" kind="file" language="C++">
    <compoundname>IndexHandler.cpp</compoundname>
    <includes refid="_index_handler_8hpp" local="yes">IndexHandler.hpp</includes>
    <includes local="yes">/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/cereal.hpp</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">string</includes>
    <includes local="no">memory</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">vector</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">functional</includes>
    <includes local="yes">/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/macros.hpp</includes>
    <includes local="yes">/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/details/traits.hpp</includes>
    <includes local="no">typeindex</includes>
    <includes local="yes">/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/access.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="yes">/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/details/helpers.hpp</includes>
    <includes local="no">utility</includes>
    <includes local="no">stdexcept</includes>
    <includes local="yes">/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/details/static_object.hpp</includes>
    <includes local="yes">/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/types/base_class.hpp</includes>
    <includes local="yes">/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/types/common.hpp</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="261">
        <label>locale</label>
      </node>
      <node id="256">
        <label>functional</label>
      </node>
      <node id="257">
        <label>DocumentProcessor.hpp</label>
        <link refid="_document_processor_8hpp"/>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
      </node>
      <node id="281">
        <label>/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/types/base_class.hpp</label>
      </node>
      <node id="252">
        <label>iterator</label>
      </node>
      <node id="274">
        <label>cstdint</label>
      </node>
      <node id="266">
        <label>cmath</label>
      </node>
      <node id="260">
        <label>errno.h</label>
      </node>
      <node id="253">
        <label>stdexcept</label>
      </node>
      <node id="265">
        <label>Token.hpp</label>
        <link refid="_token_8hpp"/>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/macros.hpp</label>
      </node>
      <node id="270">
        <label>/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/cereal.hpp</label>
      </node>
      <node id="247">
        <label>string</label>
      </node>
      <node id="264">
        <label>unordered_set</label>
      </node>
      <node id="246">
        <label>fstream</label>
      </node>
      <node id="243">
        <label>IndexHandler.cpp</label>
        <link refid="IndexHandler.cpp"/>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
      </node>
      <node id="280">
        <label>/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/details/static_object.hpp</label>
      </node>
      <node id="267">
        <label>./Resources/pugixml-1.7/src/pugixml.hpp</label>
      </node>
      <node id="263">
        <label>sys/types.h</label>
      </node>
      <node id="282">
        <label>/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/types/common.hpp</label>
      </node>
      <node id="249">
        <label>vector</label>
      </node>
      <node id="244">
        <label>IndexHandler.hpp</label>
        <link refid="_index_handler_8hpp"/>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
      </node>
      <node id="254">
        <label>utility</label>
      </node>
      <node id="262">
        <label>sstream</label>
      </node>
      <node id="258">
        <label>codecvt</label>
      </node>
      <node id="255">
        <label>Document.hpp</label>
        <link refid="_document_8hpp"/>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
      </node>
      <node id="276">
        <label>/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/details/traits.hpp</label>
      </node>
      <node id="251">
        <label>iostream</label>
      </node>
      <node id="273">
        <label>cstddef</label>
      </node>
      <node id="279">
        <label>/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/details/helpers.hpp</label>
      </node>
      <node id="248">
        <label>unordered_map</label>
      </node>
      <node id="250">
        <label>AVLTree.hpp</label>
        <link refid="_a_v_l_tree_8hpp"/>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="271">
        <label>type_traits</label>
      </node>
      <node id="245">
        <label>algorithm</label>
      </node>
      <node id="268">
        <label>./Resources/Oleander/stemming/english_stem.h</label>
      </node>
      <node id="278">
        <label>/Users/andy/Google Drive/SMU Documents/2016/Spring/CSE2341/programming-assignments-andy-rash/Project6/Project6/Resources/cereal/include/cereal/access.hpp</label>
      </node>
      <node id="269">
        <label>./Resources/cereal/include/cereal/archives/binary.hpp</label>
      </node>
      <node id="272">
        <label>memory</label>
      </node>
      <node id="277">
        <label>typeindex</label>
      </node>
      <node id="259">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Contains the implementation for <ref refid="class_index_handler" kindref="compound">IndexHandler</ref> objects. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_index_handler_8hpp" kindref="compound">IndexHandler.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_index_handler_1a59b96a28cc87ee0ee4e9e36b021952b0" kindref="member">IndexHandler::addDocument</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>docProc.<ref refid="class_document_processor_1aa04641c8135b87e07ccb2b73283938ba" kindref="member">addDocument</ref>(path,tokens);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>numDocs<sp/>=<sp/>docProc.<ref refid="class_document_processor_1a09d1b766a653de2d1ce6a81f2213d975" kindref="member">documentsSize</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>numTokens<sp/>=<sp/>(int)tokens.<ref refid="class_a_v_l_tree_1aae30d36bc9cb070787c1d0d97413eb86" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_index_handler_1a6bf96d298c05a661245313a44d65d109" kindref="member">IndexHandler::clearIndex</ref>()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>tokens.<ref refid="class_a_v_l_tree_1ad79395d1467b80703d47e1c272024b9d" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>docProc.<ref refid="class_document_processor_1a126fc41f4a3ec8af3240714862e686c5" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>index.clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>numTokens<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>numDocs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_index_handler_1a5b9c45db93955ffa813bb3467e253f66" kindref="member">IndexHandler::emptyIndexAVL</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tokens.<ref refid="class_a_v_l_tree_1a80576afed5890eb0295e98b60db75ab4" kindref="member">empty</ref>();<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="31"><highlight class="comment">bool<sp/>IndexHandler::emptyIndexHash()<sp/>{<sp/>return<sp/>false;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="class_token" kindref="compound">Token</ref>&amp;<sp/><ref refid="class_index_handler_1af1b5de0f985fe2b203e337baf6aa3bd2" kindref="member">IndexHandler::findWord</ref>(std::string&amp;<sp/>term)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_token" kindref="compound">Token</ref><sp/>tok;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>tok.<ref refid="class_token_1a518dac411db3279a9b2f4ce38e46d199" kindref="member">payload</ref>(term);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(tokens.<ref refid="class_a_v_l_tree_1a853f57000e0cf3f2d9ef5fbbc3223e60" kindref="member">find</ref>(tok));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_document" kindref="compound">Document</ref>&amp;<sp/><ref refid="class_index_handler_1a99ae2a9f65e44cb1b83b3cb865cbc81c" kindref="member">IndexHandler::getDocumentByID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>docID)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>docProc.<ref refid="class_document_processor_1a3f725ffc320008889f9a2797b8dadb70" kindref="member">getDocumentByID</ref>(docID);<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_index_handler_1a342414794783dc47d71b7a3034356d46" kindref="member">IndexHandler::getNumDocs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numDocs;<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_index_handler_1a3bad0c158a41fa574d3507af6cc7267e" kindref="member">IndexHandler::getNumTokens</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numTokens;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_index_handler_1a78bae3a45ea4d4e09e576b482bf58f78" kindref="member">IndexHandler::hasWord</ref>(std::string&amp;<sp/>term)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_token" kindref="compound">Token</ref><sp/>tok;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>tok.<ref refid="class_token_1a518dac411db3279a9b2f4ce38e46d199" kindref="member">payload</ref>(term);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(tokens.<ref refid="class_a_v_l_tree_1a853f57000e0cf3f2d9ef5fbbc3223e60" kindref="member">find</ref>(tok)<sp/>!=<sp/>tokens.<ref refid="class_a_v_l_tree_1af636ba0f814af8a79ed120bd5bfac310" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_index_handler_1ad05b01f580d6d13d879d805750dfb4d0" kindref="member">IndexHandler::listIndexAVL</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>outputFile.open(</highlight><highlight class="stringliteral">&quot;./Output/index.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(outputFile.is_open())<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;document&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&lt;processed&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numDocs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/processed&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="class_a_v_l_tree" kindref="compound">AVLTree&lt;Token&gt;::iterator</ref><sp/>it<sp/>=<sp/>tokens.<ref refid="class_a_v_l_tree_1a65acff2e86e46d2a99b52df98f2a1713" kindref="member">begin</ref>();<sp/>it<sp/>!=<sp/>tokens.<ref refid="class_a_v_l_tree_1af636ba0f814af8a79ed120bd5bfac310" kindref="member">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&lt;term<sp/>Term=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it-&gt;payload()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>:<sp/>it-&gt;docFreqs())<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;id<sp/>ID=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;frequency&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.second.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/frequency&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/id&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&lt;/term&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/document&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>outputFile.close();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="93"><highlight class="comment">void<sp/>IndexHandler::listIndexHash()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/>outputFile.open(&quot;./Output/index.xml&quot;);</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/>if(outputFile.is_open())<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/>&quot;&lt;document&gt;&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(auto&amp;<sp/>element<sp/>:<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/>&lt;term<sp/>Term=\&quot;&quot;<sp/>&lt;&lt;<sp/>element.first<sp/>&lt;&lt;<sp/>&quot;\&quot;&gt;&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(auto&amp;<sp/>id<sp/>:<sp/>element.second)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;id<sp/>ID=\&quot;&quot;<sp/>&lt;&lt;<sp/>id.first<sp/>&lt;&lt;<sp/>&quot;\&quot;&gt;&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;frequency&gt;&quot;<sp/>&lt;&lt;<sp/>id.second<sp/>&lt;&lt;<sp/>&quot;&lt;/frequency&gt;&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/id&gt;&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/>&lt;/term&gt;&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFile<sp/>&lt;&lt;<sp/>&quot;&lt;/document&gt;&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>outputFile.close();</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="comment">}</highlight></codeline>
<codeline lineno="124"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_index_handler_1a5b56a244de1d63699ab5ba1ca8606544" kindref="member">IndexHandler::loadIndexAVL</ref>()<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>pugi::xml_document<sp/>doc;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(doc.load_file(</highlight><highlight class="stringliteral">&quot;./Output/index.xml&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>loading<sp/>index<sp/>file!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_index_handler_1a6bf96d298c05a661245313a44d65d109" kindref="member">clearIndex</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pugi::xml_node<sp/>document<sp/>=<sp/>doc.child(</highlight><highlight class="stringliteral">&quot;document&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pugi::xml_node_iterator<sp/>itr;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pugi::xml_node_iterator<sp/>childItr;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(</highlight><highlight class="stringliteral">&quot;processed&quot;</highlight><highlight class="normal">,document.child(</highlight><highlight class="stringliteral">&quot;processed&quot;</highlight><highlight class="normal">).name())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDocs<sp/>=<sp/>std::stoi(std::string(document.child(</highlight><highlight class="stringliteral">&quot;processed&quot;</highlight><highlight class="normal">).text().get()));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(itr<sp/>=<sp/>document.begin();<sp/>itr<sp/>!=<sp/>document.end();<sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(</highlight><highlight class="stringliteral">&quot;term&quot;</highlight><highlight class="normal">,itr-&gt;name())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_token" kindref="compound">Token</ref><sp/>tok;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tok.<ref refid="class_token_1a518dac411db3279a9b2f4ce38e46d199" kindref="member">payload</ref>(std::string(itr-&gt;attribute(</highlight><highlight class="stringliteral">&quot;Term&quot;</highlight><highlight class="normal">).value()));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childItr<sp/>=<sp/>itr-&gt;child(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(childItr<sp/>=<sp/>itr-&gt;begin();<sp/>childItr<sp/>!=<sp/>itr-&gt;end();<sp/>++childItr)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tok.<ref refid="class_token_1a3c9d92534dea1cf1664b049bbc497631" kindref="member">addDocPair</ref>(std::make_pair(std::stoi(std::string(childItr-&gt;attribute(</highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">).value())),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stoi(std::string(childItr-&gt;child(</highlight><highlight class="stringliteral">&quot;frequency&quot;</highlight><highlight class="normal">).text().get()))));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tok.<ref refid="class_token_1a7131e0dbc8f28dd91b0adfb40064addc" kindref="member">incrCorpFreq</ref>(std::stoi(std::string(childItr-&gt;child(</highlight><highlight class="stringliteral">&quot;frequency&quot;</highlight><highlight class="normal">).text().get())));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens.<ref refid="class_a_v_l_tree_1a8da12b14718d64a6ddc6cd8e7470b03e" kindref="member">insert</ref>(tok);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numTokens<sp/>=<sp/>(int)tokens.<ref refid="class_a_v_l_tree_1aae30d36bc9cb070787c1d0d97413eb86" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="185"><highlight class="comment">bool<sp/>IndexHandler::loadIndexHash()<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="comment">}</highlight></codeline>
<codeline lineno="190"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_index_handler_1a6dc7f45d95d8c3b9fe11056296c9de3d" kindref="member">IndexHandler::makeIndexAVL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(docProc.<ref refid="class_document_processor_1a9fc30d3b7c2220c86cd4b672c512b109" kindref="member">batchTokenize</ref>(fileName,tokens))<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDocs<sp/>=<sp/>docProc.<ref refid="class_document_processor_1a09d1b766a653de2d1ce6a81f2213d975" kindref="member">documentsSize</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numTokens<sp/>=<sp/>(int)tokens.<ref refid="class_a_v_l_tree_1aae30d36bc9cb070787c1d0d97413eb86" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="208"><highlight class="comment">bool<sp/>IndexHandler::makeIndexHash(const<sp/>std::string&amp;<sp/>fileName)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>if(docProc.makeDocuments(fileName)<sp/>&amp;&amp;<sp/>docProc.processDocuments(tokens))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDocs<sp/>=<sp/>(int)docProc.documentsSize();</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numTokens<sp/>=<sp/>(int)tokens.size();</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(auto&amp;<sp/>token<sp/>:<sp/>tokens)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index[token.payload()]<sp/>=<sp/>token.get_docs();</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="comment">}</highlight></codeline>
<codeline lineno="228"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="IndexHandler.cpp"/>
  </compounddef>
</doxygen>
