<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <page>
    <title>Talk:Visual Basic/Effective Programming</title>
    <ns>1</ns>
    <id>39875</id>
    <revision>
      <id>1057085</id>
      <parentid>227578</parentid>
      <timestamp>2007-12-14T23:01:04Z</timestamp>
      <contributor>
        <username>Redrocketboy</username>
        <id>76247</id>
      </contributor>
      <minor />
      <comment>[[Talk:Programming:Visual Basic Classic/Effective Programming]] moved to [[Talk:Visual Basic/Effective Programming]]: better name</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This section has become a catch all for several topics that are interrelated.  Need to restructure it so that it is less confusing.

In particular the discussion of errors needs to be split up into an introductory section that describes basic error handling and at least another section that describes the different kinds of error handling that need to be performed.</text>
      <sha1>sefmfevq806i1mnzdwypor7demixlof</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/I am...</title>
    <ns>0</ns>
    <id>39876</id>
    <revision>
      <id>2422515</id>
      <parentid>2422512</parentid>
      <timestamp>2012-10-20T11:01:26Z</timestamp>
      <contributor>
        <ip>178.117.129.17</ip>
      </contributor>
      <comment>/* Grammar note */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">You want to describe yourself but you don't know how? Well then, learn!

==Beginning==
Can you understand the following passage below?

'''[[Media:Benim adım.ogg|Benim adım]] Bob. Ben İngiltereli bir mimarım. Kısa boylu ve biraz şişman bir adamım. Kızıl saçlı ve mavi gözlüyüm. Benim hobilerim okumak, basketbol oynamak ve uyumak.'''

Any idea what he said? No? Well, then, let's get cracking! There's a translation at the bottom of the page, but please wait until the end of the lesson!

==Learning how to describe yourself==
The only way you can really do this is to learn the appropriate vocabulary you could use to describe yourself. Let's start learning!

===Physical traits===
====The colors====
With the modern-day conveniences of hair dye and colored contact lenses, we can now have all sorts of different hair and eye colours. Therefore we need to learn how to say the colors in Turkish before we can start describing physical aspects of ourselves.

Let's start with the most common hair colors. '''If you are having any trouble reading them''', highlight them with your mouse:
*'''kahverengi''' - brown
**'''açık kahverengi''' - light brown 
**'''koyu kahverengi''' - dark brown
*'''siyah''' - black
**'''Ben siyah saçlıyım''' - I am black-haired
**'''Benim siyah saçlarım var''' - I have black hair
*'''sarı''' - yellow
**'''sarışın''' - blond(e) (person)
*'''kır''' - gray &lt;small&gt;('''Note''': ''kır'' would only be used to describe hair or eye colors, otherwise you would use ''gri (grey)'')&lt;/small&gt;
*'''kırmızı''' - red

...and eye colors:
All of the above, plus:
*'''açık kahverengi''' - hazel &lt;small&gt;(Lit. light brown)&lt;/small&gt;
*'''mavi''' - blue
**'''Ben mavi gözlüyüm''' 
**'''Benim mavi gözlerim var''' - I have blue eyes
*'''yeşil''' - green
*'''kehribar''' - amber
*'''menekşe''' - violet
*'''siyah''' - black
**'''karagöz''' - an expression (more like a compliment) used to describe someone with dark eyes

Now let's learn a bunch of random colors:
*'''turuncu''' - orange (color)
*'''pembe''' - pink
*'''mor''' - purple
*'''beyaz''' - white

Please note: '''yüz''' - face, '''göz''' - eye, and '''saç''' - hair.

====Grammar note====
=====Forming plurals=====
From the examples above, you may have noticed the word '''gözler'''. Well, this is the plural form of the word '''göz'''. It's actually very easy to form plurals in Turkish. All you have to do is add '''lar''' or '''ler''' (depending on the vowel harmony) to a singular noun in order to pluralize it. There are some examples below:

{|class=&quot;wikitable&quot; align=center
|-
!Turkish singular noun
!English translation
!Turkish pluralized form
!English translation
|-
|align=center|''&lt;font color=black&gt;çocuk&lt;/font&gt;
|align=center|''&lt;font color=black&gt;child&lt;/font&gt;
|align=center|''&lt;font color=black&gt;çocuk&lt;/font&gt;&lt;font color=red&gt;lar&lt;/font&gt;
|align=center|''&lt;font color=black&gt;child&lt;/font&gt;&lt;font color=red&gt;ren&lt;/font&gt;
|-
|align=center|''&lt;font color=black&gt;balon&lt;/font&gt;
|align=center|''&lt;font color=black&gt;balloon&lt;/font&gt;
|align=center|''&lt;font color=black&gt;balon&lt;/font&gt;&lt;font color=red&gt;lar&lt;/font&gt;
|align=center|''&lt;font color=black&gt;balloon&lt;/font&gt;&lt;font color=red&gt;s&lt;/font&gt;
|-
|align=center|''&lt;font color=black&gt;çiçek&lt;/font&gt;
|align=center|''&lt;font color=black&gt;flower&lt;/font&gt;
|align=center|''&lt;font color=black&gt;çiçek&lt;/font&gt;&lt;font color=blue&gt;ler&lt;/font&gt;
|align=center|''&lt;font color=black&gt;flower&lt;/font&gt;&lt;font color=blue&gt;s&lt;/font&gt;
|-
|align=center|''&lt;font color=black&gt;kalem&lt;/font&gt;
|align=center|''&lt;font color=black&gt;pen&lt;/font&gt;
|align=center|''&lt;font color=black&gt;kalem&lt;/font&gt;&lt;font color=blue&gt;ler&lt;/font&gt;
|align=center|''&lt;font color=black&gt;pen&lt;/font&gt;&lt;font color=blue&gt;s&lt;/font&gt;
|}

=====The genitive case=====
In other words, the grammatical form of saying something belongs to someone. In Turkish, it's slightly different from English, but if you think about it, actually quite a bit easier.

Let's take a look at the following phrase:

'''Benim topum''' - My ball

To construct this phrase, you take '''ben''' (meaning '''I''' or '''me''') and add '''-im''' to it. The second part of this is to take the object (in this case '''top''') and add one of the following to the end of it:
*'''-m''' (e.g. çanta'''m''' - my bag, lale'''m''' - my tulip)
*'''-ım''' (e.g. sırt'''ım''' - my back)
*'''-im''' (e.g. kalem'''im''' - my pen)
*'''-um''' (e.g. okul'''um''' - my school)
*'''-üm''' (e.g. gül'''üm''' - my rose)

{|class=&quot;wikitable&quot; align=center
|-
!Person
!lale
|-
|align=center|'''''Ben&lt;font color=red&gt;im&lt;/font color=red&gt;'''''
|align=center|''lale&lt;font color=green&gt;m&lt;/font color=green&gt;
|-
|align=center|'''''Sen&lt;font color=red&gt;in&lt;/font color=red&gt;'''''
|align=center|''lale&lt;font color=green&gt;n&lt;/font color=green&gt;
|-
|align=center|'''''O&lt;font color=red&gt;nun&lt;/font color=red&gt;'''''
|align=center|''lale&lt;font color=green&gt;si&lt;/font color=green&gt;
|-
|align=center|'''''Biz&lt;font color=red&gt;im&lt;/font color=red&gt;'''''
|align=center|''lale&lt;font color=green&gt;miz&lt;/font color=green&gt;
|-
|align=center|'''''Siz&lt;font color=red&gt;in&lt;/font color=red&gt;'''''
|align=center|''lale&lt;font color=green&gt;niz&lt;/font color=green&gt;
|-
|align=center|'''''Onlar&lt;font color=red&gt;ın&lt;/font color=red&gt;'''''
|align=center|''lale&lt;font color=green&gt;si&lt;/font color=green&gt;
|}

Now that we know these two things, let's carry on!

====Your body====
Here are some basic phrases to describe your or someone else's looks and physique.

*'''boy''' - height
**'''uzun (boylu)''' - tall &lt;small&gt;('''Note''': ''Uzun'' can also mean long. If the person you're talking to understands the context of the conversation, then you can just say ''uzun''. However, if they don't, it would be a good idea to say ''uzun boylu'').&lt;/small&gt;
**'''kısa (boylu)''' - short
***'''Ben kısa boyluyum''' - I am short
**'''orta (boylu)''' - average (height)
*'''form''' - figure
**'''şişman''' - fat
***'''Ben şişmanım.''' - I am fat.
**'''zayıf''' - thin

===Jobs===
Unfortunately due to the massive number of jobs out there, we can't go through the entire list. Instead, I will just list the most common.

*'''doktor''' - doctor
**'''Ben doktorum''' - I am a doctor
*'''mühendis''' - engineer
*'''öğretmen''' - teacher
*'''hemşire''' - nurse
*'''tesisatçı''' - plumber
*'''kapıcı''' - janitor &lt;small&gt;Lit. doorman&lt;/small&gt;
*'''sekreter''' - secretary
*'''borsa tellalı''' - stockbroker
*'''garson''' - waiter
*'''bayan garson''' - waitress &lt;small&gt;''bayan'' means woman&lt;/small&gt;
*'''dilbilimci''' - linguist &lt;small&gt;''dil'' means tongue or language&lt;/small&gt;
*'''avukat''' - lawyer
*'''politikacı''' - politician
*'''öğrenci''' - student


*'''emekli olmak''' - to be retired
*'''işsiz olmak''' - to be unemployed

====Cultural note====
I put doctor and engineer on the list first for a specific reason. In Turkey, particularly amongst poor families, parents attempt to raise their offspring to be either doctors or engineers, as doctors and engineers in Turkey earn a lot of money (I would know this, because my family friend is married to a wealthy engineer). I'm not saying that to be wealthy in Turkey, you must be either a doctor or an engineer (Turkey's billionaires aren't, either), I'm merely explaining a common stereotype.

=== Where are you from ... ===
Here is a short list of the countries of the world and how to say someone is from a certain country.  For a longer list [[Turkish/Countries|see here]].

{|class=&quot;wikitable&quot; align=center
|-
!Country name (EN)
!Country name (TR)
!Demonym (EN)
!Demonym (TR)
|-
|align=center|'''[[Image:Flag of Turkey.svg|20px]]Turkey
|align=center|'''Türkiye
|align=center|'''Turkish
|align=center|'''Türk
|-
|align=center|[[Image:Flag of Australia.svg|20px]]Australia
|align=center|Avustralya
|align=center|Australian
|align=center|Avustralyalı
|-
|align=center|[[Image:Flag of Canada.svg|20px]]Canada
|align=center|Kanada
|align=center|Canadian
|align=center|Kanadalı
|-
|align=center|[[Image:Flag of England.svg|20px]]England
|align=center|İngiltere
|align=center|English
|align=center|İngiliz
|-
|align=center|[[Image:Flag of Germany.svg|20px]]Germany
|align=center|Almanya
|align=center|German
|align=center|Alman
|-
|align=center|[[Image:Flag of India.svg|20px]]India
|align=center|Hindistan
|align=center|Indian
|align=center|Hintli
|-
|align=center|[[Image:Flag of Ireland.svg|20px]]Ireland
|align=center|İrlanda
|align=center|Irish
|align=center|İrlandalı
|-
|align=center|[[Image:Flag of New Zealand.svg|20px]]New Zealand
|align=center|Yeni Zelanda
|align=center|New Zealand
|align=center|Yeni Zelandalı
|-
|align=center|[[Image:Flag of Pakistan.svg|20px]]Pakistan
|align=center|Pakistan
|align=center|Pakistani
|align=center|Pakistanlı
|-
|align=center|[[Image:Flag of the Philippines.svg|20px]]Philippines
|align=center|Filipinler
|align=center|Filipino
|align=center|Filipinli
|-
|align=center|[[Image:Flag of Scotland.svg|20px]]Scotland
|align=center|İskoçya
|align=center|Scottish
|align=center|İskoç
|-
|align=center|[[Image:Flag of the United Kingdom.svg|20px]]United Kingdom
|align=center|Birleşik Krallık
|align=center|British
|align=center|Britanyalı
|-
|align=center|[[Image:Flag of the United States.svg|20px]]United States of America (USA)
|align=center|Amerika Birleşik Devletleri (ABD)
|align=center|American
|align=center|Amerikalı
|-
|align=center|[[Image:Flag of Wales.svg|20px]]Wales
|align=center|Galler
|align=center|Welsh
|align=center|Galli
|}

*'''(Siz) nerelisiniz?''' - Where are you from?
*'''(Ben) Avustralyalıyım.''' - I am from Australia.

See? Simple!

===Hobbies===
====Sports====
Use oynamak (to play):
*&lt;font color=red&gt;'''futbol'''&lt;/font color=red&gt; - soccer &lt;small&gt;(Yup, just like the other Europeans!)&lt;/small&gt;
*&lt;font color=red&gt;'''Amerikan futbolu'''&lt;/font color=red&gt; - American football
*&lt;font color=red&gt;'''beyzbol'''&lt;/font color=red&gt; - baseball
*&lt;font color=red&gt;'''basketbol'''&lt;/font color=red&gt; - basketball
*&lt;font color=red&gt;'''tenis'''&lt;/font color=red&gt; - tennis
*&lt;font color=red&gt;'''eskrim'''&lt;/font color=red&gt; - fencing
*&lt;font color=red&gt;'''voleybol'''&lt;/font color=red&gt; - volleyball
*&lt;font color=red&gt;'''golf'''&lt;/font color=red&gt; - golf
Use yapmak (to do/make):
*&lt;font color=blue&gt;'''boks'''&lt;/font color=blue&gt; - boxing
*&lt;font color=blue&gt;'''karate'''&lt;/font color=blue&gt; - karate
*&lt;font color=blue&gt;'''judo'''&lt;/font color=blue&gt; - judo
*&lt;font color=blue&gt;'''tekvando'''&lt;/font color=blue&gt; - taekwondo
Use kullanmak (to use):
*&lt;font color=green&gt;'''bisiklet'''&lt;/font color=green&gt; - bicycle
Use etmek (to do):
*&lt;font color=violet&gt;'''dans'''&lt;/font color=violet&gt; - to dance
Other:
*'''yüzmek''' - to swim
*'''halter yapmak''' - to lift weights
=====Grammar note=====
Before you can use the set of words above, you need to know their auxiliary verbs. Unlike [[French]], auxiliary verbs are used almost all of the time. However, there are only a couple you will need to learn, and in most cases you will be able to tell which one to use.

In this case, they are the following: '''oynamak''' (to play), '''yapmak''' (to do/make), '''kullanmak''' (to use), and '''etmek''' (to do). Try not to get yapmak and etmek confused.

Below are their verb conjugations:

{|class=&quot;wikitable&quot; align=center
|-
!&lt;font color=red&gt;to play&lt;/font color=red&gt; [[Image:Flag of the United Kingdom.svg|20px]]
![[Image:Flag of Turkey.svg|20px]] &lt;font color=red&gt;oynamak&lt;/font color=red&gt;
|-
|I play
|Ben oynuyorum
|-
|You (sing.) play
|Sen oynuyorsun
|-
|He/she plays
|O oynuyor
|-
|We play
|Biz oynuyoruz
|-
|You (pl.) play
|Siz oynuyorsunuz
|-
|They play
|Onlar oynuyorlar
|-
!&lt;font color=blue&gt;to do&lt;/font color=blue&gt; [[Image:Flag of the United Kingdom.svg|20px]]
![[Image:Flag of Turkey.svg|20px]] &lt;font color=blue&gt;yapmak&lt;/font color=blue&gt;
|-
|I do
|Ben yapıyorum
|-
|You (sing.) do
|Sen yapıyorsun
|-
|He/she does
|O yapıyor
|-
|We do
|Biz yapıyoruz
|-
|You (pl.) do
|Siz yapıyorsunuz
|-
|They do
|Onlar yapıyorlar
|-
!&lt;font color=green&gt;to use&lt;/font color=green&gt; [[Image:Flag of the United Kingdom.svg|20px]]
![[Image:Flag of Turkey.svg|20px]] &lt;font color=green&gt;kullanmak&lt;/font color=green&gt;
|-
|I use
|Ben kullanıyorum
|-
|You (sing.) use
|Sen kullanıyorsun
|-
|He/she uses
|O kullanıyor
|-
|We use
|Biz kullanıyoruz
|-
|You (pl.) use
|Siz kullanıyorsunuz
|-
|They use
|Onlar kullanıyorlar
|-
!&lt;font color=violet&gt;to do&lt;/font color=violet&gt; [[Image:Flag of the United Kingdom.svg|20px]]
![[Image:Flag of Turkey.svg|20px]] &lt;font color=violet&gt;etmek&lt;/font color=violet&gt;
|-
|I do
|Ben ediyorum
|-
|You (pl.) do
|Sen ediyorsun
|-
|He/she does
|O ediyor
|-
|We do
|Biz ediyoruz
|-
|You (pl.) do
|Siz ediyorsunuz
|-
|They do
|Onlar ediyorlar
|}

Hopefully you will have noticed a pattern amongst these verbs. This is true of all verbs in Turkish, as unlike in most other languages, there are no irregular verbs. They all follow the same pattern. All that really matters is that you recognize the vowel harmony.

I have color-coded those verbs in accordance to the above vocab. For example, ''futbol'' and ''oynamak'' are both red, therefore to say &quot;to play football&quot; in Turkish, you say &quot;futbol oynamak&quot;. The sentence structure is as follows: '''Ben futbol oynuyorum''' - I play football. Turkish is a '''[[w:Subject Object Verb|S-O-V]]''' (Subject-Object-Verb) language. So, in this case, ''Ben'', which is the subject, goes first, then the object, ''futbol'', goes second, and lastly the verb, ''oynuyorum'', goes last. This is true in all cases, '''no exceptions'''.

Ah, by the way, yes, there is something strange with ''etmek''. You will see why it is like this below.

====Non-sportive activities====
*'''televizyon izlemek/seyretmek''' - to watch television
*'''okumak''' - to read
*'''film izlemek/seyretmek''' - to watch movies
*'''dışarı çıkmak''' - to go out
*'''fotoğraf çekmek''' - to take photos
**'''Benim hobim fotoğraf çekmek.''' - My hobby is to take photos.
*'''alışveriş yapmak''' - to go shopping

=====Grammar note=====
Although I have already given you the verbs for the non-sporting activities, let's conjugate them just in case you still haven't worked out the verb patterns.

{|class=&quot;wikitable&quot; align=center
|-
!to watch [[Image:Flag of the United Kingdom.svg|20px]]
![[Image:Flag of Turkey.svg|20px]] izlemek
|-
|I watch
|Ben izli'''yorum'''
|-
|You (sing.) watch
|Sen izli'''yorsun'''
|-
|He/she watches
|O izli'''yor'''
|-
|We watch
|Biz izli'''yoruz'''
|-
|You (pl.) watch
|Siz izli'''yorsunuz'''
|-
|They watch
|Onlar izli'''yorlar'''
|-
!to watch [[Image:Flag of the United Kingdom.svg|20px]]
![[Image:Flag of Turkey.svg|20px]] seyretmek
|-
|I watch
|Ben seyredi'''yorum'''
|-
|You (sing.) watch
|Sen seyredi'''yorsun'''
|-
|He/she watches
|O seyredi'''yor'''
|-
|We watch
|Biz seyredi'''yoruz'''
|-
|You (pl.) watch
|Siz seyredi'''yorsunuz'''
|-
|They watch
|Onlar seyredi'''yorlar'''
|-
!to read [[Image:Flag of the United Kingdom.svg|20px]]
![[Image:Flag of Turkey.svg|20px]] okumak
|-
|I read
|Ben oku'''yorum'''
|-
|You (sing.) read
|Sen oku'''yorsun'''
|-
|He/she reads
|O oku'''yor'''
|-
|We read
|Biz oku'''yoruz'''
|-
|You (pl.) read
|Siz oku'''yorsunuz'''
|-
|They read
|Onlar oku'''yorlar'''
|-
!to go out [[Image:Flag of the United Kingdom.svg|20px]]
![[Image:Flag of the United Kingdom.svg|20px]] çıkmak
|-
|I go out
|Ben çıkı'''yorum'''
|-
|You (sing.) go out
|Sen çıkı'''yorsun'''
|-
|He/she goes out
|O çıkı'''yor'''
|-
|We go out
|Biz çıkı'''yoruz'''
|-
|You (pl.) go out
|Siz çıkı'''yorsunuz'''
|-
|They go out
|Onlar çıkı'''yorlar'''
|-
!to take (a photo) [[Image:Flag of the United Kingdom.svg|20px]]
![[Image:Flag of Turkey.svg|20px]] (fotoğraf) çekmek
|-
|I take (a photo)
|Ben (fotoğraf) çeki'''yorum'''
|-
|You [sing.] take (a photo)
|Sen (fotoğraf) çeki'''yorsun'''
|-
|He/she takes (a photo)
|O (fotoğraf) çeki'''yor'''
|-
|We take (a photo)
|Biz (fotoğraf) çeki'''yoruz'''
|-
|You [pl.] take (a photo)
|Siz (fotoğraf) çeki'''yorsunuz'''
|-
|They take (a photo)
|Onlar (fotoğraf) çeki'''yorlar'''
|}

=====Finding the pattern=====
If you haven't found the pattern already, let me explain it to you:

To say, for example, ''I read'', in Turkish, you would take the stem of '''okumak''', which is '''oku-''' (the stem is the part of the infinitive preceding '''-mak''' or '''-mek'''), then add any of the following:

*'''-yorum''' for ''I''
*'''-yorsun''' for ''you'' (singular)
*'''-yor''' for ''he/she''
*'''-yoruz''' for ''we''
*'''-yorsunuz''' for ''you'' (plural or polite)
*'''-yorlar''' for ''they''

In our case, we would pick '''-yorum'''. After adding this on, you get '''okuyorum'''! See, simple!

However, what if the stem ends in a consonant. Let's take an example from the verbs above: '''seyret-'''. '''Seyret-''' + '''-yorum''' doesn't work because it just doesn't sound natural. To remedy the situation, you add an auxiliary vowel after the stem, which depends on the vowel harmony of it (in this case it would be '''i'''). So: '''seyret-''' + '''-i-''' + '''-yorum''' = '''seyretiyorum'''. This thing about the vowel after the stem applies to all verbs with stems that end in consonants, but remember, the auxiliary vowel always depends on the vowel harmony of the stem.

But... Wait a minute. Seems like I have skipped something. '''Seyretiyorum''' is not correct!

You must have noticed in the verb '''etmek''' (to do), that when conjugated, it doesn't exactly follow the whole stem rule. That's because something we call '''the softening of consonants'''. Sounds confusing? It's not at all!

Now, let's take '''et-'''. Add the '''-i''' and the '''-yorum'''. What do you get? '''Etiyorum'''. But that doesn't sound nice! (Yes, according to Turkish speakers.) So in order for it to sound nice, you take the '''t''' at the end of &quot;et-&quot; and make it &quot;d&quot;. That's because it is followed by a suffix which begins with a vowel. And as a result, our correct conjugation is '''ediyorum'''.

Sensible, right? Two other verbs like this are are '''tatmak''' (to taste) and '''gitmek''' (to go). Conveniently, they follow the exact same pattern as '''etmek''', and conjugate to ta'''d'''iyorum, gi'''d'''iyorsun, etc.

And of course, I have not forgot '''seyret-'''. And... It becomes '''seyrediyorum'''!

By the way, it would be a good idea to know that the verb '''çekmek''' on it's own means ''to pull away''.

==Here it goes...==
So, you've learnt everything you need to both translate that passage and to give a basic description of yourself.

===Translation===
The translation of that passage is below:

{{hidden begin|border=1px solid #aaaaaa;|titlestyle=border-bottom:1px #aaaaaa solid;|title=Translation|bodystyle=padding:0.5em 1em;}}
'''My name is Bob. I am an architect from England. I am a short and slightly fat man. I have red hair and blue eyes. My hobbies are to read, play basketball and sleep.'''
{{hidden end}}

So let's work through it, one step at a time.

This is the layout of this translation:
*'''Original Turkish phrase''' - ''Literal English translation with original sentence structure'' - Proper English translation

OK, let's get translating!
*'''[[Media:Benim adım.ogg|Benim adım]] Bob''' - ''My name Bob'' - My name is Bob
*'''Ben İngiltereli bir mimarım''' - ''I England-from an architect-am'' - I am an architect from England
*'''Kısa boylu ve biraz şişman bir adamım''' - ''Short heighted and slightly fat a man I am'' - I am a short and slightly fat man.
*'''Kızıl saçlı ve mavi gözlüyüm''' - ''Red haired and blue eyed I am'' - I have red hair and blue eyes.
*'''Benim hobilerim okumak, basketbol oynamak ve uyumak(-tır).''' - ''My hobbies to read, basketball to play and to sleep.'' - My hobbies are to read, play basketball and sleep.

See? It wasn't so hard! You just have to remember that the sentence structure in Turkish ([[w:Subject Object Verb|Subject Object Verb]]) is different from English ([[w:Subject Verb Object|Subject Verb Object]]).

==Review==
So, what have we learnt this lesson? Well, we have learnt...
*...colors.
*...how to form plurals in Turkish.
*...the genitive case.
*...how to describe one's physique.
*...basic jobs.
*...the countries of the world, and how to say something belongs to a certain country.
*...hobbies (and their auxiliary verbs).
*...sentence structures.
*...verb patterns.
AND MOST IMPORTANTLY
*...how to describe yourself!

{{Turkish/TOC}}

[[nl:Turks/Les 2]]</text>
      <sha1>f6z2jlrtvcn9guxl61tbqn0j4iueqdv</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/Greetings</title>
    <ns>0</ns>
    <id>39877</id>
    <revision>
      <id>3049197</id>
      <parentid>3015962</parentid>
      <timestamp>2016-02-20T00:49:18Z</timestamp>
      <contributor>
        <ip>201.172.104.177</ip>
      </contributor>
      <comment>/* Example (Örnek /{{IPA|øɾnec}}/) */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{tr/word|Merhaba!|Hello!}} {{tr/word|İlk|first}} {{tr/word|dersinize|to-your-lesson}} {{tr/word|hoşgeldiniz!|welcome (formal)}}.

== Grammar notes for beginners ==

* I  -'''ben''' /{{IPA|ben}}/
* we - biz /{{IPA|biz}}/ 
* you (singular) - '''sen''' /{{IPA|sen}}/
* you (plural) - '''siz''' /{{IPA|siz}}/
* he/she/it - '''o''' /{{IPA|o}}/
* they/them - onlar /{{IPA|onɫɑɾ}}

In Turkish, like in many other languages, when you're talking to someone you've never met before, rarely ever talk to or of great importance, you refer to them in the plural form. As you can see in the conversation, rather than referring to each other as ''sen'' (you [singular]), they refer to each other as ''siz'' (you [plural]). Do not get frightened, this formality is not as complex as in Japanese!

And unlike many other languages, there is no [http://en.wikipedia.org/wiki/Grammatical_gender grammatical gender] in Turkish. So there is no distinction between he, she and it. There's only ''o''. And like in Russian, there are no words like &quot;am/is/are&quot; and &quot;the&quot;, and no need for them.

== Greeting (Selamlaşma /{{IPA|selɑmɫɑʃmɑ}}/) ==

Saying hello is a little bit more complex in Turkish, for there is more than one way of saying hello.

* Hello! - '''[[Media:Merhaba.ogg|Merhaba]]!''' /{{IPA|meɾhɑbɑ}}/ (may be formal or informal)
* Hello/Hi! - '''[[Media:Selam.ogg|Selam]]!''' /{{IPA|selɑm}}/ (informal)

* How are you? - '''Nasılsınız?''' /{{IPA|nɑsɯɫsɯnɯz}}/ (formal singular or plural)
* How are you? -  '''Nasılsın?''' /{{IPA|nɑsɯɫsɯn}}/ (informal singular)
* How's it going? - '''[[Media:Nasıl gidiyor.ogg|Nasıl gidiyor]]''' ? /{{IPA|nasɯɫ ɟidijoɾ}}/ 
* What's up? - '''Ne var, ne yok?''' /{{IPA|ne olujoɾ}}/ 
* What's up? - '''Ne haber?''' (often pronounced like '''Naber?''') (lit. what news?, very informal)
* I'm fine. - '''İyiyim.''' /{{IPA|ijijim}}/
* Me too... - '''Ben de...''' /{{IPA|ben de}}/
* Good/fine - '''İyi''' /{{IPA|iji}}/
* And you? - '''Ya sen?''' /{{IPA|jɑ sen}}/ (informal)
* And you? - '''Ya siz?''' /{{IPA|jɑ siz}}/ (formal or plural)

'''Note''': &quot;''Ya''&quot; means &quot;or&quot;, not &quot;and&quot;. &quot;And&quot; is &quot;''ve''&quot; (/{{IPA|ve}}/).

This is an invariable greeting ritual. Turks are pleased when foreigners make an effort to learn and participate in it.
 
* Good morning. - '''[[Media:Günaydın.ogg|Günaydın]].''' /{{IPA|ɟynɑɪdɯn}}/
* Have a nice day. - '''İyi günler.''' /{{IPA|iji ɟynleɾ}}/ (lit. Good days)
* Good evening. - '''[[Media:İyi akşamlar.ogg|İyi akşamlar]]''' /{{IPA|iji ɑkʃɑmɫɑɾ}}/
* Good night. - '''[[Media:İyi geceler.ogg|İyi geceler]].''' /{{IPA|iji ɟedʒeleɾ}}/

== Meeting (Tanışma /{{IPA|tɑnɯʃmɑ}}/) ==

* What's your name? - '''Adın ne?''' /{{IPA|ɑdɯn ne}}/ (informal)
* What's your name? - '''Adınız ne?''' /{{IPA|ɑdɯnɯz ne}}/ (formal or plural)
* My name is... - '''Adım ...''' /{{IPA|ɑdɯm}}/
* Name - '''Ad''' /{{IPA|ɑd}}/
* Surname - '''Soyadı''' /{{IPA|sojɑdɯ}}/
* Nice to meet you. - '''Memnun oldum.''' /{{IPA|memnun oɫdum}}/ (lit. I'm pleased)

Turkish honorifics come after the first name, unlike English Mr and Mrs. They are often translated as {{tr/word|Bay|Mr}} (/{{IPA|bɑɪ}}/) and {{tr/word|Bayan|Mrs}} (/{{IPA|bɑjɑn}}/). Examples; Bay Smith, Bayan Jenkins

* Bey /{{IPA|beɪ}}/ (for men)
* Hanım /{{IPA|hɑnɯm}}/ (for women)

Examples; Burcu Hanım, Ahmet Bey (Burcu and Ahmet are first names, not surnames)

== Thanking (Teşekkür etme /{{IPA|teʃec:yɾ etme}}/) ==

Several ways of saying thank you.

* Thank you - '''Teşekkür ederim'''
* Thank you - '''[[Media:Teşekkürler.ogg|teşekkürler]]'''
* Thanks - '''Sağ ol''' (informal, singular)
* Thanks - '''Sağ olun''' (informal, plural)
* You're welcome - Bir şey değil (lit. it's not a thing)
* You're welcome - Önemli değil (lit. it's not important)

== Saying goodbye (Vedalaşma /{{IPA|vedɑɫɑʃmɑ}}/) ==

Like in hello and thank you, there are more than one way of saying goodbye, but this time depending on situation. For this rules are a bit complex, some people may use English '''bye bye''' as a way of valediction. But it should not be used in formal situations, and you still have to learn Turkish ways of saying goodbye.

* Goodbye. - '''Güle güle''' /{{IPA|ɟyle ɟyle}}/ (said by the remaining person to the leaving person) 
* Goodbye. - '''Hoşçakal''' /{{IPA|hoʃtʃɑkɑɫ}}/ (informal, said by the leaving person to the remaining person)
* Goodbye - '''Hoşçakalın''' /{{IPA|hoʃtʃɑkɑɫɯn}}/ (formal, said by the leaving person to the remaining person)

* See you (later). -'''(Sonra) Görüşürüz''' /{{IPA|ɟøɾyʃyɾyz}}/
* See you later. -'''Görüşmek üzere''' /{{IPA|ɟøɾyʃmec yzeɾe}}/

If you have to specify later meeting time, say the meeting time before &quot;görüşürüz&quot;. For example; {{tr/word|Yarın görüşürüz|See you tomorrow}}, {{tr/word|Pazartesi görüşürüz|See you on Monday}}

== Example (Örnek /{{IPA|øɾnec}}/) ==

'''Şevki''': {{tr/word|Merhaba! Adım Şevki.|Hello! My name is Şevki.}}
 
'''Ayşe''': {{tr/word|Selam Şevki! Ayşe.|Hi, Şevki! I'm Ayşe.}}

'''Şevki''': {{tr/word|Nasılsınız, Ayşe Hanım?|How are you, Mrs. Ayşe}}

'''Ayşe''': {{tr/word|İyiyim, siz nasılsınız?|I'm fine, how are you?}}

'''Şevki''': {{tr/word|Ben de iyiyim, teşekkürler.|I'm fine too, thanks.}}

'''Ayşe''': {{tr/word|İyi. Memnun oldum.|Good. Nice to meet you.}}

'''Şevki''': {{tr/word|Ben de.|Me too.}}

'''Ayşe''': {{tr/word|Hoşçakal!|Goodbye!}}

'''Şevki''': {{tr/word|Güle güle! Yarın görüşürüz.|Goodbye! See you tomorrow.}}

== Exercises (Egzersizler /{{IPA|eɟzeɾˈsizleɾ}}/) ==

Exercising a language is an important part of learning it. Let's strengthen our Turkish with some exercises.

'''Translate the following into Turkish:'''

- Hello. I'm Anıl. And you?

- Hello, Anıl. I'm Gökhan. How are you?

- I'm fine, thanks.

- Good night.

'''Answer:'''

- Merhaba. Ben Anıl. Ya sen/siz?

- Merhaba, Anıl. Ben Gökhan. Nasılsın(ız)?

- İyiyim, teşekkürler.

- İyi geceler.


{{Turkish/TOC}}

[[nl:Turks/Les 1]]</text>
      <sha1>osuj56gc6kkxgm2t76y4zoc4m71mksn</sha1>
    </revision>
  </page>
  <page>
    <title>Japanese/Lessons/Other uses of particles</title>
    <ns>0</ns>
    <id>39879</id>
    <revision>
      <id>2369049</id>
      <parentid>2273671</parentid>
      <timestamp>2012-06-26T19:00:05Z</timestamp>
      <contributor>
        <ip>61.86.139.79</ip>
      </contributor>
      <comment>/* Simple clauses */ correct wrong example</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Combining particles ==

When '''の and が''' are used together following a verb, the の makes the action a noun (similar to the gerund; ''-ing''), and the が indicates that this action is the subject of the sentence.
{| {{Japanese example}}
| style=&quot;width:20em&quot; | よむ '''の が''' いい || Reading is good (cool).
|}

This was not an exception, but rather an example of how Japanese language works. One combination may be more obvious than other. For example でも: で implies small emphasize and indicates method, and も means &quot;also&quot;. The combination may be translated as &quot;even&quot;:
{| {{Japanese example}}
| style=&quot;width:20em&quot; | ばか　'''で も'''　それ　は　わかる　よ || Even a fool knows that.
|}
Sentence-ending particles may also be combined:
{| {{Japanese example}}
| style=&quot;width:20em&quot; | この　ねこ　は　しろい　'''よ　ねえ''' || isn't this cat white... (meaning &quot;look, how white this cat is, don't you see it...&quot;).
|}
In this case よ is used as an emphasizer, and ねえ implies that you think other person should know (see) it and agree with your opinion.

== Simple clauses ==

The particles may be also used to link expressions and clauses.

{| {{Japanese example}}
| style=&quot;width:20em&quot; | ねこ　が　みる　ゆめ　'''の'''　え || A painting about the cat's　dream.　(Lit.　&quot;The painting of dream the cat's dreaming)
|}
&quot;ねご　が　みる　ゆめ&quot; is a complete expression that means &quot;''the dream that the cat dreams''&quot;. Then this expression used as a noun to modify ''painting'', indicating the theme of the painting.

{| {{Japanese example}}
| style=&quot;width:20em&quot; | あの　おとこ　の　かぞく　'''は'''　すごい || The family of that man is awesome.
|}

== Various ==
=== でも ===
Another でも, different form the one mentioned before. This one means &quot;but&quot;. It always comes at the beginning of a sentence.
{| {{Japanese example}}
| style=&quot;width:20em&quot; | にほんご　が　すき だ。　でも　えいご　が　きらい　だ。 || I like Japanese. But I hate English
|}

=== けど, けれど, けども, けれども ===
&quot;but&quot;, &quot;however&quot;. All four forms are used the same way, but the longer the form, the more formal it is. Unlike でも, which comes at the beginning of a sentence, けど・けれど・けども・けれども are used to combine two sentences into one sentence (two clauses into one clause). 
{| {{Japanese example}}
| style=&quot;width:20em&quot; | たなかさん　は　つよい　けど　やさしい。 || Mr. Tanaka is strong but (he is) kind.
|}
In longer sentences the Japanese comma, &quot;、&quot;, is often inserted after &quot;けど・けれど・けども・けれども&quot; to make the sentence easier to read.
{| {{Japanese example}}
| style=&quot;width:20em&quot; | にほんご　が　すきだ　けど、えいご　が　きらい　だ。 || I like Japanese but I hate English
|}

&lt;!--
: あたらしい　じぶん　ぼく　の　ゆめ　に　みる　の　は　つよい　けど　やさしい - the new self I see my dreams is strong but kind. The sentence may be separated to simpler parts:
:* あたらしい　じぶん　（）　は　つよい　けど　やさしい　- the new self is strong but kind. Note the position of the parentheses that mark the place additional descriptive expression will be put to. It may be easier to understand the sentence if they would be at the beginning (ぼく　の　ゆめ　に　みる　の　あたらしい　じぶん　は　つよい　けど　やさしい), but the current position is nevertheless acceptable too.
:* ぼく　の　ゆめ　に　みる　の - additional description of the &quot;self&quot; : the one self, which (the last の) [I] see/observe (みる) in/during (に) my dreams (ぼく　の　ゆめ)
:Note that the focus of this sentence is on the qualities of the person. This is what the speaker wants to become. If you want to move focus to that you see dreams of your new self, and then explain its qualities, you may want to replace は with が. Another modification may be ぼく　が　ゆめ　に　みる　の　あたらしい　じぶん　は　つよい　けど　やさしい, which tells that it is your dreams where you see yourself such and such.
--&gt;

{{BookCat|filing=deep}}</text>
      <sha1>b8a1ghd7sdqq1onynnwgpgsbjdi8dcc</sha1>
    </revision>
  </page>
  <page>
    <title>Bengali/Alphasyllabry</title>
    <ns>0</ns>
    <id>39883</id>
    <revision>
      <id>2985322</id>
      <parentid>2384367</parentid>
      <timestamp>2015-08-18T13:27:06Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The Bangla alphabet contains:
*Vowels: অ, আ, ই, ঈ, উ, ঊ, ঋ, এ, ঐ, ও, ঔ
*Consonants: ক, খ, গ, ঘ, ঙ; চ, ছ, জ, ঝ, ঞ; ট, ঠ, ড, ঢ, ণ; ত, থ, দ, ধ, ন; প, ফ, ব, ভ, ম; য, র, ল, ব; শ, ষ, স, হ; ড়, ঢ়, য়;
*Other:

==Consonants==
Bangla consonants do not have special names. They are known by the sound they represent followed by the vowel অ [ɔ]. For example: ক is pronounced [kɔ], গ is pronounced [gɔ], etc.

This অ is present in every consonant unless it is replaced by a different vowel. Hence, this অ present in every consonant is called the ''inherent vowel''.

The Bengali script is arranged in a logical sequence. Characters of similar sounds are grouped together.


{| class=&quot;wikitable&quot;
|-
! consonant (with inherent vowel) !! animated image showing how to write the letter !! pronunciation in isolation !! syllabic forms with other vowels !! related consonant conjuncts
|-
| ক || || || কা কি কী কু কূ কৃ কে কৈ কো কৌ|| 
|-
| খ || || || খা খি খী খু খূ খৃ খে খৈ খো খৌ|| 
|-
| গ || || || গা গি গী গু গূ গৃ গে গৈ গো গৌ || 
|-
| ঘ || || || ঘা ঘি ঘী ঘু ঘূ ঘৃ ঘে ঘৈ ঘো ঘৌ || 
|-
| ঙ || || ||  ঙা ঙি ঙী ঙু ঙূ ঙে ঙৈ ঙো ঙৌ|| 
|-
| চ || || ||  চা চি চী চু চূ চৃ চে চৈ চো চৌ|| 
|-
| ছ || || || || 
|-
| জ || || || || 
|-
| ঝ || || || || 
|-
| ঞ || || || || 
|-
| ট || || || || 
|-
| ঠ || || || || 
|-
| ড || || || || 
|-
| ঢ || || || || 
|-
| ণ || || || || 
|-
| ত || || || || 
|-
| থ || || || || 
|-
| দ || || || || 
|-
| ধ || || || || 
|-
| ন || || || || 
|-
| প || || || || 
|-
| ফ || || || || 
|-
| ব || || || || 
|-
| ভ || || || || 
|-
| ম || || || || 
|-
| য || || || || 
|-
| র || || || || 
|-
| ল || || || || 
|-
| শ || || || || 
|-
| ষ || || || || 
|-
| স || || || || 
|-
| হ || || || || 
|-
| য় || || || || 
|}

{{BookCat}}</text>
      <sha1>4vhwfzesjvy9uvc3v7jaayj2ghocm43</sha1>
    </revision>
  </page>
  <page>
    <title>Chess Opening Theory/1. c4/1...d5</title>
    <ns>0</ns>
    <id>39884</id>
    <revision>
      <id>1620818</id>
      <parentid>1620737</parentid>
      <timestamp>2009-09-02T22:14:33Z</timestamp>
      <contributor>
        <username>Mike's bot account</username>
        <id>67847</id>
      </contributor>
      <minor />
      <comment>template replacement by request</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Chess Opening Theory/Position|=
|English Opening|
   |rd|nd|bd|qd|kd|bd|nd|rd|=
   |pd|pd|pd|  |pd|pd|pd|pd|=
   |  |  |  |  |  |  |  |  |=
   |  |  |  |pd|  |  |  |  |=
   |  |  |pl|  |  |  |  |  |=
   |  |  |  |  |  |  |  |  |=
   |pl|pl|  |pl|pl|pl|pl|pl|=
   |rl|nl|bl|ql|kl|bl|nl|rl|=
||
}}
= English Opening =
===1...d5===
{{ChessStub}}
==Theory table==
{{Chess Opening Theory/Table}}.

'''1.c4 d5'''
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot;&gt;
	&lt;tr&gt;
		&lt;th&gt;&lt;/th&gt;
		&lt;th align=&quot;left&quot;&gt;2&lt;/th&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
		&lt;td&gt;[[/2. cxd5|cxd5]]&lt;br&gt;
		...&lt;/td&gt;
		&lt;td&gt;=&lt;/td&gt;
	&lt;/tr&gt;
        &lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
		&lt;td&gt;[[/2. d4|d4]]&lt;br&gt;
		...&lt;/td&gt;
		&lt;td&gt;=&lt;/td&gt;
	&lt;/tr&gt;
        &lt;tr&gt;
                &lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
                &lt;td&gt;[[/2. Nf3|Nf3]]&lt;br&gt;
                ...&lt;/td&gt;
                &lt;td&gt;=&lt;/td&gt;
        &lt;/tr&gt;
&lt;/table&gt;
{{ChessMid}}
{{Wikipedia|English Opening}}

==References==
{{reflist}}
{{BCO2}}
{{ChessFooter}}</text>
      <sha1>q26z13it3dihtn0grsgbazbo1z5sb13</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/NSCLC/Locally Advanced Resectable</title>
    <ns>0</ns>
    <id>39885</id>
    <revision>
      <id>2115421</id>
      <parentid>2092921</parentid>
      <timestamp>2011-06-02T12:23:15Z</timestamp>
      <contributor>
        <ip>220.225.231.116</ip>
      </contributor>
      <comment>/* Epidemiology */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/Lung/NSCLC:TOC}}

:''See also:'' [[../Early Stage Operable#Post-operative RT|Post-op RT (in Early Stage Resectable)]]


==Criteria for resectability==
Generally stage IIIA and lower is considered resectable, since all sites of disease can be removed by extended surgery.  In contrast, stage IIIB disease (N3 or T4) is generally considered unresectable due to contralateral lymph node involvement or extensive local tumor.  However, a subset of T4 patients may actually be able to undergo surgical resection.

*Pulmonary function: FEV1 &gt; 2 L.  Predicted post-surgical FEV1 should be &gt; 0.8 L based on qualitative VQ scan.


==Epidemiology==
*16% of NSCLC is IIIA


Heterogenous:
*T3N1 vs. T1-3N2
*N2 nodes: single vs. multiple
*N2 nodes: bulky vs. macroscopic vs. microscopic involvement


*'''Gustave Roussy, 2000''' (France) PMID 10944131 -- &quot;Survival of patients with resected N2 non-small-cell lung cancer: evidence for a subclassification and implications.&quot; (Andre F, J Clin Oncol. 2000 Aug;18(16):2981-9.)
**Retrospective. 702 patients with resected N2 disease, stratified into clinically positive and clinically negative but microscopically positive at surgery. Multi-institutional, 6 centers. Median F/U 4.3 years
**5-year OS treated with surgery only:
***single level microscopic N2: 34% (site of LN+ had no prognostic significance)
***multiple levels microscopic N2: 11%
***single level clinical N2: 8%
***multiple levels clinical N2: 3%
**5-year OS in clinical N2: surgery only 5% vs. preop chemo 18%

==Use of PET to assess response after induction chemo/RT==
*Maryland: DeYoung CM et al (ASTRO 2004, Abstract 122)
**39 pts. Stage IIIA-IIIB. Induction chemo (carboplatin + Navelbine) + concurrent hyperfractionated RT (69.6 Gy). After induction, restaging with PET 4-6 weeks after and mediastinoscopy (MED) @ 6-8 weeks.  If negative MED, underwent resection + consolidative therapy; otherwise, consolidation only.  
**32 completed MED. For the mediastinum: SUV after induction could not differentiate between those with and without pCR; PET false negative 30%, false positive 45%.  For the primary tumor, false negative 73%, false positive 57%.  
**PET not useful for restaging within 4-6 weeks after induction chemo/RT.


==Pre-op RT vs. Surgery Only==
*'''VA Trial'''
**Randomized. 331 patients, with centrally located tumors amenable to endoscopic biopsy (peripheral lesions excluded). Arm 1) Pre-op RT vs. Arm 2) Surgery alone. RT given 40-50 Gy to primary tumor + mediastinum. Surgery 4-6 week later (maximum 12 weeks). Lobectomy 12%, majority pneumonectomy.
**'''4-years; 1972''' PMID 5083076 -- &quot;Preoperative radiation therapy in the treatment of bronchial carcinoma.&quot; (Shields TW, Cancer. 1972 Nov;30(5):1388-94.)
***Outcome: pCR 25%. 1-year OS pre-op RT 44% vs. surgery only 60% (SS); 4-year OS 12% vs. 21%. Survival decrement during first 6 months, then curves comparable. Survival also worse with higher pre-op RT dose
***Toxicity: post-op mortality 12% both groups
***Conclusion: Pre-op RT worse survival, manifested during first 6 months

==Induction Chemo/RT + Surgery==
'''Ongoing trial:'''
*'''RTOG 02-29''' - Phase II (activated 9/2004)
**Stage IIIA(T1-3N2) or IIIB(N3) resectable at diagnosis. Treated with induction chemo/RT, carboplatin and taxol weekly x 6 weeks and RT to 61.2 Gy. Surgery evaluation 4-6 wks after chemo/RT. Consolidative carbo/taxol x 2 cycles. Recommended prophylactic cranial irradiation (on RTOG 02-14). ''RT dose:'' 50.4 Gy (offcord by 45 Gy) + 10.8 Gy boost
**Objective: mediastinal nodal clearance and pCR after chemo/RT.


*'''SWOG 8805''' - Phase II
**'''1999''' PMID 7636530 &amp;mdash; &quot;Concurrent cisplatin/etoposide plus chest radiotherapy followed by surgery for stages IIIA (N2) and IIIB non-small-cell lung cancer: mature results of Southwest Oncology Group phase II study 8805.&quot; Albain KS et al. J Clin Oncol. 1995 Aug;13(8):1880-92. 
**126 pts. Biopsy proven N2, N3, or T4. IIIA 60%, IIIB 40%. 85% of IIIA and 80% of IIIB were resected. Concurrent chemo/RT (2 cycles cisplatin + etoposide + 45 Gy RT), followed by surgery.  
**Median f/u 2.4 yrs. 2-yr OS 37%, 3-yr 24-27%. Strongest predictor of survival was pCR in mediastinal LN (30 months vs 10 month MS; 5-yr OS 33% vs 11)%. 
**Conclusion: induction chemo/RT before surgery is feasible

*'''Duke, 1994''' 
**PMID 8055445 &amp;mdash; &quot;Phase II study of neoadjuvant chemotherapy and radiation therapy with thoracotomy in the treatment of clinically staged IIIA non-small cell lung cancer.&quot; Deutsch M et al. Cancer. 1994 Aug 15;74(4):1243-52.
**28 pts. Carbo/etoposide followed by carbo + 60 Gy followed by surgery. 
**Conclusion: well tolerated

==Induction Chemo/RT + Surgery vs Definitive Chemo/XRT==
*'''Intergroup INT-0139''' (RTOG 93-09, SWOG 93-36) (1994-2001) -- induction CRT + surgery vs definitive CRT
**Randomized. 396 patients with stage IIIA (pN2) lymph node positive NSCLC. Arm 1) Induction chemo-RT (cisplatin 50 mg/m2 x2 cycles, etoposide 50 mg/m2 x2 cycles, concurrent RT 45/25), followed by CT restaging 2-4 weeks later, and complete surgical resection with LN evaluation vs. Arm 2) Same cisplatin/etoposide + concurrent RT 61 Gy. Consolidatin cisplatin/etoposide in both groups x2 cycles. Primary endpoint OS.
**'''2003''' [http://asco.org/ac/1,1003,_12-002640-00_18-0023-00_19-00101766,00.asp ASTRO Abstract 2497] [http://wwwhost.rbn.com/astro/astro/web/45/index.html Video Presentation] &amp;mdash; Turrisi et al.
***Initial results suggest a disease-free survival benefit for the surgical arm (median, 13.4 vs. 11.8 months) without any difference in overall survival at a follow up of 22 months.
**'''2005''' [http://www.asco.org/portal/site/ASCO/menuitem.34d60f5624ba07fd506fe310ee37a01d/?vgnextoid=76f8201eb61a7010VgnVCM100000ed730ad1RCRD&amp;vmview=abst_detail_view&amp;confID=34&amp;abstractID=30938 ASCO Abstract] -- &quot;Phase III study of concurrent chemotherapy and radiotherapy (CT/RT) vs CT/RT followed by surgical resection for stage IIIA(pN2) non-small cell lung cancer (NSCLC): Outcomes update of North American Intergroup 0139 (RTOG 9309). (Albain KS, Journal of Clinical Oncology, 2005 ASCO Annual Meeting Proceedings. Vol 23, No. 16S, Part I of II (June 1 Supplement), 2005: 7014). Median F/U 2.5 years
***Outcome: median PFS: CRT+S 12.8 months vs. CRT 10.5 months (SS); 5-year PFS 22% vs. 11% (SS); median OS: 23.6 month vs. 22.2 months (NS); 5-year OS: 27% vs. 20% (p=0.1)
***Subgroup analysis revealed better survival for patients who underwent a lobectomy (p = .002). 
***Trimodality therapy was not optimal when a pneumonectomy was required owing to the high mortality risk. 
***N0 status at surgery significantly predicted a higher 5-year survival rate. 
***Conclusion: significantly improved PFS but not OS with trimodality
**'''2009''' [http://www.thelancet.com/journals/lancet/article/PIIS0140-6736(09)60737-6/abstract Lancet], PMID 19632716 -- &quot;Radiotherapy plus chemotherapy with or without surgical resection for stage III non-small-cell lung cancer: a phase III randomised controlled trial&quot; (Albain KS, The Lancet, Early Online Publication, 27 July 2009). Median F/U 1.8 years, for survivors 5.8 years
***Outcome: Median OS Induction 24 months vs. definitive 22 months (NS). 5-year OS 27% vs. 20% (NS). Median PFS 13 months vs. 11 months (SS). 5-year DFS 22% vs 11%. First relapse: primary tumor site 2% vs. 14%, regional LNs 7% vs. 3%, brain 11% vs. 15%, other DM 37% vs. 42%
***Subset analysis: Lobectomy vs matched CRT 2.8 years vs. 1.8 years (SS); pneumonectomy vs matched CRT 1.6 years vs. 2.4 years (NS) 
***Toxicity: Treatment-related death 8% vs. 2%. Grade 3-4 esophagitis 10% vs. 23% (SS), no difference in pneumonitis or nausea/vomiting
***Conclusion: Chemo-RT with or without resection (preferably lobectomy) all options for IIIA NSCLC

==Induction before Surgery vs Surgery alone==
'''''Meta-Analysis'''''
*'''MRC; 2007''' (UK) PMID 17636828 -- &quot;Chemotherapy and surgery versus surgery alone in non-small cell lung cancer.&quot; (Burdett SS, Cochrane Database Syst Rev. 2007 Jul 18;(3):CD006157.)
**Meta-analysis. 12 randomized trials, data available for 988 patients (75%)
**Outcome: Pre-op chemo increased OS with HR 0.82 (SS), equivalent to 5-year OS benefit 6% (14% to 20%)
**Conclusion: Significant increase in survival attributable to pre-op chemotherapy


'''''Randomized Trials'''''

*'''Roth (MDACC)''' (1987-93)
**60 patients with resectable IIIA NSCLC randomized to induction chemo (cyclophosphamide, etoposide, cisplatin) x 3 cycles followed by surgery, followed by 3 more cycles chemo if response, vs. immediate surgical resection alone. Both groups received RT if incompletely resected at the discretion of treating physician (66 Gy for gross residual, 60 Gy for microscopic). Trial stopped early as stoppage criteria met.
**&gt;50% of patients received RT in each arm
**'''1994:''' PMID 8158698 -- &quot;A randomized trial comparing perioperative chemotherapy and surgery with surgery alone in resectable stage IIIA non-small-cell lung cancer.&quot; (Roth JA, J Natl Cancer Inst.  1994 May 4;86(9):673-80.)
***estimated 3-year OS 56% vs. 15% for perioperative chemo vs. immediate surgery, respectively. MS 64 months vs 11 months. Clinical response rate of 35% with preoperative chemotherapy. 
**'''1998:''' PMID 9792048 -- &quot;Long-term follow-up of patients enrolled in a randomized trial comparing perioperative chemotherapy and surgery with surgery alone in resectable stage IIIA non-small-cell lung cancer.&quot; (Roth JA, Lung Cancer. 1998 Jul;21(1):1-6.) -- Median f/u 82 months.
***updated 3- and 5-year OS, respectively, 43% and 36% for periop chemo, 19% and 15% for immediate surgery.

*'''Rosell (Spain)''' (1989-?)
**60 patients with resectable IIIA NSCLC randomized to induction chemo (mitomycin, ifosphamide, cisplatin) x 3 courses followed by surgery, followed by 50 Gy thoracic RT, vs. immediate surgical resection followed by 50 Gy thoracic RT
**'''1994:''' PMID 8043059 -- &quot;A randomized trial comparing preoperative chemotherapy plus surgery with surgery alone in patients with non-small-cell lung cancer.&quot; (Rosell R, N Engl J Med. 1994 Jan 20;330(3):153-8.)
***median OS 26 months vs. 8 months, median DFS 20 months vs. 5 months (p &lt; 0.001 for both)
**'''7-year, 1999:''' PMID 10574676 -- &quot;Preresectional chemotherapy in stage IIIA non-small-cell lung cancer: a 7-year assessment of a randomized controlled trial.&quot; (Rosell R, Lung Cancer. 1999 Oct;26(1):7-14.)
***updated median OS 22 months vs. 10 months, updated 3- and 5-year OS, respectively, 20% and 17% for pre-op chemo, 5% and 0% for immediate surgery.

*'''Depierre (French)''' (1991-97) - Induction chemo + surgery vs surgery
**355 pts. Stage IB - IIIA. Preoperative chemotherapy (PCT) consisted of 2 cycles mitomycin, ifosfamide, and cisplatin. 2 additional cycles were given postoperatively for pts who responded. Pts in both arms received post-op RT for pathologic T3 or N2 disease. 
**PMID 11773176, 2002 &amp;mdash; &quot;Preoperative chemotherapy followed by surgery compared with primary surgery in resectable stage I (except T1N0), II, and IIIa non-small-cell lung cancer.&quot; Depierre A et al. J Clin Oncol. 2002 Jan 1;20(1):247-53.
**Median survival 37 m (PCT) vs 26 m (S), N.S. Survival difference 8.6% at 4 yrs (S.S.). Survival difference was S.S. only for pts with N0-N1 disease.

==Induction Chemo vs Induction Chemo-RT==
*'''RTOG 04-12 / SWOG S0332'''
**Stage IIIA (N2). Randomized to induction chemotherapy (cisplatin/docetaxel) vs induction chemo/RT (RT to 50.4 Gy). Followed by surgical resection then consolidative chemotherapy with docetaxel.  N2 status must be confirmed pathologically. &lt;u&gt;RT technique&lt;/u&gt;: uses 3D-CRT, no field reductions, no elective nodal irradiation.
**Terminated due to poor accrual

*'''German GLCCG''' (1995-2003) -- Induction cisplatin/etoposide then concurrent chemo-RT followed by surgery vs. induction cisplatin/etoposide then surgery then postop RT
**Randomized. 524 patients with NSCLC Stage IIIA (33%) or resectable IIIB (67%). Arm 1) Induction cisplatin 55 mg/m2 + etoposide 100 mg/m2 x3 cycles, then concurrent RT 45/30 in 1.5 Gy BID with carboplatin 100 mg/m2 + vindesine 3mg, followed by surgery vs. Arm 2) Same induction, followed by surgery, followed by RT (54/30 if R0, 68.4/38. Surgery after 4-6 weeks. Primary endpoint PFS.
**'''2004''' [http://astro.abstractsnet.com/abstractdetail.wcs?handoutid=1 Abstract] ''ASTRO Plenary Session'' &amp;mdash; &quot;Neoadjuvant chemotherapy followed by preoperative radiochemotherapy (hfRCT) plus surgery or surgery plus postoperative radiotherapy in stage III non-small cell lung cancer: results of a randomized phase III trial of the German Lung Cancer Cooperative Group.&quot; Ruebe et al.
***3-year OS 26.2% (Arm A) vs 24.6% (Arm B) (NS). 3-year PFS 17.8% vs 19.9% (NS). Difference was in toxicity, with worse Grade 3/4 esophagitis in Arm A (19% vs 3%), and worse Grade 3/4 pneumonitis in Arm B (6% vs 1%).  No difference in treatment related toxicity.  Concluded that both regimens are effective.
**'''2008''' PMID 18583190 -- &quot;Effect of preoperative chemoradiation in addition to preoperative chemotherapy: a randomised trial in stage III non-small-cell lung cancer.&quot; (Thomas M, Lancet Oncol. 2008 Jul;9(7):636-648. Epub 2008 Jun 24.)
***Outcome: Surgery chemo 59% vs. chemo-RT 59%; mediastinal downstaging 29% vs. 46% (SS). Median PFS (primary endpoint) 10.0 months vs. 9.5 months (NS).
***Toxicity: If pneumonectomy (35% in both groups), worse mortality 14% vs. 6%
***Conclusion: Preop chemo-RT increases mediastinal downstaging, but doesn't improve survival. After induction, pneumonectomy should be avoided

==Induction Chemo + Surgery vs Induction Chemo + RT==
*'''EORTC 08941''' -- Induction platinum x3 cycles, then surgery vs. RT
**Randomized. 579 patients with unresectable IIIA-N2 NSCLC. Unresectable considered N2 non-squamous; or N2 squamous exceeding Station 4R for right or Station 5/6 for left side. Platinum-based induction x3 cycles, then randomized to surgical resection or RT. Had to show at least &quot;minor&quot; response. Induction response rate 61%. 
**RT: Start within 70 days of last chemo cycle. 3D planning + tissue correction. Dose 60-62.5 Gy involved mediastinum and 40-46 uninvolved mediastinum. Post-op RT given to 40% patients in the surgery-only arm (if R1/R2, to 56 Gy). RT arm compliance 55%
**'''5-years, 2007''' PMID 17374834 -- &quot;Randomized controlled trial of resection versus radiotherapy after induction chemotherapy in stage IIIA-N2 non-small-cell lung cancer.&quot; (van Meerbeeck JP, J Natl Cancer Inst. 2007 Mar 21;99(6):442-50.)
***5-year outcome: OS resection 16% vs. RT 14% (NS); median OS 16 months vs. 17 months (NS)
***Toxicity: After surgery 4% deaths. After RT Grade 3-4 pulmonary toxicity 7%, one death of RT pneumonitis (0.6%)
***Conclusion: Surgery did not improve OS or PFS. Given low morbidity and mortality, RT should be preferred modality
***Editorial PMID 17374824: high number of pneumonectomies, which have negative outcome after induction chemo; better local control with surgery. Surgery may be an option if patients experience &quot;downstaging&quot; and clear their mediastinal LNs. On the other hand, RT techniques also improving for better toxicity. Conclusion that chemotherapy-radiation is appropriate for IIIA patients with initial N2 disease
**'''RT Arm, 2006''' PMID 16785054 -- &quot;Quality assurance of thoracic radiotherapy in EORTC 08941: a randomised trial of surgery versus thoracic radiotherapy in patients with stage IIIA non-small-cell lung cancer (NSCLC) after response to induction chemotherapy. (Kramer GW, Eur J Cancer. 2006 Jul;42(10):1391-8.)
***QA Review
**'''Surgery Arm, 2005''' PMID 16055865 -- &quot;Morbidity and mortality in the surgery arm of EORTC 08941 trial.&quot; (Van Schil P, Eur Respir J. 2005 Aug;26(2):192-7.)
***167 patients in surgery arm: 50% R0; 47% pneumonectomies worse survival on subgroup analysis
***Outcome: 50% R0, 40% pathologic downstaging to N0/N1
***Toxicity: 30-day perioperative mortality 4%; reoperation 8%
***Conclusion: morbidity and mortality acceptable

*'''RTOG 89-01''' (1990-1994) -- Induction chemo, then surgery vs. RT
**'''2002''' PMID 12243809 -- &quot;Phase III study comparing chemotherapy and radiotherapy with preoperative chemotherapy and surgical resection in patients with non-small-cell lung cancer with spread to mediastinal lymph nodes (N2); final report of RTOG 89-01. Radiation Therapy Oncology Group.&quot; (Johnstone DW, Int J Radiat Oncol Biol Phys. 2002 Oct 1;54(2):365-9.)
**Randomized. ''Trial stopped early after initiation of INT 0139''. 73 (goal 224) patients, mediastinoscopy-verified N2 NSCLC (T1-T3N2). Induction with cisplatin/vinblastine x2 cycles, then Arm 1) surgery vs. Arm 2) RT 64/32. Adjuvant cisplatin/vinblastine. 45 patients actually randomized post induction.
***Outcome: Median OS chemo + surgery 1.6 years vs chemo + RT 1.4 years (NS); 1-year OS 70% vs. 66% (NS). If induction chemo only, median OS 9 months. No difference in PFS or LC
***Conclusion: Trial inconclusive due to limited accrual, nevertheless, surgery and RT arms comparable and similar to historical controls

==Surgery +/- Adjuvant Chemo==
*Adjuvant chemo has become standard of care in patients who are treated with surgery and found to have stage IIIA disease. This is based on the IALT trial, as well as by extrapolating from NCIC (Stage I-II) and CALGB 9633 (Stage IB) trials
*''Please see [[Radiation_Oncology/Lung/NSCLC/Early_Stage_Operable#Surgery_.2B.2F-_adjuvant_chemotherapy|early stage operable]] NSCLC'' section


==Surgery + Adjuvant RT +/- Chemo==
*''Please see [[Radiation_Oncology/Lung/NSCLC/Early_Stage_Operable#Adjuvant_chemo_vs._adjuvant_chemo-RT|Early stage operable]] NSCLC'' section


==Induction Chemo biology==
*'''Netherlands; 2003''' PMID 14676792 -- &quot;Accelerated regrowth of non-small-cell lung tumours after induction chemotherapy.&quot; (El Sharouni SY, Br J Cancer. 2003 Dec 15;89(12):2184-9.)
**Retrospective. 23 patients with NSCLC. Interval times between end of induction of start of RT evaluated. Mean time to RT 80 days
**Outcome: 41% potentially curable patients became incurable; tumor median doubling 29 days (8.3-171 days)
**Conclusion: Accelerated tumor cell proliferation, much shorter doubling time than for untreated tumors. Gain from chemo (tumor decrease) was lost with waiting for RT


==Special cases==
===Superior sulcus (Pancoast) tumors===
Complete resection in 50%, 5-year OS 30%.

*'''SWOG 9416 / Intergroup 0160''', 2001 (1995-99) - Phase II
**PMID 11241082 &amp;mdash; &quot;Induction chemoradiation and surgical resection for non-small cell lung carcinomas of the superior sulcus: Initial results of Southwest Oncology Group Trial 9416 (Intergroup Trial 0160).&quot; Rusch VW et al. J Thorac Cardiovasc Surg. 2001 Mar;121(3):472-83.
**111 pts. T3-4 N0-1, mediastinoscopy negative. Treated with 2 cycles of cisplatin and etoposide concurrent with 45 Gy RT. Pts who responded or had stable disease underwent resection 3-5 weeks later. Two additional cycles of adjuvant chemotherapy were given.
**Of 95 pts eligible for surgery, 83 had thoracotomy and 76 (92%) had complete resection. 54 (65%) showed pCR or microscopic residual disease. 2-year OS 55% for all pts and 70% for those with complete resection.


==Practice Guideline==
*'''ACCP; 2007''' PMID 17873172 -- &quot;Treatment of non-small cell lung cancer-stage IIIA: ACCP evidence-based clinical practice guidelines (2nd edition).&quot; (Robinson LA, Chest. 2007 Sep;132(3 Suppl):243S-265S.)
**Stage IIIA NSCLC evidence review
**Conclusion: Combination chemo-RT is preferred treatment for prospectively recognized IIIA. Neoadjuvant therapy followed by surgery is not supported by current evidence</text>
      <sha1>duvncykyt43s8td35648qgn4z2jnmie</sha1>
    </revision>
  </page>
  <page>
    <title>Chess Opening Theory/1. c4/1...e5</title>
    <ns>0</ns>
    <id>39886</id>
    <revision>
      <id>2980328</id>
      <parentid>2398220</parentid>
      <timestamp>2015-07-26T20:43:20Z</timestamp>
      <contributor>
        <username>Rothorpe</username>
        <id>525492</id>
      </contributor>
      <minor />
      <comment>/* 1...e5 */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Chess Opening Theory/Position|=
|English Opening|
   |rd|nd|bd|qd|kd|bd|nd|rd|=
   |pd|pd|pd|pd|  |pd|pd|pd|=
   |  |  |  |  |  |  |  |  |=
   |  |  |  |  |pd|  |  |  |=
   |  |  |pl|  |  |  |  |  |=
   |  |  |  |  |  |  |  |  |=
   |pl|pl|  |pl|pl|pl|pl|pl|=
   |rl|nl|bl|ql|kl|bl|nl|rl|=
||
}}
=English Opening=
===1...e5===
This move creates a reverse Sicilian but it's White's move and the aim for White to create an advantage leads generally to different positions.
White's choices are now:
:*2. Nc3, the normal move
:*2. g3 many transposition possibilities
:*2. Nf3 can lead to a reversed Alekhine's Defence of sorts if Black replies with ...e4, with the option of cxd5 if Black tries to advance the d-pawn
:*2. d4 gives away any advantage

=Theory Table=
{{Chess Opening Theory/Table}}.
:'''1.c4 e5'''
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot;&gt;
	&lt;tr&gt;
		&lt;th&gt;&lt;/th&gt;
		&lt;th align=&quot;left&quot;&gt;2&lt;/th&gt;
		&lt;th align=&quot;left&quot;&gt;3&lt;/th&gt;
		&lt;th align=&quot;left&quot;&gt;4&lt;/th&gt;
		&lt;th align=&quot;left&quot;&gt;5&lt;/th&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
		&lt;td&gt;[[/2. Nc3|Nc3]]&lt;br&gt;Nc6&lt;/td&gt;
		&lt;td&gt;g3&lt;br&gt;g6&lt;/td&gt;
		&lt;td&gt;Bg2&lt;br&gt;Bg7&lt;/td&gt;
		&lt;td&gt;d3&lt;br&gt;d6&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
		&lt;td&gt;[[/2. g3|g3]]&lt;br&gt;Nf6&lt;/td&gt;
		&lt;td&gt;Nc3&lt;br&gt;Bb4&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
		&lt;td&gt;[[/2. d4|d4]]&lt;br&gt;&lt;br&gt;&lt;/td&gt;
		&lt;td&gt;&amp;infin;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
{{ChessMid}}
{{Wikipedia|English Opening}}
==References==
{{reflist}}
{{BCO2}}
{{ChessFooter}}
[[fi:Shakkiaapinen/Peli/1. c4/1...e5]]</text>
      <sha1>3ha4qbdlvmwxic2ymlbnu4o1qqk6op2</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/NSCLC/Locally Advanced Unresectable</title>
    <ns>0</ns>
    <id>39887</id>
    <revision>
      <id>3049339</id>
      <parentid>3049337</parentid>
      <timestamp>2016-02-20T21:24:59Z</timestamp>
      <contributor>
        <username>Tdvorak</username>
        <id>7644</id>
      </contributor>
      <comment>/* RT Dose */ Movsas 2015</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Radiation Oncology/Lung/NSCLC:TOC}}


&lt;big&gt;'''Locally Advanced Unresectable NSCLC'''&lt;/big&gt;

''Subpages:'' &lt;br&gt;
*[[Radiation Oncology/Lung/NSCLC/Locally Advanced Unresectable/RT Only|RT Only]]
*[[Radiation Oncology/Lung/NSCLC/Locally Advanced Unresectable/Induction-Chemo RT|Induction-Chemo RT]]
*[[Radiation Oncology/Lung/NSCLC/Locally Advanced Unresectable/Concurrent-Chemo RT|Concurrent Chemo-RT]]


==Treatment Overview==
*Patients were initially treated with radiation only, usually split course
*Dose-escalation in RTOG 73-01 established 60 Gy in 2 Gy/fx as the standard regimen
*Median survival was ~10 months, with 3-year survival &lt;10%
*Hyperfractionated RT alone did not show any beneft
*Continuous Hyperfractionated Accelerated RadioTherapy (CHART) showed a significant improvement in OS. However, logistics of delivering RT TID x12 days straight, combined with OS improvement with chemotherapy have limited its adoption
*CALGB, RTOG, and UK studies in mid-1990's established induction chemo + RT superior for median OS, although absolute benefit was not large (2-4 months). There was a significantly higher proportion of long term survivors. There was no impact on local progression, but distal failure was significantly less
*Hyperfractionated RT after chemo induction did not show any benefit over standard RT
*Induction chemo alone, without RT, was comparable in median OS, but inferior in long term survivors compared to induction chemo + RT. RT was considered a necessary component of treatment
*At the same time, concurrent chemotherapy and RT were evaluated. The only survival benefit of concurrent chemo-RT over RT alone was in an EORTC trial, which used split-course RT with a 3 week rest. The other 3 trials with standard RT fractions were negative. The chemo used was a single agent.
*Concurrent chemo (2 agents) with hyperfractionated RT resulted in OS benefit in 2 Yugoslavian trials
*Small overall chemo benefit was demonstrated in a meta-analysis setting in 1995, and confirmed to be 4% absolute benefit at 2 years in a subsequent meta-analysis. Essentially any two agents are superior to any single agent; adding a third drug did not provide additional benefit
*However, the timing of giving chemotherapy and RT was unclear. Both induction and concurrent chemo appear to provide survival benefit, induction chemo via improved distal control and concurrent chemo via improved local control. 
*Direct comparisons in several randomized trials established concurrent chemo-RT as the superior regimen, at the cost of increased in-field toxicity (especially esophagitis)
*There is no benefit to induction chemotherapy, followed by concurrent chemo-RT (CALGB B39801, LAMP). The later RT starts, the worse the outcomes
*The role of consolidative chemo after concurrent chemo-RT is under evaluation
*The role of elective nodal irradiation is also evolving, with single institution series suggesting minimal benefit, and one randomized trial (China) finding that dose escalation to 68-74 Gy due to lower volume treated resulted in improved overall survival
*The current standard of care can be considered concurrent chemo with 2 agents containing platinum, and thoracic RT to 60 Gy in QD fractions.

==RT vs. Placebo==
*'''VA Lung Group (VALG)''' -- RT vs. placebo vs. chemotherapy
**Randomized, 3 arms. 800 patients. Localized but inoperable (mostly due to bulky disease). KPS 80-100 33%, KPS 50-70 55%. Arm 1) RT vs. Arm 2) placebo (lactose) vs. Arm 3) chemo (not reported here). RT given: orthovolatage in 90% (200-260 kV), Cobalt-60 in 10%. Target dose 40-50 Gy, but 33% received &lt;40 Gy (2/3 died, 1/3 medical complications)
**'''1968''' PMID 4170866 -- &quot;The survival of patients with inoperable lung cancer: a large-scale randomized study of radiation therapy versus placebo.&quot; (Roswit B, Radiology. 1968 Apr;90(4):688-97.)
***Outcome: Median OS: RT 4.6 months vs. placebo 3.7 months (NS); 1-year survival: RT 18% vs. placebo 14% (p=0.05). 
***Long-term survivors (top 25%): RT 10 months vs. 7.6 months (SS). Better survival if longer symptomatic prior to diagnosis, suggesting slower rate of growth 
***Conclusion: RT does not impact median OS, but improves long-term survival

==Radiation alone==
*''Please see the [[Radiation_Oncology/Lung/NSCLC/Locally_Advanced_Unresectable/RT_Only|RT Only]] section for detailed literature review
*Survival: 7-10 months
*RT dose: 
**Standard 2D: 60Gy in 2Gy/fx established in RTOG 73-01; but insufficient to control disease
**RT alone (3D-CRT): 83.8 Gy tolerable, 90.3 Gy excess mortality (from RTOG 93-11)
**RT with chemotherapy: maximum 70-74 Gy appears tolerable
*Hyperfractionated RT alone did not show any beneft
*Continuous hyperfractionated thereapy (CHART) showed a significant improvement in OS. However, logistics of delivering RT TID x12 days straight, combined with OS improvement with chemotherapy have limited its adoption
*In mid-1990's induction chemotherapy followed by RT was shown to have modestly better OS over RT alone (see below), and efforts since have been targeted at optimizing CRT 



==Combined modality==
===RT alone vs. Chemo alone vs. Chemo-RT===
*'''Vanderbilt, 1990''' - PMID 2161633 &amp;mdash; &quot;Thoracic radiotherapy does not prolong survival in patients with locally advanced, unresectable non-small cell lung cancer.&quot; Johnson DH et al. Ann Intern Med. 1990 Jul 1;113(1):33-8.
**319 pts, locally advanced, unresectable. Randomized to 1) Vindesine weekly, 2) RT to 60 Gy (2 Gy/fx), or 3) Vindesine + RT. Vindesine was given weekly for 6 weeks then every other week. Cross over to the other arm was done for disease progression.
**Minimum f/u 42 months. Response rate was 30% (RT alone), 34% (chemo + RT), 10% (chemo). No difference in survival. Median survival was 8.6 vs 9.4 vs 10.1 months; 5-yr OS 3% vs 3% vs 1%.
**Conclusion: RT failed to improve survival.


===RT alone vs. Induction Chemo-RT===
*CALGB 8433 published in 1990 (Dillman) PMID 2169587
**Phase III trial of 155 patients with Stage III non-small cell lung cancer
** RT only arm received 60 Gy in 2 Gy fractions; experimental arm received cisplatin 100 mg/m2 with vinblastine 5 mg/m2 for two cycles sequentially with same radiation starting day 50.
** Median OS improved 13.8 vs 9.7 months (p&lt;0.01) with chemoRT vs RT alone. 3-year OS improved 23% vs 11% as well.

*Overall, there appeared to be a modest survival benefit with induction chemo followed by RT, in patients with good performance status and no weight loss. 
*There was a significantly higher proportion of long term survivors and improved distant failure-free survival, but essentially no impact on local recurrence 
*Later studies comparing induction chemo/RT versus concurrent chemo/RT demonstrated the superiority of concurrent chemo/RT


Please see the [[Radiation_Oncology/Lung/NSCLC/Locally_Advanced_Unresectable/Induction-Chemo_RT|Induction Chemo RT]] section for literature review

===Induction Chemo-RT vs. Induction Chemo Alone===
*Same median survival, but RT significantly improves long-term survival rate. Chemotherapy alone is not sufficient


*'''Sakai''' (Japan) PMID 8040666 -- &quot;Role of radiotherapy in combined modality treatment of locally advanced non-small-cell lung cancer.&quot; (Kubota K, J Clin Oncol. 1994 Aug;12(8):1547-52.)
**Randomized. 92 patients treated with chemotherapy (VP vs. MVP vs. EP/VM) x2 cycles, then randomized to RT or not. 50-60 Gy in 2 Gy/fx. 63 patients in second (RT) randomization
**Median OS: comparable at 15 months. But 1-year, 2-year, 3-year OS: CT alone 66%, 9%, 3% vs. CT-RT 58%, 36%, 29%
**'''Conclusion: No difference in median OS, but significantly better long-term survivors with CT-RT. Chest RT necessary'''.

===RT Alone vs. Concurrent Chemo-RT===
*Only survival benefit of concurrent chemo-RT was in an EORTC trial, which used split-course RT with a 3 week rest. Three other trials with standard RT fractions were negative. 
*Two trials out of Yugoslavia, using hyperfractionated RT, were also positive
*Meta-analysis of 9 trials showed a 4% absolute OS benefit with chemo-RT at 2 years, and established RT with chemotherapy as standard of care


Please see the [[Radiation_Oncology/Lung/NSCLC/Locally_Advanced_Unresectable/Concurrent-Chemo_RT|Concurrent-Chemo RT]] section for literature review


===Sequential vs. Concurrent Chemo and RT===
'''''Meta-analysis'''''
*'''NSCLC Collaborative Group; 2010''' PMID 20351327 -- &quot;Meta-Analysis of Concomitant Versus Sequential Radiochemotherapy in Locally Advanced Non-Small-Cell Lung Cancer.&quot; (Auperin A, J Clin Oncol 2010 May 1;28(13):2181-2190.)
**Meta-analysis.  Individual patient data from 6 trials (CALGB 8831, WJLCG, RTOG 9410, GMMA Ankara, GLOT-GFPC NPC 95-01, EORTC 08972). 1205 patients. Median F/U 6 years
**Outcome: Benefit of concomitant chemo-RT over sequential chemo-&gt;RT on OS (HR 0.84, SS), with absolute benefit at 3-years of 5.7% (18% to 24%), 5-years 4.5% (11% to 15%). No difference in PFS (HR 0.9, p=0.07). Decrease in locoregional progression (HR 0.777, SS), with absolute decrease of 6% at 5 years (35% to 29%). No difference on distant progression (HR 1.04, NS), with 5-year rate of ~40%
**Toxicity: Acute Grade 3-4 esophageal toxicity worse (RR 4.9, SS), increase from 4% to 18%; no significant difference in acute pulmonary toxicity
**Conclusion: Concomitant chemo-RT compared with sequential chemo-RT improved overall survival, primarily through better locoregional control, at cost of manageable increase in acute esophageal toxicity


'''''Randomized evidence'''''
*'''CTRT99/97 Bronchial Carcinoma Therapy Group (Germany)''' (1997-2002) - Phase III
**303 pts. Stage IIIA-IIIB. Treated with induction chemo: carbo/taxol x 2 cycles. Then randomized to: 1) RT only 60 Gy, or 2) Chemo-RT with weekly taxol.
**'''2006''' PMID 16983107 -- &quot;Simultaneous chemoradiotherapy compared with radiotherapy alone after induction chemotherapy in inoperable stage IIIA or IIIB non-small-cell lung cancer: study CTRT99/97 by the Bronchial Carcinoma Therapy Group.&quot; (Huber RM, J Clin Oncol. 2006 Sep 20;24(27):4397-404.)
***214 pts randomized. Median f/u 13.6 mo. Induction therapy was well tolerated with mild toxicities. Median survival 14.1 mo (RT) vs 18.7 mo (Chemo-RT), NS. Median TTP 11.5 mo vs 14.7 mo (SS). No significant differences in toxicity between the two arms.
***Conclusion: Induction chemo followed by chemo-RT is feasible. Response, time to progression, and survival favor chemo-RT vs RT.

*'''GLOT-GFPC NPC 95-01''' (French) (1996-2000) PMID 16087956 &amp;mdash; &quot;Randomized phase III trial of sequential chemoradiotherapy compared with concurrent chemoradiotherapy in locally advanced non-small-cell lung cancer: Groupe Lyon-Saint-Etienne d'Oncologie Thoracique-Groupe Francais de Pneumo-Cancerologie NPC 95-01 Study.&quot; Fournel P et al. J Clin Oncol. 2005 Sep 1;23(25):5910-7. 
**Randomized 205 pts. Stage III. Treated A) Sequential: induction cisplatin/vinorelbine followed by RT 66 Gy vs. B) Concurrent/Consolidation: RT 66 Gy with cisplatin/etoposide, then cisplatin/vinorelbine 
**Median OS: sequential 14.5 months vs concurrent/consolidative 16.3 months (NS). 4-year OS: sequential 14% vs concurrent/consolidative 21% (NS)
**Toxicity: Worse esophageal toxicity in concurrent arm (32% vs 3%)
**Conclusion: no significant difference, but trend suggestive of potential benefit for concurrent therapy

*'''Prague, 2004''' (Czech) PMID 15364136 &amp;mdash; &quot;Concurrent versus sequential chemoradiotherapy with cisplatin and vinorelbine in locally advanced non-small cell lung cancer: a randomized study.&quot; Zatloukal P et al. Lung Cancer. 2004 Oct;46(1):87-98.
**Randomized. 102 patients (15 IIIA, 87 IIIB) treated with A) concurrent chemo-RT vs. B) sequential chemo-RT, with RT starting within 2 weeks. RT given as 60/30. Chemo given as cisplatin/vinorelbine
**Median OS: concurrent 16.6 months vs. sequential 12.9 months (SS). Time-to-progression: 11.9 months vs. 8.5 months (SS)
**Toxicity: Grade 3/4 more frequent in concurrent arm, leukopenia 53% vs. 19% (SS), nausea/vomiting 39% vs. 15% (SS)
**Conclusion: concurrent significantly better survival, time to progression. Worse but acceptable toxicity

*'''RTOG 94-10''' (1994-98) PMID 21903745 &amp;mdash; &quot;Sequential vs Concurrent Chemoradiation for Stage III Non-Small Cell Lung Cancer: Randomized Phase III Trial RTOG 9410.&quot; Curran W et al. J Natl Cancer Inst. 2011 Sep 8. [Epub ahead of print]
**Inoperable / unresectable Stage II-IIIB, ineligible for RTOG 93-03. Randomized.  Elective nodal irradiation is required.
***&lt;u&gt;Arm 1&lt;/u&gt;: sequential chemo (vinblastine + cisplatin) followed by RT beginning on day 50. Vinblastine weekly x 5. Cisplatin 100 mg/m2 q3w x 2. RT 45 Gy + 2 Gy x 9 boost (63 Gy total).
***&lt;u&gt;Arm 2&lt;/u&gt;: concomitant chemo/RT (same chemo &amp; RT as in Arm 1). (Based on RTOG 90-15 but with qd RT)
***&lt;u&gt;Arm 3&lt;/u&gt;: concomitant chemo (oral etoposide and cisplatin) and hyperfractionated RT.  Oral etoposide 50 mg BID given on RT days only for weeks 1-4.  Cisplatin 50 mg/m2 on days 1,8,29,36. RT dose 69.6 Gy at 1.2 Gy BID. (Based on RTOG 91-06)
** Published at a median f/u of 11 yrs (prior ASTRO Abstract in 2003). 
***Median OS: SEQ 14.6 mo vs. CON-QD 17.0 mo (SS vs. SEQ) vs. CON-BID 15.6 mo
***5-year OS: SEQ 10% vs. CON-QD 16% (SS vs. SEQ) vs. CON-BID 13%
***Conclusion: Concurrent chemo-RT with cisplatin confers a long-term survival benefit over sequential therapy.   
**RTOG 90-15 - PMID 7712445 - Phase I/II - BID RT with concurrent vinblastine + cisplatin. (Provided Arm 2 of RTOG 94-10)
**RTOG 91-06 - PMID 8648357 - Phase II - BID RT with concurrent oral daily etoposide + IV cisplatin. (Provided Arm 3 of RTOG 94-10)

*'''WJLCG; Japan''' (1992-94) 
**'''1999''' PMID 10561343 &amp;mdash; &quot;Phase III study of concurrent versus sequential thoracic radiotherapy in combination with mitomycin, vindesine, and cisplatin in unresectable stage III non-small-cell lung cancer.&quot; Furuse K et al. J Clin Oncol. 1999 Sep;17(9):2692-9.
**320 pts. Unresectable Stage III. Randomized Phase III. 
***&lt;U&gt;Arm 1&lt;/u&gt;: Concurrent. Cisplatin (80 mg/m2, days 1 &amp; 29) + vindesine (3 mg/m2, days 1, 8, 29, 36) + mitomycin C (8 mg/m2, days 1 &amp; 29). RT began on day 2. 28 Gy, break of 10 days, then 28 Gy (total 56 Gy). 
***&lt;U&gt;Arm 2&lt;/u&gt;: Induction. Same chemotherapy. RT began after chemotherapy, 56 Gy non-split course.
**Median survival 16.5 months (concurrent) vs 13.3 months (sequential). Survival at 2, 3, 4, and 5 years in concurrent group (34.6%, 22.3%, 16.9%, and 15.8%) vs (27.4%, 14.7%, 10.1%, and 8.9%) in sequential group. Difference is S.S
**Conclusion: Concurrent chemo/RT leads to better survial in selected pts than sequential chemo/RT.

===Concurrent Chemo-RT +/- Induction Chemo===
*There appears to be no benefit to induction chemotherapy prior to concurrent chemo-RT in 2 randomized trials


*'''CALGB B39801''' (1998-2002) -- Induction carboplatin/paclitaxel -&gt; RT vs chemo-RT
**Randomized. 366 patients with unresectable Stage III NSCLC. Randomized to Arm 1) Concurrent carboplatin (AUC=2)/paclitaxel (50 mg/sq m) with RT 66 Gy. Arm 2) Induction with carboplatin(AUC=6)/paclitaxel (200 mg/sq m) x2 cycles, then concurrent chemo-RT as Arm 1
**'''2007''' PMID 17404369 -- &quot;Induction chemotherapy followed by chemoradiotherapy compared with chemoradiotherapy alone for regionally advanced unresectable stage III Non-small-cell lung cancer: Cancer and Leukemia Group B.&quot; (Vokes EE, J Clin Oncol. 2007 May 1;25(13):1698-704.)
***Outcome: MS induction 12 months vs. no induction 14 months (NS); 2-year OS 29% vs. 31% (NS)
***Toxicity: Induction chemo neutropenia (20% Grade 3-4), no difference between concurrent  CRT arms
***Conclusion: Addition of induction chemo added toxicity without survival benefit.
**Comment: Low survival compared to other trials, possibly due to lower chemo dose due to using carboplatin and not cisplatin.

*'''Locally Advanced Multimodality Protocol (LAMP)''', 2005 (1998-2001) - Randomized Phase II. Closed early due to nonaccrual. Opened before concurrent chemo-RT was established as standard, with Arm 1 sequential chemo-RT as control. Arm 2 was closed early at interim analysis. Eventually interest in Arm 1 slowed down, and trial was closed. Results compared to historical RTOG 88-08
**257 pts. Stage IIIA or IIIB (medically inoperable N2, T4, or T3). KPS &gt;= 70%, wt loss &lt;= 10%.
***&lt;u&gt;Arm 1&lt;/u&gt;: Sequential chemotherapy followed by RT. 2 cycles of paclitaxel (200 mg/m2) and carboplatin (AUC 6) every 3 weeks. RT on day 42 (3 weeks after last chemotherapy cycle), 45 Gy + 18 Gy = 63 Gy, to postchemo volume.
***&lt;u&gt;Arm 2&lt;/u&gt;: Induction chemotherapy followed by concurrent chemo/RT. Two cycles of chemotherapy (as in Arm 1) followed by RT (as in Arm 1) given concurrently with weekly Taxol (45 mg/m2) + 2 cycles of carboplatin (AUC 2) q3weeks x 2 cycles
***&lt;u&gt;Arm 3&lt;/u&gt;: Concurrent chemo/RT followed by consolidative chemotherapy. Concurrent chemo/RT (as in Arm 2) followed by two cycles of chemotherapy (as in Arms 1&amp;2) 3-4 weeks after completion of concurrent therapy.
**PMID 16087941, 2005 &amp;mdash; &quot;Combined Chemoradiotherapy Regimens of Paclitaxel and Carboplatin for Locally Advanced Non-Small-Cell Lung Cancer: A Randomized Phase II Locally Advanced Multi-Modality Protocol.&quot; Belani CP et al. J Clin Oncol. 2005 Sep 1;23(25):5883-5891.
***Median f/u 39.6 months. Median survivals 13 months vs 12.7 months vs 16.3 months.  Overall survival at 1,2,and 3 years for Arm 1: 57%, 30%, 17; Arm 2: 53%, 25%, 15%; Arm 3: 63%, 31%, 17%. No S.S. difference for any of the arms compared to RTOG 88-08. 
**Conclusion: No statistically significant difference in survival for any of the arms (vs. RTOG 88-08). Suggestion of improved outcome for Concurrent chemo/RT -&gt; consolidative chemo.


===Induction chemo alternatives + chemo-RT===
*'''CALGB 30105''' -- Induction/concurrent carbo/taxol vs. carbo/gemcitabine
**'''2008''' PMID 18487565 -- &quot;Randomized phase II trial of induction chemotherapy followed by concurrent chemotherapy and dose-escalated thoracic conformal radiotherapy (74 Gy) in stage III non-small-cell lung cancer: CALGB 30105.&quot; (Socinski MA, J Clin Oncol. 2008 May 20;26(15):2457-63.)
**Randomized Phase II. ''Arm 2 closed prematurely due to toxicity.'' 69 patients, Stage IIIA-B. Arm 1) induction carboplatin AUC6 + paclitaxel 225 mg/m2 followed by concurrent carboplatin AUC2 + paclitaxel 45 mg/m2 + RT 74 Gy vs. Arm 2) induction carboplatin AUC5 + gemcitabine 35 mg/m2, followed by concurrent gemcitabine + RT 74 Gy. Primary endpoint OS at 1.5 years
***Outcome: median OS carbo/taxol 2.0 years vs. carbo/gem 1.0 years
***Toxicity: High Grade 4-5 rate in carbo/gem arm
***Conclusion: Carbo/taxol arm better and will be compared with standard dose TRT

===Chemo-RT +/- Chemotherapy Consolidation===
*'''Hoosier Oncology Group (Indiana)''' (2002-2006) -- Chemo-RT +/- docetaxel
**Randomized. ''Stopped early due to interim analysis of futility.'' 147/203 patients with stage IIIA-B, FEV1 &gt;=1 L, wt loss &lt;5%. Concurrent RT 59.4 Gy with cisplatin/etoposide, then if no progression Arm 1) docetaxel 75 mg/m2 x3 cycles vs. Arm 2) observation
**'''2008''' PMID 19001323 -- &quot;Phase III study of cisplatin, etoposide, and concurrent chest radiation with or without consolidation docetaxel in patients with inoperable stage III non-small-cell lung cancer: the Hoosier Oncology Group and U.S. Oncology.&quot; (Hanna N, J Clin Oncol. 2008 Dec 10;26(35):5755-60. Epub 2008 Nov 10.)
***Outcome: Median OS docetaxel 1.8 years vs. observation 1.9 years (NS)
***Toxicity: Grade 3+ febrile neutropenia 11%, pneumonitis 10%, hospitalization 29% vs. 8%, death 5%
***Conclusion: Consolidation with docetaxel increased toxicity with no impact on survival

*'''SWOG 0023''' (2001-2005) -- Chemo-RT + adjuvant docetaxel +/- adjuvant gefitinib
**Randomized. ''Closed early after worse survival with gefitinib''. 243/672 patients, Stage III NSCLC. Concurrent cisplatin 50 mg/m2 + etoposide 50 mg/m2 + RT 61 Gy, then docetaxel 75 mg/m2 x3 cycles. If no progression, randomized Arm 1) gefitinib 250 mg/d vs. Arm 2) placebo until progression, toxicity or 5 years
**'''2008''' PMID 18378568 -- &quot;Phase III trial of maintenance gefitinib or placebo after concurrent chemoradiotherapy and docetaxel consolidation in inoperable stage III non-small-cell lung cancer: SWOG S0023.&quot; (Kelly K, J Clin Oncol. 2008 May 20;26(15):2450-6. Epub 2008 Mar 31.) Median F/U 2.2 years
***Outcome: median OS gefitinib 1.9 years vs. placebo 2.9 years (SS)
***Toxicity: death rate gefitinib 2% vs. placebo 0% 
***Conclusion: Gefitinib didn't improve survival; decreased survival result of tumor progression and not gefitinib toxicity

*'''SWOG S9504''' PMID 12743155 -- &quot;Consolidation docetaxel after concurrent chemoradiotherapy in stage IIIB non-small-cell lung cancer: phase II Southwest Oncology Group Study S9504.&quot; (Gandara DR, J Clin Oncol. 2003 May 15;21(10):2004-10.)
**Phase II. Stage IIIB. Concurrent chemo (cisplatin/etoposide) and RT 61 Gy, followed by consolidation docetaxel 4-6 weeks later
**Median OS: 26 months; 3-year OS 37%; brain mets most common site of failure

===Chemotherapy combinations with RT===
'''''Ongoing studies:'''''
*'''RTOG 0617 (ongoing)''' - Phase III. Concurrent RT + Carbo/Taxol +/- Cetuximab


'''''Completed studies:'''''
*'''RTOG 0324''' -- Phase II. Concurrent RT + Cetuximab / Carbo / Taxol
**87 pts. Stage III unresectable. Received cetuximab weekly (17 weeks beginning 1 week prior to CRT), RT 63 Gy / 35 fx with weekly carboplatin (AUC 2) and paclitaxel (45 mg/m2) for 6 weeks, followed by 2 doses of carbo (AUC 6) + paclitaxel (200 mg/m2) on weeks 12 - 17. 
**'''2011''' PMID 21555682 -- &quot;Phase II Study of Cetuximab in Combination With Chemoradiation in Patients With Stage IIIA/B Non-Small-Cell Lung Cancer: RTOG 0324.&quot; (Blumenschein GR Jr, J Clin Oncol. 2011 Jun 10;29(17):2312-8.)
***Median f/u 21.6 m. Response rate 62%, MS 22.7 m, 2-yr OS 49.3%. 
***Conclusion: combination of cetuximab and chemo/RT is feasible with promising activity. The median and OS were longer than any previous regimen in the RTOG.

*'''CALGB 30407''' -- Randomized Phase II. Carbo / Pemetrexid + RT +/- Cetuximab
**101 pts. Stage III. Arm A) Carboplatin (AUC 5) and Pemetrexid (500 mg/m2) q3w x 4 cycles concurrent with RT 70 Gy, Arm B) Same treatment plus Cetuximab concurrent with RT. Consolidation therapy with up to 4 cycles of Pemetrexid in both arms. 
**'''2011''' PMID 21747084 -- &quot;Randomized Phase II Study of Pemetrexed, Carboplatin, and Thoracic Radiation With or Without Cetuximab in Patients With Locally Advanced Unresectable Non–Small-Cell Lung Cancer: Cancer and Leukemia Group B Trial 30407&quot; (Govindan R, J Clin Oncol. Published online before print July 11, 2011.)
***Adenoca in 44%, squamous in 35%. 18-mo OS 58% (Arm A) vs 54%. No significant difference in survival between pts with adenoca and squamous. 
***Conclusion: The regimen of carbo/pemetrexid/RT should be further studied.

'''Meta-analysis''' 
*'''Gustave-Roussy, 2004''' PMID 15280345 -- &quot;Benefits of adding a drug to a single-agent or a 2-agent chemotherapy regimen in advanced non-small-cell lung cancer: a meta-analysis. (Delbaldo C, JAMA. 2004 Jul 28;292(4):470-84.)
**65 randomized trials performed 1980-2003 (13,601 patients)
**Doublet vs. single-agent: better tumor response (OR 0.42), median OS (OR 0.3), 1-year OS (OR 0.80)
**Triplet vs. doublet: better tumor response (OR 0.66), no impact on survival (OR 1.01, 1.00)
**Conclusion: doublet better than single-agent; triplet no additional survival benefit

==Radiation technique==
===RT Dose===
'''''With Concurrent Chemo:'''''
*'''RTOG 0617''' (2007 - 2011) - Phase III. 4 arm randomization. 60 Gy vs 74 Gy. Concurrent RT + Carbo/Taxol +/- Cetuximab.
**Randomized, 2x2 factorial. 544 patients. Unresectable Stage III NSCLC, PS 0-1, no SCL/contralateral hilar adenopathy. Arm A) 60 Gy vs Arm B) 74 Gy vs Arm C) 60 Gy + cetuximab vs Armd D) 74 Gy + cetuximab. All arms concurrent paclitaxel 45 mg/m2 and carboplatin AUC 2 weekly. Arms B and D (the two 74 Gy arms) were closed in 6/2011 after an interim analysis showed the high dose arms crossed a futility boundary. 
**'''Results; 2015''' PMID 25601342 -- &quot;Standard-dose versus high-dose conformal radiotherapy with concurrent and consolidation carboplatin plus paclitaxel with or without cetuximab for patients with stage IIIA or IIIB non-small-cell lung cancer (RTOG 0617): a randomised, two-by-two factorial phase 3 study.&quot; (Bradley JD, Lancet Oncol. 2015 Feb;16(2):187-99. doi: 10.1016/S1470-2045(14)71207-0. Epub 2015 Jan 16.) Median follow up 22.9 months
***Outcome: median OS 60 Gy 29 months vs 74 Gy 20 months (HR 1.4, SS). Median OS cetuximab 25 months vs no cetuximab 24 months (NS)
***Toxicity: RT dose comparison - no difference in grade 3+ toxicity. Cetuximab comparison - grade 3+ 86% vs 70% (SS). Esophagitis 74 Gy 21% vs 60 Gy 7% (SS). No difference in pulmonary events. 
***Conclusion: 74 Gy radiation with concurrent chemotherapy not better than 60 GY plus concurrent chemotherapy. Addition of cetuximab provides no benefit in overall survival
**'''Quality of Life; 2015''' PMID 26606200 -- &quot;Quality of Life Analysis of a Radiation Dose-Escalation Study of Patients With Non-Small-Cell Lung Cancer: A Secondary Analysis of the Radiation Therapy Oncology Group 0617 Randomized Clinical Trial.&quot; (Movsas B, JAMA Oncol. 2015 Nov 25:1-9. doi: 10.1001/jamaoncol.2015.3969. [Epub ahead of print])
***FACT-TOI collected in 75% at baseline. No diffference at baseline
***Outcome: Clinically meaningful decline at 3 months 74 Gy 45% vs 60 Gy 30% (SS). IMRT better than 3D-CRT (21% decline vs 46% decline, SS)
***Conclusion: Clinically meaningful decline in 74 Gy arm compared with 60 Gy arm


'''''Without Concurrent Chemo:'''''
*'''Memorial Sloan Kettering''' 
**'''2007''' PMID 17762758 -- &quot;High-dose radiotherapy for the treatment of inoperable non-small cell lung cancer.&quot; (Sura S, Cancer J. 2007 Jul-Aug;13(4):238-42.)
***Retrospective. 82 patients, inoperable NSCLC Stage I-IIIB (I-II n=55; III n=27). Dose &gt;= 80 Gy using 3D-CRT with sequential chemotherapy
***5-year Outcome: Stage I/II LC 67%, OS 36%, median OS 3.4 years; Stage III LC 39%, OS 31%, median OS 2.7 years
***Conclusion: OS and LC comparable with other dose-escalation studies
**'''2005''' (1991-2003) PMID 15830346 -- &quot;Results of a phase I dose-escalation study using three-dimensional conformal radiotherapy in the treatment of inoperable nonsmall cell lung carcinoma.&quot; (Rosenzweig KE, Cancer. 2005 May 15;103(10):2118-27.)
***Phase I dose escalation. 104 patients, 28% Stage I-II, 33% IIIA, 32% IIIB, 6% recurrent. Pneumonitis NTCP had to be &lt;25%. Dose 70.2 -&gt; 75.6 -&gt; 81.0 -&gt; 84.0 -&gt; 90 (1.8 Gy fx for 70.2-81; 2.0 Gy for 84-90). Protocol amended to omit elective nodal irradiation. Chemo: induction given in 16%; no concurrent chemo.
***Outcome: Unacceptable toxicity at 90 Gy; 84.0 Gy considered MTD. 2-year LC 52%. OS improved significantly if dose &gt;= 80.0 Gy
***Toxicity: Crude late pulmonary toxicity 7%
***Conclusion: MTD for NSCLC with NTCP constraint of 25% is 84.0 Gy

*'''Michigan''' (1992-1999) 
**Phase I trial. 104 patients (Stage I 23%, Stage II 4%, Stage IIIA 41%, Stage IIIB 25%, Recurrent 7%). Patients stratified based on Veff into 5 groups, each group escalated independently. Starting doses were 63 Gy, 63 Gy, 65.1 Gy, 69.3 Gy, and 84 Gy. No ENI.
**'''2001''' PMID 11134205 -- &quot;Dose escalation in non-small-cell lung cancer using three-dimensional conformal radiation therapy: update of a phase I trial.&quot; (Hayman JA, J Clin Oncol. 2001 Jan 1;19(1):127-36.)
***Outcome: MTD only established for largest Veff group at 65.1 Gy. Dose levels for other groups were 75.6 Gy, 84 Gy, 102.9 Gy, and 102.9 Gy
***Conclusion: Dose escalation protocol reported
**'''2005''' PMID 16168827 -- &quot;High-dose radiation improved local tumor control and overall survival in patients with inoperable/unresectable non-small-cell lung cancer: long-term results of a radiation dose escalation study.&quot; (Kong FM, Int J Radiat Oncol Biol Phys. 2005 Oct 1;63(2):324-33.)
***Median f/u 8.5 yrs. MS 19 mos. 5-yr OS 13%. On multivariate analysis, weight loss and RT dose were significant predictors for OS. 5-yr OS 4% (63-69 Gy), 22% (74-84 Gy), and 28% (92-103 Gy). 5-yr LRC 12%, 35%, and 49%.
***Conclusion: higher radiation doses associated with improved outcome.

===Accelerated RT===
'''''Concomitant boost'''''
*'''RTOG 84-07''' (1984-89) 
**Phase I/II. 355 pts, ? stage.  45 Gy large fields (primary + regional nodes) + 18 Gy boost (primary and involved nodes only) = 63 Gy. Given as 45/1.8 Gy/5 weeks. Boost given as 10 fractions 2-3 times per week as 2nd fraction separated by 4-6 hrs. Dose escalated from 45+18=63 to 70.2 Gy/5.5 wks (50.4 + 19.8 Gy) to 70.2 Gy/5 wks (45 + 25.2 Gy). 
**PMID 7836079, 1993 &amp;mdash; &quot;A phase I/II study to evaluate accelerated fractionation via concomitant boost for squamous, adeno, and large cell carcinoma of the lung: report of Radiation Therapy Oncology Group 84-07.&quot; Byhardt RW et al. Int J Radiat Oncol Biol Phys. 1993 Jun 15;26(3):459-68.
***Acute grade 3 toxicity in 7% vs 14% vs 17%. Grade 4 toxicity in 2-3% for all arms. Late toxicity in 5-9% grade 3 and 0-2% grade 4. 
***Survival not statistically different between arms. MS 9 months, 1-yr OS 39-44%, 2-yr OS 16-21%. For pts with Stage III/KPS &gt; 70/no weight loss (i.e. eligible for CALGB 8433) 2-yr OS, 18-22%.


===Hyperfractionated RT with chemotherapy===
*'''RTOG 92-04''' (1992-94) - phase II randomized
**164 pts. Unresectable Stage IIIA-B. Randomized to 1) ''induction chemotherapy + concurrent chemo/RT'' (weekly vinblastine x 5, cisplatin days 1+29 followed by RT to 45+18=63 Gy beginning on day 50 with concurrent cisplatin q3week x 3) vs 2) ''concurrent chemotherapy + hyperfractionated RT'' (1.2 Gy BID to 50.4+19.2=69.6 Gy in 4 wks with oral etoposide on days 1-10 + cisplatin days 1+8)
**First report, 1997 - PMID 9212017
**PMID 12062596, 2002 &amp;mdash; &quot;Randomized phase II chemotherapy and radiotherapy trial for patients with locally advanced inoperable non-small-cell lung cancer: long-term follow-up of RTOG 92-04.&quot; Komaki R et al. Int J Radiat Oncol Biol Phys. 2002 Jul 1;53(3):548-57.
***Lower in-field progression for Arm 2 than Arm 1 (26% vs 45% at 2 years; 30% vs 49% at 4 yrs; S.S.). Median, 2-yr OS, and 5-yr OS similar between arms. Higher rate of acute and chronic esophagitis in Arm 2 (37% vs 3.3% acute grade 3-4; 17% vs 4% late grade 3-4).
**Conclusion: Hyperfractionation with chemo leads to improved local control at the expense of esophageal toxicity.

*'''RTOG 94-10''' - see above

*'''Australia''' 1989-1995 PMID 10577698 -- &quot;A randomised phase III study of accelerated or standard fraction radiotherapy with or without concurrent carboplatin in inoperable non-small cell lung cancer: final report of an Australian multi-centre trial.&quot; (Ball D, Radiother Oncol. 1999 Aug;52(2):129-36.)
**Phase III. 204 with inoperable NSCLC randomized to 1) 60/30 in 6 weeks (R6), 2) 60/30 in 3 weeks (R3), 3) R6 + concurrent carboplatin, or 4) R3 + concurrent carboplatin
**No difference in OS among groups.
**Toxicity: hematologic greater with chemo, esophageal greater with ART (R3)
**Critique PMID 11258343: underpowered for 2x2 design. ART hazard ratio 0.86 (0.56, 1.30), which is consistent with CHART trial results (0.78, SS). Recommend not sacrificing dose intensification at expense of concurrent chemotherapy


===Elective nodal irradiation===
*'''International Atomic Energy Agency; 2008''' PMID 18793953 -- &quot;Report from the International Atomic Energy Agency (IAEA) consultants' meeting on elective nodal irradiation in lung cancer: non-small-Cell lung cancer (NSCLC).&quot; (Belderbos JS, Int J Radiat Oncol Biol Phys. 2008 Oct 1;72(2):335-42.)
**Consultant meeting conference in 9/2006. 
**Conclusion: Routine omission may not be advisable in all patients, and may depend on stage, location, and other variables.

*'''MSKCC''' (1991-2005)
**'''2007''' PMID 17984185 -- &quot;Involved-field radiation therapy for inoperable non small-cell lung cancer.&quot; (Rosenzweig KE, J Clin Oncol. 2007 Dec 10;25(35):5557-61.)
***Retrospective. 524 patients, definitive IFRT. Only LN+ by biopsy or &gt;=1.5 cm short axis by CT included in CTV. Elective nodal failure (ENF) defined as recurrence in initially LN- in absence of local failure. Median F/U 3.4 years
***Outcome: ENF in 6%; 2-year elective nodal control 92%, local control 51%; median time to nodal failure 6 months
***Nodal dose-response (from incidental nodal irradiation): 86% failures in regions receiving dose &lt;45 Gy vs. 14% failures if receiving &gt;45 Gy (SS). In nodal regions receiving &lt;45 Gy, failure rate 1.4% vs. if &gt;45 Gy failure rate 0.6% (SS)
***Conclusion: IFRT didn't cause significant failure in LN regions not included in CTV
***Editorial (PMID 17984182): Discrepancy between surgical data and RT data about LN failures. Discussion about incidental nodal irradiation and its dose-effect on nodal failure
**'''2001''' PMID 11395236 -- &quot;Elective nodal irradiation in the treatment of non-small-cell lung cancer with three-dimensional conformal radiation therapy.&quot; (Rosenzweig K, Int J Radiat Oncol Biol Phys. 2001 Jul 1;50(3):681-5.)
***171 pts tx'd w/ 3D-CRT at MSKCC b/w 1991-98.  Only +nodes by biopsy or &gt;/= 1.5 cm in short axis on CT were included in CTV.
***Tumor control at 2 yrs 38%, elective nodal control 91%.  
***Conclusion:  Local control much more problematic than elective nodal control; omission of elective nodal irradiation did not significantly worsen nodal failures outside of CTV.

*'''Shandong, 2006''' (China) PMID 17551299 -- &quot;A randomized study of involved-field irradiation versus elective nodal irradiation in combination with concurrent chemotherapy for inoperable stage III nonsmall cell lung cancer..&quot; (Yuan S, American Journal of Clinical Oncology, 2007 30(3):239-44)
**Randomized. 200 patients, inoperable Stage III NSCLC, treated with induction chemo x2 cycles followed by concurrent chemo-RT, followed by 2-3 cycles. RT randomized to elective nodal irradiation (ENI) vs. involved-field radiation (IFRT). Dose IFRT to 68-74 Gy and ENI to 60-64 Gy. IFRT defined as pre-CHT tumor volume and any mediastinal nodes bx+ or &gt;1cm short-axis on CT. Chemo cisplatin-based doublet. 
**Toxicity: Pneumonitis ENI 29% vs. IFRT 17% (SS)
**2-year failure: local ENI 49%, IFRT 41%. Omission of ENI did not lead to isolated nodal failures
**Survival: 2-years ENI 26% vs. IFRT 39% and 3-years 19% vs. 27% (SS)
**Conclusion: No isolated nodal failures, local control still major issue, successful dose escalation to 68-74Gy and survival difference by omitting elective nodal irradiation
	
*'''RTOG Analysis, 2003''' PMID 12871784 -- &quot;The impact of regional nodal radiotherapy (dose/volume) on regional progression and survival in unresectable non-small cell lung cancer: an analysis of RTOG data.&quot; (Emami B, Lung Cancer. 2003 Aug;41(2):207-14.)
**1705 pts from 4 RTOG trials (7811, 7917, 8311, 8407) analyzed for in-field/out-of-field recurrence patterns.
**Neither in-field progression or 2yr OS were affected by adequacy of nodal coverage in mediastinum, ipsi supraclav, contralat hilum.

*'''Rotterdam, 2002''' PMID 12419425 -- &quot;Can elective nodal irradiation be omitted in stage III non-small-cell lung cancer? Analysis of recurrences in a phase II study of induction chemotherapy and involved-field radiotherapy.&quot; (Senan S, Int J Radiat Oncol Biol Phys. 2002 Nov 15;54(4):999-1006.)
**50 pts w/ stage III NSCLC tx'd w/ sequential chemo + xrt to 70 Gy w/ omitted elective nodal irradiation.
**27% had in-field recurrences, 18% had distant mets alone, no elective nodal failures


'''Reviews'''
*PMID 11040331, 2000 &amp;mdash; &quot;Point: the potential importance of elective nodal irradiation in the treatment of non-small cell lung cancer.&quot; Liengswangwong V et al. Semin Radiat Oncol. 2000 Oct;10(4):308-14.
*PMID 11040332, 2000 &amp;mdash; &quot;Counterpoint: better radiation treatment of non-small cell lung cancer using new techniques without elective nodal irradiation.&quot; Williams TE et al. Semin Radiat Oncol. 2000 Oct;10(4):315-23.

===Induction chemo followed by conventional RT vs. HART===
*No difference in survival or response rate


*'''ECOG 2597''', 2005 (1998-2001) - After induction chemotherapy, standard fractionation RT vs hyperfractionated accelerated radiation therapy (HART). No concurrent chemo. Closed early due to low accrual.
**PMID 15837967 &amp;mdash; &quot;Phase III Study of the Eastern Cooperative Oncology Group (ECOG 2597): Induction Chemotherapy Followed by Either Standard Thoracic Radiotherapy or Hyperfractionated Accelerated Radiotherapy for Patients With Unresectable Stage IIIA and B Non-Small-Cell Lung Cancer.&quot; Belani CP et al. J Clin Oncol. 2005 Jun 1;23(16):3760-7.
**141 pts. Unresectable IIIA or IIIB. Induction chemo with carbo/taxol x 2 cycles q3weeks. Randomized to once-daily RT (QD) 64 Gy at 2 Gy/fx vs HART 57.6 Gy TID in 12 fx over 15 days. For HART, 1st and 3rd daily fractions were 1.5 Gy large field, 2nd fx was boost field 1.8 Gy; at least 4 hours between fractions. 
**No diffence in OS or response, but there was a trend for improved survival. 
**Weak study since no concurrent chemo/RT

===RT Timing===
*'''Kragujevac''' (Yugoslavia) PMID 15577441 -- &quot;Interfraction interval in patients with stage III non-small-cell lung cancer treated with hyperfractionated radiation therapy with or without concurrent chemotherapy: final results in 536 patients.&quot; (Jeremic B, Am J Clin Oncol. 2004 Dec;27(6):616-25.)
**Retrospective review of 3 Phase III and 1 Phase II. 536 patients treated with Hfx RT, 285 patients interfraction interval (IFI) 4.5-5.0 hrs, 251 patients IFI 5.5-6.0 hrs
**Survival: short IFI significantly better OS, LRFS

===IMRT===
*'''MD Anderson; 2007''' (2002-2005) PMID 17321067 -- &quot;Initial evaluation of treatment-related pneumonitis in advanced-stage non-small-cell lung cancer patients treated with concurrent chemotherapy and intensity-modulated radiotherapy.&quot; (Yom SS, Int J Radiat Oncol Biol Phys. 2007 May 1;68(1):94-102. Epub 2007 Feb 22.)
**Retrospective. 68 patients, advanced NSCLC, treated with IMRT and concurrent chemotherapy. Compared with 222 similar patients treated with 3D-CRT. Median F/U 9 months
**Dosimetry: Median dose IMRT 63 Gy vs. 3D-CRT 63 Gy. Median tumor volume 194 mL vs. 142 mL
**Toxicity: 1-year Grade 3+ pneumonitis IMRT 8% vs. 3D-CRT 32% (SS)
**Conclusion: In advanced NSCLC treated with concurrent chemo-RT, IMRT resulted in significantly lower level of Grade 3+ pneumonitis

==Chemotherapy==
*'''Japan WJTOG 3405'''
**Randomized. 172 chemo-naive patients, age &lt;=75, Stage IIIB/IV NSCLC or postop recurrence, with EGRF mutation (exon 19 deletion or L858R point mutation). Arm 1) Gefitinib 250 mg QD vs Arm 2) cisplatin 80 mg/m2 and docetaxel 60 mg/m2 Q3W x 3-6 cycles. Primary endpoint PFS
**'''2009''' PMID 20022809 -- &quot;Gefitinib versus cisplatin plus docetaxel in patients with non-small-cell lung cancer harbouring mutations of the epidermal growth factor receptor (WJTOG3405): an open label, randomised phase 3 trial.&quot; (Mitsudomi T, Lancet Oncol. 2009 Dec 18. [Epub ahead of print])
***Outcome: Median PFG gefitinib 9 months vs. cisplatin/docetaxel 6 months (SS)
***Toxicity: Myelosuppression, alopecia, and fatigue more frequent in cisplatin/docetaxel group, but skin toxicity, liver dysfunction, and diarrhoea more frequent in the gefitinib group. Two patients (2%) developed interstitial lung disease
***Conclusion: Patients with EGFR mutations have longer PFS on gefitinib than on cisplatin/docetaxel

*'''ECOG 4599''' PMID 17167137 -- &quot;Paclitaxel-carboplatin alone or with bevacizumab for non-small-cell lung cancer.&quot; (Sandler A, N Engl J Med. 2006 Dec 14;355(24):2542-50.)
**Randomized. 878 patients with IIIB (malignant pleural effusion) or IV NSCLC, no squamous cell tumors, no brain mets, no hemoptysis, no ECOG &gt;1. Treated with 1) Paclitaxel/carboplatin vs. 2) paclitaxel/carboplatin + bevacizumab, until disease progression or toxicity
**Median OS: carbo/taxol 10.3 months vs. carbo/taxol/bevacizumab 12.3 months (SS)
**Treatment related deaths: 2 vs. 15 (5 pulmonary hemorrhage)
**Conclusion: Bevacizumab improves survival, but significant risk of treatment-related death

==Radioprotectors/Sensitizers==
===Amifostine===
*'''RTOG 9801''' -- Induction -&gt; concurrent chemo-AHFX RT +/- amifostine
**Randomized. 243 patients with unresectable NSCLC (II-IIIB). Induction paclitaxel 225 mg/m2 and carboplatin AUC6 x2 cycles, then concurrent chemo-RT. RT 69.6/58 @ 1.2 GY BID with concurrent paclitaxel 50 mg/m2 and carboplatin AUC2. During chemo-RT Arm 1) placebo vs. Arm 2) amifostine 500 mg IV (72% received it per protocol)
**'''2005''' PMID 15800308 -- &quot;Randomized trial of amifostine in locally advanced non-small-cell lung cancer patients receiving chemotherapy and hyperfractionated radiation: radiation therapy oncology group trial 98-01.&quot; (Movsas B, J Clin Oncol. 2005 Apr 1;23(10):2145-54.)
***Outcome: Grade 3+ acute esophagitis AM 30% vs no AM 34% (NS); patient reported dysphagia  significantly better with AM (p=0.02). But, AM higher acute nausea (SS), vomiting (SS), CV toxicity (SS), and infection/neutropenia (SS). No difference in QOL
***Survival: AM 17.3 months vs. no AM 17.9 months (NS)
***Conclusion: Amifostine did not significantly reduce grade 3+ esophagitis, though patient self-assessment suggested an advantage
**'''2009''' PMID 19858383 -- &quot;Quality of Life Supersedes the Classic Prognosticators for Long-Term Survival in Locally Advanced Non-Small-Cell Lung Cancer: An Analysis of RTOG 9801.&quot; (Movsas B, J Clin Oncol. 2009 Oct 26. [Epub ahead of print])
***239 patients, 91% baseline QOL score. Multivariate analysis for OS: KPS, stage, sex, age, race, marital status, histology, location, Hgb, tobacco, amifostine, QoL scores (QLQ-C30, LC-13). Median F/U 5 years if alive, 17 months for all
***Outcome: On multivariate analysis, only baseline global QoL score was prognostic for survival; no other variables were significant. Patients with QoL score &lt;67 (median value) had 70% higher rate of death (SS); 10-point increase in QoL corresponded to 10% decrease in hazard of death. Both physical functioning (QLQ-30) and dyspnea (LC-13) were independently predictive for OS on univariate analysis
***Conclusion: Quality of life score replaced all known prognostic factors as sole predictor for long-term survival

===Metoclopramide===
*'''Institute for Cancer Research, Oslo''' (1995-1998) -- observation vs metoclopramide
**'''2010''' PMID 20165821 -- &quot;CT Density in Lung Cancer Patients After Radiotherapy Sensitized by Metoclopramide : A Subgroup Analysis of a Randomized Trial.&quot; (Dale E, Strahlenther Onkol. 2010 Feb 22. [Epub ahead of print])
**Randomized. ''Trial stopped prematurely due to financial difficulties.'' 30 patients enrolled, 16 analyzable, NSCLC stage IIIA/IIIB. RT 60/33. Arm 1) observation vs Arm 2) concurrent metoclopramide 2mg/kg TIW. Analysis of CT density
***Outcome: Lung density increased with dose (SS). Patients on metoclopramide less increase in tissue density (SS)
***Conclusion: Metoclopramide and large radiation dose seemed to protect against fibrosis development

==Reviews and Guidelines==
*ASCO 2003 - PMID 14691125 &amp;mdash; &quot;American Society of Clinical Oncology treatment of unresectable non-small-cell lung cancer guideline: update 2003.&quot; Pfister DG et al. J Clin Oncol. 2004 Jan 15;22(2):330-53.

==External links==
*[https://www.astro.org/uploadedFiles/Affiliates/ARRO/Resident_Resources/Educational_Resources/Case_Vingettes/NSCLCIIIB.pdf ARRO Case- Locally Advanced NSCLC]
*[http://www.medscape.com/viewarticle/502497_21 Medscape.com] '''(FREE, but requires registration)''' &amp;mdash; Audio presentation with slides - Mark Socinski, M.D. - &quot;Therapeutic Progress in Locally Advanced NSCLC&quot; (April 2005)</text>
      <sha1>0uvx5o9lqu7ihz8q419svk3ra24jyqf</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Language Features/Database</title>
    <ns>0</ns>
    <id>39888</id>
    <revision>
      <id>2671521</id>
      <parentid>2671517</parentid>
      <timestamp>2014-06-09T00:21:26Z</timestamp>
      <contributor>
        <ip>88.182.128.65</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">REBOL/Command, Rebol Technologies enterprise product, is the only version that comes with database abilities out of the box.  This includes support for Oracle, ODBC, and MySql.  It is the stated intention of Rebol Technologies to release the source code for the database protocols, but in the meantime third party developers have written interfaces for the free REBOL/Core to some of the more popular database products.

In many instances, the database adaptor has been written as a REBOL protocol, and access to the database is via a virtual port.  Database queries are then inserted ( sent ) into the port, and results are retrieved by reading from the port.


== Berkeley DB ==

[http://www.cs.unm.edu/~whip/  REBOL Berkeley DB interface]

== DyBase ==

[http://www.garret.ru/dybase.html DyBase download]

== MySQL ==
[http://softinnov.org/rebol/mysql.shtml MySQL database interface] - a scheme for /Core that will allow to connect to a MySQL database server, send queries and retrieve resulting recordsets. This driver is 100% written in REBOL and doesn't require any additional library (like libmysql). Open-source : BSD-like license.

[https://github.com/kronwiz/r3-mysql Rebol3 MySQL]

== Oracle ==

== ODBC ==

=== Firebird ===

=== Interbase ===

== PostgreSQL ==
[http://softinnov.org/rebol/pgsql.shtml PostgreSQL interface] - a scheme for /Core that will allow you to connect to a PostgreSQL  database server, send queries and retrieve resulting recordsets. This driver is 100% written in REBOL and doesn't require any additional library. It works with all REBOL products (/View, /Pro, /Command, /Link,...) and on all platforms supported by REBOL ! You only need one file to make it work and its size is less 20Kb! Open-source : BSD-like license.

== RebDB ==

[http://www.dobeash.com/rebdb.html RebDB] is a small but highly efficient pseudo-relational DBMS written entirely in REBOL/Base syntax, meaning that it will run on any platform that REBOL/Core runs on. Open-source : BSD-like license.

== SQL-Protocol ==

[http://www.rebol.org/cgi-bin/cgiwrap/rebol/documentation.r?script=sql-protocol.r SQL-Protocol] is also a small but efficient RDBMS written entirely in REBOL and run on any platform that REBOL/Core runs on. SQL-Protocol use an SQL like dialect and allows you to make JOINs in your query. Moreover, SQL-Protocol can use text databases compatible with the Microsoft OBDC text driver and allows you to share data between the Rebol and the Microsoft world. License: public domain.

==SQLite==
[http://www.dobeash.com/sqlite.html SQLite database interface] - a simplified wrapper to the SQLite library. Usable in freeware interpreter since version 2.7.6. Open source: BSD-like license.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]

==Redis==

[https://github.com/rebolek/prot-redis Rebol3 Redis]</text>
      <sha1>2itdghiex0rqphi4p5nzzj7nvxnft9f</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/NSCLC/Early Stage Inoperable</title>
    <ns>0</ns>
    <id>39889</id>
    <revision>
      <id>3006845</id>
      <parentid>3006838</parentid>
      <timestamp>2015-10-14T13:04:27Z</timestamp>
      <contributor>
        <username>Onlinelli</username>
        <id>2724458</id>
      </contributor>
      <minor />
      <comment>/* Published Evidence */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/Lung/NSCLC:TOC}}


&lt;big&gt;'''Early Stage Inoperable NSCLC'''&lt;/big&gt;


==Upstaging==
*Patients treated with RT are clinically staged
*Approximately 25% of patients with clinical Stage I are pathologically higher Stage
*Evaluation of PET for mediastinal LN staging is ongoing


*'''CALGB 9761''' PMID 15829324 -- &quot;Poor correspondence between clinical and pathologic staging in stage I non-small cell lung cancer: results from CALGB 9761, a prospective trial.&quot; (D'Cunha J, Lung Cancer. 2005 May;48(2):241-6. Epub 2005 Jan 4.)
**Prospective. 502 patients with suspected or biopsy-proven NSCLC, clinical Stage I (T1-2N0) by CT or mediastinoscopy
**Outcome: In biopsy proven NSCLC, pathologic Stage I 72%, pII 14%, pIII 13%, pIV 1%
**Conclusion: Poor predictive value of current clinical staging techniques

==No treatment==
*Stage I-II patients, who were not treated with surgery, RT or chemotherapy have median OS ~1 year and 5-year OS ~10%
*Their 5-year lung cancer disease specific survival is ~25% for Stage IA and ~10% for Stage IB, suggesting that vast majority die of their cancer, even though they typically have severe comorbidities that preclude surgery (median 5-year OS for patients with severe COPD is ~40%)
*Even patients who are surgical candidates, but refuse surgery, have poor outcomes. Their median OS ~1.2 years, and 5-year cancer specific survival is ~20%


*'''California Cancer Registry; 2007''' (1989-2003) PMID 17505036 -- &quot;Natural history of stage I non-small cell lung cancer: implications for early detection.&quot; (Raz DJ, Chest. 2007 Jul;132(1):193-9. Epub 2007 May 15.)
**Registry study. 19,702 patients with Stage I NSCLC, 1432 did not undergo surgery, chemotherapy or RT (Stage IA 40%, Stage IB 60%). Surgery refused in 32%
**Outcome: Median OS 9 months, Stage IA 13 months, Stage IB 8 months. 5-year OS 7%, Stage IA 9%, Stage IB 5%. Median lung CSS Stage IA 2.1 years, Stage IB 10 months. 5-year lung CSS Stage IA 23%, Stage IB 12%.
**&quot;Refused&quot; subgroup analysis: median OS 1.2 years, 5-year OS 6%; median CSS 1.7 years, 5-year CSS 22%. 
**Conclusion: Long-term survival with untreated Stage I NSCLC is uncommon, and vast majority die of lung cancer. Therapy shouldn't be delayed even in patients with small lung cancers

*'''SEER data; 2005''' (1988-2001) PMID 16162744 -- &quot;Radiation therapy for the treatment of unresected stage I-II non-small cell lung cancer.&quot; (Wisnivesky JP, Chest. 2005 Sep;128(3):1461-7.)
**Population analysis. 4,357 patients with Stage I-II, who did not undergo surgery. Stage I 88%, Stage II 12%. RT delivered in 63%, no RT in 27% (chemotherapy not tracked).
**Outcome: 75% died from cancer. On multivariate analysis, RT significantly associated with improved lung cancer survival
***Stage I: median OS RT 1.7 years vs. no RT 1.2; 5-year OS 15% vs. 14% (NS)
***Stage II: median OS RT 1.2 years vs. no RT 9 months; 5-year OS 11% vs. 10% (NS)
**Conclusion: RT is associated with improved survival in unresected Stage I-II NSCLC, benefit 5-7 months. RT not curative, since 5-year OS same

*'''Japan National Chest Hospital Study Group; 2002''' (1982-1991) PMID 11891035 -- &quot;Prognosis of non-surgically treated, clinical stage I lung cancer patients in Japan.&quot; (Motohiro A, Lung Cancer. 2002 Apr;36(1):65-9.)
**Retrospective. 799 patients with clinical Stage I lung cancer, not treated with surgery (reason not stated).
**Outcome: 5-year OS 17%, 10-year OS 7%
**Conclusion: There are long-term survivors in non-surgically treated stage I, but the rate is low

*'''Indiana; 2002''' (1994-1999) PMID 11948046 -- &quot;Observation-only management of early stage, medically inoperable lung cancer: poor outcome.&quot; (McGarry RC, Chest. 2002 Apr;121(4):1155-8.)
**Retrospective. 128 patients with Stage I and II NSCLC. Surgery 34%, (mostly palliative) RT 28%, no cancer treatment 38%. RT delivered via 20 different fractionation schemes, ranging from 20/10 to 70.5/39, some BID.
**Outcome: Median OS surgery 3.8 years vs. RT 1.7 years vs. no treatment 1.2 years. By retrospective RT intent: curative 1.7 years vs. palliative 1.3 years (small numbers, NS). Cancer as cause of death: RT group 43%, no treatment 53%, surgery not specified.
**Conclusion: Untreated lung cancer has a poor outcome

*'''Split; 1994''' (Croatia)(1980-1987) PMID 7988203 &amp;mdash; &quot;Survival analysis of untreated patients with non-small-cell lung cancer.&quot; (Vrdoljak E, Chest. 1994 Dec;106(6):1797-800.)
**Retrospective. 130 patients not treated with anti-cancer therapy
**Outcome: Median OS T2N0 17 months, T2N1 11 months, T2N2 10 months, other groups &lt;8 months. Overall median OS 9 months. No patient (including T2N0) survived &gt;3 years
**Subgroup analysis: Stage I (T2N0) better survival, all other stages comparable (worse) survival
**Conclusion: Lymph node involvement crucial factor in determining length of survival


'''''COPD Outcome Comparison'''''
*'''Colorado; 1980''' (1966-1968) PMID 7357926 -- &quot;Ten year follow-up of a comprehensive rehabilitation program for severe COPD.&quot; (Sahn SA, Chest. 1980 Feb;77(2 Suppl):311-4.)
**Retrospective. 182 patients, severe COPD (clinical dx of emphysema/chronic bronchitis, FEV1 &lt;50% predicted, symptoms interfering with ADLs), accepted into Colorado Rehabilitation Program. Mean age 61 years. Mean FEV1 0.9 L, mean FVC 2.8 L
**Outcome: 5-year OS 41%, 10-year OS 17%; compared with life tables for white men same age 5-year OS 86%, 10-year OS 69% (SS)

==Conventional (2D/3D) RT==
===Overview===
*Outcomes are better than no treatment, but quite poor
**Median OS: ~1.5 years
**5-year OS: ~20% (range 15-30%) 
**Based on SEER data analysis, RT offers 5-7 month median survival benefit. Given that there is no difference in 5-year OS with or without RT, conventional RT does not result in cure but only delays progression
*These outcomes are considerably worse than surgery (Stage I 60-80%, Stage II 40-50%), but the patients have significantly worse medical comorbidities
*3D conformal RT improved outcomes, despite comparable dose, in a retrospective study from MD Anderson
*Traditionally curative doses using 2D/3D planning were 60-66 Gy (without heterogeneity correction)
*3D-CRT with dose &gt;80 Gy (MSKCC data) suggests median OS ~3.5 years and 5-year OS ~35%

===Historical Outcomes===
*'''MD Anderson; 2006''' (1978-2003) PMID 16904517 -- &quot;Comparison of outcomes for patients with medically inoperable Stage I non-small-cell lung cancer treated with two-dimensional vs. three-dimensional radiotherapy.&quot; (Fang LC, Int J Radiat Oncol Biol Phys. 2006 Sep 1;66(1):108-16.)
**Retrospective. 200 patients with Stage I NSCLC, treated with RT alone. 2D planning (n=115), or 3D planning (n=85). Median RT dose 64 Gy vs. 66 Gy (NS). Age 69 vs 73 (SS). Median F/U 1.7 years vs. 1.6 years (NS).
**Outcome: 5-year OS 2D 10% vs. 3D 36% (SS); 5-year DSS 29% vs. 68% (SS). 5-year LC 34% vs. 70% (SS).
**Negative predictors: male, age &gt;=70, weight loss &gt;=5%, tumor &gt;=4 cm
**Conclusion: 3D conformal RT improves outcomes compared with 2D treatment

*'''SEER data; 2005''' (1988-2001) PMID 16162744 -- &quot;Radiation therapy for the treatment of unresected stage I-II non-small cell lung cancer.&quot; (Wisnivesky JP, Chest. 2005 Sep;128(3):1461-7.)
**Population analysis. 4,357 patients with Stage I-II, who did not undergo surgery. Stage I 88%, Stage II 12%. RT delivered in 63%, no RT in 27% (chemotherapy not tracked).
**Outcome: 75% died from cancer. On multivariate analysis, RT significantly associated with improved lung cancer survival
***Stage I: median OS RT 1.7 years vs. no RT 1.2; 5-year OS 15% vs. 14% (NS)
***Stage II: median OS RT 1.2 years vs. no RT 9 months; 5-year OS 11% vs. 10% (NS)
**Conclusion: RT is associated with improved survival in unresected Stage I-II NSCLC, benefit 5-7 months. RT not curative, since 5-year OS same

*'''Karolinska; 2003''' PMID 12826306 -- &quot;The role of radiotherapy in treatment of stage I non-small cell lung cancer.&quot; (Qiao X, Lung Cancer. 2003 Jul;41(1):1-11.)
**Literature review. 18 studies published 1988-2000. 
**Outcome: LR most common reason for failure (median 40%, range 6-70%). Regional recurrence low (0-3%). 5-year OS 21%; DSS 25%
**Conclusion: Dose escalation should be the focus to improve local control and survival

*'''Munich; 2003''' PMID 14508859 -- &quot;Radiation therapy alone in early stage non-small cell lung cancer.&quot; (Zimmermann FB, Semin Surg Oncol. 2003;21(2):91-7.)
**Literature review. Median OS up to 2.5 years and 5-year OS up to 42%. Dose &gt;=65 Gy with standard fractionation necessary for long-term control. Elective nodal irradiation controversial
**Conclusion: RT effective treatment modality in medically inoperable patients with early stage NSCLC

*'''Tubingen; 2002''' PMID 12182981 -- &quot;Radiotherapy alone in technically operable, medically inoperable, early-stage (I/II) non-small-cell lung cancer.&quot; (Jeremic B, Int J Radiat Oncol Biol Phys. 2002 Sep 1;54(1):119-130.)
**Literature review. 26 studies published 1963-2000. 
**Outcome: Median OS &gt;30 months, 5-year OS 30% achieved. Dose &gt;65 Gy necessary. Local failure predominant (average 31%); elective nodal RT controversial (initial nodal failure 2%), average distant failure 17%
**Conclusion: High-dose curative RT (dose 65-70 Gy) effective treatment modality in medically inoperable NSCLC. 

*'''Indiana; 2002''' (1994-1999) PMID 11948046 -- &quot;Observation-only management of early stage, medically inoperable lung cancer: poor outcome.&quot; (McGarry RC, Chest. 2002 Apr;121(4):1155-8.)
**Retrospective. 128 patients with Stage I and II NSCLC. Surgery 34%, (mostly palliative) RT 28%, no cancer treatment 38%. RT delivered via 20 different fractionation schemes, ranging from 20/10 to 70.5/39, some BID.
**Outcome: Median OS surgery 3.8 years vs. RT 1.7 years vs. no treatment 1.2 years. By retrospective RT intent: curative 1.7 years vs. palliative 1.3 years (small numbers, NS). Cancer as cause of death: RT group 43%, no treatment 53%, surgery not specified.
**Conclusion: Untreated lung cancer has a poor outcome

===Dose escalation===	
*'''Memorial Sloan Kettering''' 
**'''2007''' PMID 17762758 -- &quot;High-dose radiotherapy for the treatment of inoperable non-small cell lung cancer.&quot; (Sura S, Cancer J. 2007 Jul-Aug;13(4):238-42.)
***Retrospective. 82 patients, inoperable NSCLC Stage I-IIIB (I-II n=55; III n=27). Dose &gt;= 80 Gy using 3D-CRT with sequential chemotherapy
***5-year Outcome: 
****Stage I/II LC 67%, OS 36%, median OS 3.4 years
****Stage III LC 39%, OS 31%, median OS 2.7 years
***Conclusion: OS and LC comparable with other dose-escalation studies
**'''Phase I, 2005''' (1991-2003) PMID 15830346 -- &quot;Results of a phase I dose-escalation study using three-dimensional conformal radiotherapy in the treatment of inoperable nonsmall cell lung carcinoma.&quot; (Rosenzweig KE, Cancer. 2005 May 15;103(10):2118-27.)
***Phase I. 104 patients, inoperable. Stage I-II 28%, Stage IIIA 33%, Stage IIIB 32%, Recurrent 6%. 3D-CRT (inhomogeneity corrected) 70.2/39, 75.6/42, 81.0/45, 84.0/42, 90.0/45 Gy. NTCP planning used.
***Maximum tolerated dose: 84.0 Gy in 2 Gy/fx. Overall survival significantly increased if &gt;= 80 Gy
***Toxicity: Unacceptable pulmonary toxicity at 90.0 Gy; 84 Gy level: 5% Grade 3-4; 90 Gy level: 29% Grade 3-4, 14% Grade 5
***Conclusion: MTD of 3D-CRT with NTCP constraint of 25% was 84.0 Gy, with suggestion of improved survival

*'''[[Radiation Oncology/RTOG Trials/0117|RTOG 0117]]''' (closed) -- dose escalation with concurrent chemotherapy
**Phase I/II. Stage I-IIIB NSCLC. RT + concurrent paclitaxel 50 mg/m2 + carboplatin AUC 2. Arm I 75.25/35 (8 patients) -&gt; dose limiting toxicity (acute Grade 5 pneumonitis, acute Grade 3 pneumonitis; also late Grade 3 pneumonitis and Grade 4 pain) -&gt; de-escalated to 74/37 (Arm II; 9 pts) + concurrent carbo/taxol. Phase II accrued at 74/37 dose level.
**Rx at ICRU pt; PTV must be covered by 93% isodose. Calculations without heterogeneity corrections.
**'''2005''' [http://meeting.ascopubs.org/cgi/content/abstract/23/16_suppl/7063 ASCO Abstract] 
***Conclusion: MTD 74/37 using 3D-CRT + concurrent paclitaxel/carboplatin. Phase II component not yet reported.
**'''2010''' PMID 20368547 -- &quot;Primary Analysis of the Phase II Component of a Phase I/II Dose Intensification Study Using Three-Dimensional Conformal Radiation Therapy and Concurrent Chemotherapy for Patients With Inoperable Non–Small-Cell Lung Cancer: RTOG 0117.&quot; (Bradley JD, J Clin Oncol. 2010 May 10;28(14):2475-80.)
***Total of 55 pts (53 evaluable) treated to 74/37 dose level in Phase I (9) and Phase II (46) portions of study. Median f/u 19.3 months. Median survival 25.9 months. 1 yr OS 75%. For Stage III pts (n=44), MS 21.6 months and PFS 10.8 months, 1 yr OS 72%. 
***Conclusion: encouraging results for 74 Gy dose + chemo.
**'''2010''' PMID 20457350 -- &quot;A phase I/II radiation dose escalation study with concurrent chemotherapy for patients with inoperable stages I to III non-small-cell lung cancer: phase I results of RTOG 0117.&quot; (Bradley JD, Int J Radiat Oncol Biol Phys. 2010 Jun 1;77(2):367-72.)
***Conclusion: MTD 74 Gy in 37 fractions using concurrent carbo/taxol.

*'''RTOG 93-11''' (1995-2001) -- dose escalation
**Phase I/II dose escalation. 176 patients. Stage I-III NSCLC, SCV LN+ excluded ( Prior chemotherapy allowed, concurrent chemotherapy not allowed. 3D treatement planning . GTV = primary tumor and enlarged LN. No elective nodal irradiation. PTV = GTV + 1 cm minimum; verified on fluoroscopy because of breathing motion. Dose prescribed to ICRU reference point within GTV, 93% isodose line to cover PTV, maximum PTV dose &lt;=107%, no heterogeneity correction. Patients grouped based on V20 value using 2.15 Gy/fx:
***Group 1 (V20 &lt;25%): 70.9/33 -&gt; 77.4/36 -&gt; 83.8/39 -&gt; 90.3/42 (Stage I 53%, Stage III 38%)
***Group 2 (V20 25-36%): 70.9/33 -&gt; 77.4/36 -&gt; 83.8/39 (Stage I 21%, Stage III 75%) (''accrual stopped after 77.4 Gy due to opening of RTOG 0117'')
***Group 3 (V20 &gt;36%): 64.5/30 -&gt; 70.9/33 -&gt; 77.4/36 (''accrual stopped after 2 patients'')
**'''2005''' PMID 15667949 &amp;mdash; &quot;Toxicity and outcome results of RTOG 9311: a phase I-II dose-escalation study using three-dimensional conformal radiotherapy in patients with inoperable non-small-cell lung carcinoma.&quot; (Bradley J, Int J Radiat Oncol Biol Phys. 2005 Feb 1;61(2):318-28.) Minimum median F/U 13.4 months	 
***Acute toxicity: minimal. Group 1 had 9% Grade 3 pneumonitis at 90.3 Gy; Group 2 had 8% Grade 3 pneumonitis at 77.4 Gy. '''Acute dose-limiting toxicity not reached'''
***Late toxicity. Predictors for pulmonary toxicity: mean lung dose, V20
****'''Group 1''' had 13% Grade 3-5 lung and 6% Grade 3-5 esophageal toxicity (1 death of hemoptysis, 1 death of tracheoesophageal fistula) at 90.3 Gy; tolerable otherwise. '''Late dose-limiting toxicity at 90.3 Gy level.''' 
****'''Group 2''' had 16% Grade 3-4 lung toxicity, and 4% esophagus toxicity. '''Late dose-limiting toxicity not reached.'''
***Outcome: 2-year LR 50-78% (but small individual group sizes); LR sole site 18%, component 38%. Elective nodal failure &lt;10%
***Conclusion: For Group 1 (V20 &lt;25%), 83.8 Gy safe; for Group 2 (V20 25-36%), 77.4 Gy safe using 2.15 Gy/fx

===Hypofractionation===
*'''CALGB 39904; 2009''' (2000-2005) PMID 19933904 -- &quot;Phase I Study of Accelerated Conformal Radiotherapy for Stage I Non-Small-Cell Lung Cancer in Patients With Pulmonary Dysfunction: CALGB 39904.&quot; (Bogart JA, J Clin Oncol. 2009 Nov 23. [Epub ahead of print])
**Phase I. 39 patients, medically inoperable Stage I (&lt;4 cm). Eligibility: FEV1 &lt;40%, DLCO &lt;50%, PCO &gt;45 mmHg, VO2max &lt;15 mL, or O2 dependent (28%). 3D-CRT, nominal dose 70 Gy, accelerated stepwise: 70/29 (@2.41) -&gt; 70/26 (@2.69) -&gt; 70/23 (@3.04) -&gt; 70/20 (@3.5) -&gt; 70/17 (@4.11). Median age 75, 28% on supplemental O2. Median F/U 4.4 years
**Outcome: MTD not defined. LC 92%, distant failure rate 26%, median OS 3.2 years.
**Toxicity: No Grade 3+ late toxicity
**Conclusion: Accelerated 3D-CRT well tolerated, with less apparent severe toxicity compared with SBRT

*'''Amsterdam; 1996''' (The Netherlands)(1988-1993) PMID 8961366 -- &quot;Limited field irradiation in early stage (T1-2N0) non-small cell lung cancer.&quot; (Slotman BJ, Radiother Oncol. 1996 Oct;41(1):41-4.)
**Retrospective. 31 patients with operable T1-2N0 NSCLC. RT 48/12 to 'postage stamp' field, no mediastinum/hilum
**Outcome: 3-year OS 42%; DSS 76%. LF 6%
**Conclusion: Limited 'postage stamp' irradiation effective alternative to surgery

==Stereotactic Body Radiation Therapy (SBRT)==
*SBRT is an area under active research. Dose schedules have not yet been established
*Japanese data suggests that BED10 &gt;100 Gy results in superior local control and overall survival
*Indiana University dose escalation didn't reach MTD at 60/3 (BED10 = 180 Gy) for Stage IA tumors, and reached MTD at 72/3 (BED10 = 245 Gy); however, some toxicity was experienced at lower doses with central tumors. It is not clear what is the appropriate ablative dose
*Several studies have now reported 5-year OS, ranging from 30% to 83%
*[https://www.astro.org/uploadedFiles/Main_Site/Clinical_Practice/Best_Practices/LungSBRT.pdf ASTRO Emerging Technology Committee Report (2010)]


===Ongoing Trials===
*''Operable''
**'''Dutch ROSEL''' - [http://clinicaltrials.gov/show/NCT00687986 Trial Info] [http://www.ro-journal.com/content/4/1/1 Overview] - Phase III.  Operable Stage T1N0. Surgery vs SBRT 60/3 or 60/5. Terminated secondary to slow accrual.
**'''Cyberknife STARS''' - [http://www.cancer.gov/search/ViewClinicalTrials.aspx?cdrid=635570&amp;version=HealthProfessional&amp;protocolsearchid=7202833 Trial Info] - Phase III. Operable Stage I &lt;4 cm. Surgery vs SBRT 60/3 or 60/4. Terminated secondary to slow accrual.
**'''RTOG 0618''' - [http://www.rtog.org/ClinicalTrials/ProtocolTable/StudyDetails.aspx?action=openFile&amp;FileID=4650 Protocol] - Phase II. Operable Stage I. Dose 60/3
**'''JCOG 0403''' - [http://atc.wustl.edu/protocols/jcog/0403/0403.html Protocol] - Phase II. Operable Stage T1N0

*''Inoperable''
**'''TROG 09.02''' - [http://www.cancer.gov/search/ViewClinicalTrials.aspx?cdrid=660011&amp;version=HealthProfessional&amp;protocolsearchid=7202833 Trial Info] - Phase III. 3D-CRT 60/30-66/33 vs SBRT 54/3
**'''RTOG 0915''' - [http://www.rtog.org/ClinicalTrials/ProtocolTable/StudyDetails.aspx?action=openFile&amp;FileID=4673 Protocol] - Phase II. Inoperable. Dose 34/1 vs 48/4
**'''Scandinavian SPACE''' - [http://www.nlcg.no/uploads/space_060717.doc Protocol] - Phase II randomized. 3D-CRT 70/35 vs. SBRT 45/3
**'''RTOG 0813''' - [http://www.rtog.org/ClinicalTrials/ProtocolTable/StudyDetails.aspx?action=openFile&amp;FileID=9067 Protocol] - Phase II. Inoperable. Dose escalation 50/5 -&gt; 60/5

===Published Evidence===


*'''Pooled analysis of STARS (MD Anderson CC) and ROSEL (Dutch) trials; 2015''' (2008-2013)) PMID 25981812 -- &quot;Stereotactic ablative radiotherapy versus lobectomy for operable stage I non-small-cell lung cancer: a pooled analysis of two randomised trials&quot; (Chang J et al., Lancet Oncology. 2015 Jun;16(6):630-7)
**Pooled analysis of 2 Phase III studies that both did not meet accrural goals. 58 patients, operable T1-T2a N0 M0 NSCLC, &lt;4 cm diameter, 1:1 randomization SBRT vs surgery. STARS: SBRT 54/3 Gy peripheral, 50/4 Gy central lesions over 5 days; ROSEL: SBRT 54/3 Gy peripheral (5 -8 days), 60/5 Gy  central lesions (10-14 days);  .  Median F/U 3.4 years
**Outcome: 3-year OAS 95% (SBRT) vs 79% (Surgery) (p&lt;0.05)
**Toxicity:  SBRT:  Grade 3 in 10%, no grade 4/5; Surgery: grade 3/4 44%; 1pt Grade 5
**Conclusion: SBRT is better tolerated than surgery, SBRT might lead to better OAS; SBRT could be an option for operable Stage I NSCLC.

*'''RTOG 0236; 2010''' (2004-2006) PMID 20233825 -- &quot;Stereotactic body radiation therapy for inoperable early stage lung cancer.&quot; (Timmerman R, JAMA.  2010 Mar 17;303(11):1070-6.)
**Phase II. 55 patients, peripheral T1-T2N0 NSCLC, &lt;5 cm diameter, not surgical candidate. SBRT 54/3 over 1.5-2 weeks. Median F/U 2.9 years
**Outcome: 3-year tumor control 98% (1 primary tumor failure); 3-year local (tumor+lobe) control 91%; 3-year loco-regional control 87%; 3-year DM 22%. Median OS 48 months
**Toxicity: Grade 3 in 13%, Grade 4 in 4%, no Grade 5
**Conclusion: Patients with inoperable NSCLC have high rates of local tumor control and moderate treatment-related morbidity

*'''Indiana University'''
**'''Phase II; 2009''' PMID 19251380 -- &quot;Stereotactic body radiation therapy for early-stage non-small-cell lung carcinoma: four-year results of a prospective phase II study.&quot; (Fakiris AJ, Int J Radiat Oncol Biol Phys. 2009 Nov 1;75(3):677-82. Epub 2009 Feb 27.)
***Phase II. 70 medically inoperable patients, cT1 (n=34) or cT2 (n=36), diameter &lt;= 7 cm, biopsy proven NSCLC. Dose 60-66 Gy to 80% isodose in 3 fractions. Median F/U 4.2 years
***Outcome: 3-year LC 88%, nodal failure 9%, DM 13%. 3-year OS 43%, CSS 82%. No difference in outcome between T1 and T2, by tumor volume, or by peripheral vs central location
***Toxicity: Grade 3+ toxicity in peripheral 10% vs. central 27% (p=0.09)
***Conclusion: SBRT results in high local control in medically inoperable Stage I patients
**'''Phase I/II; 2007''' PMID 17353064 -- &quot;FDG-PET and stereotactic body radiotherapy (SBRT) for stage I non-small-cell lung cancer.&quot; (Hoopes DJ,  Lung Cancer. 2007 May;56(2):229-34. Epub 2007 Mar 13.)
***Phase I and II trials. 58 patients, Stage I NSCLC, inoperable. SBRT dose 24-72 Gy in 3 fractions. Pre-SBRT PET in 57. Post-SBRT PET performed in 28 patients, typically upon concern for recurrence. Min F/U 2 years, median F/U 3.5 years
***Outcome: 3-year OS 49%; 3-year LC 75%. Isolated LN failure 10%, overall LN failure 25%
***PET: Pre-SBRT PET didn't predict for OS or LC. However, 14% (4/28) had moderate SUV activity, but no evidence of disease recurrence
***Conclusion: Isolated nodal recurrence uncommon; moderate PET activity may persist 2 years after treatment, without definitive evidence of recurrence
**'''Phase II.''' 70 patients. Medically inoperable. Clinical T1N0 treated with SBRT 60/3; clinical T2N0 (&lt;=7 cm) treated with 66/3.
***'''2006''' PMID 17050868 -- &quot;Excessive toxicity when treating central tumors in a phase II study of stereotactic body radiation therapy for medically inoperable early-stage lung cancer.&quot; (Timmerman R, J Clin Oncol. 2006 Oct 20;24(30):4833-9.) Median F/U 17 months
****Outcome: 2-year LC 95%. Median OS 2.7 years, 2-year OS 55%. 
****Toxicity: Grade 3-5 in 20%; peripheral tumors 17% vs. central tumors 46%. Median time-to-toxicity 10 months. 6 deaths (4 pneumonia, 1 pericardial effusion, 1 local recurrence next to carina then hemoptysis)
****Conclusion: High rate of local control, but also some late toxicity. This regimen should not be used for tumors near central airways (&lt;2 cm) due to excessive toxicity
**'''Phase I.''' (2000-2003) 47 patients, clinical Stage IA and IB (escalated separately), tumor size &lt;=7 cm, NSCLC. Operable, but not surgical candidates. Dose escalation: 24/3 -&gt; 30/3 -&gt; 36/3 -&gt; 42/3 -&gt; 48/3 -&gt; 54/3 -&gt; 60/3. CTV = GTV. PTV = GTV + 0.5 cm radial and 1.0 cranio-caudal. Dose prescribed to 80% isodose.
***'''2003''' PMID 14605072 -- &quot;Extracranial stereotactic radioablation: results of a phase I study in medically inoperable stage I non-small cell lung cancer.&quot; (Timmerman R, Chest. 2003 Nov;124(5):1946-55.) Median F/U 15 months
****Outcome: Both IA and IB reached 60/3; MTD yet to be reached. LF 16% (all dose &lt;=48/3)
****Toxicity: 1 Grade 3 pneumonitis, 1 Grade 3 hypoxia
****Conclusion: Very high RT dose tolerated
***'''2005''' PMID 16115740 -- &quot;Stereotactic body radiation therapy of early-stage non-small-cell lung carcinoma: Phase I study.&quot; (McGarry RC, Int J Radiat Oncol Biol Phys. 2005 Nov 15;63(4):1010-5. Epub 2005 Aug 22.)
****Outcome: Stage IA - MTD not reached (max=60/3). Stage IB (and tumors &gt;5 cm) - MTD reached at 66/3. Local failure: 4/19 T1, 6/28 T2 patients, but only 1 failure at higher doses
****Toxicity: Stage IB - At 72/3 level, 3/5 experienced Grade 3+ toxicity (pneumonitis x2, tracheal necrosis x1)
****Conclusion: SBRT safe, effective. Excellent local control at higher doses. MTD reached for larger tumors

*'''Cleveland Clinic; 2009''' (2004-2006) PMID 19765913 -- &quot;Intensity-Modulated Radiotherapy-Based Stereotactic Body Radiotherapy for Medically Inoperable Early-Stage Lung Cancer: Excellent Local Control.&quot; (Videtic GM, Int J Radiat Oncol Biol Phys. 2009 Sep 16. [Epub ahead of print])
**Retrospective. 26 patients with 28 lesions. T1 in 79%, T2 in 21%, no tissue diagnosis in 27%. SBRT IMRT 50/5 heterogeneity corrected. PTV = ITV + 3-5 mm. Median F/U 2.6 years
**Outcome: Actuarial 3-year LC 94%, 3-year OS 52%
**Toxicity: Acute Grade 3 dyspnea in 1 patient (4%), late Grade 2 chest wall pain 1 patient (4%)
**Conclusion: SBRT excellent local control and favorable survival

*'''Scandinavian; 2009''' (2003-2005) PMID 19414667 -- &quot;Outcome in a prospective phase II trial of medically inoperable stage I non-small-cell lung cancer patients treated with stereotactic body radiotherapy.&quot; (Baumann P, J Clin Oncol. 2009 Jul 10;27(20):3290-6.)
**Phase II. 57 patients with medically inoperable Stage I NSCLC (T1 70%, T2 30%) treated in Sweden, Norway, Denmark. SBRT 45/3 prescribed at 67% isodose. Median tumor diameter 2.5 cm. CTV = GTV + 1-2 mm. PTV = CTV + 5-10 mm. Median F/U 3 years
**Outcome: 3-year PFS 52%; CSS 88%, OS 60%. No difference between T1 and T2. Local control 92%, regional relapse 5%, distant mets 16%
**Conclusion: SBRT is state-of-the-art treatment for medically inoperable Stage I NSCLC

*'''Japanese Society of Radiation Oncology''' (1995-2003) 
**'''2-years; 2004''' PMID 15378503 -- &quot;Stereotactic hypofractionated high-dose irradiation for stage I nonsmall cell lung carcinoma: clinical outcomes in 245 subjects in a Japanese multiinstitutional study.&quot; (Onishi H, Cancer. 2004 Oct 1;101(7):1623-31.)
***Retrospective. 245 patients with Stage I NSCLC (T1N0 n=155, T2N0 n=90), tumor diameter &lt; 6 cm, 65% inoperable/35% refused or chose RT. Hypofractionated SBRT (3-12 Gy dose/fx; 1-25 fractions; total dose 18-75 Gy; median BED10 108 Gy; BED10 range 57-180 Gy). Median F/U 2 years
***Outcome: LF 14%, LF if BED10 &lt;100 26% vs. BED10 &gt;100 8% (SS). 3-year OS 69% vs. 88% (SS)
***Toxicity: Grade 3 in 2%
***Conclusion: Hypofractionated SBRT with BED10 &lt;150 Gy feasible and beneficial; local control and survival better with BED10 &gt;=100
**'''3-years; 2007''' PMID 17603311 -- &quot;Hypofractionated stereotactic radiotherapy (HypoFXSRT) for stage I non-small cell lung cancer: updated results of 257 patients in a Japanese multi-institutional study.&quot; (Onishi H, J Thorac Oncol. 2007 Jul;2(7 Suppl 3):S94-100.)
***Retrospective. 275 patients, Stage I NSCLC (T1N0 n=164, T2N0 n=93). Hypofractionated SBRT, median BED10 = 111 Gy (57-180 Gy). Median F/U 3.2 years
***Outcome: LF 14%, LF if BED10 &lt;100 43% vs. BED10 &gt;100 8% (SS); 5-year OS 30% vs. 71% (SS)
***Operable: 5-year OS if BED10 &lt;100 30% vs. BED10 &gt;100 71% (SS)
***Toxicity: Grade 3 pulmonary 5%
***Conclusion: Hypofractionated SRT feasible for curative treatment of Stage I NSCLC; superior to conventional RT. Outcomes in operable patients are excellent

*'''Kyoto; 2005''' (Japan)(1998-2004) PMID 16169670 -- &quot;Clinical outcomes of a phase I/II study of 48 Gy of stereotactic body radiotherapy in 4 fractions for primary lung cancer using a stereotactic body frame.&quot; (Nagata Y, Int J Radiat Oncol Biol Phys. 2005 Dec 1;63(5):1427-31. Epub 2005 Sep 19.)
**Retrospective. 45 patients with Stage I NSCLC (T1N0 n=32, T2N0 n=13). RT 48/4 over 12 days. Median F/U 2.5 years
**Outcome: LC 98%; Stage IA 5-year DFS 72%, OS 83%. Stage IB 5-year DFS 71%, OS 72%
**Toxicity: No Grade 3+ toxicity; 4% Grade 2 pneumonitis treated with steroids
**Conclusion: Stereotactic RT useful for treatment of Stage I lung tumors

*'''Sahlgrenska University Hospital, Sweden; 2006''' (1998-2003) PMID 16213059 -- &quot;Stereotactic hypofractionated radiotherapy for stage I non-small cell lung cancer--mature results for medically inoperable patients.&quot; (Nyman J, Lung Cancer. 2006 Jan;51(1):97-103. Epub 2005 Oct 4.)
**Retrospective. 45 Patients with Stage I (18 T1N0, 27 T2N0). RT 45/3 during 1 week (BED10 = 112 Gy). Median F/U 3.6 years 
**Outcome: LR 20% (9/45); 5-year OS 30%
**Late toxicity: rib fracture 4%, atelectasis 7%
**Conclusion: Encouraging survival and relatively low toxicity. Randomized trial underway

*'''National Defense Medical College, Japan; 1998''' (1994-1997) PMID 9506350 -- &quot;Focal, high dose, and fractionated modified stereotactic radiation therapy for lung carcinoma patients: a preliminary experience.&quot; (Uematsu M, Cancer. 1998 Mar 15;82(6):1062-70.)
**Retrospective. 45 patients (23 primary and 43 metastatic lung carcinomas). RT 30-75 Gy in 5-15 fractions, prescribed to 80% isodose line, with/without conventional RT. Median F/U 11 months
**Outcome: LF 3%
**Toxicity: minimal
**Conclusion: Focal RT similar to cranial SRS possible for extracranial sites

===Elderly patients===
*'''VU University, The Netherlands; 2009''' PMID 19950125 -- &quot;Stage I nonsmall cell lung cancer in patients aged &gt;/=75 years: outcomes after stereotactic radiotherapy.&quot; (Haasbeek CJ, Cancer. 2009 Nov 30. [Epub ahead of print])
**Retrospective. 203 tumors in 193 patints (T1 118, T2 85), age &gt;=75, 80% inoperable 20% declined surgery. Median Charlson comorbidity score 4, severe COPD 25%. Risk-adapted SRT dose 60 Gy in 3 fractions (33%), 5 fractions (50%) or 8 fractions (17%)
**Outcome: OS 1-year 86%, 3-year 45% and correlated with performance score (SS) and lung function. 3-year LC 89%
**Toxicity: Late Grade 3+ in &lt;10% patients
**Conclusion: High LC rates, minimal toxicity, despite significant medical comorbidities

===Dose===
*There are currently multiple dose regimens available
*Initial dose-escalation at Indiana University established 20 Gy x3 fractions as a &quot;standard&quot; regimen in the U.S. for peripheral lesions. This was adopted by RTOG
*Commonly used Japanese regimen tends to be 12 Gy x4 fractions
*RTOG is now randomizing patients in a Phase II study between 34 Gy single fraction and the Japanese regimen of 12 Gy x4 fraction, to serve as an arm in a future Phase III between the current reference 20 Gy x3 fractions and the winner
*RTOG is also carrying out a dose-escalation protocol for central lesions starting at 10 Gy x5 fractions going to 12 Gy x5 fractions


*'''Colorado; 2009''' (1999-2005) PMID 1878678 -- &quot;Observation of a dose-control relationship for lung and liver tumors after stereotactic body radiation therapy.&quot; (McCammon R, Int J Radiat Oncol Biol Phys. 2009 Jan 1;73(1):112-8. Epub 2008 Sep 9.)
**Retrospective. 141 patients, 246 lesions with lung or liver tumors. SBRT in 3 fractions
**Outcome: 3-year LC if dose &lt;36/3 (&lt; 12 Gy/fx) 8% vs. 36/3-53.9/3 (12-17.9 Gy/fx) 59% vs. &gt;=54/3 (&gt;= 18 Gy/fx) 89%
**Toxicity: Grade 3+ in 6%
**Conclusion: Dose-control relationship exists, with excellent control rates at &gt;= 54 Gy in 3 fractions

*'''University of Virginia; 2007''' PMID 17513066 -- &quot;Dose as a function of lung volume and planned treatment volume in helical tomotherapy intensity-modulated radiation therapy-based stereotactic body radiation therapy for small lung tumors.&quot; (Baisden JM, Int J Radiat Oncol Biol Phys. 2007 Jul 15;68(4):1229-37. Epub 2007 May 21.)
**Treatment planning. 7 patients. Helical tomotherapy. Regression analysis of correlation of maximum acceptable dose to PTV and lung volume
**Outcome: Linear relationship between maximum dose, PTV, and lung volume. 
**Conclusion: Maximum dose can be predicted by PTV and lung volume

===Set Up===
*'''University of Toronto''' (2008-2009) -- abdominal compression vs Body fix immobilization
**Randomized. 24 patients, 25 lesions (16 upper lobe, 2 middle lobe, 7 lower lobe), medically inoperable Stage I NSCLC or pulmonary mets. All patients underwent 4D-CRT with free breathing, Bodyfix, and abdominal compression plate (ACP). After sim randomized to immobilization with Arm 1) Bodyfix or Arm 2) ACP. CBCT acquired before and after each treatment
**'''2010''' PMID 20189669 -- &quot;A comparison of two immobilization systems for stereotactic body radiation therapy of lung tumors.&quot; (Han K, Radiother Oncol. 2010 Feb 26. [Epub ahead of print])
***Outcome: Both Bodyfix and ACP reduced sup-inf (4.6 mm vs 4.0 mm vs 5.3 mm) and overall tumor motion (5.3 mm vs 4.7 mm vs 6.1 mm) compared to free-breathing (SS). ACP further reduced sup-inf (SS) and overall tumor motion (SS) compared to Bodyfix
***Toxicity: ACP faster to set up and more comfortable by patients (SS)
***Conclusion: Abdominal compression superior to Bodyfix in immobilization and patient comfort

==Proton Therapy==
*''Please see the [[Radiation_Oncology/Lung/NSCLC/Protons|NSCLC Protons]] page

==Primary RT Technique Comparison==
*'''Maastricht; 2009''' PMID 19733410 -- &quot;Comparison of the effectiveness of radiotherapy with photons, protons and carbon-ions for non-small cell lung cancer: A meta-analysis.&quot; (Grutters JP, Radiother Oncol. 2009 Sep 3. [Epub ahead of print])
**Meta-analysis. 41 studies (22 conventional, 11 SBRT, 5 proton, 3 carbon)
**Outcome: Pooled 5-year OS estimate conventional RT 19% vs. SBRT 42% vs. protons 40% vs. carbon ion 42% (NS for SBRT vs protons vs carbon). 5-year DSS 43% vs 63% vs 52% vs 64% (SBRT significantly better than conventional)
**Conclusion: Conventional RT outcome significantly worse than SBRT, protons, and carbon, though limited number of patients and limited follow-up


==RT and chemotherapy==
===Hyperfractionated RT + chemo===
*Jeremic (Yugoslavia), 2005 (1996-98) - PMID 16192579 &amp;mdash; &quot;Concurrent Hyperfractionated Radiotherapy and Low-Dose Daily Carboplatin/Paclitaxel in Patients With Early-Stage (I/II) Non-Small-Cell Lung Cancer: Long-Term Results of a Phase II Study.&quot; Jeremic B et al. J Clin Oncol. 2005 Oct 1;23(28):6873-80. 
**56 pts, Stage I-II. Taxol on day 1 (30 mg/m2) then RT beginning on day 2 to 67.6 Gy at 1.3 Gy BID with concurrent daily chemotherapy  with carboplatin 25 mg/m2 and paclitaxel 10 mg/m2.
**Conclusion: feasible with low toxicity.


==Radiofrequency Ablation (RFA)==
*'''RAPTURE''' (2001-2005) PMID 18565793 -- &quot;Response to radiofrequency ablation of pulmonary tumours: a prospective, intention-to-treat, multicentre clinical trial (the RAPTURE study).&quot; (Lencioni R, Lancet Oncol. 2008 Jul;9(7):621-8. Epub 2008 Jun 17.)
**Multinational prospective trial (Europe, USA, Australia). 106 patients, 183 lung tumors, &lt;3.5cm diameter. Unsuitable for surgery, RT or chemo. NSCLC (n=33), CRC mets (n=53), other mets (n=20).
**Outcome: Technical success 99%. 1-year CR 88%. 1-year OS NSCLC 70%, CRC mets 89%, other mets 92%. 2-year OS Stage I NSCLC 72%
**Toxicity: Pneumothorax 1%; no significant worsening of pulmonary function
**Conclusion: Percutaneous RFA high sustained CR, acceptable morbidity</text>
      <sha1>ptu350q54wl5451w4qnkqmhlvgf9epj</sha1>
    </revision>
  </page>
  <page>
    <title>Bengali/Sounds</title>
    <ns>0</ns>
    <id>39890</id>
    <revision>
      <id>3051445</id>
      <parentid>2954380</parentid>
      <timestamp>2016-02-28T07:19:09Z</timestamp>
      <contributor>
        <username>Kayser Ahmad</username>
        <id>2476494</id>
      </contributor>
      <minor />
      <comment>fix</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Bengali has twelve vowel letters, 32 consonant sounds, and some diacritics.

==Vowels==

These are the twelve vowels in Bengali: 

{| class = &quot;wikitable&quot; 
|-
! Vowel !! Unicode !! Transliteration !! IPA !! English pronunciation !! Conjunct !! Audio
|-
| [[Image:Bengali Letter A.svg|40px]] || অ || ô || {{IPA|/ɔ/}} || '''o''' of p'''o'''t &lt;br&gt; sometimes l'''aw''', '''a'''ll || none || [[File:Open-mid back rounded vowel.ogg]]
|-
| [[Image:Bengali Letter Aa.svg|40px]] || আ || a || {{IPA|/a/}} || f'''a'''ther, c'''a'''lm || া || [[File:Open central unrounded vowel.ogg]]
|-
| [[Image:Bengali Letter I.svg|40px]] || ই || i || {{IPA|/i/}} || k'''i'''n || ি || [[File:Close front unrounded vowel.ogg]]
|-
| [[Image:Bengali Letter Ii.svg|40px]] || ঈ || i || {{IPA|/i/}}{{ref|1|1}} || k'''ee'''n || ী
|-
| [[Image:Bengali Letter U.svg|40px]] || উ || u || {{IPA|/u/}} || f'''u'''ll || ু || [[File:Close back rounded vowel.ogg]]
|- 
| [[Image:Bengali Letter Uu.svg|40px]] || ঊ || u || {{IPA|/u/}}{{ref|1|1}} || f'''oo'''l || ূ
|-
| [[Image:Bengali Letter Vocalic R.svg|40px]] || ঋ || ri || {{IPA|/ri/}} || '''re'''do || ৃ || 
|- style=&quot;background:#dcdcdc&quot;
|  [[Image:Bengali Letter Li.svg|40px]]|| ঌ || li || {{IPA|/li/}}{{ref|2|2}} || '''lee'''way || ৢ
|-
| [[Image:Bengali Letter E.svg|40px]] || এ || e || {{IPA|/e/}} || short: p'''e'''t,  long: b'''ay''', other: c'''a'''n || ে || [[File:Close-mid front unrounded vowel.ogg]]
|-
| [[Image:Bengali Letter Ai.svg|40px]] || ঐ || oi || {{IPA|/oj/}} || pronounce ও and ই together || ৈ
|-
| [[Image:Bengali Letter O.svg|40px]] || ও || o || {{IPA|/o/}} || l'''aw''', '''a'''ll, c'''au'''ght || ো || [[File:Close-mid back rounded vowel.ogg]]
|-
| [[Image:Bengali Letter Au.svg|40px]] || ঔ || ou || {{IPA|/ow/}} || pronounce ও and উ together || ৌ
|}

Vowels are referred to by their sound and are suffixed by '-kar' when referring to a conjunct. However, ই and উ also have prefix 'hrôshsho', and ঈ and ঊ suffix 'dirgho'.

{{note|1|1}}In theory they should be lengthened {{IPA|/iː/}} and {{IPA|/uː/}}, but in spoken Bangla this is not the case.

{{note|2|2}}This letter is obsolete: now the character for it represents the number 9.

''Always keep in mind that the English pronunciations are only ''approximations''. You must try to use the IPA whenever possible.''

These vowel letters were initially adopted from the Devanagari script that is used to write Sanskrit and Hindi. Although ঋ is a vowel in Sanskrit, it is pronounced in Bengali as /ri/, a consonant-vowel combination.

ঐ and ঔ are used to denote two diphthongs, although there are many more diphthongs in use in Bengali. There is no symbol for the vowel sound â (like the a in English bat) in the basic inventory of Bengali script, so the ligature অ্যা is used instead.

Moreover, depending on context, the graphs অ and এ can sound like o and â, respectively.

===Diphthongs===

The Bangla alphabet has only two single vowels representing diphthongs (ঐ  and ঔ). But in actual practiced Bangla, there are more diphthongs that are written by putting the vowels together or attaching them to the consonant য় (&quot;ya&quot;; pronouned {{IPA|/yɔ/}} and called the &quot;semi-vowel অ&quot;). Here are the ones that will fit in one syllable:
*{{IPA|/ij/}}:
*{{IPA|/iw/}}:
*{{IPA|/ej/}}:
*{{IPA|/ee̯/}}:
*{{IPA|/ew/}}:
*{{IPA|/eo̯/}}:
*{{IPA|/æe̯/}}:
*{{IPA|/æo̯/}}: 
*{{IPA|/aj/}}:
*{{IPA|/ae̯/}}:
*{{IPA|/aw/}}:
*{{IPA|/ao̯/}}:
*{{IPA|/ɒe̯/}}:
*{{IPA|/ɒo̯/}}:
*{{IPA|/oj/}}:
*{{IPA|/oe̯/}}:
*{{IPA|/oo̯/}}:
*{{IPA|/ow/}}:
*{{IPA|/uj/}}:

==Consonants==

Of the consonants in Bengali, ten are aspirated&amp;mdash;that is, they sound as if an 'H' was appended to it. {{IPA|/z/}} only occurs only in foreign words.

Consonants are referred to by their sound followed by ô (ক = kô), with some exceptions, namely:
*জ = borgio jô
*ড় = đôe shunno ŗô
*ঢ় = đhôe shunno ŗô
*ণ = murdhonno nô
*ন = donto nô
*য = ôntostho jô
*য় = ôntostho ô
*শ = talobbo shô
*ষ = murdhonno shô
*স = donto shô

{| class=&quot;wikitable&quot;
|-
! Consonant !! Unicode !! Transcription !! IPA !! English pronunciation !! With vowel
|-
| [[File:Bengali Letter Ka.svg|40px]] || ক || k || {{IPA|/k/}} || '''c'''at || কা কি কী কু কূ কৃ কৢ কে কৈ কো কৌ
|-
| [[File:Bengali Letter Kha.svg|40px]] || খ || kh || {{IPA|/kʰ/}} || '''ch'''emist || খা খি খী খু খূ খৃ খৢ খে খৈ খো খৌ
|-
| [[File:Bengali Letter Ga.svg|40px]] || গ || g || {{IPA|/g/}} || '''g'''oal || গা গি গী গু গূ গৃ গৢ গে গৈ গো গৌ
|-
| [[File:Bengali Letter Gha.svg|40px]] || ঘ || gh || {{IPA|/gʰ/}} || '''gh'''ost || ঘা ঘি ঘী ঘু ঘূ ঘৃ ঘৢ ঘে ঘৈ ঘো ঘৌ
|-
| [[File:Bengali Letter Nga.svg|40px]] || ঙ || ng || {{IPA|/ŋ/}} || si'''ng'''er || ঙা ঙি ঙী ঙু ঙূ ঙৃ ঙৢ ঙে ঙৈ ঙো ঙৌ
|-
| [[File:Bengali Letter Ca.svg|40px]] || চ || ch || {{IPA|/tʃ/}} || '''ch'''eck || চা চি চী চু চূ চৃ চৢ চে চৈ চো চৌ
|-
| [[File:Bengali Letter Cha.svg|40px]] || ছ || chh || {{IPA|/tʃʰ/}} || ch + h together || ছা ছি ছী ছু ছূ ছৃ ছৢ ছে ছৈ ছো ছৌ
|-
| [[File:Bengali Letter Ja.svg|40px]] || জ || j || {{IPA|/dʒ/}} || '''j'''est || জা জি জী জু জূ জৃ জৢ জে জৈ জো জৌ
|-
| [[File:Bengali Letter Jha.svg|40px]] || ঝ || jh || {{IPA|/dʒʰ/}} || j + h together || ঝা ঝি ঝী ঝু ঝূ ঝৃ ঝৢ ঝে ঝৈ ঝো ঝৌ
|-
| [[File:Bengali Letter Nya.svg|40px]] || ঞ || n || {{IPA|/n/}} || '''n'''ight || ঞা ঞি ঞী ঞু ঞূ ঞৃ ঞৢ ঞে ঞৈ ঞো ঞৌ
|-
| [[File:Bengali Letter Tta.svg|40px]] || ট || ţ || {{IPA|/ʈ/}} || '''t'''ax || টা টি টী টু টূ টৃ টৢ টে টৈ টো টৌ
|-
| [[File:Bengali Letter Ttha.svg|40px]] || ঠ || ţh || {{IPA|/ʈʰ/}} || '''Th'''ailand || ঠা ঠি ঠী ঠু ঠূ ঠৃ ঠৢ ঠে ঠৈ ঠো ঠৌ
|-
| [[File:Bengali Letter Dda.svg|40px]] || ড || đ || {{IPA|/ɖ/}} || '''d'''amp || ডা ডি ডী ডু ডূ ডৃ ডৢ ডে ডৈ ডো ডৌ
|-
| [[File:Bengali Letter Rra.svg|40px]] || ড় || ŗ || {{IPA|/ɾ/}}{{ref|3|3}} || Spanish 'r' || ড়া ড়ি ড়ী ড়ু ড়ূ ড়ৃ ড়ৢ ড়ে ড়ৈ ড়ো ড়ৌ
|-
| [[File:Bengali Letter Ddha.svg|40px]] || ঢ || đh || {{IPA|/ɖʰ/}} || đ + h together || ঢা ঢি ঢী ঢু ঢূ ঢৃ ঢৢ ঢে ঢৈ ঢো ঢৌ
|-
| [[File:Bengali Letter Rha.svg|40px]] || ঢ় || ŗh || {{IPA|/ɾʰ/}}{{ref|3|3}}|| ŗ + h together || ঢ়া ঢ়ি ঢ়ী ঢ়ু ঢ়ূ ঢ়ৃ ঢ়ৢ ঢ়ে ঢ়ৈ ঢ়ো ঢ়ৌ
|-
| [[File:Bengali Letter Nna.svg|40px]] || ণ || n || {{IPA|/n/}} || '''n'''ight || ণা ণি ণী ণু ণূ ণৃ ণৢ ণে ণৈ ণো ণৌ
|-
| [[File:Bengali Letter Ta.svg|40px]] || ত || t || {{IPA|/t̪/}} || somewhat like '''th'''in || তা তি তী তু তূ তৃ তৢ তে তৈ তো তৌ
|-
| [[File:Bengali Letter Tha.svg|40px]] || থ || th || {{IPA|/t̪ʰ/}} || t + h together || থা থি থী থু থূ থৃ থৢ থে থৈ থো থৌ
|-
| [[File:Bengali Letter Da.svg|40px]] || দ || d || {{IPA|/d̪/}} || somewhat like '''th'''e || দা দি দী দু দূ দৃ দৢ দে দৈ দো দৌ
|-
| [[Image:Bengali Letter Dha.svg|40px]]|| ধ || dh || {{IPA|/d̪ʰ/}} || d + h together || ধা ধি ধী ধু ধূ ধৃ ধৢ ধে ধৈ ধো ধৌ
|-
| [[Image:Bengali Letter Na.svg|40px]]|| ন || n || {{IPA|/n/}} || '''n'''ight || না নি নী নু নূ নৃ নৢ নে নৈ নো নৌ
|-
| [[File:Bengali Letter Pa.svg|40px]] || প || p || {{IPA|/p/}} || '''p'''int || পা পি পী পু পূ পৃ পৢ পে পৈ পো পৌ
|-
| [[File:Bengali Letter Pha.svg|40px]] || ফ || ph, f || {{IPA|/pʰ/}}, {{IPA|/f/}} || p + h, or '''f'''ence || ফা ফি ফী ফু ফূ ফৃ ফৢ ফে ফৈ ফো ফৌ
|-
| [[File:Bengali Letter Ba.svg|40px]] || ব || b || {{IPA|/b/}} || '''b'''ear || বা বি বী বু বূ বৃ বৢ বে বৈ বো বৌ
|-
| [[File:Bengali Letter Bha.svg|40px]] || ভ || bh || {{IPA|/bʰ/}} || '''Bh'''utan || ভা ভি ভী ভু ভূ ভৃ ভৢ ভে ভৈ ভো ভৌ
|-
| [[File:Bengali Letter Ma.svg|40px]] || ম || m || {{IPA|/m/}} || '''m'''ountain || মা মি মী মু মূ মৃ মৢ মে মৈ মো মৌ
|-
| [[File:Bengali Letter Ya.svg|40px]] || য || j || {{IPA|/dʒ/}} || '''j'''est || যা যি যী যু যূ যৃ যৢ যে যৈ যো যৌ
|-
| [[File:Bengali Letter Yya.svg|40px]] || য় || e, ø || {{IPA|/e/}}, n/a || {{ref|4|4}} || য়া য়ি য়ী য়ু য়ূ য়ৃ য়ৢ য়ে য়ৈ য়ো য়ৌ
|-
| [[File:Bengali Letter Ra.svg|40px]] || র || r || {{IPA|/r/}} || '''r'''oad || রা রি রী রু রূ রৃ রৢ রে রৈ রো রৌ
|-
| [[File:Bengali Letter La.svg|40px]] || ল || l || {{IPA|/l/}} || '''l'''oad || লা লি লী লু লূ লৃ লৢ লে লৈ লো লৌ
|-
| [[File:Bengali Letter Sha.svg|40px]] || শ || colspan=&quot;3&quot;|{{ref|5|5}} || শা শি শী শু শূ শৃ শৢ শে শৈ শো শৌ
|-
| [[File:Bengali Letter Ssa.svg|40px]] || ষ || sh || {{IPA|/ʃ/}} || '''sh'''ell || ষা ষি ষী ষু ষূ ষৃ ষৢ ষে ষৈ ষো ষৌ
|-
| [[File:Bengali Letter Sa.svg|40px]] || স || colspan=&quot;3&quot;|{{ref|5|5}} || সা সি সী সু সূ সৃ সৢ সে সৈ সো সৌ
|-
| [[File:Bengali Letter Ha.svg|40px]] || হ || h || {{IPA|/h/}} || '''h'''ome || হা হি হী হু হূ হৃ হৢ হে হৈ হো হৌ
|}

{{note|3|3}}ড় and ঢ় usually sound like র in spoken Bangla. It is still important to recognize the difference.

{{note|4|4}}Usually this does not have a sound between vowels. Very often this will be transliterated with a 'y'; never pronounce this as in '''y'''ard &lt;u&gt;unless&lt;/u&gt; preceded by an ই or ঈ.

{{note|5|5}}In most cases, শ represents {{IPA|/ʃ/}} while স represents {{IPA|/s/}}. We will inform you when this is different.

==Modifiers and others==
{| class=&quot;wikitable&quot;
|-
|+ '''Modifier and other graphemes in Bengali'''
|-
! Symbol with {{IPA|[kɔ]}} (ক) !! Name !! Function !! Transliteration !! IPA
|-
| style=&quot;font-size:14pt;&quot; | ক্
| hôshonto &lt;br /&gt;&quot;hôshônt&quot; || Suppresses the inherent vowel {{IPA|[ɔ]}}|| k || {{IPA|/k/}}
|-
| style=&quot;font-size:14pt;&quot; | কৎ
| khônđo tô &lt;br /&gt;&quot;khonḍ tô&quot; || Final unaspirated dental {{IPA|[t̪]}} (ত) || kôt || {{IPA|/kɔt̪/}}
|-
| style=&quot;font-size:14pt;&quot; | কং
| ônushshôr || Final velar nasal || kông || {{IPA|/kɔŋ/}}
|-
| style=&quot;font-size:14pt;&quot; | কঃ
| bishôrgo
|
# pronounced as syllable-final voiceless breath, as in উঃ
# isn't pronounced, but geminates the following consonant, as in দুঃসময়
# isn't pronounced at all, as in দুঃস্থ
|
-
|
# {{IPA|[uh]}}
# {{IPA|[d̪uʃːomɔj]}}
# {{IPA|[d̪ustʰo]}}
|-
| style=&quot;font-size:14pt;&quot; | কঁ
| chôndrobindu &lt;br /&gt; &quot;moon-dot&quot;|| Vowel nasalization || kôñ || {{IPA|/kɔ̃/}}
|-
|}

ঃ ''-h'' and ং ''-ng'' are also often used as abbreviation marks in Bengali, with ং ''-ng'' used when the next sound following the abbreviation would be a nasal sound, and ঃ ''-h'' otherwise. For example ডঃ ''ḍôh'' stands for ডক্টর ''ḍôkṭor'' &quot;doctor&quot; and নং ''nông'' stands for নম্বর ''nômbor'' &quot;number&quot;. Some abbreviations have no marking at all, as in ঢাবি ''ḍhabi'' for ঢাকা বিশ্ববিদ্যালয় ''Ḍhaka Bishshobiddalôe'' &quot;Dhaka University&quot;. The full stop can also be used when writing out English letters as initials, such as ই.ইউ. ''i iu'' &quot;E.U.&quot;.

The ''jôphôla'' is sometimes used as a diacritic to indicate non-Bengali vowels of various kinds in transliterated foreign words. For example, the schwa is indicated by a ''jôphôla'', the French u and the German umlaut ü as উ্য, the German umlaut ö as ও্য or এ্য, etc.

The apostrophe, known in Bengali as ঊর্ধ্বকমা ''urdhokôma'' &quot;upper comma&quot;, is sometimes used to distinguish between homographs, as in পাটা ''paţa'' &quot;plank&quot; and পা'টা ''paţa'' &quot;the leg&quot;. Sometimes a hyphen is used for the same purpose (as in পা-টা, an alternative of পা'টা).

[[Category:Bengali]]
&lt;!-- [আন্তঃস্থ] অ --&gt;</text>
      <sha1>l1jgp21kxo5wstksxuigcc76fcxsuyj</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/NSCLC/Early Stage Operable</title>
    <ns>0</ns>
    <id>39891</id>
    <revision>
      <id>3006848</id>
      <parentid>2993836</parentid>
      <timestamp>2015-10-14T13:12:55Z</timestamp>
      <contributor>
        <username>Onlinelli</username>
        <id>2724458</id>
      </contributor>
      <comment>/* SBRT */  added Chang et al</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/Lung/NSCLC:TOC}}


==Pathology==
*'''Moffitt, 2007''' PMID 17314339 -- &quot;DNA synthesis and repair genes RRM1 and ERCC1 in lung cancer.&quot; (Zheng Z, N Engl J Med. 2007 Feb 22;356(8):800-8.)
**RRM1 expression evaluated in 187 patients with early-stage NSCLC treated with surgery only
**RRM1 expression correlated with ERCC1 (SS) but not PTEN (NS)
**Outcomes: median DFS: high RRM1 &gt;120 months vs. low RRM1 54 months (SS); median OS: &gt;120 months vs. 60 months. Benefit if RRM1+ and ERCC1+
**Conclusion: RRM1 and ERCC1 determinants of survival

*'''Duke, 2006''' PMID 16899777 -- &quot;A genomic strategy to refine prognosis in early-stage non-small-cell lung cancer.&quot; (Potti A, N Engl J Med. 2006 Aug 10;355(6):570-80.)
**Gene expression profiling. 89 patients learning set, 25 patients from ACOSOG Z0030 and 84 patients from CALGB 9761 as verification set
**Predictive accuracy of recurrence ~75%
**Also identified subset of IA who are at high risk of recurrence
**Since retracted by authors due to questions regarding integrity of the data.

==Lymph Node Staging==
*'''CALGB 9761''' PMID 15829324 -- &quot;Poor correspondence between clinical and pathologic staging in stage 1 non-small cell lung cancer: results from CALGB 9761, a prospective trial.&quot; (D'Cunha J, Lung Cancer. 2005 May;48(2):241-6. Epub 2005 Jan 4.)
**Prospective. 489 patients with suspected or bx-proven NSCLC, clinical stage I (T1-2N0) by CT scan or cervical mediastinoscopy
**Outcome: Pathologic NSCLC in 86% (others were 2/3 benign, 1/3 malignancy other than NSCLC). Of these, Stage pI 72%, pII 14%, pIII 13%, pIV 1%. Overall, only 62% of clinically suspected Stage I NSCLC had pathologic Stage I NSCLC
**Conclusion: Poor predictive value of current clinical staging

==Lobectomy vs. SBRT==
*'''STARS (NCT00840749) and ROSEL (NCT00687986) Trials''' - Pooled Analysis of 2 Randomized Trials. (PMID 25981812) Chang JY et al, &quot;Stereotactic ablative radiotherapy versus lobectomyfor operable stage I non-small-cell lung cancer: a pooled analysis of two randomised trials&quot; Lancet Oncology. 2015 Jun;16(6):630-7
**58 total patients with operable T1-2a (&lt;4 cm) N0 M0 non-small cell lung cancer (NSCLC)
**Randomized to lobectomy (total of 27 patients) vs SABR (total 31 patients).
***At 3 years, SABR associated with improved overall survival (OS) over lobectomy (95% vs. 79%, P=0.037)
***At 3 years, SABR associated with a decrease in grade ≥3 toxicity (10% vs. 48%)
***No difference in recurrence free survival at 3 years with SABR (86%) vs lobectomy (80%) (p=0.54)
**Conclusions &quot;Although this study is limited by the small number of enrolled patients and requires validation with larger numbers of patients, our findings strongly support equipoise between surgery and SABR and justify the initiation of large randomised comparisons of surgery versus SABR.&quot;

*Editorial (PMID 26244136): Early OS advantages with fractionated radiation over surgery seen in 2 previous RCTs for stage III NSCLC (Albain/Intergroup Lancet 2009 and van Meerbeeck/EORTC JNCI 2007), attributable to difference in treatment-related mortality. But in those trials surgery was associated with better loco-regional control than conventional RT, resulting in a re-approximation of the survival curves over time. By contrast, SABR provides excellent local control, meaning that differences in treatment-related morbidity/mortality may create a &quot;head start effect&quot; allowing for improved OS in studies where SABR can perform at equivalent, or even near-equivalent, oncologic levels to lobectomy.  

==Surgery vs. Fractionated RT==
*'''Medical Research Council/Hammersmith Hospital''' (1954-1958) -- Primary RT vs Primary Surgery
**Randomized. 58 patients, no clinical or radiologic evidence of mediastinal involvement. Biopsy proven carcinoma. Arm 1) RT - using 8 MeV linac, 45 Gy in 4 weeks daily. Target + 2cm + hilar/mediastinal areas; vs. Arm 2) Surgery - pneumonectomy or lobectomy + hilar/mediastinal LND. However 13/30 weren't operable/refused. Histology squamous 64%, adenocarcinoma 3%, small cell/anaplastic 33%
**'''1963''' PMID not available, doi:10.1016/S0140-6736(63)91444-2 --&quot;THE TREATMENT OF CARCINOMA OF THE BRONCHUS A Clinical Trial to Compare Surgery and Supervoltage Radiotherapy&quot; (Morrison R, Lancet. 1963. Mar 30; 281(7283):683-684)
***Outcome: 1-year OS RT 64% vs. Surgery 43%; 2-year OS 14% vs. 27%; 4-year 7% vs. 23% (NS). By histology: squamous 6% vs. 30% (SS); small cell 10% both (NS)
***Conclusion: In squamous cell tumors, surgical resection is significantly better than RT; no difference in small cell.

==Surgery alone==
===Type of surgery===
*Standard surgery is lobectomy.
*Wedge resection or segmental resection for Stage I disease has been advocated, but in LCSG 821 ''(see below)'' wedge (with 2cm margin) shown to have significantly worse recurrence rate (LR 6% vs 18%) without functional improvement
*Nevertheless, CALGB is trying smaller resection again (CALGB 140503) with more modern surgical techniques and smaller tumors
*Criteria:
**Pneumonectomy: FEV1 &gt;80% and &gt;2L, DLCO &gt;50%
**Lobectomy: FEV1 &gt;70% and &gt;1.5L
**Wedge: FEV1 &gt;0.6L
**SBRT/RFA: FEV1 &gt;0.2L
**Post op predictive FEV1 should be 0.7-0.8L (preop FEV1 x # segments remaining/total segments, corrected for lung function)
 
===ACCP Guidelines===
*'''ACCP; 2007''' PMID 17873167 -- &quot;Physiologic evaluation of the patient with lung cancer being considered for resectional surgery: ACCP evidenced-based clinical practice guidelines (2nd edition).&quot; (Colice GL, Chest. 2007 Sep;132(3 Suppl):161S-77S.)
# Patients be assessed for curative resection by a multidisciplinary team
# Patients not be denied lung resection surgery on the grounds of age alone
# Patients with major factors for perioperative CV risk to have a preoperative cardiologic evaluation
# If FEV1 &gt;80% predicted or &gt;2L and no evidence of dyspnea on exertion or interstitial lung disease, suitable for pneumonectomy. If FEV1 &gt;1.5L and no evidence of DOE or ILD, suitable for lobectomy
# If evidence of undue dyspnea on exertion or interstitial lung disease, and FEV1 adequate, DLCO is recommended
# If either FEV1 or DLCO &lt;80% predicted, post-op lung function be predicted (PPO = predicted post operative function)
# FEV1 &lt;40% PPO or DLCO &lt;40% PPO indicates increased risk. Patients should undergo pre-op exercise testing
# If product of %PPO FEV1 and %PPO DLCO is &lt;1650% PPO or FEV1 &lt;30%, increased risk. Patients should be counseled about nonstandard approaches
# If VO2max &lt;10 ml/kg, increased risk. Patients should be counseled about nonstandard approaches
# If VO2max &lt;15 ml/kg and both FEV1 and DLCO &lt;40% PPO, increased risk. Patients should be counseled about nonstandard approaches
# If patients walk &lt;25 shuttles on two shuttle walks or less than one flight of stairs, increased risk. Patients should be counseled about nonstandard approaches
# If PACO2 &gt;45 mmHg, not independent risk factor, but further physiologic testing recommended
# If SAO2 &lt;90%, increased risk. Patients should undergo further physiologic testing
# If very poor lung function and lung cancer isn upper lobe emphysema, recommend combined LVRS and lung cancer resection, if both FEV1 and DLCO &gt;20% predicted
# All patients be counselled regarding smoking cessation


===Meta-analysis===
*'''Athens; 2009''' PMID 18641014 -- &quot;Does lobectomy achieve better survival and recurrence rates than limited pulmonary resection for T1N0M0 non-small cell lung cancer patients?&quot; (Chamogeorgakis T, Interact Cardiovasc Thorac Surg. 2009 Mar;8(3):364-72. Epub 2008 Jul 18.)
**Meta-analysis; updated analysis done by Nakamura below (PMID 15756281). 3 additional comparative studies identified
**Conclusion: Wedge resection is not comparable to lobectomy; however, segmental resection is comparable to lobectomy for small peripheral tumors

*'''Shizuoka, Japan; 2005''' (1970-2004) PMID 15756281 -- &quot;Survival following lobectomy vs limited resection for stage I lung cancer: a meta-analysis.&quot; (Nakamura H, Br J Cancer. 2005 Mar 28;92(6):1033-7.)
**Meta-analysis. 14 articles (1 RCT, 1 matched pair, and 12 retrospective studies), 2790 patients (1887 lobectomy, 903 limited resection)
**Outcome: Survival difference between lobectomy minus limited resection at 1-year 0.7% (NS), 3-years 1.9% (NS), and 5-years 3.6% (NS). However, high inter-study heterogeneity
**Conclusion: Survival after lobectomy or limited resection is comparable; however, interstudy heterogeneity suggests that caution is required to interpret these results

===Sublobar resection===
*'''CALGB 140503'''  (''currently accruing'')  
**&quot;A Phase III Randomized Trial of Lobectomy versus Sublobar Resection for Small (≤ 2 cm) Peripheral Non-Small Cell Lung Cancer&quot;
**Goal is to determine if lobectomy is necessary for small peripheral tumors that are smaller than those treated 30 yrs ago in LCSG 821.


*'''SEER data; 2005''' (1992-1997) PMID 16002941 -- &quot;Similar long-term survival of elderly patients with non-small cell lung cancer treated with lobectomy or wedge resection within the surveillance, epidemiology, and end results database.&quot; (Mery CM, Chest. 2005 Jul;128(1):237-45.)
**SEER analysis. 14,555 patients with Stage I-II NSCLC. Age groups &lt;65 (35%), 65-74 (42%), and &gt;= 75 (23%)
**Outcome: Curative surgery 92% vs. 86% vs. 70% (SS). Limited resection 8% -&gt; 17% (SS). Median OS 5.9 years vs 3.9 years vs 2.3 years (SS). For young patients, lobectomy conferred survival benefit, but no difference for patients &gt;= 71 years
**Conclusion: Lobectomies confer survival benefit over limited resection in young patients but not in for elderly patients

*'''North American Lung Cancer Study Group 821''' (1982-88) -- lobectomy vs. sublobar resection
**Randomized. 247/276 patients with pathologic peripheral pT1N0 (defined on PA and lateral CXR). Middle lobe tumors excluded. Frozen section of LN (at least one node from bronchopulmonary, hilar, and mediastinal) had to be negative, otherwise completion lobectomy prior to randomization. Arm 1) Lobectomy vs. Arm 2) Limited resection (segmental resection or large wedge with 2cm margin). Locoregional recurrence defined as ipsilateral lung or mediastinum; non-local recurrence was DM as well as LR + DM
**'''Original; 1995''' PMID 7677489 &amp;mdash; &quot;Randomized trial of lobectomy versus limited resection for T1 N0 non-small cell lung cancer.&quot; (Ginsberg RJ, Ann Thorac Surg. 1995 Sep;60(3):615-22)
***Locoregional recurrence: limited resection 17% vs. lobectomy 6% (SS, 3x higher). No difference in DM. RFS 69% vs. 82% (SS, p=0.06 in one-sided test with p&lt;0.1); OS 61% vs. 70% (SS, p=0.09 in one-sided test with p&lt;0.1); Deaths due to cancer 62% vs. 55%
***By tumor volume: lobectomy better, regardless of tumor size (&lt;3 cm3, 3-8 cm3, 8-27 cm3)
***Toxicity: perioperative morbidity, mortality (1%) comparable. Early post-op pulmonary function significantly better for sublobar resection at 6 months, but no difference at 1 year and 1.5 years.
***Conclusion: Higher LR and death rate, without improved post-op function
**'''Update; 1996''' PMID 8823141 -- &quot;Lobectomy versus limited resection in T1 N0 lung cancer.&quot; (Lederle FA, Ann Thorac Surg. 1996 Oct;62(4):1249-50.)
***Further update of data, in a letter to editor format. 12 new recurrences identified (7 on sublobar arm and 5 on lobectomy arm). New survival curves
***Outcome: Overall death-rate-increase improved from 47% in original report to 26% (NS); death due to cancer-rate-increase improved from 47% to 28% (NS); recurrence rate-increase improved from 60% to 39% (NS)
***Conclusion: Modest corrections, but overall conclusions hold, wth local recurrence rate difference essentially unchanged

===Lobar resection===
*Overall 5-year OS for Stage I is ~65%, for Stage II is ~45%
*Tumor size is a prognostic factor, independent of T-stage, with smaller tumors having better survival
*Selected patients with tumors &lt;1.5 cm may have 5-year OS as high as 95%


*'''Buenos Aires; 2008''' (Argentina)(1985-2006) PMID 18758301 -- &quot;Analysis of survival in 400 surgically resected non-small cell lung carcinomas: towards a redefinition of the T factor.&quot; (Lyons G, J Thorac Oncol. 2008 Sep;3(9):989-93.)
**Retrospective. 400 patients, pulmonary resection with curative intent. No neoadjuvant chemotherapy. Adeno 61%. 
**Outcome: Operative mortality lobectomy 2%, pneumonectomy 18% (SS). Complete resection 85%. For pN0, if tumor &lt;15mm 5-year OS 95% vs. &gt;=15 mm 65% (SS); no impact of age, sex, side, or histology
**Conclusion: Tumors &gt;15 mm associated with shorter 5-year OS

*'''Modena; 2006''' (Italy) PMID 16996167 -- &quot;The prognostic impact of tumor size in resected stage I non-small cell lung cancer: evidence for a two thresholds tumor diameters classification.&quot; (Christian C, Lung Cancer. 2006 Nov;54(2):185-91. Epub 2006 Sep 22.)
**Retrospective. 548 patients with Stage I, s/p complete surgical resection
**Outcome: Tumor &gt;5cm had 60% higher probability of death than size 2-5cm, which had 57% higher probability of death than size &lt;2cm
***Stage IA: 5-year OS 67%, DSS 85%
***Stage IB: 5-year OS 49%, DSS 53%
**Conclusion: Tumor sizes &lt;2cm, 2-5cm, and &gt;5cm have different prognosis

*'''Japanese National Chest Hospital Study Group; 2005''' PMID 15797041 -- &quot;Impact of large tumor size on survival after resection of pathologically node negative (pN0) non-small cell lung cancer.&quot; (Takeda S, Ann Thorac Surg. 2005 Apr;79(4):1142-6.)
**Retrospective. 603 patients with pN0 NSCLC, s/p complete resection. 
**Outcome: 5-year OS &lt;=2 cm 80%, 2-3 cm 73%, 3-5 cm 68%, &gt;5 cm 47%
**Conclusion: Tumor size &gt;5cm inversely predicts survival
*'''MD Anderson; 1995''' PMID 7646126 -- &quot;Survival in early-stage non-small cell lung cancer.&quot; (Nesbitt JC, Ann Thorac Surg. 1995 Aug;60(2):466-72.)
**Meta-analysis. 10 series
**Outcome: 5-year OS Stage I 65% (55-72%), Stage II 41% (29-51%)

*'''SEER data; 2004''' (1988-2003) PMID 15364754 -- &quot;The effect of tumor size on curability of stage I non-small cell lung cancers.&quot; (Wisnivesky JP, Chest. 2004 Sep;126(3):761-5.)
**Population study. 7620 patients, Stage I NSCLC, curative resection.
**Outcome: 12-year OS tumor size 0.5-1.5cm 69%, 1.6-2.5 cm 63%, 2.6-3.5 cm 58%, 3.6-4.5 cm 53%, &gt;4.5 cm 42% (SS)
**Conclusion: Smaller size associated with improved curability

*'''LCSG 821''' - PMID 7677489 - ''(listed above)'' 
**5 yr OS for T1N0 s/p lobectomy alone ~65%
**5 yr OS for T1N0 s/p wedge alone ~45%

*'''Washington University; 1933''' PMID 18591561 -- &quot;Evarts A. Graham and the first pneumonectomy for lung cancer.&quot; (Horn L, J Clin Oncol. 2008 Jul 1;26(19):3268-75.)
**Description of the first successful one-stage pneumonectomy for lung cancer performed April 5, 1933

==Pre-op EBRT==
*'''Nijmegen''' (The Netherlands)(1971-1976) -- Pre-op Mediastinal RT vs Surgery Alone
**Randomized, pilot. 33 patients, clinical T1-2N0 NSCLC, mediastinoscopy LN-. Arm 1) Pre-op RT 20/5 to hilar, subcarinal, tracheo-bronchial, and paraesophageal LNs followed by surgery following Monday vs. Arm 2) Surgery alone. Either lobectomy or pneumonectomy
**'''1984''' PMID 6378851 -- &quot;Evaluation of short-course preoperative irradiation in the treatment of resectable bronchus carcinoma: long-term analysis of a randomized pilot-study.&quot; (Kazem I, Int J Radiat Oncol Biol Phys. 1984 Jul;10(7):981-5.) Minimum F/U 7 years
***Outcome: 5-year OS pre-op RT 58% vs. surgery alone 43%; 5-year DSS 78% vs. 67% (NS); median OS 6 years vs. 2.5 years. R0 resection in pre-op 57% vs surgery only 28%
***Subgroup analysis: If lobectomy, RT beneficial only during first year, then no difference. If pneumonectomy, RT beneficial during entire follow-up (5-year OS 66% vs. 42%).
***Toxicity: 9% operative mortality (all patients in surgery only arm); delayed wound healing comparable
***Conclusion: Pre-op RT well tolerated, and results are encouraging

*'''Berlin''' (East Germany)(1963-1971) -- Pre-op RT vs. Surgery only
**Randomized. 196 operable patients. Arm 1) Pre-op RT 5500 RHD (Co-60) vs. Arm 2) Surgery only
**'''1975''' PMID 173257 -- &quot;[Results of a controlled clinical trial for evaluation of intensive preoperative irradiation in operable bronchial cancer (author's transl)] - [Article in German]&quot; (Eichhorn HJ, Arch Geschwulstforsch. 1975;45(4):376-84.)
***Outcome: No difference in annual survival. Significantly reduced LR rate
***Toxicity: Post-op mortality and complications &quot;a bit more favorable&quot;
***Conclusion: No difference

*'''NCI Trial''' (1963-1966) -- Pre-op RT vs. Surgery only
**Randomized. 17 institutions. 568 patients operable (no carina, no mediastinum/SCV, no chest wall invasion). Arm 1) immediate surgery vs. Arm 2) Pre-op RT, given as &gt;40 Gy supravoltage 
**'''1975''' PMID 171057 -- &quot;Preoperative irradiation of cancer of the lung: final report of a therapeutic trial. A collaborative study.&quot; (Warram J, Cancer. 1975 Sep;36(3):914-25.)
***Outcome: 5-year OS pre-op RT 13% vs. surgery 16% (NS); 5-year RFS 11% vs. 14% (NS)
***Toxicity: Post-op mortality in surgery alone 11%, not estimated for pre-op RT group
***Conclusion: No difference

==Post-operative EBRT==
*Lung Cancer Study Group trial (LCSG 773) established a benefit for RT in local control, but there was no impact on survival
*PORT Meta-analysis in 1998 analyzed individual data from 9 prospective trials. It concluded that RT had detrimental impact on survival, particularly in N0 and N1 stage. The results for Stage III and N2 disease favored RT, but were not statistically significant
*As a result, clinical use of post-op RT dramatically decreased
*However, radiation oncologists are critical of the meta-analysis conclusions for several reasons, including staging, patient selection, old technology and inappropriate dose/fractionation schedules. 
*Retrospective evidence using modern RT techniques suggests a survival benefit for post-op RT in N2 patients; retrospective SEER data supports benefit for N2 patients, also suggests worse survival for N0-1 patients
*Similarly, retrospective analysis of data from prospective trial (ANITA) suggest that PORT is detrimental in pN1 patients who undergo treatment with chemotherapy, but it is beneficial in pN1 patients who observed only. There was a benefit for PORT in pN2 patients regardless of whether they received adjuvant chemotherapy or not
*The evidence is stronger for significant benefit in local control. Whether this can ultimately translate into survival (as it did in [[Radiation_Oncology/Breast/Early_breast/BCT#BCS_.2B.2F-_RT|breast cancer]]), in N2 patients in a randomized setting is not clear
*The situation is confounded by the fact that adjuvant chemotherapy is becoming widely used, after publication of 3 positive trials ([[Radiation_Oncology/Lung/NSCLC/Early_Stage_Operable#Surgery_.2B.2F-_adjuvant_chemotherapy|see below]])
*Clarification of the role of post-op EBRT will require prospective randomized studies using modern staging and modern techniques (and likely concurrent chemotherapy) to settle
*Based on the existing data, it is probably reasonable to discuss post-op RT with patients with N2 disease. Dose should be 50.4 Gy, fields should be small, and tailored to areas at highest risk


===Meta-analysis===
*'''PORT Meta-analysis'''
**'''2005''' PMID 15846628 -- &quot;Postoperative radiotherapy for non-small cell lung cancer.&quot; (PORT Meta-analysis Trialists Group, Cochrane Database Syst Rev. 2005 Apr 18;(2):CD002142.)
***10 trials (after 1965), 2232 patients. (Added 1 trial to prior analysis). Median F/U 4.25 years
***Significant adverse effect of PORT on survival; 3-year OS reduced from 58% to 52% (18% relative increase in risk of death)
***Subset analysis: effect in Stage I-II, N0-1 disease. No evidence of adverse effect in Stage III, N2 patients
***Conclusion: PORT is detrimental. Role in N2 tumors may justify further research
***Comment: most of criticism from 1998 analysis still valid
**'''1998''' PMID 9690404 &amp;mdash; &quot;Postoperative radiotherapy in non-small-cell lung cancer: systematic review and meta-analysis of individual patient data from nine randomised controlled trials.&quot; PORT Meta-analysis Trialists Group. Lancet. 1998 Jul 25;352(9124):257-63.
***2128 pts in 9 randomized trials. Stages I-III. 
***Local control: 24% reduction in local recurrences
***Survival: Increase in relative risk of death by 21% which corresponds to absolute 7% decrease in 2-year OS with PORT.  Detrimental effect confined to Stage I-II.  No difference in survival for Stage III. 
***Conclusion: PORT is detrimental and should not be used. 
***Criticism: ~25% patients had T1N0 disease; initial staging inadequate by today's standards; Co-60 used in 4 trials (5-year OS for cobalt 8% vs. 30% for MeV); old techniques including lateral beams; high doses (60 Gy) and fractions (up to 3.0 Gy/fx)

===Surgery +/- EBRT===
*'''Rome''' (Italy)(1989-1997)
**Randomized. 104 patients with Stage I only. No sublobar resection, hilar-mediastinal radical LND performed (mean 20 LNs). If pN0, randomized to Arm 1) observation vs. Arm 2) RT corrected 50.4/28 to bronchial stump and homolateral hilum only; mean treated area 50 cm2
**'''2002''' PMID 11830308 -- &quot;Adjuvant radiotherapy in non-small cell lung cancer with pathological stage I: definitive results of a phase III randomized trial.&quot; (Trodella L, Radiother Oncol. 2002 Jan;62(1):11-9.)
***5-year outcome: OS: RT 67% vs. observation 58% (p=0.048); LR: 2% vs. 23%
***Toxicity: acute toxicity Grade 1 in 11%; no long term clinical toxicity, 37% radiographic fibrosis
***Conclusion: RT gave good results in LC, promising OS and DFS
**Comment: In PORT Meta-analysis update from 2005 (PMID 15603857), it is stated that updated results within the meta-analysis are no longer significant (p=0.2). This was attributed to longer follow-up and anomalies in original dataset, which were subsequently corrected

*'''Slovenia''' (1988-1992)
**Randomized. 74 patients s/p radical surgery, with N2 disease. +/- RT to hilar/mediastinum 30/10
**'''5-years, 1996''' PMID 8696724 -- &quot;Postoperative radiotherapy for radically resected N2 non-small-cell lung cancer (NSCLC): randomised clinical study 1988-1992.&quot; (Debevec M, Lung Cancer. 1996 Feb;14(1):99-107.)
***5-year outcome: no difference in OS; only prognostic factor was number of LN
***Conclusion: no difference

*'''Beijing''' (China) (1982-95)
**Randomized. 366 pts, positive N1 or N2 nodes after surgery. Randomized to RT 60 Gy vs no further therapy. Field included bronchial stump, ipsilateral hilum, and most of the mediastinum; included SCLV for pts with upper mediastinal node involvement; mediastinum down to diaphragm for lower lobe primary. AP/PA 40/20, then obliques 20/10. SCV 50/25
**'''2000''' PMID 10863061 &amp;mdash; &quot;A study of postoperative radiotherapy in patients with non-small-cell lung cancer: a randomized trial.&quot; Feng QF et al. Int J Radiat Oncol Biol Phys. 2000 Jul 1;47(4):925-9.
***Outcome: 5-yr OS RT 43% vs control 40% (NS). Trend toward improved OS in T3-4N1 RT 58% vs. control 40% (p=0.09). No difference in N2 RT 23% vs. control 26% (NS)
***Failure: local 13% vs. 33% (SS), SCV LN 13% vs. 12%, DM 48% vs. 51%
***Conclusion: Significant benefit on local control, not OS. Trend to survival benefit in T3-4N1
**Comments: More pts with N2 disease in RT group (45% vs 27%)

*'''GETCB''' (French/European)(1986-94)
**Randomized. 728 pts (Stage I-III) randomized after resection to RT 60 Gy or observation. 40% N0, 33% N1, 27% N2; Stage I 30%, Stage II 25%, Stage III 45%
**RT: AP/PA 40 Gy (either 40/20 or 40/16 @2.5/fx) to bronchial stump, ipsilateral hilum, upper/middle mediastinum, SCV; then 20 Gy in obliques/laterals to bronchial stump, ipsilateral hilum, mediastinum. SCV dose 40-45 Gy
**'''1999''' PMID 10421262 &amp;mdash; &quot;A controlled study of postoperative radiotherapy for patients with completely resected nonsmall cell lung carcinoma. Groupe d'Etude et de Traitement des Cancers Bronchiques.&quot; Dautzenberg B et al. Cancer. 1999 Jul 15;86(2):265-73. Median F/U 5.7 years
***5-yr outcome: OS RT 30% vs control 43%. Excess mortality due to increase in intercurrent deaths (31% vs 8%). More intercurrent deaths for higher dose per fraction. ON subgroup analysis, detrimental effect of RT significant in Stage I-II but not Stage III. No effect on local recurrences or distant mets. 
**Critique: included N0 patients, majority treated with Co-60, with fractions up to 2.5 Gy/fx

*'''Graz''' (Austria)(1985-1995)
**Randomized. 155 pts, pT1-3 pN0-2. Randomized to RT 50 Gy (if pN0) or 56 Gy (if pN1-2) vs no further treatment. Treatment included the bronchial stump + 2cm margin, ipsilateral hilum, and mediastinum; SCLV included for apical tumors. 2F AP/PA or 3F with off-cord after 42 Gy
**'''1997''' PMID 9377958 [http://www.chestjournal.org/cgi/reprint/112/4/954 Full text] &amp;mdash; &quot;Postoperative radiotherapy in radically resected non-small cell lung cancer.&quot; Mayer R et al. Chest. 1997 Oct;112(4):954-9.
***5-yr outcome: OS: RT 30% vs observation 20% (NS). DFS: 20% vs. 16% (NS). LR 6% vs. 24% (SS)
***Conclusion: Significant reduction in local recurrences, tendency to OS benefit

*'''Medical Research Council''' (1986-93)
**Randomized. 308 pts. Were pN1 or pN2. Randomized after surgery +/- RT 40 Gy in 15 fx. 
**'''1996''' PMID 8761382 &amp;mdash; &quot;The role of post-operative radiotherapy in non-small-cell lung cancer: a multicentre randomised trial in patients with pathologically staged T1-2, N1-2, M0 disease. Medical Research Council Lung Cancer Working Party.&quot; Stephens RJ et al. Br J Cancer. 1996 Aug;74(4):632-9.
***Overall, no survival difference. On subgroup analysis, trend to survival benefit for N2 pts (21% vs 36% at 3 yrs, p=0.18). No benefit in N1 pts.

*'''France''' (1985-91)
**Randomized. 163 pts, T2N0. Randomized to RT 60 Gy or no further treatment.
**'''1996''' PMID 8784014 &amp;mdash; &quot;Postresection irradiation for T2 N0 M0 non-small cell carcinoma: a prospective, randomized study.&quot; Lafitte JJ et al. Ann Thorac Surg. 1996 Sep;62(3):830-4.
***No difference in survival, OS 44.2% (survival figures not given for each arm). No difference in local or distant mets. 

*'''Lung Cancer Study Group 773'''
**Randomized. 230 pts. Resected squamous cell carcinoma, Stage II or III. Randomized to +/- RT 50 Gy to mediastinum.
**'''1986''' PMID 2877397 &amp;mdash; &quot;Effects of postoperative mediastinal radiation on completely resected stage II and stage III epidermoid cancer of the lung.&quot; The Lung Cancer Study Group. N Engl J Med. 1986 Nov 27;315(22):1377-81. 
***Local recurrences were reduced: 20% vs 1% local failure, but overall treatment failures were the same. 
***Conclusion: Improved LR, but no effect on survival.

*''Van Houtte'' (1966-1975)
**224 pts. N0. Randomized after resection to RT (60 Gy) vs observation.
***'''1980''' PMID 6998936 &amp;mdash; &quot;Postoperative radiation therapy in lung cancer: a controlled trial after resection of curative design.&quot; Van Houtte P et al. Int J Radiat Oncol Biol Phys. 1980 Aug;6(8):983-6. 
***Survival was worse in the RT group: 5-ys OS 24% vs 43% (NS).

===Surgery + EBRT nonrandomized===
*'''SEER study''' (1988-2002)
**'''2007''' PMID 17620279 -- &quot;The risk of death from heart disease in patients with nonsmall cell lung cancer who receive postoperative radiotherapy: analysis of the Surveillance, Epidemiology, and End Results database.&quot; (Lally BE, Cancer. 2007 Jul 9; [Epub ahead of print])
***SEER database review. 6148 patients with pneumonectomy/lobectomy, with ipsilateral N+, s/p PORT
***Outcome: PORT use 1983-1988 HR for cardiac death 1.5 (SS), which is comparable to survival detriment reported by PORT Meta-Analysis; 1989-1993 HR for cardiac death 1.08 (NS)
***Conclusion: Risk of cardiac death from PORT declined, and no longer significant
**'''2006''' PMID 16769986 &amp;mdash; &quot;Postoperative Radiotherapy for Stage II or III Non-Small-Cell Lung Cancer Using the Surveillance, Epidemiology, and End Results Database.&quot;  (Lally BE et al. J Clin Oncol 2006 Jul 1; 24(19):2998-3006.) 
***SEER review. 7456 patients with Stage II-III, N0-N2, survival at least 4 months
***Overall, use of PORT had no impact on survival. 
***Nodal subset analysis: Significant improvement in N2 (HR = 0.855); significant worsening in survival for N0 (HR=1.17) and N1 (HR=1.097) patients
***Conclusion: significant benefit for N2, disadvantage for N0-1
***Editorial (PMID 16769984): Recommend risk group stratification, and further exploration of post-op RT
***Counterpoint (PMID 17264348): Editorialists too optimistic, post-op chemo now standard of care, and randomized CRT trial is badly needed
***European perspective (PMID 17327597): Design of a multi-national randomized prospective trial (Lung ART), target 700 N2 patients, surgery +/- 3D-CRT, chemo neoadjuvant or adjuvant

*'''ANITA'''
**''Retrospective analysis of prospective data.'' Full trial discussed under [[#Adjuvant chemotherapy]] below. Patients randomized to surgery +/- chemo, and PORT was recommended for pN+ pts (but not required). 232/840 (28%) received RT 45-60 Gy (8% of N0 pts, 35% of N1, 52% of N2).
**'''2008''' PMID 18439766 -- &quot;Impact of Postoperative Radiation Therapy on Survival in Patients With Complete Resection and Stage I, II, or IIIA Non-Small-Cell Lung Cancer Treated With Adjuvant Chemotherapy: The Adjuvant Navelbine International Trialist Association (ANITA) Randomized Trial.&quot; (Douillard JY, Int J Radiat Oncol Biol Phys. 2008 Apr 24 [Epub ahead of print])
***pN1: benefit for PORT if no chemo arm (median OS 2.2 years vs. 4.2 years), detriment for PORT if chemo arm (7.8 years vs. 3.9 years)
***pN2: benefit for PORT regardless of chemo arm; if no chemo (1.1 years vs. 1.9 years), if chemo (2.0 years vs. 3.9 years)
***Conclusion: Positive effect of PORT in pN2 patients, negative effect in pN1 patients who were treated with chemotherapy

*'''CALGB 9335 / ECOG''' (1994-99)
**'''2000''' &lt;u&gt;ASCO Abstract&lt;/u&gt;: &quot;Thorascopic wedge resection and radiotherapy for T1N0 non-small cell lung cancer (NSCLC) in high risk patients: preliminary analysis of a Cancer and Leukemia Group B and Eastern Cooperative Oncology Group Phase II trial&quot; Bogart JA et al. Proc ASCO 19:488a-1907, 2000.
**'''2005''' PMID 15821648, 2005 update: &quot;Video-assisted wedge resection and local radiotherapy for peripheral lung cancer in high-risk patients: the Cancer and Leukemia Group B (CALGB) 9335, a phase II, multi-institutional cooperative group study.&quot; Shennib H et al. J Thorac Cardiovas Surg, 129(4):813-8, 2005
***Incidence of +margins was 6% in T1N0, 23% in T2N0.
***Local control was &gt;90%, but there was a 25% incidence of radiation induced pneumonitis.

*'''U Pennsylvania, 2001''' PMID 11579111 -- &quot;Risk of death from intercurrent disease is not excessively increased by modern postoperative radiotherapy for high-risk resected non-small-cell lung carcinoma.&quot; (Machtay M, J Clin Oncol. 2001 Oct 1;19(19):3912-7.)
**Retrospective. 202 patients, most with Stage II-III, 41% positive/close SM. Median RT 55 Gy. Median F/U 2 years, 5.2 years for survivors
**4-year outcomes: OS 34%; LC 84%; FDM 37%
**Intercurrent disease deaths: 12% (comparable to matched population at 10%). Dose-response: risk of intercurrent death 2% if &lt;54 Gy; 17% if &gt;=54 Gy
**Conclusion: Moderen post-op RT does not increase risk of deaths

*'''Mayo''' (1987-93) - N2 disease
**Retrospective. 224 patients. IIIA-N2 completely resected. Post-op RT in 88 patients (40%) to median dose 50.4 Gy. Median F/U 3.5 years for patients alive
**'''1997''' PMID 9338463 &amp;mdash; &quot;The impact of surgical adjuvant thoracic radiation therapy for patients with nonsmall cell lung carcinoma with ipsilateral mediastinal lymph node involvement.&quot; Sawyer TE et al. Cancer. 1997 Oct 15;80(8):1399-408.
***4-year outcome: OS RT 43% vs. no RT 22% (SS); LR 60% vs. 17% (SS)
***Conclusion: Adjuvant RT may improve local control and OS
**'''1997''' PMID 9386711 &amp;mdash; &quot;Effectiveness of postoperative irradiation in stage IIIA non-small cell lung cancer according to regression tree analyses of recurrence risks.&quot; Sawyer TE et al. Ann Thorac Surg. 1997 Nov;64(5):1402-7.
***Regression tree analysis to stratify patients into high/intermediate/low risk of LR and death
***Risk groups: high (both superior (Station 1-6) and inferior (Station 7-9) N2 mediastinum involved), intermediate (positive high OR low N2 mediastinum, AND positive N1 nodes, low (everyone else)
***Conclusion: Patients at high or intermediate risk for LR and death are likely to benefit from post-op RT

===Post-op RT Technique===
*'''Shanghai, 2014''' (2005-11) PMID 24529715 -- &quot;Patterns of Local-Regional Failure in Completely Resected Stage IIIA(N2) Non-Small Cell Lung Cancer Cases: Implications for Postoperative Radiation Therapy Clinical Target Volume Design.&quot; (Feng W, Int J Radiat Oncol Biol Phys. 2014 Apr 1;88(5):1100-7.)
**250 pts with pN2 disease s/p resection who did not receive PORT. 173 of 250 (69%) had disease recurrence. 54 had LRF as first event; of these 48, had recurrence within the proposed PORT CTV. 
**Conclusion: &quot;Ipsilateral superior mediastinal recurrences dominated for right-sided tumors, whereas left-sided tumors frequently involved the bilateral superior mediastinum. Most of the LRF sites would have been covered by the proposed PORT CTV. A prospective investigation of patterns of failure after PORT (following our proposed CTV delineation guideline) is presently underway and will be reported in a separate analysis.&quot;

*'''Lung Adjuvant Radiotherapy Trial (Lung ART), 2012''' PMID 19560881 -- &quot;Variations in target volume definition for postoperative radiotherapy in stage III non-small-cell lung cancer: analysis of an international contouring study.&quot; (Spoelstra FO, Int J Radiat Oncol Biol Phys. 2010 Mar 15;76(4):1106-13.)
**Contouring study. 
**Conclusion: &quot;Even among experts, significant interclinician variations are observed in PORT fields. Inasmuch as contouring variations can confound the interpretation of PORT results, mandatory quality assurance procedures have been incorporated into the current Lung ART study.&quot;

*'''Meta-analysis, 2007''' PMID 17507176 -- &quot;Estimating the magnitude and field-size dependence of radiotherapy-induced mortality and tumor control after postoperative radiotherapy for non-small-cell lung cancer: Calculations from clinical trials.&quot; (Miles EF, Int J Radiat Oncol Biol Phys. 2007 May 14)
**Model developed to describe field-size effect on OS. Data from trials above that did not include chemo
**Results: RT-induced mortality proportional to cube of field size
**Conclusion: Smaller RT fields, tailored to treat areas at risk, provide highest therapeutic ratio

*'''Duke, 2006''' PMID 16682136 -- &quot;Patterns of failure after resection of non-small-cell lung cancer: implications for postoperative radiation therapy volumes.&quot; (Kelsey CR, Int J Radiat Oncol Biol Phys. 2006 Jul 15;65(4):1097-105. Epub 2006 May 6.)
**Retrospective, 61 pts s/p resection with negative margins, no RT, with first recurrence at a locoregional site (+/- distant metastasis). Surgery was lobectomy in 69%, wedge in 23%, pneumonectomy in 8%. Most did not receive neoadj/adj chemo (13%). 
***Most pts presented with pathologic Stage I disease (i.e. not PORT candidates).
**44% presented with LRR without DM. Site of failure was brochial stump / staple line (44%), more common after a wedge resection (79% vs 34%). Mediastinum 70%, ipsi hilum 23%, supraclav 8%. Supraclav involvement more common in those who were pN1-2 vs pN0, whereas mediastinal and hilar involvement did not vary based on pN status. 
**Patterns of failure demonstrate a fairly predictable pattern based on the involved lobe.
**Left-sided tumors: more frequent involvement of contralateral mediastinum. 
**Small RT fields that cover the surgical stump, ipsi hilum, and lower ipsi mediastinum would encompass at least 60% of failure sites.
**Conclusion: &quot;These data may help clinicians construct postoperative RT volumes that are smaller than ones traditionally utilized, which may improve the therapeutic ratio.&quot;

==Limited Surgery + Radiation==
===Adjuvant Brachytherapy===
*''Please see the [[Radiation_Oncology/Lung/NSCLC/Lung_Brachytherapy|Lung Brachytherapy]] page


===Adjuvant External Beam===
*'''CALGB 9335''' (1995-1999) PMID 15821648 -- &quot;Video-assisted wedge resection and local radiotherapy for peripheral lung cancer in high-risk patients: the Cancer and Leukemia Group B (CALGB) 9335, a phase II, multi-institutional cooperative group study.&quot; (Shennib H, J Thorac Cardiovasc Surg. 2005 Apr;129(4):813-8.)
**Phase II. 58 patients with clinical T1 and poor cardiopulmonary status (FEV1 &lt;40%, DLCO &lt;50%, max O2 consumption &lt;45 mmHg. Treated with VAR + adjuvant RT 56/28. If incomplete resection RT 66/33. Target volume staple line or clip markings + 2cm margin (max field size 7x7 cm)
**Surgery: pathology benign 17%, upstaged to T2+ 28%. Conversion to thoracotomy in 17%. SM+ in 9%. Operative failure 29%. 
**Surgery complications: Operative mortality 4%, prologned air leak 10%
**RT results: 32 pathologic T1, 28 received RT. Median OS 27 months
**RT complications: severe dyspnea 11%, moderate pneumonitis 4%, moderate neurologic 4%
**Conclusion: Clinical staging inaccurate in 45%, VAR high failure rate
**Comment: Adjuvant RT was felt to have too high a rate of persistent severe dyspnea to be clinically worthwhile

==Surgery +/- adjuvant chemotherapy==
*Historically, a number of prospective trials was negative
*A meta-analysis in 1995 showed a small (5% at 5 years), but non-significant benefit
*Three out of five trials published in early 2000's were positive, and have markedly impacted clinical practice; however, majority of patients were Stage II-III 
*CALGB trial 9633 looking specifically at Stage IB (T2N0) was stopped early since there was a survival benefit on initial analysis, but final results were non-significant. Conversely, a Japanese trial and an Italian trial in Stage I showed a survival benefit
*It is not clear whether adjuvant chemotherapy should be used for Stage IB; data is somewhat murky and discussion in CALGB 9633 paper suggests that while adjuvant chemotherapy should not routinely be used in Stage IB, it can be a treatment option in tumors &gt;= 4cm
*Meta-analysis of cisplatin-based trials using individual patient data (CALGB trial excluded) showed composite OS benefit of 5% at 5 years, consistent with prior meta-analysis. However, hazard ratios for Stage IA and IB were not significantly better
*Cisplatin-vinorelbine combination was used in most of the positive trials, and is thus preferable in absence of clear equivalence data for other agents 


'''''Meta-Analysis'''''
*'''NSCLC Collaborative Group; 2010''' PMID 20338627 -- &quot;Adjuvant chemotherapy, with or without postoperative radiotherapy, in operable non-small-cell lung cancer: two meta-analyses of individual patient data.&quot; ([No Author], Lancet. 2010 Apr 10;375(9722):1267-77.)
**Meta-analysis. 34 trials and 8447 patients, individual data. 
**Outcome: Benefit of adding chemotherapy after surgery (HR 0.86, SS) with absolute OS benefit at 5 years of 4% (60% to 64%). Benefit of adding chemotherapy after surgery + PORT (HR 0.88, SS), absolute OS benefit at 5 years of 4% (29% to 33%)
**Conclusion: Addition of adjuvant chemotherapy after surgery improves survival, regardless if post-op RT was used
*'''LACE Collaborative Group; 2008''' PMID 18506026 -- &quot;Lung adjuvant cisplatin evaluation: a pooled analysis by the LACE Collaborative Group.&quot; (Pignon JP, J Clin Oncol. 2008 Jul 20;26(21):3552-9. Epub 2008 May 27.)
**Individual patient data from 5 trials since last meta-analysis. 4584 patients, treated with cisplatin-based chemotherapy. Median F/U 5.2 years
**Outcome: 5-year OS chemotherapy benefit 5.4% (HR 0.89, p=0.005). 
**By Stage: Hazard Ratio for Stage IA 1.4 (NS), IB HR 0.93 (NS), II HR 0.83 (SS), III 0.83 (SS)
**Conclusion: Adjuvant cisplatin-based chemotherapy significantly improves survival in patients with NSCLC

*'''MRC; 1995''' PMID 7580546 &amp;mdash; &quot;Chemotherapy in non-small cell lung cancer: a meta-analysis using updated data on individual patients from 52 randomised clinical trials. Non-small Cell Lung Cancer Collaborative Group.&quot; BMJ. 1995 Oct 7;311(7010):899-909. 
**Alkylating agents alone or with RT reduced OS. Cisplatin/RT was no better than RT alone. 
**Cisplatin without RT (compared to observation) resulted in 13% reduction in death,  5% improvement in 5-year OS, but statistically insignificant (p=0.08).


'''''Randomized Evidence'''''
*'''CHEST (Chemotherapy for Early Stages Trial)''' (2000-2004) -- preop gemcitabine + cisplatin
**Phase III. 270 pts. Stages I (excluding T1N0), II, or IIIA (T3N1 only). Randomized to: 1) 3 cycles of preoperative gemicitabine + cisplatin followed by surgery, or 2) surgery alone.
**'''2012''' PMID 22124104 -- &quot;Randomized Phase III Study of Surgery Alone or Surgery Plus Preoperative Cisplatin and Gemcitabine in Stages IB to IIIA Non-Small-Cell Lung Cancer.&quot; (Scagliotti GV, J Clin Oncol. 2012 Jan 10;30(2):128-131.)
***Closed early (closed in 2004 after results of 3 randomized trials of adjuvant chemotherapy were released.) 
***Median f/u 3.3 yrs. HR of PFS 0.70 and for OS 0.63, both SS. 
***PFS: 3-yr PFS 52.9% vs 47.9%. No significant benefit for Stages IB/IIA. PFS benefit for Stages IIB/IIIA (HR 0.51), median PFS 4.0 yrs vs 1.1 yr; 3-yr PFS 55.4% vs 36.1%. 
***OS: MS 7.8 yr vs 3.8 yr. 3-yr OS 67.6% vs 59.8%. No benefit for Stages IB/IIA. OS benefit for Stages IIB/IIIA (HR 0.42).
**Conclusion: although the study was terminated early, preop chemotherapy improved OS for stages IIB and IIIA.

*'''NATCH; Spain''' -- 3 arm: 1) Surgery alone vs 2) Preoperative Chemo + Surgery vs 3) Surgery + Adjuvant Chemo
**624 pts, Stage IA(&gt;2cm), IB, II, or T3N1 (IIIA). Randomized prior to surgery. Chemo (neoadj or adj) 3 cycles of carboplatin + paclitaxel.
**'''2010''' PMID 20516435  -- &quot;Preoperative Chemotherapy Plus Surgery Versus Surgery Plus Adjuvant Chemotherapy Versus Surgery Alone in Early-Stage Non–Small-Cell Lung Cancer&quot; (Felip E, J Clin Oncol. 2010 Jul 1;28(19):3138-45.)
***''Preop:'' 97% received chemo, Median 3 cycles. Response rate 53.3%. ''Adjuvant:'' 66% received chemotherapy. 
***Overall, 94% completed surgery. No differences in surgical procedures or postoperative mortality between groups. 
***Non-significant trend for improved DFS for preop chemo vs surgery alone (5-yr DFS 38.3% v 34.1%; HR 0.92). DFS for adjuvant chemo vs surgery alone, 36.6% vs 34.1%.
***Conclusions: No statistically significant differences in disease-free survival were found with the addition of preoperative or adjuvant chemotherapy to surgery. More patients were able to receive chemotherapy in the neoadjuvant setting.
**'''2007''' [http://meeting.ascopubs.org/cgi/content/abstract/25/18_suppl/7578 ASCO Abstract] 
***15% pN2. 

*'''Intergroup MRC LU22/NVALT/EORTC 08012''' -- 1) Surgery alone vs 2) Preoperative Chemo + Surgery
**519 pts (Stage I-61%, Stage II-31%, Stage III-7%). Chemotherapy was platinum based (1 of 6 regimens), 3 cycles.
**'''2007''' PMID 17544497 -- &quot;Preoperative chemotherapy in patients with resectable non-small cell lung cancer: results of the MRC LU22/NVALT 2/EORTC 08012 multicentre randomised trial and update of systematic review.&quot; (Gilligan D, Lancet.  2007 Jun 9;369(9577):1929-37.)
***75% received all 3 cycles of chemotherapy. Response rate 49%, down-staging in 31%. No differences in surgical procedures or postoperative mortality between groups. No difference in OS (HR 1.02)
***Update of Meta-analysis: 1507 pts. 12% relative survival benefit with the addition of neoadjuvant chemotherapy (HR 0.88, p=0.07), absolute benefit in survival of 5% at 5 years.
**'''2007''' [http://meeting.ascopubs.org/cgi/content/abstract/25/18_suppl/7518 ASCO Abstract]
**Conclusion: No evidence of difference in overall survival with the addition of neoadjuvant chemotherapy to surgery. However, meta-analysis suggests a 5% improvement in survival at 5 years.

*'''CALGB 9633''' (1996-2003) -- Surgery +/- paclitaxel and carboplatin
**Randomized. ''Stopped early after interim analysis showed survival benefit.'' 344 patients (target 500). NSCLC, T2, pN0 by mediastinoscopy, resected with lobectomy/pneumonectomy. Arm 1) adjuvant paclitaxel 200 mg/m2 + carboplatin AUC 6 Q3W x4 cycles vs. Arm 2) observation. Primary endpoint OS
**'''2008''' PMID 18809614 -- &quot;Adjuvant Paclitaxel Plus Carboplatin Compared With Observation in Stage IB Non-Small-Cell Lung Cancer: CALGB 9633 With the Cancer and Leukemia Group B, Radiation Therapy Oncology Group, and North Central Cancer Treatment Group Study Groups.&quot; (Strauss GM, J Clin Oncol. 2008 Sep 22. [Epub ahead of print]) Median F/U 6.2 years
***Outcome: median OS chemo 7.9 years vs. observation 6.5 years (NS); 5-year OS 60% vs. 58% (NS); 5-year DFS 52% vs. 48% (NS). Subgroup analysis: survival difference for tumors &gt;=4cm
***Toxicity: Grade 3/4 neutropenia in 35%
***Conclusion: Negative trial, adjuvant chemo should not be standard of care in Stage IB. Survival advantage for large tumors on subset analysis

*'''International Adjuvant Lung Trial (IALT)''' (1995-2000) -- Surgery +/- cisplatin and vinca alkaloids
**Randomized. ''Terminated early due to slow accrual.'' 1867 patients (target 3300). Stages I-III (Stage I 36%, Stage II 24%, Stage III 40%), complete resection. Arm 1) Adjuvant cisplatin with either etoposide (in 56%) or vinca alkaloid (vinorelbine, vinblastine, vindesine) x3-4 cycles. ~25% also received RT based on institutional preference. 
**'''2004''' PMID 14736927 &amp;mdash; &quot;Cisplatin-based adjuvant chemotherapy in patients with completely resected non-small-cell lung cancer.&quot; Arriagada R et al. N Engl J Med. 2004 Jan 22;350(4):351-60. Median F/U 4.7 years
***Outcome: 5-year OS chemo 44% vs. 40% control (SS); DFS 39% vs. 34% (SS). Also benefit for local control, distant control. However, no OS benefit on Stage I subset analysis (HR 0.95, NS)
***Toxicity: 1% died due to chemo effects
***Conclusion: Cisplatin-based adjuvant chemo improves survival
**'''2006''' PMID 16957145 -- &quot;DNA repair by ERCC1 in non-small-cell lung cancer and cisplatin-based adjuvant chemotherapy.&quot; (Olaussen KA, N Engl J Med. 2006 Sep 7;355(10):983-91.)
***Expression of ERCC1. 761 tumors analyzed. 44% positive, 56% negative
***ERCC1 negative: 5-year OS 47% chemo vs. 39% control (SS). Median OS 56 months chemo vs. 40 months control (14 month benefit)
***ERCC1 positive: 5-year OS 40% chemo vs. 46% control (NS). Median OS 50 months chemo vs. 55 months control (NS)
***Conclusion: In completely resected NSCLC, patients with ERCC1- tumors benefit from cispaltin, while ERCC1+ tumors do not. ERCC1+ tumors have a better overall OS

*'''NCI-Canada JBR.10 / INT''' (1994-2001) -- Surgery +/- cisplatin and vinorelbine
**Randomized. 482 patients with Stage IB-II (T3 excluded), complete resection. Arm 1) Adjuvant cisplatin 50 mg/m2 and vinorelbine 25 mg/m2 Q4W x4 cycles vs Arm 2) observation. No RT given.
**'''5-years; 2005''' PMID 15972865 &amp;mdash; &quot;Vinorelbine plus Cisplatin vs. Observation in Resected Non–Small-Cell Lung Cancer.&quot; Winton T et al. N Engl J Med. 2005 June 23;352(25):2589-2597. Median F/U 5 years. 
***Outcome: Median OS chemo 7.8 years vs 6.1 years (SS); 5-year OS 69% vs 54%. Median RFS 61% vs. 49% (SS). Subgroup analysis showed no benefit for chemotherapy for Stage IB. 
**Conclusion: Improvement in overall survival 

*'''Adjuvant Navelbine International Trialist Association (ANITA)''' (1994-2000) -- Surgery +/- cisplatin and vinorelbine
**Randomized. 840 patients. Stage IB-IIIA (36% IB, 24% II, 39% IIIA), complete resection. Arm 1) Adjuvant Cisplatin 100mg/m2 + Vinorelbine 30mg/m2 x4 cycles vs Arm 2) observation. Post-op RT not mandatory, and done according to each center's policy (given to 28%)
**'''6-years; 2006''' PMID 16945766 -- &quot;Adjuvant vinorelbine plus cisplatin versus observation in patients with completely resected stage IB-IIIA non-small-cell lung cancer (Adjuvant Navelbine International Trialist Association [ANITA]): a randomised controlled trial.&quot; (Douillard JY, Lancet Oncol. 2006 Sep;7(9):719-27.). Median F/U 6.3 years
***Outcome: 5-year OS chemo 51% vs observation 43% (SS); decreased death by 21%. Median OS 5.5 years vs 3.6 years (SS). Median RFS 3.0 years vs 1.7 years (SS).  No benefit for Stage IB on subgroup analysis (5-year OS 62% vs 64%, NS).  For Stage II, 52% vs. 39%; Stage IIIA 42% vs. 26%. If N0, 58% vs. 61% (NS); if N1 52% vs. 36%; if N2 40% vs. 19%
***Toxicity: neutropenia 92%, febrile neutropenia 9%, toxic deaths 2%
***Conclusion: Adjuvant vinorelbine/cisplatin extends survival
**''See also:'' Radiotherapy from the ANITA trial (discussed under PORT section)

*'''Adjuvant Lung Project Italy (ALPI)''' (1994-1999) -- Surgery +/- MVP
**Randomized, multi-institutional. 1209 patients with Stage I-IIIA. Treated with 1) surgery + adjuvant mitomycinC/vindesine/cisplatin (MVP) vs. 2) Surgery alone. 43% also received RT.
**'''2003''' PMID 14519751 &amp;mdash; &quot;Randomized study of adjuvant chemotherapy for completely resected stage I, II, or IIIA non-small-cell Lung cancer.&quot; Scagliotti GV et al. J Natl Cancer Inst. 2003 Oct 1;95(19):1453-61. Median F/U 5.4 years
***Median OS: no difference; PFS no difference. Elective RT: Arm 1 65% vs. Arm 2 82%
***Toxicity: only 69% received MVP x3 cycles
***Conclusion: No difference in outcomes
**Critique: MVP not a good regimen, with pulmonary toxicity of Mitomycin C

*'''Japan JLCRG''' (1994-1997) -- Surgery +/- uracil-tegafur (UFT)
**Randomized. 999 patients, pathologic Stage I adenocarcinoma. Arm 1) adjuvant oral uracil-tegafur (tegafur 250 mg/m2) x2 years vs. Arm 2) observation. Primary end point OS
**'''2004''' PMID 15102997 -- &quot;A randomized trial of adjuvant chemotherapy with uracil-tegafur for adenocarcinoma of the lung.&quot; (Kato H, N Engl J Med. 2004 Apr 22;350(17):1713-21.) Median F/U 6.1 years
***Outcome: 5-year OS UFT 88% vs. observation 85% (p=0.047). Stage IA 89% vs. 90% (NS), Stage IB 85% vs. 74% (SS).
***Toxicity: Grade 3 in 2%
***Conclusion: Adjuvant chemotherapy improves survival

*'''Rome Tor Vergata''' (1988-1994) -- Surgery +/- cisplatin and etoposide
**Randomized. 140 patients, Stage IB (pT2N0), sublobar (34%) or great resection. Arm 1) Adjuvant cisplatin 100 mg/m2 and etoposide 120 mg/m2 Q4W x6 cycles vs Arm 2) observation. Primary endpoint OS
**'''2006''' PMID 16550600 -- &quot;Postsurgical chemotherapy in stage IB nonsmall cell lung cancer: Long-term survival in a randomized study.&quot; (Roselli M, Int J Cancer. 2006 Aug 15;119(4):955-60.) Mean F/U 3.4 years
***Outcome: 5-year OS chemo 62% vs. observation 42% (SS). If anatomic resection, 75% vs. 50% (SS)); if sublobar resection, 40% vs. 39% (NS)
***Toxicity: Grade 3 in 18%
***Conclusion: Adjuvant chemotherapy may improve long-term survival in Stage IB

*'''Big Lung Trial''' (Surgical arm)
**'''2004''' PMID 15200998 &amp;mdash; &quot;Chemotherapy for patients with non-small cell lung cancer: the surgical setting of the Big Lung Trial.&quot; Waller D et al. Eur J Cardiothorac Surg. 2004 Jul;26(1):173-82.
**Randomized to chemotherapy vs observation. 3 cycles of chemotherapy q3week. Multiple cisplatin-based regimens. 
**No survival benefit.

==Adjuvant chemo vs. adjuvant chemo-RT==
*'''CALGB 9734''' - post-op chemo +/- RT
**Randomized. 37/44 patients. Completely resected Stage IIIA. Adjuvant paclitaxel x4 cycles, then 2-4 weeks later +/- RT. ''Closed early due to slow accrual''
**'''2007''' PMID 17311692 -- &quot;A phase III study of surgical resection and paclitaxel/carboplatin chemotherapy with or without adjuvant radiation therapy for resected stage III non-small-cell lung cancer: Cancer and Leukemia Group B 9734.&quot; (Perry MC, Clin Lung Cancer. 2007 Jan;8(4):268-72.)
***Outcome: Median DFS no RT 1.4 years vs. RT 2.8 years (NS); 1-year OS 72% vs. 74% (NS)
***Conclusion: Small study, no improvement in outcome

*'''INT 0115''' ECOG EST 3590 / RTOG 91-05 - chemo/RT vs RT
**Randomized. 488 patients. Stage II-IIIA. Cisplatin/etoposide x4 cycles + concurrent RT vs RT alone. Cisplatin 60 mg/m2, etoposide 120 mg/m2. RT 50.4/28
**'''2000''' PMID 11071672 &amp;mdash; &quot;A randomized trial of postoperative adjuvant therapy in patients with completely resected stage II or IIIA non-small-cell lung cancer.&quot; Keller SM et al. N Engl J Med. 2000 Oct 26;343(17):1217-22. 
***Outcome: median OS 3.2 years vs. 3.2 years (NS). In-field recurrence 13% vs. 12% (NS) 
***Toxicity: treatment-related mortality RT 1.2% vs. CRT 1.6%
***Conclusion: No difference in recurrence or survival.


'''Non-Randomized'''
*'''RTOG 97-05, 2005''' PMID 15908657 -- &quot;Phase II trial of postoperative adjuvant paclitaxel/carboplatin and thoracic radiotherapy in resected stage II and IIIA non-small-cell lung cancer: promising long-term results of the Radiation Therapy Oncology Group--RTOG 9705.&quot; (Bradley JD, J Clin Oncol. 2005 May 20;23(15):3480-7.)
**Phase II. 88 patients with II-IIIA, surgery + adjuvant paclitaxel/carboplatin + concurrent RT to 50.4/28. Boost of 10.8 Gy for ECE or T3. Median F/U 4.7 years
**Outcomes: median OS 4.7 years; 3-year OS 61%; LF in 15%
**Toxicity: acceptable
**Conclusion: Favorable survival compared to ECOG 3590 (INT 0115 above); suggest PIII trial

==SBRT==


*'''Pooled analysis of STARS (MD Anderson CC) and ROSEL (Dutch) trials; 2015''' (2008-2013)) PMID 25981812 -- &quot;Stereotactic ablative radiotherapy versus lobectomy for operable stage I non-small-cell lung cancer: a pooled analysis of two randomised trials&quot; (Chang J et al., Lancet Oncology. 2015 Jun;16(6):630-7)
**Pooled analysis of 2 Phase III studies that both did not meet accrural goals. 58 patients, operable T1-T2a N0 M0 NSCLC, &lt;4 cm diameter, 1:1 randomization SBRT vs surgery. STARS: SBRT 54/3 Gy peripheral, 50/4 Gy central lesions over 5 days; ROSEL: SBRT 54/3 Gy peripheral (5 -8 days), 60/5 Gy  central lesions (10-14 days);  .  Median F/U 3.4 years
**Outcome: 3-year OAS 95% (SBRT) vs 79% (Surgery) (p&lt;0.05)
**Toxicity:  SBRT:  Grade 3 in 10%, no grade 4/5; Surgery: grade 3/4 44%; 1pt Grade 5
**Conclusion: SBRT is better tolerated than surgery, SBRT might lead to better OAS; SBRT could be an option for operable Stage I NSCLC.

*'''Washington University; 2010''' (2000-2007) PMID 20400121 -- &quot;Stereotactic body radiation therapy versus surgical resection for stage I non-small cell lung cancer.&quot; (Crabtree TD, J Thorac Cardiovasc Surg. 2010 Apr 16. [Epub ahead of print])
**Retrospective. 462 patients with surgery (2000-2006) and 76 patients with SBRT (2004-2007), clinical Stage IA-IB NSCLC, staged with CT and PET. Surgical patients younger (SS), lower comorbidity (SS), better pulmonary function (SS), but higher stage (IA 63% vs 79%). Final path upstaging in 35%
**Outcome: Unmatched OS surgery 5-years 55% vs SBRT 3-years 32%. 3-year local control IA surgery 96% vs SBRT 89% (SS); no difference in IB local control. No difference in DSS. No difference in local control on propensity analysis 3-years 88% vs 90% (NS)
**Conclusion: Similar rates of local recurrence and disease specific survival on propensity analysis between surgery and SBRT

*'''William Beaumont; 2010''' (2003-2008) PMID 20065181 -- &quot;Outcomes After Stereotactic Lung Radiotherapy or Wedge Resection for Stage I Non-Small-Cell Lung Cancer.&quot; (Grills IS, J Clin Oncol. 2010 Jan 11. [Epub ahead of print])
**Retrospective. 127 patients with T1-T2N0 NSCLC treated with wedge resection (54%) or SBRT (46%); all ineligible for lobectomy. SBRT 95% inoperable, 5% refused surgery. Mean FEV1 wedge 1.4 vs SBRT 1.3 (NS), Charlson comorbidity 3 vs 4 (SS), age 74 vs 78 (SS). SBRT T1 48/4 and T2 60/5. Median F/U 2.5 years
**Outcome: Local recurrence wedge 20% vs SBRT 4% (p=0.07), no difference LRR, DM, or FFF. CSS wedge 94% vs SBRT 93% (NS). OS 87% vs 72% (SS). No difference between VATS and open surgery
**Conclusion: Both SBRT and wedge reasonable options for Stage I patients ineligible for lobectomy, with equivalent cancer-specific survival

*RCTs comparing surgery in medically operable early-stage NSCLC:
**ROSEL (Dutch): terminated due to poor accrual
**STARS (Cyberknife): terminated due to poor accrual
**RTOG 1021/ACOSOG Z4099: terminated due to poor accrual

==Review==
*'''2005''' PMID 16000604 -- &quot;Localized non-small cell lung cancer: adjuvant radiotherapy in the era of effective systemic therapy.&quot; (Bogart JA, Clin Cancer Res. 2005 Jul 1;11(13 Pt 2):5004s-5010s.)

==Guidelines==
*'''2007''' PMID 17954710 -- &quot;Cancer Care Ontario and American Society of Clinical Oncology adjuvant chemotherapy and adjuvant radiation therapy for stages I-IIIA resectable non small-cell lung cancer guideline.&quot; (Pisters KM,J Clin Oncol. 2007 Dec 1;25(34):5506-18.)</text>
      <sha1>gbyask55107f1kfed1q8v9j93005bae</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/Thorax</title>
    <ns>0</ns>
    <id>39892</id>
    <revision>
      <id>1937849</id>
      <parentid>1925773</parentid>
      <timestamp>2010-09-22T00:50:45Z</timestamp>
      <contributor>
        <username>Tdvorak</username>
        <id>7644</id>
      </contributor>
      <comment>/* Intro */  SVC link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Radiation Oncology:TOC}}


&lt;big&gt;'''Thoracic Tumors'''&lt;/big&gt;

*[[Radiation_Oncology/Thorax/Anatomy|Anatomy]]
*[[Radiation Oncology/NSCLC|Non-small cell lung cancer]]
*[[Radiation_Oncology/NSCLC/LCNEC|Large cell neuroendocrine carcinoma]]
*[[Radiation Oncology/SCLC|Small cell lung cancer]]
*[[Radiation_Oncology/Carcinoid/Lung|Carcinoid]]
*[[Radiation_Oncology/Mesothelioma|Mesothelioma]]
*[[Radiation_Oncology/Thymoma|Thymoma]]
*[[Radiation_Oncology/Benign/Amyloidosis|Tracheobronchial Amyloidosis]]
*[[Radiation_Oncology/Palliation/Lung_metastases|Lung metastases]]
*[[Radiation_Oncology/Mediastinal_mass|Mediastinal mass]]
*[[Radiation_Oncology/Palliation/SVC_Syndrome|Superior Vena Cava Syndrome]]
*[[Radiation_Oncology/Esophagus|Esophagus]]</text>
      <sha1>04heave6xqt5wvw6f90gqnz4famvqxt</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Ancient Civilizations/Indus Valley</title>
    <ns>110</ns>
    <id>39895</id>
    <revision>
      <id>3021249</id>
      <parentid>3020854</parentid>
      <timestamp>2015-12-02T14:47:10Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>Rejected the last 2 text changes (by [[Special:Contributions/202.22.195.82|202.22.195.82]]) and restored revision 2726230 by Syum90</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== What country did they live in? ==
The Indus Valley civilization existed in modern day India and Pakistan. It is sometimes known as ''Harrapan'', after the first site to be excavated in Pakistan or the ''Saraswati-Sindhu'' civilisation after the legendary ''Saraswati and Sindhu'' (Indus) rivers.

== What did they eat? ==
We have learned in recent studies that the people of the Indus Valley were excellent farmers. They grew cereal crops like wheat, rice and barley. They also had many fruits and they kept animals like cows and a type of buffalo for eating. In the center of the town was a granary for storing any extra grain that the whole town could use outside of the growing season. They ate very little meat but they ate shellfish and other fish.

== What did they wear? ==
The Indus valley people were the first in the world to spin cotton and woollen yarn. Needles and buttons have been found there. They knew the art of weaving and stitching. The men used to wear a loin cloth akin to a ''dhoti'' that is still worn by a large number of Indians, even today. The women wore a type of skirt and wrapped a shawl round their shoulders. Men and women, both rich and poor, wore ornaments. Necklaces, fillets, armlets and finger rings were common to both men and women. These ornaments were made of gold, silver, copper, bronze, ivory or shells. They usually moved around barefoot.

== What did their writing look like? ==
[[Image:IndusValleySeals.JPG|thumb|left|Seals from the Indus Valley]]

When seals from the Indus Valley were discovered, it was assumed that they contained the writing of the Indus Valley people. These stone seals were probably pressed into soft clay to mark people's possessions. Over 4,000 examples of the seals have been found, as well as 400 different signs. However, the script, called Indus script, remains undecipherable, though the seals most likely carried the names of the owners. 

There are several reasons as to why it cannot be deciphered. One is that linguists don't know what language family it belonged to. Another is that the average length of the inscriptions is less than five signs, the longest being one of only 26 signs. The third is that no text written in Indus and another known language has been found. All these factors make it difficult to figure out what the seals say.

From excavations of the Indus Valley, archaeologists have found female fertility statues. These statues indicate that they worshipped mother goddesses. These statues included depictions of ''Kali'' and ''Shakti''. Seals depicting animals, perhaps as objects of worship, have also been found. Finally, seals depicting the god ''Pashupati'' (''Shiv'') in a yogic posture have been discovered. It has not been proven yet but it is possible that some of the gods prevalent in South India, like ''Ayyappan'' and ''Murugan'', might also have been worshipped.

==Are some of them famous even today?==
''Shakthi/Kali'' are famous in the northern parts of India. In southern India, people pray to another form of the same goddess with different names, like ''Sakthi, Bhagavati'', ''Kali Amman'', etc. and male deities like ''Shiv, Murugan and Ayyappan''.

==What happened to them?==
Unfortunately, no one actually knows what happened to Indus Valley Civilization, though the main theories of their extinction are:
#Natural disasters like earthquakes or floods.
#Environment changes due to deforestation
#Internal wars or poor administration.
#External aliens from the Aryans or other Central Asian hordes.
#Last but not least desertification of the Indus estuary, the retreat of the sea and parts of the Indus silting up with sand, leaving the early 5500 BC Harappa civilization in ruins. For a long time, it was thought that the civilization was destroyed by invading nomadic tribes, but most historians today doubt that theory. 
Many skeletons of people who had died violently and had been left in streets and houses to rot have been found in Mohenjo-daro, one of the major cities of Indus Valley Civilization. It is estimated that the cities were destroyed in about 1500 BC.

{{BookCat}}
[[fi: Wikijunior Muinaiset kulttuurit/Induskulttuuri]]</text>
      <sha1>5f0vsfu328u8dofrsqkvrx5ihkigk8z</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Japanese/Lessons/Other uses of particles</title>
    <ns>1</ns>
    <id>39897</id>
    <revision>
      <id>1926561</id>
      <parentid>1110607</parentid>
      <timestamp>2010-09-02T17:45:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Adding {{WikiProject Languages}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{WikiProject Languages}} 

Sorry, but the last example was, er, not correct Japanese and I commented it out.

At first, the correct sentence for &quot;the new self I see in my dreams is strong but kind.&quot; is,
:ぼく が ゆめ に みる あたらしい じぶん は つよい けど やさしい (or つよくて やさしい)

Thus, when you separate this into parts, perhaps,
#ぼくが ゆめに みる あたらしい じぶん - the new self I see in my dreams (noun part)
# () は つよい けど やさしい - () is strong but kind

I cannot evaluate whether or not this correct one can be used as an example here, since I lack grammatical abilities... - [[User:Marsian|Marsian]] / [[User talk:Marsian|talk]] 03:53:52, 2005-09-04 (UTC)

: I agree about &quot;kedo&quot; in this example. other changes are not needed. the accent of this sentence is not that *I* see that new self in the dreams (that would justify the &quot;buku ga&quot; part), but rather that the new self of my dreams is such and such. thanks though for &quot;kedo&quot; - i really messed that part --[[User:Lastguru|lastguru]] 08:42, 4 September 2005 (UTC)

:: I agree with Marsian's proposed changes. The word order is strange. Did you take this example from a song or poem? Also, wouldn't つよくてやさしい mean ''strong and kind'' instead of ''strong but kind''?

:: The ''boku ga'' is not emphasizing ''boku''. It's just that ''ga'' is used to mark the subject in subordinate clauses, where ''wa'' cannot be used.  [[User:ToothingLummox|ToothingLummox]] 18:41, 4 September 2005 (UTC)

::: OK, OK, I admit, I took the idea of construction of this example from a song. It goes &quot;Naritai jibun yume ni miru no wa ...&quot; (look in the google yourself). I am an awful in making examples. I have one person who promises to make examples... still no real results out of her except for excuses... If you want, you can start making examples for the future themes... I am going to research the point of using &quot;boku ga&quot; there some more. About the meaning of &quot;kedo&quot;: I had &quot;demo&quot; from the beginning, which seems to be plain wrong, so I relied on Marsian's advice... are you suggesting that he is also wrong? --[[User:Lastguru|lastguru]] 20:34, 4 September 2005 (UTC)

::::I'm not sure what you mean about me suggesting that Marsian is wrong. Do you mean  つよくてやさしい vs つよい&lt;u&gt;けど&lt;/u&gt;やさしい? I think that there is a very slight difference of meaning between the two. Here's what I think. The one without ''kedo'' is ''strong and kind''. The one with ''kedo'' is ''strong but kind''. I think either is grammatical, but you should trust Marsian's native ear. Consider ''a cute and dirty child'' vs ''a cute but dirty child''. They mean alsmost the same thing, but the second is more natural in most situations. [[User:ToothingLummox|ToothingLummox]] 23:11, 4 September 2005 (UTC)

Isn't ''kirei'' an adjective? And isn't ''na'' used after na-adjectives, not nouns? 

: There are no adjectives as such in Japanese, and it is misleading to call them adjectives. They are either attributive nouns, or attributive verbs. In both cases they act like nouns and verbs correspondingly. There is much confusion over this theme inspired by most text books, but I am not going to support that confusion. What acts like a noun is a noun; what acts like a verb is a verb. Unless you convince me that I am wrong... --[[User:Lastguru|lastguru]] 20:34, 4 September 2005 (UTC)

::Let's compare ''kirei'' (clean), ''midori'' (green), and ''semai'' (small) in front of a noun:
::: ''kirei &lt;u&gt;na&lt;/u&gt; heya''           (a clean room)
::: ''midori &lt;u&gt;no&lt;/u&gt; heya''        (a green room)
::: ''semai heya''                             (a small room   note: ''semai'' = narrow, and is used to mean small in two dimensions)
:: Clearly they connect to the noun differently. ''kirei'' is not the same thing as a &quot;true&quot; noun.

::: hmm... Thank you for pushing me to the research, and these examples... I would have not chosen better ones :). I knew, I knew we will find something fishy during the course, something that is described misleadingly or not at all in most text books. One of these things seem to be &quot;no&quot; and &quot;na&quot; relations. why do you think kirei is more adjective then midori? the four classic colors (akai, aoi, shiroi and kuroi) are attributive verbs (i-adjectives), not nouns (well, actually they do have a noun form: aka, ao, shiro and kuro, but that's another story). The reason &quot;no&quot; is used there as I understand is that there is perhaps a subtle difference between these colors and other nouns... most other nouns may be put in both &quot;na&quot; and &quot;no&quot; constructions. Basically, &quot;no&quot; and &quot;na&quot; are of a very close meaning and the description I gave for the &quot;no&quot; should be corrected (it is not an indication of possession, and has never been). Both particles transforms a noun to an attribute. This page: http://www.kortlandt.nl/publications/art191e.pdf says that &quot;na&quot; means a direct attribute (???such that the object possesses by itself???), while &quot;no&quot; - indirect (???such attributes or evaluations that we are giving to the object???). More discussion on this topic would be appreciated.  --[[User:Lastguru|lastguru]] 17:24, 8 September 2005 (UTC)

:::: For the time being, let's try to avoid using words like &quot;adjective&quot; and &quot;noun&quot; and &quot;verb&quot;. What I'm trying to point out is that there are different kinds of words, and they need to be distinguished. ''-no'' and ''-na'' for the most part do not attach to the same words. When they do, there is usually a change in meaning. And after all, it is possible for a word to belong to more than one part of speech (English ''book'' is both a noun and a verb). 

::::: It is pretty obvious that when you attach different particles to the same words you get different meanings, isn't it? And we will not be able to avoid naming word classes as we need to differentiate words. Until now I am sure that nouns and verbs should go separate as their usage is completely different. So we can use these names. As for adjectives, we can hang with the proposed classifiers (attributive nouns and attributive verbs) just because the usage of these attributive words are too much like the nouns/verbs than would be possible to separate. --[[User:Lastguru|lastguru]] 01:01, 9 September 2005 (UTC)

:::::: I missed this part of your post before. So then we agree that not all &quot;nouns&quot; are identical? That there are &quot;normal&quot; nouns and &quot;attributive&quot; nouns? The distinction is very important to make. 
::::::# purely &quot;normal&quot;: The vast majority of nouns simply cannot take ''-na''. Also, I'm fairly sure these same words cannot be made into adverbs by adding ''ni''.
::::::# purely &quot;attributive&quot;: There are some words that can only take ''-na''. These words cannot serve as &quot;normal&quot; nouns, but at least some of them can become adverbs.
::::::# both?: Those words that take ''-na'' sometimes (often? but definitely not always) can also take ''-no'', but it seems to me that the meaning is often quite different (it's as though it were a &quot;normal&quot; noun). Additionally, it seems to me that these dual ''na''/''no'' words are able to function as &quot;normal&quot; nouns in sentences. All of this suggests to me that these dual words are both &quot;normal&quot; nouns and &quot;attributive&quot; nouns.

:::::: Anyway, my amateur linguistics aside, do we agree on the basic point that ''-na'' and ''-no'' words need to be distinguished? And that some words can take either ''-na'' or ''-no'' but that the meaning tends to change? Pretty much everything beyond that is more than the students need to know. What to call the adjective-type words should probably be discussed on the japanese-wiki group. [[User:ToothingLummox|ToothingLummox]] 04:29, 9 September 2005 (UTC)

::::::: Same as countable and uncountable nouns, animate and inanimate nouns, these two categories may as well be distinguished, as there are some slight diffeences in usage. The &quot;-na&quot; particle is nevertheless used more often than we may ever point out, as it is used in process of creating new words (in other words, it is a normal process, natural development of the language, for a &quot;pure&quot; noun, or how would you call this, to become used also with &quot;-na&quot;). You may count this as &quot;yes&quot; and start putting such comments in the vocabulary given on the previous pages. --[[User:Lastguru|lastguru]] 12:34, 10 September 2005 (UTC)

:::: In the link you pointed out, words were chosen that can take both ''-no'' and ''-na'' in order to focus on the difference between the two. I don't think you'll find many cases of ''kirei no'' or ''midori na''. You also won't find ''genki no'' or ''byouki na''. And you defintely won't find ''sensei na'' or ''kuruma na'' but you will find both ''sensei no'' and ''kuruma no''.

::::: Well, that is obvious too that some words are more commonly used as are direct objects, some - as indirect objects, and some can work in both situations. Lets compare two words in English: child and heaven. how they are different? they are both nouns, aren't they? but if you want, for example, to say that something has properties of a child, you would say &quot;childish&quot;; when you would point out properties of a heaven, you would say &quot;heavenly&quot;. Then there are countable and uncountable nouns, like cat and time. Would you classify the examples I gave into diferent parts of speech? no, you give then names such as &quot;countable noun&quot;. And as much as some nouns like &quot;-no&quot; and some - &quot;-na&quot;, some nouns in English like &quot;much&quot; and some - &quot;many&quot;. As for your examples... well maybe some of them are appropriate although you are pointing out they are not. quich google search (and i was looking for romaji!) reveils for example this: http://www.waxinlyrical.com/lyrics/kireinayozora-angelastellv.html ,  http://www.imdb.com/title/tt0161610/ , and I was too lazy to check other words. So you see, the combinations are legitimate.  --[[User:Lastguru|lastguru]] 01:01, 9 September 2005 (UTC)

:::::: Well, the ''kirei no'' example you found is a typo. Both the page url and the lyrics in the song itself have ''kirei na''. The ''genki'' example I gave wasn't so good, however. ''genki'' can defintely be used as a noun (it was even one of the examples on that page you gave). ''genki no kamisama'' means ''the god of vitality'' or somesuch. The meaning is quite different from ''genki na kamisama'', which would be more like ''an energetic god''. Oops. Anyway, bad example aside, I stand by everything I wrote.

:::::: P.S. searching in romaji is probably not the best way to find reliable examples of Japanese.   ;)
:::::: -- [[User:ToothingLummox|ToothingLummox]] 02:11, 9 September 2005 (UTC)

::::::: I know romaji search is no the best thing, but my Japanese comprehension abilities are still very limited, unfortunately. The main problem is that I do not know much words, grammar is lesser problem for me. If you do not have such a problem, try searching for &quot;みどりな&quot; in the google - there are some matches, which I was too lazy to translate. Anyway, I stand by everything I wrote too, so lets just stand there and observe each other from the distance? The ultimate goal of the course is to make students aware of Japanese like of their native language, btw. --[[User:Lastguru|lastguru]] 12:34, 10 September 2005 (UTC)

:::::::: Google hits
:::::::::みどりの: 2.5 million
:::::::::みどりな: 895
:::::::::: of which some are the ''na'' we are looking for and some are
::::::::::: ''midori nakayoshi''    96   getting along with green (or is it a girl named Midori?)
::::::::::: ''midori nakamachi'' 21   station name
::::::::::: ''midori nakama''  16   green bunch
::::::::::: ''midori nara''  12 if it's green
::::::::::: ''midori nado'' 7    green, etc.

::::::::Using kanji:
::::::::: 緑の: 2.2 million
::::::::: 緑な: 60,000
:::::::::: of which 
::::::::::: ''waga tani wa midori nariki'' 15,100  movie title &quot;How green was my valley&quot; 
::::::::::: ''〜wa midori nariki'' 834   how green was 〜
::::::::::: ’’midori nado''         100   green, etc.

::::::::: 先生の: 3.5 million
::::::::: 先生な: 162,000
:::::::::: ''sensei na no'': 50,000 Is (someone) a teacher? and similar
::::::::::''sensei nan''      1,000 verbal contraction of above
:::::::::: ''sensei nara''        523 If someone is a teacher

::::::::: ピンクの (pink) 3.6 million
::::::::: ピンクな 140,000

:::::::::: きれいの: 97,000 interestingly most of them apparently related to cosmetics (e.g., &quot;the secret of ''kirei''&quot;, &quot;the school of ''kirei''&quot;)
:::::::::: きれいな: 3 million

::::::::: Anyway, these results are interesting. It seems to me that what we are seeing here is largely a break between more formal and more informal/playful uses of the language. Performing the same searches on a corpus like [[http://www.alc.co.jp Eijiro]] does not turn up the less common forms. In any case, simply saying that ''-na'' turns nouns into adjectives (as the lesson originally said) is totally inadequate.

::::::::: These results also bring us to issues of what kind of Japanese we want to teach here. This issue really needs to be addressed, and soon.
::::::::: Also, saying that the students should become &quot;aware of the language like native speakers&quot; is a bit (just a bit) ambitious and a bit odd. It's too ambitious to be useful to those of us contributing to the course. It's odd because you haven't defined which native speaker you are talking about. Additionally, native speakers don't think about all of the grammar, linguistics, etc. The goal and audience of the course really need to be discussed (as I have been pushing for).
 
::::::::: -[[User:ToothingLummox|ToothingLummox]] 17:52, 10 September 2005 (UTC)

:::: You also won't often see ''kirei'' preceding particles like ''ga'' and ''wo''.

::::: I have, I have heard that. There is a cute song in Inu Yasha anime: &quot;Kirei wa kitanai, Kitanai wa kirei, Ii wa warui, Warui wa ii, Shinuru wa ikiru, Ikiru wa shinuru&quot;. --[[User:Lastguru|lastguru]] 01:01, 9 September 2005 (UTC)

:::::: I did write &quot;often&quot;. In the examples above you have every old thing in front of the particle. This is not really normal. (&quot;clean is dirty, dirty is clean...&quot;) On the other hand, it is not in the least strange to place ''midori'' in front of ''ga''. (''midori ga utsukushii'' Green is beautiful).  (btw should ''shinuru'' be ''shinu''?) 
:::::: P.S. Be careful when using songs as examples. Language tends to be freer and poetic in songs and poems.
:::::: --[[User:ToothingLummox|ToothingLummox]] 02:11, 9 September 2005 (UTC)

::::::: The song I posted is spelled correctly. &quot;shinuru&quot; is a classical rentaikei form of &quot;shinu&quot;. You can read up on this here: http://www.classical-japanese.net/Grammar/verbs.html . Regarding songs and classic literature, I think students should be able to comprehend these by the end of the course. The living language is not only official papers and modern TV news broadcarts, but also the legacy form old times. There should be no problems for students to read poems and classic literature, as well as historical movies. --[[User:Lastguru|lastguru]] 12:34, 10 September 2005 (UTC)

:::: --[[User:ToothingLummox|ToothingLummox]] 23:24, 8 September 2005 (UTC)

:: Notice that ''semai'' conjugates differently from &quot;normal&quot; verbs like ''kariru'' (to rent), etc. Take the past tense:
::: ''semakatta''                              (was small)
::: ''karita''                                     (rented)

::: yeah, and why does the group 1 verbs conjugate differently from group 2 verbs? :). And as far as I know, verbs may also be used as attributes... go figure... the more i look on this matter, the more i see that there are no adjectives as such in japanese, only nouns and verbs... maybe sometime i will tell that this all is a BS and there are no nouns either, only nominative verbs... LOL... :) --[[User:Lastguru|lastguru]] 17:24, 8 September 2005 (UTC)

:::: I was only trying to point out that ''semai'' needs to be distinguished from ''kariru''. -- [[User:ToothingLummox|ToothingLummox]] 23:24, 8 September 2005 (UTC)

::::: In the list of conjugations, yes. --[[User:Lastguru|lastguru]] 01:01, 9 September 2005 (UTC)

::So there has to be some way to distinguish these different categories. Many textbooks use na-adjective or noun-adjective. They also have Japanese names (''keiyoudoushi'' etc), and I imagine linguists have still other names (perhaps the ones you're using?). Anyway, you can call them whatever you want, but they need to be distinguished. Also, some abbreviation should probably also be adopted, for instance NA for na-adjective. Keep in mind that there is no reason to burden the language student with long or unfamiliar names; most textbooks rightly avoid doing so. [[User:ToothingLummox|ToothingLummox]] 22:55, 4 September 2005 (UTC)

The primary difference between ''kedo'' and ''demo'' (but):

:''kedo'' appears at the end of one clause and connects it to the next to make a single new sentence.

:''demo'' appears a the beginning of a sentence.  The two clauses remain separate sentences.

[[User:ToothingLummox|ToothingLummox]] 18:41, 4 September 2005 (UTC)

:: maybe... thanks... --[[User:Lastguru|lastguru]] 20:34, 4 September 2005 (UTC)

== you did it again... ==

So, you have commented out my example... again. Is this example so incorrect that you have to comment it out instead of just correcting it? I myself think that the example was indeed correct, just complicated. Please note that nobody is requiring the students to form such examples themselves, and the next page goes about creating simple sentences. A complicated example was inserted here on purpose, to give students something to think about, and I think I have introduced the theoretical material for them to be able to understand the example fully. It is not that I am not valuing our cooperation (although you may doubt that after our recent discussions, I am really happy and grateful for all your help and support) or the substitute examples you gave, it is just that I think a more complicated and not standard example should also be used in our course. Any comments? --[[User:Lastguru|lastguru]] 11:10, 10 September 2005 (UTC)

: Well, the first time it was actually a native speaker who commented it out.
: The word order in the example is strange. Maybe it's an example of  post positioning or perhaps it's a list. 

:: The new me, the one I see in my dreams, is strong but kind.
:: The new me, what I see in my dreams, is strong but kind.

: Anyway, while it is encountered in songs and poems, it's not that common a word order. Clauses normally precede what they modify. I don't think we do our students any favors by introducing this less common form here. There were also a couple of small errors here and there (の isn't need to connect ''miru'' and ''jibun'').

: This particular example aside, I think the students have not really been prepared to deal with it. 
: I think that the use of relative clauses (such as the ''kono shiroi neko ga miru yume'') is inadequately explained above.
: Relative clauses
:* they come before the word being modified
:* は cannot be used as the topic marker, and so issues of focus change
:* if the subject comes immediately before the verb, ''ga'' can become ''no''
:* verbs and attributive verbs connect directly to the noun being modified 
:* attributive nouns connect with ''-na''. 
::: ''&lt;u&gt;kao ga kirei '''na'''&lt;/u&gt; onna no ko''
::: The girl &lt;u&gt;with the pretty face&lt;/u&gt;
:* nouns connect with ''-no''
::: ''&lt;u&gt;otousan ga sensei '''no'''&lt;/u&gt; onna no ko''
::: The girl &lt;u&gt;whose father is a teacher&lt;/u&gt;.

: Also, nominalizers could have been dealt with more carefully. In addition to ''no'', there is another nominalizer ''koto''. The two have some usages in common and some distinct (a little like English ''to read'' and ''reading'').

: --[[User:ToothingLummox|ToothingLummox]] 15:21, 10 September 2005 (UTC)

::Hmm... &quot;あたらしい　じぶん　ぼく　の　ゆめ　に　みる　の　は　つよい　けど　やさしい&quot; does not form a complete sentence.
::*&quot;あたらしい　じぶん　は　つよい　けど　やさしい&quot; is OK.
::*&quot;ぼく　の　ゆめ　に　みる　の　は　つよい　けど　やさしい&quot; is NOT.
:::&amp;rarr; &quot;ぼく　の　ゆめ　に　みる　&lt;ins&gt;じぶん&lt;/ins&gt;　は　つよい　けど　やさしい&quot; or &quot;ぼく　の　ゆめ　に　みる　の　は　つよい　けど　やさしい &lt;ins&gt;じぶん&lt;/ins&gt;&quot; is acceptable.

::I can imagine two cases (I use ぼくが instead of ぼくの for clarification):
::*Beginning with ぼく は じぶん を ゆめ に みる。 &amp;rarr; ぼく が ゆめ に みる のは、じぶん。
:::&amp;rArr; '''What kind of じぶん?''' &amp;rarr; あたらしい じぶん / つよい けど やさしい じぶん
:::&amp;rArr; ぼく が ゆめ に みる の は、つよい けど やさしい、あたらしい じぶん。
:::So, if you want to insert parentheses, maybe they should be put as: ぼく が ゆめ に みる のは () じぶん。
::*Beginning with じぶん は、つよい けど やさしい。
:::&amp;rArr; '''What kind of じぶん?''' &amp;rarr; あたらしい じぶん / ぼく が ゆめ に みる じぶん
:::&amp;rArr; ぼく が ゆめ に みる あたらしい じぶん は、つよい けど やさしい。
:::So, if you want to insert parentheses, maybe they should be put as: () じぶん は、つよい けど やさしい。 &lt;small&gt;- This is what I proposed first&lt;/small&gt;
::In both cases, a noun &quot;じぶん&quot; is modified by the phrases&lt;small&gt;(er... clause?)&lt;/small&gt; '''before''' it, not after it. Compare Lastguru's example, in which じぶん is modified by the phrases after it: &quot;あたらしい じぶん () は...&quot;. Perhaps this is why I and ToothingLummox felt the example strange.

::BTW, maybe ゆめみる is better fitted than ゆめにみる for this kind of expressions. Ordinary, you don't actually see yourself in your real dreams but you just imagine the ideal form of you when you are awake... Well, ゆめにみる can also mean it, but ゆめみる is more specific. Also, ゆめ に えがく or おもい えがく has nealy the same meaning. Hope this helps. - [[User:Marsian|Marsian]] / [[User talk:Marsian|talk]] 04:59:14, 2005-09-11 (UTC)</text>
      <sha1>farlj45pojrdsq9ejniv2mp8e2vpz7h</sha1>
    </revision>
  </page>
  <page>
    <title>Neapolitan</title>
    <ns>0</ns>
    <id>39898</id>
    <revision>
      <id>2361592</id>
      <parentid>2247274</parentid>
      <timestamp>2012-06-09T21:31:13Z</timestamp>
      <contributor>
        <ip>188.10.100.63</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{book title|The Neapolitan Wikiprimer|A beabbà napulitana wiki}}
[[Image:Naples panorama.jpg|960px|center|''Panoramic shot of Naples. Italy''|Naples gives Neapolitan its name.]]
&lt;div style=&quot;text-align:center;&quot;&gt;''Panoramic shot of Naples''&lt;/div&gt;

Neapolitan (napulitano in Neapolitan and napoletano in Italian) is the Romance language spoken in the city of Naples, Italy and in all or parts of the surrounding regions of Abruzzo, Basilicata, Calabria, Campania, Lazio, le Marche, Molise, and Puglia.

Neapolitan can be a challenging language at times as it is non-standardized, that is, there is no absolute authority that is the go to source for spelling and usage.  There are though many generally accepted norms used throughout Neapolitan's large literature and we will focus on those here while pointing out variants where it is important or interesting.

==Grammar==
*[[Neapolitan/pronunciation|pronunciation]]
*[[Neapolitan/alphabet|alphabet]]
*[[Neapolitan/nouns|nouns]]
*[[Neapolitan/articles|articles]]
*[[Neapolitan/prepositions|prepositions]]
*[[Neapolitan/adjectives|adjectives]]
*[[Neapolitan/pronouns|pronouns]]
*[[Neapolitan/verbs|verbs]]
*[[Neapolitan/adverbs|adverbs]]
*[[Neapolitan/conjunctions|conjunctions]]
*[[Neapolitan/interrogatives|interrogatives]]
*[[Neapolitan/syntax|syntax]]

==Usage==
*[[Neapolitan/greetings|greetings]]
*[[Neapolitan/501 Neapolitan verbs|501 Neapolitan verbs]]
*[[Neapolitan/numbers|numbers]]
*[[Neapolitan/calendar|calendar]]
*[[Neapolitan/colors|colors]]
*[[Neapolitan/weather|weather]]
*[[Neapolitan/food|food]]
*[[Neapolitan/parts of the body|parts of the body]]
*[[Neapolitan/rooms of the house|rooms of the house]]
*[[Neapolitan/expressions|expressions and figures of speech]]

==Resources==
*[[Neapolitan/bibliography|bibliography]]
*[[Neapolitan/sites|sites]]
*For further information on the language itself, see [[w:Neapolitan_language|the Neapolitan language Wikipedia page]].
*[[wikipedia:nap:Paggena prencepale|Visit the Neapolitan Wikipedia!]]

{{Subjects|Languages of Europe}}
{{alphabetical|N}}
{{status|25%}}
__NOTOC__ __NOEDITSECTION__
[[es:Napolitano]]
[[it:Napoletano/Copertina]]</text>
      <sha1>axpzh98ensc79klbqtay9fer8vrdu1e</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Lekoman32</title>
    <ns>3</ns>
    <id>39899</id>
    <revision>
      <id>297293</id>
      <parentid>230362</parentid>
      <timestamp>2005-12-03T04:08:08Z</timestamp>
      <contributor>
        <username>DavidCary</username>
        <id>973</id>
      </contributor>
      <comment>moved outline to [[Corporate Identity Design]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Welcome==
[[Wikipedia:Welcome, newcomers|Welcome]] to Wikibooks, Lekoman32.
I hope you like the place and decide to stay. Here are a few good links for newcomers: 
*[[Wikipedia:Five pillars|The Five Pillars of Wikipedia]]
*[[Wikipedia:How to edit a page|How to edit a page]]
*[[Wikipedia:Tutorial|Editing tutorial]]
*[[Wikipedia:Picture tutorial|Picture tutorial]]
*[[Wikipedia:How to write a great article|How to write a great article]]
*[[Wikipedia:Manual of Style|Manual of Style]] 
I hope you enjoy editing here.
By the way, you can sign your name on Talk and vote pages using four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; . If you have any questions, see the [[Help:Wikibooks|help pages]], add a question to the [[Wikibooks:Community Portal]] or ask me on my [[User talk:DavidCary|Talk]] page.
Again, welcome to Wiki Books.

I moved your outline to the [[Corporate Identity Design]] text.
I hope that's OK.
--[[User:DavidCary|DavidCary]] 04:08, 3 December 2005 (UTC)</text>
      <sha1>hl3aoht1s837egv7puvlik20xgkmmlw</sha1>
    </revision>
  </page>
  <page>
    <title>Graphic Design/Corporate Identity Design</title>
    <ns>0</ns>
    <id>39900</id>
    <revision>
      <id>1398344</id>
      <parentid>1202461</parentid>
      <timestamp>2009-02-06T13:57:53Z</timestamp>
      <contributor>
        <username>Jubring</username>
        <id>175401</id>
      </contributor>
      <comment>/* Corporate Identity Design */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">=Corporate Identity Design=


Looking at the logo for any well designed corporate identity schema gives the observer only a superficial glimpse, the tip of the iceberg, so-to-speak, of what amounts to a complex and often heavily regulated system of graphics, phrases, and service/product concepts designed to present the strongest, best face of a company to its consumers.

Corporate identity differentiates itself from branding by referring less to the identity of a product or service and more to the identity of the organization behind the product or service, though often these commingle (The Coca Cola Company and its product &quot;Coca Cola&quot; being perhaps the most well-known example).

An organization's identity package can be one of its most valuable assets, and, as such, great care should be taken in its development and usage. The identity is what customers will imagine, when they think of the company. Corporate identities can define companies as old corporate names, or as vibrant imaginative enterprises.

&lt;!-- extremely rough draft --&gt;

*Introduction
**What Identity ''is''
**What Identity means to a company
*The Logo
**Definition of Logo
**Logotype vs. &quot;Icon&quot; style
**Applications of the Logo
**What a logo is ''not''
*Additional Graphic Elements
*The Corporate Slogan/Motto/Mission Sentence
*Color
*Stylistic Considerations


==For further reading==

* [http://www.indexbook.com/books/corporate_identity.php Books on Corporate Identity] by Index Book publishing
* [http://www.design-works.com/resources/branding_lifecycle.pdf Branding Project Life Cycle]
* [[Web Design]]
* [http://visual.wiki.taoriver.net/moin.fcg/TheArtOfDesigningaLogo The art of designing a logo]
* [[w:Strategic planning]]
* [[User talk:Lekoman32|A proposed outline for this text]]

[[Category:Graphic Design]].....................</text>
      <sha1>s6t0mol96yn66xfrfe4fkt7rj790fqe</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Biblical Studies/Christianity/Overview</title>
    <ns>1</ns>
    <id>39902</id>
    <revision>
      <id>1598184</id>
      <parentid>227854</parentid>
      <timestamp>2009-08-02T14:34:58Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <minor />
      <comment>moved [[Talk:Christianity/Overview]] to [[Talk:Biblical Studies/Christianity/Overview]]: book seems to be here.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==User:203.26.206.129==
Your approach to Christianity on this outline page is up for review under new guidelines. Certainly, content should be NPOV. The admins are moving certain types of books to Wikicities. There is no Christian wiki as such on that site. I wonder why, maybe they only want Religion-wiki. More information in [[Wikibooks:Staff lounge]].</text>
      <sha1>rlzc0uve64pltsk8at9kcvazkixwmd7</sha1>
    </revision>
  </page>
  <page>
    <title>Orthopaedic Surgery</title>
    <ns>0</ns>
    <id>39904</id>
    <revision>
      <id>2255660</id>
      <parentid>2244427</parentid>
      <timestamp>2012-01-22T22:55:22Z</timestamp>
      <contributor>
        <username>Addihockey10 (automated)</username>
        <id>502783</id>
      </contributor>
      <minor />
      <comment>/* Contents */Replaceing raster images with vector equivalents, replaced: 25%.png → 25%.svg (10) using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''Textbook Of Orthopaedic Surgery - A collaboration'''

==Contents==
[[Image:Skeleton2.jpg|100px|left|Welcome to Orthopaedic Surgery!]]
* [[File:100%.svg]] [[/Preface|Preface]]
* [[Image:25%.svg]] [[/Basic Sciences|Chapter 1: Basic Sciences]]
* [[Image:25%.svg]] [[/Upper Limb|Chapter 2: Upper Limb]]
* [[Image:25%.svg]] [[/Foot and Ankle|Chapter 3: Foot and Ankle]]
* [[Image:25%.svg]] [[/Spine|Chapter 4: Spine]]
* [[Image:25%.svg]] [[/Hand and Microsurgery|Chapter 5: Hand and Microsurgery]]
* [[Image:25%.svg]] [[/Paediatric Orthopaedics|Chapter 6: Paediatric Orthopaedics]]
* [[Image:25%.svg]] [[/Adult Reconstruction|Chapter 7: Adult Reconstruction]]
* [[Image:25%.svg]] [[/Sports Medicine|Chapter 8: Sports Medicine]]
* [[Image:25%.svg]] [[/Musculoskeletal Tumours|Chapter 9: Musckuloskeletal Tumours]]
* [[File:00%.svg]] [[/Injury|Chapter 10: Injury]]
* [[File:00%.svg]] [[/Surgical Procedures|Chapter 11: Surgical Procedures]]
* [[File:00%.svg]] [[/Rehabilitation|Chapter 12: Rehabilitation]]
* [[Image:25%.svg]] [[/Practice|Chapter 13: Practice]]

{{Subjects|Surgery}}
{{alphabetical|O}}
{{status|25%}}</text>
      <sha1>qhzrr055xgg8ld82pjp0ehe7n1h6c3y</sha1>
    </revision>
  </page>
  <page>
    <title>High school mathematics extensions</title>
    <ns>0</ns>
    <id>39908</id>
    <redirect title="High School Mathematics Extensions" />
    <revision>
      <id>227900</id>
      <timestamp>2005-09-04T09:54:29Z</timestamp>
      <contributor>
        <username>Xiaodai</username>
        <id>99</id>
      </contributor>
      <comment>High school mathematics extensions moved to High School Mathematics Extensions: to conform to proposed standards</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[High School Mathematics Extensions]]</text>
      <sha1>e31xnn9slgywa9j41055xkusub2drsf</sha1>
    </revision>
  </page>
  <page>
    <title>Template:HSME Primes</title>
    <ns>10</ns>
    <id>39912</id>
    <redirect title="High School Mathematics Extensions/Primes" />
    <revision>
      <id>656374</id>
      <parentid>227910</parentid>
      <timestamp>2006-11-20T19:13:18Z</timestamp>
      <contributor>
        <username>Herbythyme</username>
        <id>40889</id>
      </contributor>
      <minor />
      <comment>fix dbl redir</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[High School Mathematics Extensions/Primes]]</text>
      <sha1>48kpm6yd5xzzh9jgb1xg8gj0j7lq9vp</sha1>
    </revision>
  </page>
  <page>
    <title>Template:HSME Primes TOC</title>
    <ns>10</ns>
    <id>39913</id>
    <redirect title="Template:High School Mathematics Extensions/Primes/TOC" />
    <revision>
      <id>331222</id>
      <parentid>227913</parentid>
      <timestamp>2006-01-08T03:58:00Z</timestamp>
      <contributor>
        <username>Guanabot~enwikibooks</username>
        <id>5478</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[Template:High School Mathematics Extensions/Primes/TOC]]</text>
      <sha1>806u38y4qhnzrkibipyu9sh3papbo5k</sha1>
    </revision>
  </page>
  <page>
    <title>Template:HSME Primes 1</title>
    <ns>10</ns>
    <id>39916</id>
    <redirect title="High School Mathematics Extensions/Primes/Modular Arithmetic/text" />
    <revision>
      <id>651517</id>
      <parentid>227921</parentid>
      <timestamp>2006-11-17T03:45:38Z</timestamp>
      <contributor>
        <username>Msmithma</username>
        <id>37282</id>
      </contributor>
      <comment>Redirecting to [[High School Mathematics Extensions/Primes/Modular Arithmetic/text]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[High School Mathematics Extensions/Primes/Modular Arithmetic/text]]</text>
      <sha1>4ctgu5sm8vc9x1s21blw46a0gdalvu7</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Solar System/The Mystery of Space</title>
    <ns>110</ns>
    <id>39917</id>
    <revision>
      <id>1876183</id>
      <parentid>1564583</parentid>
      <timestamp>2010-07-07T18:48:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Set stable version settings for &quot;Wikijunior:Solar System/The Mystery of Space&quot; [Default: Stable, Precedence: Pristine]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The Solar System consists of the Sun, eight planets, and many asteroids, comets, moons and planetoids. The Sun is the primary source of energy for everything in the solar System. Earth and the other bodies in the Solar System were created from the remains of the dust cloud from which it was created after the birth of our Sun.

{{BookCat}}</text>
      <sha1>7ut196l9foybpnf9j895lntcy7o63yt</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Internals</title>
    <ns>0</ns>
    <id>39919</id>
    <revision>
      <id>3033572</id>
      <parentid>1517734</parentid>
      <timestamp>2016-01-04T10:55:21Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <minor />
      <comment>Ladislav moved page [[REBOL Programming/Internals]] to [[Rebol programming/Internals]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== REBOL Internals ==

=== The System Object ===

The System object is a very large object that contains most of the mezzanine code in REBOL, that is VID, the network protocols and system information about the REBOL product you are running.

=== Native Functions ===

Native functions are functions that are hardwired into the kernel of REBOL. They can be considered low-level functions, that are designed for speed. A wide range of native functions exist.

You can reveal a native function in the console like this:

 &gt;&gt; source insert
 insert: native [
     {Inserts a value into a series and returns the series after the insert.} 
     series [series! port! bitset!] &quot;Series at point to insert&quot; 
     value [any-type!] &quot;The value to insert&quot; 
     /part &quot;Limits to a given length or position.&quot; 
     range [number! series! port! pair!] 
     /only &quot;Inserts a series as a series.&quot; 
     /dup &quot;Duplicates the insert a specified number of times.&quot; 
     count [number! pair!]
 ]

The source code cannot be seen since the function is compiled into the REBOL interpreter kernel.

=== Mezzanine Functions ===

Mezzanine functions are functions that are built on top of either native or other mezzanine functions. This means you can change them or build more functions on top of existing ones. REBOL has in all of its products many mezzanine functions built in.

They can be considered higher level functions, that are designed to provide ease of use, when coding your REBOL programs. The internet protocols in REBOL such as HTTP or POP3 are built as mezzanine functions.

When designing your own programs, you can build your own functions that blend in with the existing mezzanine functions, for example if you wish to extend REBOL with a new internet protocol.

Mezzanine functions are also special in that you can see the source code for them on the console like this:

 &gt;&gt; source append
 append: func [
     {Appends a value to the tail of a series and returns the series head.} 
     series [series! port!] 
     value 
     /only &quot;Appends a block value as a block&quot;
 ] [
     head either only [
         insert/only tail series :value
     ] [
         insert tail series :value
     ]
 ]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>mr0wwubepi3afh6hc88so69rp2onsqb</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL/REBOL Internals</title>
    <ns>0</ns>
    <id>39920</id>
    <redirect title="Rebol programming/Internals" />
    <revision>
      <id>3036613</id>
      <parentid>227947</parentid>
      <timestamp>2016-01-10T09:23:27Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Bot: Fixing double redirect to [[Rebol programming/Internals]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT [[Rebol programming/Internals]]</text>
      <sha1>mm17t34916opa6izydyy2ayffgie4n0</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/About Rebol</title>
    <ns>0</ns>
    <id>39922</id>
    <revision>
      <id>3033600</id>
      <parentid>3033599</parentid>
      <timestamp>2016-01-04T11:32:18Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <comment>/* About Rebol */ use sentence case</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== About Rebol ==
Rebol is a highly versatile, multiplatform scripting language for Lightweight Distributed Computing created and maintained by [[w:Carl Sassenrath|Carl Sassenrath]]. Originally, REBOL was an acronym ''Relative Expression-Based Object Language''. 

It was designed with the aim of being a human-centric, network-based messaging language. It is a first class functional scripting language with automatic memory management, higher order functions, exception handling, and dialecting. It includes many built-in functions that allow you to work with math, text, files, networking, graphics and multimedia.

The emphasis is small code size and small footprint and it has the ability to use a single executable to run your scripts. The scripts can therefore be run from for example a floppy disk or a USB key without installing anything on the host PC. The interpreter is in many cases small enough to reside with your scripts on a single old-fashioned 720K floppy!

Rebol can be used for scripts that are a few lines long and do simple operations and scale up to full size applications.

=== Operating system independency at the source-code level ===
Rebol is available for over 40 platforms which largely makes it platform independent. There are variations, though in exactly which products and how many features are available for these platforms.

But the core works the same everywhere, including well integrated network-support.
Imagine one- or two-liner scripts that send information to and from remote computers, and you have a small taste of the power and flexibility that Rebol can offer you. 

The fact that Rebol code will run on any of the supported platforms ''without modification'' even when the code makes use of graphical user interfaces and networking functionality is quite powerful and, frankly, addicting. 

Example of the same code on different platforms: 
 view layout [ 
  text &quot;Hello world!&quot;
  button &quot;Quit&quot; [unview]
  ]

&lt;gallery&gt;
|Windows
File:Rebol-Hello-world-linux.png|Linux
|Mac
&lt;/gallery&gt;

=== Rebol basic products ===
Rebol consists of many products built on top of each other:

;Rebol/Core : This is the basic version that holds most of the necessary components to run basic Rebol programs. Rebol/Core is command-line centric, and offers quite a bit of power, and - among other things - is ideal for (but not limited to) CGI scripting. This version is freeware and is downloadable from the official Rebol web site.

;Rebol/View : Includes extended GUI functionality built on top of Rebol/Core. Adds graphical capabilities and is also freeware. This is the most popular version of Rebol available to anyone. Since version 2.7.6 it handles DLL library access.

;Rebol/View Pro : Adds further functions to handle DLL library access and encryption. This version costs money and is considered useful for advanced programmers, who want to take advantage of operating system specific functions.

;Rebol/Command : Adds even more functions to handle SSL access, database, and Fast CGI functions.

Rebol is built this way to let you choose how much functionality is needed. If you don't need graphics, you can settle for Rebol/Core.

It's also built this way to allow newly developed features to be easily built for all products, starting with Rebol/Core.

Each product comes as a single executable file that doesn't need to be installed.

Rebol actually consists of even smaller components, but these are not available as single downloads in their free versions.

=== Developer products ===
Various developer products exist for advanced developers who want the maximum of Rebol for larger application development and deployment in business situations:

;Rebol/SDK : Allows you to create encapsulated programs as executable files.

;Rebol/Command SDK : The same as Rebol/SDK only using Rebol/Command as base.

Both products give you more control of what you want to include and reveals a finer grained component set that Rebol is built of:

* Rebol/Base

* Rebol/Face

* Rebol/Encap

These products are out of the scope of this book.

=== End user products ===
Various enduser products exist that show off what Rebol can do. This book is not intended to do such an advertisement, but two such products are mentioned here:

'''Rebol/IOS''', the '''Rebol Internet Operating System''' is a lightweight groupware system made by REBOL Technologies.



'''AltME''' is a secure instant messaging system with functions for sharing calendar information, checklists, todo lists and IRC-like chat rooms.{{clr}}

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>l0vrbfuaiitc97mrmscr7lhkxnddzx1</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Installing Rebol</title>
    <ns>0</ns>
    <id>39923</id>
    <revision>
      <id>3033846</id>
      <parentid>3033844</parentid>
      <timestamp>2016-01-05T06:56:35Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <minor />
      <comment>/* Installing Rebol */ use lowercase</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Installing Rebol ==
Rebol/Core does not come with an installer. It's a simple executable file which starts the console when you execute it. When it's started, you can start writing and running Rebol scripts.

=== Windows ===
Rebol/View for Windows comes with an installer which allows you to optionally install Rebol/View. If you choose to install Rebol/View, it adds registry entries that allows you to run Rebol scripts directly by doubleclicking them in File Explorer or another file manager.

If you choose not to install Rebol/View, you can run scripts through the Viewtop or the console, you can even add the registry entries manually, if you prefer.

=== Linux ===
Rebol/View for Linux does not have an official installer like on Windows. There are installers made by fans that you can use at [http://www.maxvessi.net/rebsite/linux/ this] site, remember to reboot your PC in order to initialize new fonts.

Official Rebol comes in a compressed archive, which can be opened using &quot;tar&quot; at a command line or using a graphical program like Xarchiver or File-Roller. Once extracted, Rebol/View can be run from the console just like Rebol/Core.

Rebol for Linux has some library dependencies, which can be determined by doing an &quot;ldd rebol&quot; in the console. For Rebol/Core, these are typically the C library, the math library, and the linker. On 64-bit systems a 32-bit library installation may be needed.

Rebol/View has more dependencies, since it is dependent on Xorg to display graphics. The list of dependencies for Rebol/View is long, and some distributions separate Xorg into many pieces, such as Arch Linux and Gentoo; make sure that all needed libraries are installed before running Rebol/View.

=== MacOSX ===
Rebol for MacOSX requires MacOSX Jaguar to run.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>hsv8drpfo3ej306sciqbftia6vrz02f</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/The console</title>
    <ns>0</ns>
    <id>39924</id>
    <revision>
      <id>3033854</id>
      <parentid>3033537</parentid>
      <timestamp>2016-01-05T07:32:56Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <comment>/* The Console */ format, ce, REBOL -&gt; Rebol</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== The console ==
The interactive console is where you can do much of the programming needed to test small segments of code and to try out various functions. It's the best way to learn Rebol functions.

If you have Rebol/View you can access various utilities from the console, such as the Desktop, a text editor and basic utilities for inputs, usable in your programs.

=== How to access the console ===
The console can be accessed directly when you start Rebol/Core using Rebol.exe but this will not allow you to use the '''desktop''' or '''editor''' commands. 

If you start Rebol/View, it will start from the Viewtop. The console can be accessed in the left side of the window with the bottom icon. To get to the console, click on the icon. You can return to Viewtop by entering the '''desktop''' command at the console prompt.

===Using the console===
Some important basics about the console are nice to know before starting with Rebol programming. ''You'll be spending a lot of time with the console!''

Simply by typing commands, you can start using the console. If you type:

 &gt;&gt; now

Rebol will return the current date and time

 == 2-Sep-2005/2:12:42+2:00

A different example:

 &gt;&gt; print &quot;Hello world!&quot;
 Hello world!

Math is possible:

 &gt;&gt; 2 + 2
 == 4

Notice the &gt;&gt; and == symbols:

; &gt;&gt; : This is your prompt where you enter functions and commands.
; == : This is a symbol for a ''returned value'' from the previously executed program or operation.

The '''print''' function we used earlier just produced output at the console. The return value of the '''print''' function is a special value ignored by the interpreter when displaying results.

Let's try something that'll cause an error:

 &gt;&gt; 2 / 0
 ** Math Error: Attempt to divide by zero
 ** Near: 2 / 0

Rebol kindly produces an error information text using the ** symbol.

=== History commands ===
If you want to retry these examples again, use the cursor up key on your keyboard to access Rebol's history of executed functions. 

To move the console scroller you can use mouse or the '''Page-Up''' and '''Page-Down''' keys

To display previously entered lines you can use the '''Up''' and '''Down''' arrows, like on a Linux console.

To modify them use the '''Home''' and '''End''' keys with '''Delete''', '''Backspace''' and '''Left''' or '''Right''' arrows.

=== TAB auto-complete ===
The '''TAB''' key can be used for autocompletion: Rebol will try to complete what you are typing.
For example if you press just '''a''' and then you press '''TAB''', you'll get a suggestion of all words starting with '''a''':

 &gt;&gt; action! any-type! any-word! any-function! any-string! any-block! action? any-type? any-word?
 any-function? any-string? any-block? and add and~ absolute at alias all any as-string as-binary
 access-os arccosine arcsine arctangent abs as-pair about apply also append ajoin array alter 
 attempt ask ascii? any-path!  any-path? any-object! any-object? assert alert aqua alive?
 a 

So, if you type '''ale''', it will complete with '''alert''', the only word starting with '''ale''':
 &gt;&gt; alert

If you declare a variable, like '''aaa''', Rebol will memorize it and it will auto-complete also with that.

=== Console help functions ===
The console help can be accessed using the '''help''' command or its shortcut, the question mark '''?'''. It can:

1- Find a word in the Rebol dictionary and describe its contents. Examples:

 &gt;&gt; ? day
 No information on day (word has no value)

 &gt;&gt; ? pi
 PI is a decimal of value: 3.14159265358979

 &gt;&gt; my-word: &quot;beginning&quot;
 == &quot;beginning&quot;

 &gt;&gt; ? my-word
 MY-WORD is a string of value: &quot;beginning&quot;

2- Describe the syntax of a function:

 &gt;&gt; ? now
 USAGE:
    NOW /year /month /day /time /zone /date /weekday /yearday /precise
 
 DESCRIPTION:
     Returns the current local date and time.
     NOW is a native value.
 
 REFINEMENTS:
     /year -- Returns the year only.
     /month -- Returns the month only.
     /day -- Returns the day of the month only.
     /time -- Returns the time only.
     /zone -- Returns the time zone offset from GMT only.
     /date -- Returns date only.
     /weekday -- Returns day of the week as integer (Monday is day 1).
     /yearday -- Returns day of the year (Julian)
     /precise -- Use nanosecond precision

3- If you type part of an element in a string, Rebol will return any element with that string:

 &gt;&gt; ?? part-of-searched-word
 Print result here

 &gt;&gt; ? wor
 Found these words:
   any-word!       datatype! any-word!
   any-word?       action!   Returns TRUE for any-word values.
   get-word!       datatype! get-word!
   get-word?       action!   Returns TRUE for get-word values.
   lit-word!       datatype! lit-word!
   lit-word?       action!   Returns TRUE for lit-word values.
   my-word         string!   &quot;beginning&quot;
   set-word!       datatype! set-word!
   set-word?       action!   Returns TRUE for set-word values.
   to-get-word     function! [value]
   to-lit-word     function! [value]
   to-set-word     function! [value]
   to-word         function! [value]
   word!           datatype! word!
   word?           action!   Returns TRUE for word values.

You can also use quotes to search for strings. Notice the difference between these two examples:

 &gt;&gt; ? &quot;find&quot;
 Found these words:
   find            action!   Finds a value in a series and returns the series a...
   find-key-face   function! Search faces to determine if keycode applies.
   find-window     function! Find a face's window face.

 &gt;&gt; ? find
 USAGE:
    FIND series value /part range /only /case /any /with wild /skip size /match /tail /last /reverse
 DESCRIPTION:
     Finds a value in a series and returns the series at the start of it.
     FIND is an action value.
 ARGUMENTS:
     series -- (Type: series port bitset)
     value -- (Type: any-type)
 REFINEMENTS:
     /part -- Limits the search to a given length or position.
         range -- (Type: number series port)
     /only -- Treats a series value as a single value.
     /case -- Characters are case-sensitive.
     /any -- Enables the * and ? wildcards.
     /with -- Allows custom wildcards.
         wild -- Specifies alternates for * and ? (Type: string)
     /skip -- Treat the series as records of fixed size
         size -- (Type: integer)
     /match -- Performs comparison and returns the tail of the match.
     /tail -- Returns the end of the string.
     /last -- Backwards from end of string.
     /reverse -- Backwards from the current position.

Other useful information about the current work session can be found using the following Rebol words: 

 probe       : Displays the contents of a Rebol word in its original format.
 source      : Displays the contents of a Rebol function.
 what        : Lists all Rebol words currently defined.
 what-dir    : Displays name of the current directory.
 list-dir    : Lists all filenames in current directory.
 change-dir  : Change current directory.

=== Stopping programs ===
You can stop a program, if it's run from the console, or if it outputs to a console opened from within the program, by pressing the '''Escape''' key. This will return you to the prompt.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>njqtz7zoh4carc9xte6p8v3hn1iakpj</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Internal utilities</title>
    <ns>0</ns>
    <id>39925</id>
    <revision>
      <id>3033856</id>
      <parentid>3033855</parentid>
      <timestamp>2016-01-05T07:49:51Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <comment>/* Using the Viewtop */ ce</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Internal utilities==

===The Viewtop===
The Viewtop is Rebol/View's builtin graphical desktop. It's mainly used to access programs available from various Rebol sites around the world. It can also be used to access files locally on your own PC.

====Using the Viewtop====
On first startup, the Viewtop will come up automatically.

You can change the default behavior using the ''User Preferences'' menu item.

To start the Viewtop from the console type:

 &gt;&gt; desktop

or
 &gt;&gt; viewtop

====Facts about the Viewtop====
The Viewtop is written as a range of mezzanine functions using the VID graphical user interface system and is essentially open source.{{clr}}

===The text editor===
The text editor is handy for editing smaller scripts that are too large to write in the console. It's not very complex so it's not suited for larger projects. It can be launched from the console by writing:

 &gt;&gt; editor none

Or 

 &gt;&gt; editor &quot;&quot;

Or if you give a filename:

 &gt;&gt; editor %script.r

You can then run scripts in the editor by pressing '''Ctrl-E'''.

You can also use it to view large data objects that are hard to study in the console:

 &gt;&gt; editor system/view

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>eaiex1lx0u98fgybsr4tx7gbsbhv7oa</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Programming in Rebol</title>
    <ns>0</ns>
    <id>39926</id>
    <revision>
      <id>3033897</id>
      <parentid>3033896</parentid>
      <timestamp>2016-01-05T09:11:32Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <comment>/* External References */ case</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Programming in Rebol ==

=== Functional and symbolic programming ===
A lot of the power of Rebol comes from the fact that it is both a functional programming language and a symbolic language.

As a ''functional'' programming language Rebol uses a sequence of expressions (built from functions) that are evaluated to produce a flow of results which pass from expression to expression.
Rebol has no keywords, and words evaluate depending upon context. Generally the order of evaluation is from left to right with some exceptions for special operators.

A ''symbolic'' language is one that lets you represent and manipulate symbols (words) the same as any other values of the language. The advantages of symbolic programming will become more clear as your Rebol skills improve. It is the key that unlocks the door to ''dialecting'', allowing you create even more powerful programs with less code, as well as sending Rebol expressions around the Internet to be evaluated on other computer systems, not just your own. (Called &quot;distributed computing&quot;.)

=== Delimiters ===
Whitespace characters, such as '''space''', '''tab''', '''newline''', '''newpage''' act as delimiters as in English, separating values from one another. They signal the end of one value and the start of another one. 

As an example, this is a series of three values (integer '''1''', operator '''+''' and integer '''2'''), which represent an expression:
 &gt;&gt; 1 + 2
Notice the spaces. If we omit the spaces, we obtain:
 &gt;&gt; 1+2
which is considered as one, syntactically illegal value.

Other characters that can take a delimiter role are: '''(''' ''')''' '''&quot;''' '''[''' ''']''' '''{''' '''}''' ''';'''.

This is important as when writing Rebol code, the language allows freedom of choice so that your program can be written entirely on one rather long line, or split and indented on multiple lines.  The latter is the preferred method, and the reader is advised to follow the published guidelines on how to format source code. [http://www.rebol.com/docs/core23/rebolcore.html (Rebol/Core User's Guide - Section 5 - Style Guide)]

=== Operators and simple expressions ===
Rebol uses arithmetic operators: '''+''', '''-''', '''*''', '''/''', '''//''', '''**''', boolean operators: '''and''', '''or''', '''xor''' and comparison operators: '''&lt;''', '''&lt;=''', '''&lt;&gt;''', '''=''', '''==''', '''=?''', '''&gt;''',  '''&gt;='''. They usually are binary, consuming an argument on each side. Example:
 &gt;&gt; 2 &gt; 3
 == false

Every operator has got a function counterpart:

{| border=&quot;1&quot; cellpadding=&quot;2&quot; cellspacing=&quot;0&quot;
!bgcolor=&quot;#eeeeee&quot;|Operator
!bgcolor=&quot;#eeeeee&quot;|Function
|-
|'''+'''
|'''add'''
|-
|'''-'''
|'''subtract'''
|-
|'''*'''
|'''multiply'''
|-
|'''/'''
|'''divide'''
|-
|'''//'''
|'''remainder'''
|-
|'''**'''
|'''power'''
|-
|'''and'''
|'''and~'''
|-
|'''or'''
|'''or~'''
|-
|'''xor'''
|'''xor~'''
|-
|'''&lt;'''
|'''lesser?'''
|-
|'''&lt;='''
|'''lesser-or-equal?'''
|-
|'''&lt;&gt;'''
|'''not-equal?'''
|-
|'''='''
|'''equal?'''
|-
|'''=='''
|'''strict-equal?'''
|-
|'''=?'''
|'''same?'''
|-
|'''&gt;'''
|'''greater?'''
|-
|'''&gt;='''
|'''greater-or-equal?'''
|}

For example, the above expression can be rewritten as follows:
 &gt;&gt; greater? 2 3
 == false

Exceptions: 

#Operators can be used as prefix (although it generally isn't advisable, because it could damage the readability of the code, and, moreover, it isn't officially supported).
#The '''-''' operator can be used as unary (the function counterpart is called '''negate''').

Examples:
 &gt;&gt; + 2 3
 == 5
 &gt;&gt; - 2
 == -2

=== Complex operator expressions ===
More complex operator expressions can be written. There are two rules to keep in mind:
#All operators have the same precedence.
#Operator expressions are evaluated from left to right.
Example:
 &gt;&gt; 1 + 2 * 3
 == 9
Notice that the addition on the left was performed before the multiplication. If we wanted to perform the multiplication first, we could have reordered the expression:
 &gt;&gt; 3 * 2 + 1
 == 7
Or use parentheses (always use parentheses with long formulas, you'll avoid mistakes) :
 &gt;&gt; 1 + (2 * 3)
 == 7
Let us suppose that we wish to compare the results of two expressions: 1 + 3 and 2 + 2. We should use parentheses to achieve the desired evaluation order:
 &gt;&gt; (1 + 3) = (2 + 2)
 == true
While the first pair of parentheses is not necessary (the leftmost addition is performed first anyway), that is not true for the rightmost addition. If we omitted the second pair of parentheses, we would compare the result of the leftmost addition with 2, which is legal, but we would obtain an illegal addition trying to add 2 to '''false''':
 &gt;&gt; 1 + 3 = 2 + 2
 ** Script Error: Expected one of: logic! - not: integer!
 ** Near: 1 + 3 = 2
The error report doesn't look very understandable, it is the same report we would have obtained in the following case:
 &gt;&gt; false + 2
 ** Script Error: Expected one of: logic! - not: integer!
 ** Near: false + 2

=== Collecting expression results ===
Usually we evaluate only one expression and need one result. However, it is possible to evaluate more expressions one after another:

 &gt;&gt; 4 + 6 7 + 8 
 == 15
It evaluated 4 + 6, then 7 + 8 and showed just the last one.
A similar example can be written using parentheses:

 &gt;&gt; (4 + 6) (7 + 8)
 == 15

Rebol displays only the last expression, yet keeps track of all expressions.

 &gt;&gt; do [a: 4 + 6 7 + 8]
 == 15
 &gt;&gt; a
 == 10

that is the same of:
 &gt;&gt; do [
  a: 4 + 6
  7 + 8
  ]
 == 15

To get all results from two or more expressions, we can use a '''reduce''' function as follows:

 &gt;&gt; reduce [4 + 6 7 + 8]
 == [10 15]

We obtained a block containing all the collected results.

Another important case when we may need to collect some results may be the evaluation of a function, which expects some arguments. Let's take the '''add''' function as an example:

 &gt;&gt; add 2 + 3 4 + 6
 == 15

Explanation: in this case we asked the interpreter to evaluate the '''add''' function. The interpreter had to collect two arguments for the function, so it evaluated two expressions to the right and obtained two results, which could be used as arguments.
It's the same of:
 &gt;&gt; add (2 + 3) (4 + 6)
 == 15


The above description is valid for functions with more or less arguments, i.e. particularly for functions taking just one argument too:

 &gt;&gt; abs -4 + -5
 == 9

Here the interpreter needed to evaluate the '''abs''' function. Therefore it evaluated the first expression to the right and obtained -9, which it used as the argument for the '''abs''' function.
It's the same of:
 &gt;&gt; abs (-4 + -5)
 == 9
So use parentheses to avoid mistakes...

Because of the way how the interpreter collects the arguments for functions, it looks as if the operator expression to the right took ''precedence'' over the function evaluation.

It is easy to explain, why this is not the case when the function uses unevaluated (resp. fetched) arguments: in that case the interpreter doesn't need to evaluate an expression to obtain the value of the argument.

=== Simple programming in the console ===
The console is your primary location for writing small segments of code to rapidly test out your ideas and functions. Nothing needs to be compiled and expressions are evaluated as soon as you press '''Enter'''.  This allows for interactive programming at the console, and aids in debugging large programs.  The lack of a compilation phase allows for rapid prototyping and testing.

We saw a math example earlier, but now let's try something more complex:

 &gt;&gt; join &quot;Hi&quot; &quot;There&quot;
 == &quot;HiThere&quot;

The '''join''' function combines two strings and returns a new string: &quot;HiThere&quot;.

Now let's reverse all the characters in that string by inserting '''reverse''' in front of '''join''':

 &gt;&gt; reverse join &quot;Hi&quot; &quot;There&quot;
 == &quot;erehTiH&quot;

We can reverse it again:

 &gt;&gt; reverse reverse join &quot;Hi&quot; &quot;There&quot;
 == &quot;HiThere&quot;

Now you are observing basically how the Rebol language works:

''You can manipulate returned values directly as they are output to the left of a function. Values are streaming from the right to the left in your program and you can manipulate them along the way.''

This is a very important observation! It's possible to perform such manipulations indefinitely. This is basically how to build programs with Rebol.

 &gt;&gt; reverse print join &quot;Hi&quot; &quot;There&quot;
 HiThere
 ** Script Error: reverse expected value argument of type: series tuple pair
 ** Near: reverse print join &quot;Hi&quot; &quot;There&quot;

What happens is that the '''print''' function doesn't return a value that the last '''reverse''' function can use. That is why you'll see on the console both the output of '''print''' and the error output of '''reverse'''.

Another exception to this rule are ''binary operators''. They usually consume an argument on each side.

The outer box is only for illustrative purposes, but this is how you should see the operation.

Essentially:

;Functions return values : You can use other operators or functions to their left.
;Operators return values : Similar to functions, but consume (usually) arguments on both sides. You can use functions to the left or other operators (usually to the right) of operator expressions to consume their output.

An example mixing functions and operators:

The equivalent code is:

 &gt;&gt; print divide 2 + 2 8
 0.5

An example where operator '''*''' uses the output of operator '''+''':

 &gt;&gt; 2 + 3 * 4
 == 20

=== Remembering values: variables ===
As has been stated above, Rebol words can be used as symbols. In addition to that, we can have words &quot;working&quot; as variables, i.e. referring to other Rebol values.

Let's try that by building a multi-line book-keeping program. We want to use a variable called '''''wallet'''''.

At first, let's see what happens when we enter that in the console:

 &gt;&gt; wallet
 ** Script Error: wallet has no value
 ** Near: wallet

This happened, because the word wasn't assigned a value. We need to assign a value to it:

 &gt;&gt; wallet: $25

In my wallet is 25 dollars. I can return this value simply by typing:

 &gt;&gt; wallet
 == $25.00

Now I want to add 5 dollars:

 &gt;&gt; wallet: wallet + $5
 == $30.00

Another way to do that is to write:

 &gt;&gt; wallet: add wallet 5
 == $35.00

It can get tedious to write this all the time, so we want to create a function to handle the task of adding money to our wallet. A function is simply a piece of program code that is executed, every time you type in a specific word.  A simple function is created like this:

 &gt;&gt; earn: does [wallet: add wallet $5]

It's the same code as shown above, but ''enclosed in square brackets'' called a ''block'', fed to the '''does''' function, which means ''create a function doing this code block everytime it is evaluated''. It needs to be stored, and that happens the same way as storing numbers. We assign the new function to the word '''earn'''.

This is one of the great strengths of Rebol, namely that storing values and functions work the same way! We are still following our right-to-left rule.

This opens up some very clever possibilities, which we'll explore in later chapters.

Our '''earn''' function has been created. So every time you type:

 &gt;&gt; earn
 $40.00
 
 &gt;&gt; earn
 $45.00

It's a lot easier to type, right? But what if you want to earn a different amount each time? Like we saw earlier with '''reverse''' and '''join''', those functions take one or more ''arguments''. Therefore we'll need to use '''func''' instead of '''does'''.

 &gt;&gt; earn: func [amount] [wallet: add wallet amount]

Note that another block is used before our program code. This is where we store function arguments, also known as an ''argument list''. The number '''5''' has been replaced in the code by '''''amount''''', which is a variable from the argument list. You can take as many arguments as you want from the argument list and use them as many times as you want in your function code.

We can equally create a '''spend''' function:

 &gt;&gt; spend: func [amount] [wallet: subtract wallet amount]

Now you can use them just like any other function:

 &gt;&gt; earn $10
 == $45.00
 
 &gt;&gt; spend $25
 == $20.00

Did you notice that we actually used a real $ sign in the return value for '''earn''' and '''spend'''? Using it, Rebol recognizes the number as a money amount!

==== Why Rebol does assignment like that ====
You might now be asking, why does Rebol use the above syntax for variable assignment? After all, most languages use an equal sign like this:

 number = 10

Why does Rebol write it this way:

 number: 10

It turns out Rebol ''does not do it just to be different'', it is an important part of the language.

As we hinted early, under the hood, Rebol is an advanced language. It's a step beyond most other languages because Rebol integrates the concepts of code, data, and metadata (data that describes other data) into a single language. (We will talk about that later when we cover &quot;dialecting&quot;.)

But for now, think of it this way. When you write:

 number = 10

You are stating:

 variable assignment-operator value

But, when you write:

 number: 10

You are stating:

 variable-defined-as value

This fact allows Rebol's variable ''definitions'' to stand out as special datatypes of the language. The definition is unique and is not dependent on the meaning of an operator (the = sign). This is a powerful concept that is useful when you are dealing with advanced code-as-data and metadata.

If you still have trouble relating to this notation, think of it this way: what is more common in written human languages? In fact, if you look at an email header or an http header, how are value fields expressed? The Rebol way. Why is that?

=== Multi-line blocks ===
The console allows you to work with multiple lines of code for a single expression. If you begin a block with '''[''' and press '''Enter''', the console will not cease to accept input, until you give the corresponding ''']'''.

To let you know the console is now accepting multi-line input, the prompt changes from '''&gt;&gt;''' to the delimiter you are currently using, e.g. '''[''', and it will stay that way, until the ''']''' comes.

 &gt;&gt; todays-earnings: [
 [    $25.00
 [    $30.00
 [    $14.00
 [    $10.00
 [    ]

Multi-line strings are also possible, but note that multiline strings use the '''{ }''' instead of '''&quot; &quot;'''.

 &gt;&gt; very-long-string: {
 {    This string
 {    contains many
 {    lines.
 {    }

=== Pasting code in the console ===
Sometimes, you might want to try code examples in the console to try out a function. Simply copy it from your source and paste it (in Windows with '''Ctrl+C''' and '''Ctrl+V''').

=== Common pitfalls ===

==== Literal series ====
The most common mistake made by all those learning Rebol is in dealing with literal series within a function.

For example, here is a function that prints out a &quot;Dear &quot; given a name as an argument.

 dear: func [
     name [string!]
     /local salute
 ][
     salute: &quot;Dear &quot;
     print append salute name
 ]

When the function is first called, the result is as expected
 
 &gt;&gt; dear &quot;John&quot;
 Dear John

However, when run again, the result is unexpected

 &gt;&gt; dear &quot;Jane&quot;
 Dear JohnJane

This happens because the '''''salute''''' variable is initialised to the literal string &quot;Dear &quot;, which is kept in the body of the function, and becomes a subject to change. The '''append''' function alters that string by adding the actual argument string to it.

You can verify this by examining the '''dear''' function before it is first evaluated:

 probe :dear

which results in

 func [
     name [string!]
     /local salute
 ] [
     salute: &quot;Dear &quot;
     print append salute name
 ]

And then when you examine it after it has been evaluated with the argument &quot;John&quot;

 func [
     name [string!]
     /local salute
 ] [
     salute: &quot;Dear John&quot;
     print append salute name
 ]

It is now evident that the string has been altered to &quot;Dear John&quot;.

To ensure that the '''''salute''''' variable is correctly initialised each time, we need to keep the string &quot;Dear &quot; in the function body unaltered. To protect the string in the function body we can assign just a copy of it to the '''''salute''''' variable as follows:

 Dear: func [
     name [string!]
     /local salute
 ] [
     salute: copy &quot;Dear &quot;
     print append salute name
 ]

This guarantees, that the changes made to the '''salute''' string cannot alter the original string in the function body.

The same pitfall occurs when using a block
 &gt;&gt; test: func [l [integer!]] [b: [] repeat x l [append b x]]
 &gt;&gt; test 2
 == [1 2]
 &gt;&gt; test 3
 == [1 2 1 2 3]
To make sure that the '''test''' function does not alter the block it contains, we can use
 b: copy []
in the body of the '''test''' function in this case.

==== Precedence ====
Rebol evaluates left to right, but infix operators take precedence over functions upsetting the normal flow of evaluation.

A common error occurs when comparing values

 if length? series &lt; 10 [print &quot;less then 10&quot;]
 ** Script Error: length? expected series argument of type: series port tuple bitset struct
 ** Near: if length? series &lt; 10

Here the infix operator '''&lt;''' takes precedence over the '''length?''' function.  The result which is a boolean value is then passed to the function '''length?''' which is in fact expecting a series argument instead of a boolean.

To circumvent this, the expression can be rewritten as

 if (length? series) &lt; 10 [print &quot;less than 10&quot;]

or as

 if 10 &gt; length? series [print &quot;less than 10&quot;]

In the latter version, the infix operator takes precedence, and evaluates '''10''' and then '''length?'''.  Since '''length?''' requires one argument, it consumes '''series''' and returns the value to '''&gt;''' to give the correct evaluation.

==== Missing arguments ====
Another common mistake, made by both beginners and experts, is to forget to provide an argument to a function.

In the example below, we forget to provide the last argument to the '''append''' function:

 &gt;&gt; append &quot;example&quot;
 ** Script Error: append is missing its value argument
 ** Near: append &quot;example&quot;

What does the error mean by &quot;value&quot; argument? Use help to find out:

 &gt;&gt; help append
 USAGE:
    APPEND series value /only
 DESCRIPTION:
     Appends a value to the tail of a series and returns the series head.
     APPEND is a function value.
 ARGUMENTS:
     series -- (Type: series port)
     value -- (Type: any)
 REFINEMENTS:
     /only -- Appends a block value as a block

Here you can see that &quot;value&quot; is the second argument. That's what is missing.

==== Extra arguments ====
Another common argument mistake is to provide too many arguments. This type of mistake is more subtle, because you won't get an error message.

Here is an example. Let's suppose you have the expression:

 if num &gt; 10 [print &quot;greater&quot;]

But, then you decide you want to print &quot;not greater&quot; for the else case. You might be tempted to write:

 if num &gt; 10 [print &quot;greater&quot;] [print &quot;not greater&quot;]

This is an error, but when you try it, ''you won't get an error message''. The second block will be ignored. That's because the '''if''' function only takes one block. If you want both blocks, you should use the '''either''' function as shown here:

 either num &gt; 10 [print &quot;greater&quot;] [print &quot;not greater&quot;]

Keep an eye out for these kinds of errors in your code.

''Note:'' There is a very good reason why Rebol allows these &quot;extra&quot; values without producing an error. It is actually one of the special features of Rebol. Consider the '''reduce''' function that was mentioned above. Allowing multiple expressions to follow each other allows you to create special data results that can be very useful. This is an advanced topic, but take a look at the example below to get an idea of its importance in Rebol:

 &gt;&gt; reduce [if num &gt; 10 [123] [&quot;example&quot; 456]]
 == [123 [&quot;example&quot; 456]]

==== Wrong type of arguments ====
There is also the situation that occurs if you do not provide the proper type of argument to a function. In some specific cases, the error message might be a bit confusing.

Modifying the '''if''' example above, what if you wrote:

 if num &gt; 10 print &quot;greater&quot;

You would get this error:

 ** Script Error: if expected then-block argument of type: block
 ** Near: if num &gt; 10 print

That happened because you did not provide the correct type of argument to the function. What you meant to write was:

 if num &gt; 10 [print &quot;greater&quot;]

Again, if you wonder what Rebol means by &quot;then-block&quot;, use the help function:

 &gt;&gt; help if
 USAGE:
    IF condition then-block /else else-block
 DESCRIPTION:
     If condition is TRUE, evaluates the block.
     IF is a native value.
 ARGUMENTS:
     condition -- (Type: any)
     then-block -- (Type: block)
 REFINEMENTS:
     /else -- If not true, evaluate this block
         else-block -- (Type: block)


==== Copy vs copy/deep ====
Given the following series
&lt;code&gt;&lt;pre&gt;a: [a b c [d e f]]&lt;/pre&gt;&lt;/code&gt;
Perform '''copy'''
&lt;code&gt;&lt;pre&gt;b: copy a
probe b
&gt;&gt; [a b c [d e f]]&lt;/pre&gt;&lt;/code&gt;
Now '''b''' contains words '''''a''''', '''''b''''', '''''c''''' and its fourth element is the same as the fourth element of '''a'''.
This can be seen by appending to '''a/4''' and checking '''b''' again
&lt;code&gt;&lt;pre&gt;append a/4 'g
probe b
&gt;&gt; [a b c [d e f g]]&lt;/pre&gt;&lt;/code&gt;
On '''copy/deep''', '''c/4''' becomes a separate copy of '''a/4''', so the subblocks '''a/4''' and '''c/4''' are not identical.
&lt;code&gt;&lt;pre&gt;c: copy/deep a
append a/4 'h
probe c
&gt;&gt; [a b c [d e f g]]&lt;/pre&gt;&lt;/code&gt;
'''c/4''' does not have '''''h''''' but '''b/4''' does.
&lt;code&gt;&lt;pre&gt;probe b
&gt;&gt; [a b c [d e f g h]]&lt;/pre&gt;&lt;/code&gt;
Neither '''b''' nor '''c''' will contain '''''i''''' as it is in the outer series
&lt;code&gt;&lt;pre&gt;append a 'i
probe c
&gt;&gt; [a b c [d e f g]]
probe b
&gt;&gt; [a b c [d e f g h]]&lt;/pre&gt;&lt;/code&gt;

=== Code readability ===
Even in the console, you can produce quite long sequences of functions and variables. If you put it all in one line, it can be hard to read, especially since Rebol makes it unnecessary to using parantheses for evaluation:

 print multiply add 4 add 6 5 divide 1 square-root 3

The trained eye may know where to start, but such a ''mixture of using functions inside arguments'' can quickly become hard to read.

One method is to split the code into multiple lines. With Rebol you are completely free to do that:

 print
   multiply
     add 4
       add 6 5
     divide
       1
       square-root 3

This helps to understand what's going on.

 print (4 + 6 + 5) * (1 / square-root 3)

Is an easier equivalent for the same expression.

== External references ==

* [http://www.rebol.net/article/0206.html Is Rebol a pure functional language?]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>9myeije2sh7zmjhd95hdy0e2b8nr7ij</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL/Database</title>
    <ns>0</ns>
    <id>39928</id>
    <redirect title="REBOL Programming/Language Features/Database" />
    <revision>
      <id>328788</id>
      <parentid>227971</parentid>
      <timestamp>2006-01-06T03:45:27Z</timestamp>
      <contributor>
        <username>Guanabot~enwikibooks</username>
        <id>5478</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[REBOL Programming/Language Features/Database]]</text>
      <sha1>1kxw5byyd4u6c5dmi8eafar6jl8zegx</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Language Features/Parse</title>
    <ns>0</ns>
    <id>39929</id>
    <revision>
      <id>2452670</id>
      <parentid>2140845</parentid>
      <timestamp>2012-12-03T17:25:08Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">''PARSE'' is one of the most powerful features in REBOL. It has many capabilities from [[REBOL_Programming/Language_Features/Parse/Simple_splitting|simple string splitting]] to [[REBOL_Programming/Language_Features/Parse/Parse_expressions|parse expression matching]]. PARSE forms the basis of [[w:Pattern matching|pattern matching]] in REBOL; in other languages pattern matching is often implemented as [[w:Regular expression|regular expression matching]].

''If you are asking yourself why REBOL has no regular expression matching implementation, PARSE is the answer.''

A skeleton of a parsing operation:

 parse INPUT RULE

==Table of contents==

*[[REBOL_Programming/Language_Features/Parse/Simple_splitting|Simple splitting]]
*[[REBOL_Programming/Language_Features/Parse/Splitting_using_specific_delimiters|Splitting using specific delimiters]]
*[[REBOL_Programming/Language_Features/Parse/Parse_expressions|Parse expressions]]
*[[REBOL_Programming/Language_Features/Parse/Parsing_examples|Parsing examples]]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>6fmnpxvs4fmip1squvw1jichtph0eha</sha1>
    </revision>
  </page>
  <page>
    <title>ACT Study Guide/Overview</title>
    <ns>0</ns>
    <id>39930</id>
    <revision>
      <id>1520747</id>
      <parentid>1484598</parentid>
      <timestamp>2009-06-05T11:57:25Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>fix links and minor change in wording to get rid of &quot;here&quot; link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The '''ACT''' (American College Test) is a standardized college entrance exam taken by many United States high school students in their 11th or 12th year of standard schooling.  Although the United States is not the only place to take the ACT, it is the main country in which students take the test.  The highest score possible is a 36.  The subsections have a high score of 18.  You are also shown your percentile rank.  Students decide what colleges they want to have their scores sent to.  The colleges then look at the test scores and use them as one of many factors for admission.  Another major college entrance exam in the US is the SAT.  If you wish to prepare for the SAT you can read the [[SAT Study Guide]].

The ACT has four main sections.  These sections are [[ACT Study Guide/English|English]], [[ACT Study Guide/Math|Math]], [[ACT Study Guide/Reading|Reading]], and [[ACT Study Guide/Science|Science]].  Below you can find the amount of time give, the number of questions, and the subscore categories.

The information below is taken from ''Getting Into the ACT'' copyright 1990 and 1997 by ACT, and from the 2004/2005 student score report.

== English ==
*Time
:45 Minutes
*Questions
:75
*Subscores        
:Usage and Mechanics (40 Questions)
:Rhetorical Skills (35 Questions)

== Math ==
*Time
:60 Minutes
*Questions
:60
*Subscores        
:Pre-Algebra (14 Questions)/Elementary Algebra (10 Questions)
:Intermediate Algebra (9 Questions)/Coordinate Geometry (9 Questions)
:Plane Geometry (14 Questions)/Trigonometry (4 Questions)

== Reading ==
*Time
:35 Minutes
*Questions
:40
*Subscores        
:Arts/Literature (20 Questions)
:Social Studies/Sciences (20 Questions)

== Science ==
*Time
:35 Minutes
*Questions
:40
*Subscores         
:None
*Question Content
:Data Representation (15 Questions)
:Research Summaries (18 Questions)
:Conflicting Viewpoints (7 Questions)

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>8810kjnj0lootcfkf4xgdvr0mh00heq</sha1>
    </revision>
  </page>
  <page>
    <title>Visual Basic/Compiler Directives</title>
    <ns>0</ns>
    <id>39931</id>
    <revision>
      <id>1489192</id>
      <parentid>1057098</parentid>
      <timestamp>2009-05-03T02:52:04Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">=Introduction=
Compiler directives are instructions that are executed by the compiler at compile time rather than by the program at run time.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>8vqqmwuyj3f2lli0l9fixbmr7ntgfi0</sha1>
    </revision>
  </page>
  <page>
    <title>Consciousness Studies/Measurement In Quantum Physics And The Preferred Basis Problem</title>
    <ns>0</ns>
    <id>39932</id>
    <revision>
      <id>2064303</id>
      <parentid>1462767</parentid>
      <timestamp>2011-03-04T19:39:13Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: ie: → i.e.:, Schrodinger → Schrödinger (4) using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==The Measurement Problem==

In quantum physics the probability of an event is deduced by taking the square of the '''amplitude''' for an event to happen.  The term &quot;amplitude for an event&quot; arises because of the way that the Schrödinger equation is derived using the mathematics of ordinary, classical waves where the amplitude over a small area is related to the number of photons hitting the area.  In the case of light, the probability of a photon hitting that area will be related to the ratio of the number of photons hitting the area divided by the total number of photons released. The number of photons hitting an area per second is the intensity or amplitude of the light on the area, hence the probability of finding a photon is related to &quot;amplitude&quot;.

However, the Schrödinger equation is not a classical wave equation. It does not determine events, it simply tells us the probability of an event. In fact the Schrödinger equation in itself does not tell us that an event occurs at all, it is only when a measurement is made that an event occurs. The measurement is said to cause ''state vector reduction''. This role of measurement in quantum theory is known as the '''measurement problem'''.  The measurement problem asks how a definite event can arise out of a theory that only predicts a continuous probability for events.

Two broad classes of theory have been advanced to explain the measurement problem. In the first it is proposed that observation produces a sudden change in the quantum system so that a particle becomes localised or has a definite momentum. This type of explanation is known as ''collapse of the wavefunction''. In the second it is proposed that the probabilistic Schrödinger equation is always correct and that, for some reason, the observer only observes one particular outcome for an event. This type of explanation is known as the ''relative state interpretation''. In the past thirty years relative state interpretations, especially Everett's relative state interpretation have become favoured amongst quantum physicists.

==The quantum probability problem==

The measurement problem is particularly problematical when a single particle is considered. Quantum theory differs from classical theory because it is found that a single photon seems to be able to interfere with itself.  If there are many photons then probabilities can be expressed in terms of the ratio of the number hitting a particular place to the total number released but if there is only one photon then this does not make sense. When only one photon is released from a light source quantum theory still gives us a probability for a photon to hit a particular area but what does this mean at any instant if there is indeed only one photon? 

If the Everettian interpretation of quantum mechanics is invoked then it might seem that the probability of the photon hitting an area in your particular universe is related to the occurrences of the photon in all the other universes.  But in the Everrettian interpretation even the improbable universes occur.  This leads to a problem known as the quantum '''probability problem''':

 If the universe splits after a measurement, with every possible 
 measurement outcome realised in some branch, then how can it make 
 sense to talk about the probabilities of each outcome? Each 
 outcome occurs.

This means that if our phenomenal consciousness is a set of events then there would be endless copies of these sets of events, almost all of which are almost entirely improbable to an observer outside the brain but all of which exist according to an Everrettian Interpretation. Which set is you? Why should 'you' conform to what happens in the environment around you?

==The preferred basis problem==

It could be held that you assess probabilities in terms of the branch of the universe in which you find yourself but then why do you find yourself in a particular branch?  Decoherence Theory is one approach to these questions. In decoherence theory the environment is a complex form that can only interact with particles in particular ways. As a result quantum phenomena are rapidly smoothed out in a series of micro-measurements so that the macro-scale universe appears quasi-classical. The form of the environment is known as the preferred basis for quantum decoherence. This then leads to the '''preferred basis problem''' in which it is asked how the environment occurs or whether the state of the environment depends on any other system.

According to most forms of decoherence theory 'you' are a part of the environment and hence determined by the preferred basis.  From the viewpoint of phenomenal consciousness this does not seem unreasonable because it has always been understood that the conscious observer does not observe things as quantum superpositions.  The conscious observation is a classical observation.

However, the arguments that are used to derive this idea of the classical, conscious observer contain dubious assumptions that may be hindering the progress of quantum physics.  The assumption that the conscious observer is simply an information system is particularly dubious:

&lt;font face=&quot;times new roman&quot;&gt;&quot;Here we are using aware in a down - to - earth sense: Quite simply, observers know what they know. Their information processing machinery (that must underlie higher functions of the mind such as &quot;consciousness&quot;) can readily consult the content of their memory. &lt;/font&gt;(Zurek 2003).

This assumption is the same as assuming that the conscious observer is a set of measurements rather than an observation. It makes the rest of Zurek's argument about decoherence and the observer into a tautology - given that observations are measurements then observations will be like measurements. However, conscious observation is not simply a change of state in a neuron, a &quot;measurement&quot;, it is the entire manifold of conscious experience.

In his 2003 review of this topic Zurek makes clear an important feature of information theory when he states that:

 There is no information without representation.

So the contents of conscious observation are states that correspond to states of the environment in the brain (i.e.: measurements). But how do these states in the brain arise? 
The issue that arises here is whether the representation, the contents of consciousness, is entirely due to the environment or due to some degree to the form of conscious observation. Suppose we make the reasonable assumption that conscious observation is due to some physical field in the dendrites of neurons rather than in the action potentials that transmit the state of the neurons from place to place.  This field would not necessarily be constrained by decoherence; there are many possibilities for the field, for instance, it could be a radio frequency field due to impulses or some other electromagnetic field (cf: Anglin &amp; Zurek (1996)) or some quantum state of macromolecules etc..  Such a field might contain many superposed possibilities for the state of the underlying neurons and although these would not affect sensations, they could affect the firing patterns of  neurons and create actions in the world that are not determined by the environmental &quot;preferred basis&quot;.

Zeh (2000) provides a mature review of the problem of conscious observation. For example he realises that memory is not the same as consciousness:

&lt;font face=&quot;times new roman&quot;&gt;&quot;The genuine carriers of consciousness ... must not in general be expected to represent memory states, as there do not seem to be permanent contents of consciousness.&quot;&lt;/font&gt;

and notes of memory states that they must enter some other system to become part of observation:

&lt;font face=&quot;times new roman&quot;&gt;&quot;To most of these states, however, the true physical carrier of consciousness somewhere in the brain may still represent an external observer system, with whom they have to interact in order to be perceived. Regardless of whether the ultimate observer systems are quasi-classical or possess essential quantum aspects, consciousness can only be related to factor states (of systems assumed to be localized
in the brain) that appear in branches (robust components) of the global wave function —  provided the Schrodinger equation is exact. Environmental decoherence represents entanglement (but not any “distortion” — of the brain, in this case), while ensembles of wave functions, representing various potential (unpredictable) outcomes, would require a dynamical collapse (that has never been observed).&quot;&lt;/font&gt;

However, Zeh (2003) points out that events may be irreversibly determined by decoherence before information from them reaches the observer. This might give rise to a multiple worlds and multiple minds mixture for the universe, the multiple minds being superposed states of the part of the world that is the mind. Such an interpretation would be consistent with the ''apparently'' epiphenomenal nature of mind. A mind that interacts only weakly with the consensus physical world, perhaps only approving or rejecting passing actions would be an ideal candidate for a QM multiple minds hypothesis.

==Further reading and references==

* Anglin, J.R. &amp; Zurek, J.H. (1996). Decoherence of quantum fields: decoherence and predictability. Phys.Rev. D53 (1996) 7327-7335 http://arxiv.org/PS_cache/quant-ph/pdf/9510/9510021.pdf

* Baker, D.J. (2004). Lingering Problems with Probability in Everettian Quantum Mechanics http://www.princeton.edu/~hhalvors/teaching/phi538_f2004/LingeringProbsEverett.pdf

* Lockwood, M. (1996) Many Minds Interpretations of quantum mechanics. The British Journal of the Philosophy of Science. 47: 2 (159-188). http://www.ibiblio.org/weidai/Many_Minds.pdf

* Pearl, P. (1997). True collapse and false collapse.  Published in Quantum Classical Correspondence: Proceedings of the 4th Drexel Symposium on Quantum Nonintegrability, Philadelphia, PA, USA, September 8-11, 1994, pp. 51-68. Edited by Da Hsuan Feng and Bei Lok Hu. Cambridge, MA: International Press, 1997. http://arxiv.org/PS_cache/quant-ph/pdf/9805/9805049.pdf

* Squires, E.J. (1996). What are quantum theorists doing at a conference on consciousness? http://arxiv.org/PS_cache/quant-ph/pdf/9602/9602006.pdf

* Zeh, H. D. (1979). Quantum Theory and Time Asymmetry. Foundations of Physics, Vol 9, pp 803-818 (1979).

* Zeh, H.D. (2000) THE PROBLEM OF CONSCIOUS OBSERVATION IN QUANTUM MECHANICAL DESCRIPTION. Epistemological Letters of the Ferdinand-Gonseth Association in Biel (Switzerland) Letter No 63.0.1981, updated 2000. http://arxiv.org/abs/quant-ph/9908084

* Zeh, H.D. (2003). Decoherence and the Appearance of a Classical World in Quantum Theory, second edition, Authors:. E. Joos, H.D. Zeh, C. Kiefer D. Giulini, J. Kupsch, and I.-O. Stamatescu.  Chapter 2: Basic Concepts and their Interpretation. http://www.rzuser.uni-heidelberg.de/~as3/index.html

* Zurek, W.H. (2003). Decoherence, einselection and the quantum origins of the classical. Rev. Mod. Phys. 75, 715 (2003) http://arxiv.org/abs/quant-ph/0105127

[[Category:Consciousness Studies]]</text>
      <sha1>copafzys9fsp4kwgav4pcio4rtddjbn</sha1>
    </revision>
  </page>
  <page>
    <title>ACT Study Guide/English</title>
    <ns>0</ns>
    <id>39933</id>
    <revision>
      <id>2519723</id>
      <parentid>1934891</parentid>
      <timestamp>2013-05-03T04:31:44Z</timestamp>
      <contributor>
        <ip>172.8.93.219</ip>
      </contributor>
      <comment>/* Style */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">For the English section, you are given 45 minutes to read five selections and then answer a total of 75 multiple-choice questions about them.  This gives you an average of nine minutes per passage and 15 questions.  These questions are broken down into two subcategories.  The first subcategory usage and mechanics.  This covers punctuation, grammar, etc.  The second subcategory is rhetorical skills, which covers the areas of sentence order, style, etc.  There are 40 usage and mechanics questions and 35 rhetorical skills questions.  Spelling and vocabulary are not tested directly, but there are some questions that ask you to figure words out by the context.  Obviously, these questions are a lot easier if you already know the word ahead of time, but you don't have to.  After you read the passage, you can go back and re-read it as you answer the questions.

One tip that deals specifically with the English section is that after you choose your answer, read through the sentence or paragraph with your answer choice and see if it sounds good.  If it does, you know you've made the right choice.

== Usage and Mechanics ==

These questions always refer back to an underlined sentence, phrase, or word.  Most of the u/m questions that you see will have an answer choice of NO CHANGE.  If you pick that answer, it means that you think the sentence or phrase is fine as written.  You will also be given three other choices.

=== Punctuation ===

==== Commas ====
Commas are used:

To separate items in a series
*I bought bananas, oranges, and apples.
If all of the items are separated by conjunctions, then no commas are used
*I bought bananas and oranges and apples.

To set off appositives
*I asked the coach, Alan Freeman, if I could miss practice because of my hurt knee.
If the appositive is a one-word familial relationship, no comma is used.
*My cousin Bob is in the Army.

To separate words used as a direct address
*Albert, bring me that bucket.

To set off parenthetical expressions
*By the way, I don't think he should have done it.

To separate two numbers
*After day 26, 75 people were still missing.

To separate out-of-place modifiers
*The players, exhausted and sore, piled onto the bus.

To separate titles or degrees from the rest of the sentence
*Harold Whitman, J.D., is the new law professor.
No commas is used between the name and a roman numeral showing generations
*Henry VIII had a total of six wives.

Wherever needed to keep you from misreading the sentence
*Below, the water shined.

==== Apostrophes ====
Apostrophes are used:

To form the singular possessive, add an apostrophe and then an ''s''.
*Mother's dress
*The mouse's cheese

To form the plural possessive, add an apostrophe if the plural ends in an ''s''.  If the plural does not end in an ''s'', add and apostrophe and then an ''s''.
*The mothers' dresses
*The mice's cheese collection

If the possessive is hard to pronounce when written correctly, you can drop the ''s'' and just leave the apostrophe, unless the singular is just one syllable.  Then you have to keep the ''s''.
*In Jesus' name we pray... (Loberger 174)

To omit parts of a date
*The war ended in '45.

To form contractions
*Don't
*Haven't

To form plurals of numbers, letters, and words that are used as nouns
*I got six 100's on my tests.
*I put six m's where there should have been n's.

To indicate worth or work
*A penny's worth
*A hard day's work

==== Colons ====
Colons are used:

Before lists introduced by ''the following'' or any other phrase used to demonstrate what is
*You are accused of the following: stealing, bribery, and robbery.
*Of the sisters, I knew four: Bertha, Roberta, Andrea, and Joyce.

Before a long statement
*To the jury, the lawyer said: &quot;The last four things I want to share with you...&quot;

Before a second clause explaining or restating the first clause

Verbs are not to be used:
*After a form of ''to be'' or a linking verb
*After a preposition

==== Hyphens ====
Hyphens are used:

For words joined as a modifier
*The sixty-third runner
*The out-of-date records
A hyphen should not be used for a verb phrase modifying a noun
*The quickly disappearing land

Fractions used as a modifier
*Six-tenths of the nation

Numbers from 21-99 (Excluding multiples of ten)
*Thirty-one

Anywhere when needed to prevent misreading
*The re-creation vs. the recreation

==== Semicolons ====
Semicolons are used:

To separate main clauses not joined by and, or, for, nor, but, so, or yet (Loberger 165)
*I have reason to believe that you cheated; nevertheless, I must let you go because I don't have evidence to corroborate my argument.

To separate main clauses that are joined by and, or, for, nor, but, so, or yet, but have a comma in one or both of the main clauses
*I, Mr. Jones, own a Porsche; and I also own a Ferrari.

To separate items in a list when one or more of the items have commas in them

==== Parentheses ====
Parentheses are used:

With question marks to show historical uncertainty
*Harriet Tubman lived from 1820(?) to 1913.

Around parenthetical remarks
*The painting (which I thought was ugly) was in a plastic case.

Around numbers after the number is spelled out
*There are three-hundred sixty-five (365) days in a year.

==== Question Marks ====
Question marks are used:

To show historical uncertainty
*Harriet Tubman lived from 1820(?) to 1913.
After each part in a series of incomplete questions
*Did you travel by boat? By car? By plane?

=== Grammar ===

==== Subject-Verb Agreement ====
*Incorrect: He run the race.
*Correct: He ran the race.

==== Pronouns ====
Singular pronouns should replace singular nouns.  Each, every, someone, and many are all commonly confused.  They are all singular and should be used with singular nouns
*Incorrect: Each person took their share.
*Correct: Each person took his share.

Some pronouns are also commonly replaced by other words that are not pronouns.
*Their vs. There
*Who's vs. Whose

Sometimes the object pronoun is used and the subject pronoun and vice versa.
*Incorrect: The present was for Carol and I.
*Correct: The present was for Carol and me.
The first example sounds more sophisticated, but it uses I (subject form) as the object of a preposition.

=== Sentence Structure ===

==== Dangling Modifiers ====
e.g. Snuggled in the basement with my family, the hurricane was stronger than ever.  This makes it sound like the hurricane is in the basement with your family.  Instead, you could rewrite it as &quot;I was snuggled in the basement with my family.  The hurricane outside was stronger than ever.&quot;

==== Run-On Sentences ====
*Incorrect: I had a lot of fun I hope you did too.
*Correct: I had a lot of fun.  I hope you did too.

==== Fragments ====
Phrases need to have verbs to be a sentence.

==== Commonly Confused Words and Contractions ====
* ''its'' and ''it's''
* ''who's'' and ''whose''
* ''their'', ''there'', and ''they're''

== Rhetorical Skills ==
This covers the less rule-bound areas of writing and includes strategy, organization, and style.

=== Strategy ===
This includes:
*Topic Sentences
*Paragraph Transition
*Adding Information

=== Organization ===
This includes:
*Order
*How the Passage Fits Together

=== Style ===
This includes:
*Word Choice
*Getting Rid of Unnecessary Words
*How You Phrase Things

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>hh0kn19yx23pe3huy3e0e8e87821j4t</sha1>
    </revision>
  </page>
  <page>
    <title>ACT Study Guide/Bibliography</title>
    <ns>0</ns>
    <id>39934</id>
    <revision>
      <id>1484596</id>
      <parentid>1484569</parentid>
      <timestamp>2009-04-28T22:17:16Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">*''Getting Into the ACT''
*''Webster's New World English Grammar Handbook''
*http://www.civilwarhome.com/tubmanbio.htm

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>1ee3mfossokcgfnmr6x656j1yh9k9sz</sha1>
    </revision>
  </page>
  <page>
    <title>User:Suchenwi</title>
    <ns>2</ns>
    <id>39935</id>
    <revision>
      <id>228049</id>
      <parentid>228047</parentid>
      <timestamp>2005-09-04T14:50:02Z</timestamp>
      <contributor>
        <username>Suchenwi</username>
        <id>11126</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Richard Suchenwirth (legal name: Richard Georg Hermann Suchenwirth-Bauersachs geb. Suchenwirth), German software developer, working at Siemens L&amp;A PA, Constance. Contact: richard.suchenwirth-bauersachs at siemens dot com, or suchenwi at aol dot com.

For many years I have written pages about the Tcl programming language in the Tclers' Wiki http://wiki.tcl.tk/RS , and more than once I have been asked to make a book from them. I never managed, until I found WikiBooks. Maybe here it will come to life - and be free for all, as the original pages were, but better structured and less cluttered by crosstalk :) 

Wikipedia, and I assume WikiBooks too, has a clearer separation between presentation and discussion, than our Tclers' Wiki has. But I'll continue to write there, whenever I have something interesting to report - and later see to integrate useful content into [[Programming:Tcl]].</text>
      <sha1>j8cmjnr7ohiud4ew2l8qogy72qa8nc3</sha1>
    </revision>
  </page>
  <page>
    <title>User:Nickptar~enwikibooks/monobook.css</title>
    <ns>2</ns>
    <id>39936</id>
    <revision>
      <id>2875651</id>
      <parentid>228055</parentid>
      <timestamp>2015-04-17T22:50:26Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Nickptar/monobook.css]] to [[User:Nickptar~enwikibooks/monobook.css]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Nickptar|Nickptar]]&quot; to &quot;[[Special:CentralAut...</comment>
      <model>css</model>
      <format>text/css</format>
      <text xml:space="preserve">/* make a few corners round, only supported by moz/firefox/other gecko browsers for now */
#p-cactions ul li, #p-cactions ul li a {  
  -moz-border-radius-topleft: 0.75em;
  -moz-border-radius-topright: 0.75em;
}
#content { 
  -moz-border-radius-topleft: 0.75em; 
  -moz-border-radius-bottomleft: 0.75em;
}
div.pBody {
  -moz-border-radius-topright: 0.75em;
  -moz-border-radius-bottomright: 0.75em;
}
table#toc {
  -moz-border-radius-topright: 0.75em;
  -moz-border-radius-bottomright: 0.75em;
  -moz-border-radius-topleft: 0.75em; 
  -moz-border-radius-bottomleft: 0.75em;
}

.usermessage {
  background-color: #00ff00;
  border-color: #009900;
}</text>
      <sha1>lcdl33ojjtagq1bn9czuoq3qedbf11h</sha1>
    </revision>
  </page>
  <page>
    <title>User:Nickptar~enwikibooks/monobook.js</title>
    <ns>2</ns>
    <id>39937</id>
    <revision>
      <id>2875653</id>
      <parentid>228056</parentid>
      <timestamp>2015-04-17T22:50:26Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Nickptar/monobook.js]] to [[User:Nickptar~enwikibooks/monobook.js]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Nickptar|Nickptar]]&quot; to &quot;[[Special:CentralAuth/...</comment>
      <model>javascript</model>
      <format>text/javascript</format>
      <text xml:space="preserve">// fix diff overflow expanding page

function cesarb_fixDiffOverflowTableCell(cell)
{
    var div = document.createElement(&quot;div&quot;);
    div.style.overflow = &quot;auto&quot;;
    while (cell.firstChild)
    {
        div.appendChild(cell.firstChild);
    }
    cell.appendChild(div);
}

function cesarb_fixDiffOverflowTable(table)
{
    var cells = table.getElementsByTagName(&quot;td&quot;);

    for (var i = 0; i &lt; cells.length; i++)
    {
        var cell = cells[i];
        var classes = cell.className.split(&quot; &quot;);

        for (var j = 0; j &lt; classes.length; j++)
        {
            if (classes[j] == &quot;diff-context&quot; || classes[j] == &quot;diff-addedline&quot; || classes[j] == &quot;diff-deletedline&quot;)
            {
                cesarb_fixDiffOverflowTableCell(cell);
                break;
            }
        }
    }
}

function cesarb_fixDiffOverflowLoadListener(evt)
{
    var tables = document.getElementsByTagName(&quot;table&quot;);

loop:
    for (var i = 0; i &lt; tables.length; i++)
    {
        var table = tables[i];
        var classes = table.className.split(&quot; &quot;);

        for (var j = 0; j &lt; classes.length; j++)
        {
            if (classes[j] == &quot;diff&quot;)
            {
                cesarb_fixDiffOverflowTable(table);
                break loop;
            }
        }
    }
}

window.addEventListener(&quot;load&quot;, cesarb_fixDiffOverflowLoadListener, false);

// edit top

function editTopLink() {
  // if this is a preview page, stop
if(document.getElementById(&quot;wikiPreview&quot;) || self.location.pathname.indexOf(&quot;title=Special:&quot;) !== -1) {
    return;
 }

  // get the page title
  var pageTitle = document.title.split(&quot; - &quot;)[0].replace(&quot; &quot;, &quot;_&quot;); 

  // create div and set innerHTML to link
  var divContainer = document.createElement(&quot;div&quot;);
  divContainer.innerHTML = '&lt;div class=&quot;editsection&quot; style=&quot;float:right;margin-left:5px;margin-top:3px;&quot;&gt;[&lt;a href=&quot;/w/index.php?title='+pageTitle+'&amp;action=edit&amp;section=0&quot; title=&quot;'+document.title.split(&quot; - &quot;)[0]+'&quot;&gt;edit top&lt;/a&gt;]&lt;/div&gt;';

  // this is a hack so I can refer to the h1 by an id
  document.getElementsByTagName(&quot;h1&quot;)[0].id = &quot;f1r5tH34d1ng&quot;;
  var theH1 = document.getElementById(&quot;f1r5tH34d1ng&quot;); 

  // insert divContainer into the DOM before the h1
  document.getElementById(&quot;content&quot;).insertBefore(divContainer, theH1);

}

// setTimeout does not need a string reference to work
setTimeout(editTopLink, 0) // this is equivalent of onload</text>
      <sha1>pqu8gwub1hzoepoq3834pu2l7wqo9du</sha1>
    </revision>
  </page>
  <page>
    <title>User:Nickptar~enwikibooks</title>
    <ns>2</ns>
    <id>39938</id>
    <revision>
      <id>2875650</id>
      <parentid>228062</parentid>
      <timestamp>2015-04-17T22:50:26Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Nickptar]] to [[User:Nickptar~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Nickptar|Nickptar]]&quot; to &quot;[[Special:CentralAuth/Nickptar~enwikibooks|Nic...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">See [[w:User:Nickptar]].</text>
      <sha1>3isbmim14a5fe0stqfgusg320ki8xo8</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Nickptar~enwikibooks</title>
    <ns>3</ns>
    <id>39939</id>
    <revision>
      <id>2928337</id>
      <parentid>2875656</parentid>
      <timestamp>2015-04-19T05:18:19Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">See [[w:User talk:Nickptar]].

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called Nickptar. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name Nickptar~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 23:32, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 05:18, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>rjc2mg9q7hdyx71cg07j3ysyili6b3f</sha1>
    </revision>
  </page>
  <page>
    <title>Portuguese Grammar/Noun</title>
    <ns>0</ns>
    <id>39940</id>
    <revision>
      <id>1605933</id>
      <parentid>1605886</parentid>
      <timestamp>2009-08-12T13:09:11Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <comment>updating links</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''[[w:Noun|Noun]]''' is a [[w:word|word]] that names beings, things, places, qualities, actions or states.
Portuguese noun inflect for gender and number.

== Gender == 
Portuguese has two genders: masculine and feminine. Gender classification is purely grammatical and it only matters when adding [[Portuguese Grammar/Article|articles]] or [[Portuguese Grammar/Adjectives|Adjectives]].

Besides the animate nouns, there is no strict rule for the gender. It is meaningless to say that, in Portuguese, a chair (''cadeira'') is feminine or a book (''livro'') is masculine. Compared to English, however, is a good feature of languages like Portuguse the more specific difference between a male friend (''amigo'') or a female friend (''amiga'').

The normal ending are '''-o''' for masculine and '''-a''' for feminine. This is not a general rule, however; actually, few nouns follow it.

== Noun classification ==
Due to its meaning or formation, the noun can be divided in several groups.

=== Concrete and abstract nouns ===

A '''concrete noun''' refers to things that have independent existence. They can be real or not real, material or not material. 

*água (''water'')
*Brasil (''Brazil'')
*círculo (''circle'')
*galinha (''chicken'')
*João (''John'')
*professor (''teacher'')
*repolho (''cabbage'')

A ''abstract noun'' refers to qualities, actions or states, independently of the things to which they are related.

*beleza (''beauty'')
*[[w:saudade|saudade]]
*calor (''heat'')
*vida (''life'')
*encontro (''meeting'')
*tamanho (''size'')
*condição

Sometimes a noun can be both, depending on the context.

=== Common, proper, and collective nouns ===

A noun that refers to a ''specie'' is classified as '''common'''.

* arquivo (''file'')
* bananeira (''banana tree'')
* caixa (''box'')
* pessoa (''person'')
* vinho (''wine'')

A noun that refers to an individual being is classified as '''proper'''.

* Carlos (''Charles'')
* [[w:Lisboa|Lisboa]] (''Lisbon'')
* [[w:São Paulo, São Paulo|São Paulo]]

A noun that refer to a collectivity is classified as '''collective'''
* arquipélago (''archipelago'') - of islands
* assembléia (''assembly'') - of deputies
* exército (''army'') - of soldiers

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>ldpqvhp1fbhfr61qkhugerw658i893m</sha1>
    </revision>
  </page>
  <page>
    <title>User:Shane Smith~enwikibooks/languages</title>
    <ns>2</ns>
    <id>39941</id>
    <revision>
      <id>2885018</id>
      <parentid>228217</parentid>
      <timestamp>2015-04-17T23:07:27Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Shane Smith/languages]] to [[User:Shane Smith~enwikibooks/languages]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Shane Smith|Shane Smith]]&quot; to &quot;[[Special:Cent...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">this was a worksheet page and is no longer needed</text>
      <sha1>9qy6hvzf5dafs1vz6vts7ku4mcqrg6l</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Suchenwi</title>
    <ns>3</ns>
    <id>39942</id>
    <revision>
      <id>1280931</id>
      <parentid>1280381</parentid>
      <timestamp>2008-09-19T10:19:42Z</timestamp>
      <contributor>
        <username>Suchenwi</username>
        <id>11126</id>
      </contributor>
      <comment>/* Thanks for your work */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== A few hints ==

# Programming languages are shelved on the [[Programming languages bookshelf]].
# The &quot;unkown&quot; in &lt;nowiki&gt;{{stage|25%|unknown}}&lt;/nowiki&gt; means &quot;The date when the book was last checked is unknown&quot;.
## When you add an entry you should check the book.
## If you have checked the book you should know the date when you did it.
## If you know the date you should insert the date '''and not unknown'''
## You would have know all that if you read the instructions which are displayed when you klick on the stage icon.

Thanks for the hints :) As I've just seen, the shelf doesn't have stage indications any more, so I don't have to add one either. And well, who reads all the instructions he encounters, even if they cry README ;^) [[User:Suchenwi|Suchenwi]] 16:26, 4 September 2005 (UTC)

* [[Help:Development_stages]] ;-) --[[User:Krischik|Krischik]] 16:53, 4 September 2005 (UTC)

== [[:Image:TkPiechart.jpg]] is missing a [[Wikibooks:Media#Non-free use|fair use rationale]]==
{{mbox|type=warning|msg=
'''Thanks for uploading [[:Image:TkPiechart.jpg]].''' The [[w:Wikimedia Foundation|Wikimedia Foundation]] is very careful about what Wikibooks includes because of [[w:United States copyright law|copyright law]], and requires that we maintain a strict [[Wikibooks:Copyright|copyright policy]]. [[:Image:TkPiechart.jpg]] and other files you uploaded may soon be deleted unless a [[Wikibooks:Media#Non-free use|rationale]] for a fair use claim is provided.

In order to upload fair use material, specific rationale must be provided as to why fair use media is necessary, and how there are no free alternatives. Images or other media that do not have such rationale will likely be deleted as a copyright violation. If the information of a fair use media component could be duplicated by a free alternative, that media may not be uploaded. Please edit image descriptions pages directly to add {{tlx|fair use rationale}}; there's no need to upload the image again. If you have any questions, feel free to contact me, or [[WB:HELP|ask another Wikibookian]].

See {{UserImages2}} for a complete list of your uploads which may get deleted soon.&lt;br/&gt;Thank you. [[User:MonoBot|MonoBot]] ([[User talk:MonoBot|talk]]) 01:07, 10 March 2008 (UTC)}}

== Thanks for your work ==

Hey, I was just randomly reading a part of your Tcl wikibook, and I must say, you've done some very good work, so I wanted to say thank you.  I know what it's like to labor on something for awhile without any recognition, and how important a simple &quot;thank you&quot; can be.  Keep up the good work.  --[[Special:Contributions/96.241.125.11|96.241.125.11]] ([[User talk:96.241.125.11|talk]]) 16:00, 18 September 2008 (UTC)

Thanks - I appreciate feedback indeed :^) [[User:Suchenwi|Suchenwi]] ([[User talk:Suchenwi|talk]]) 10:19, 19 September 2008 (UTC)</text>
      <sha1>s15wbeb6p77md9lpv9ifl4etu30guie</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Bisgaard</title>
    <ns>3</ns>
    <id>39943</id>
    <redirect title="da:Bruger diskussion:Bisgaard" />
    <revision>
      <id>228084</id>
      <timestamp>2005-09-04T16:34:12Z</timestamp>
      <contributor>
        <username>Bisgaard</username>
        <id>11027</id>
      </contributor>
      <minor />
      <comment>redirect</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT [[da:Bruger diskussion:Bisgaard]]</text>
      <sha1>orth20agrnwbops2jwwjdmpcm7ayl8i</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Programming languages bookshelf</title>
    <ns>10</ns>
    <id>39944</id>
    <restrictions>edit=autoconfirmed:move=autoconfirmed</restrictions>
    <revision>
      <id>1561570</id>
      <parentid>1549896</parentid>
      <timestamp>2009-07-06T21:37:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;!-- To be listed here the programming language book must be at least 50% completed. See the talk page for details --&gt; &lt;center&gt;'''&lt;big&gt;[[Wikibooks:Programming languages bookshelf|Programming languages]]&lt;/big&gt;'''&lt;/center&gt;
'''M&lt;small&gt;ULTI&lt;/small&gt; P&lt;small&gt;ARADIGM&lt;/small&gt;'''
&amp;ndash; [[Ada|Ada Programming]] {{stage short|75%|Jul 27, 2005}}
&amp;ndash; [[C++]]
&amp;ndash; [[Common Lisp|Common Lisp]] {{stage short|25%|Feb 01, 2005}}
&amp;ndash; [[Objective-C Programming|Objective-C]] {{stage short|25%|Jan, 01 0000}}
&amp;ndash; [[Perl Programming|Perl]] {{stage short|50%|Jan, 01 0000}}
&amp;ndash; [[Python Programming|Python]] {{stage short|50%|Jan, 01 0000}}
&amp;ndash; [[Tcl Programming|Tcl]] {{stage short|75%|Oct, 10 2005}}
&amp;ndash; [[Visual Basic]] {{stage short|50%|Oct 24, 2005}}
&amp;ndash; [[JavaScript]] {{stage short|50%|Nov 04, 2005}}
&amp;mdash; '''I&lt;small&gt;MPERATIVE&lt;/small&gt;'''
&amp;ndash; [[Bourne Shell Scripting]] {{stage short|50%|October 10, 2005}}
&amp;ndash; [[C|C]]
&amp;ndash; [[Fortran|Fortran]] {{stage short|25%|Sep, 09 2005}}
&amp;ndash; [[PHP Programming|PHP]] {{stage short|75%|Oct, 31 2005}}
&amp;ndash; [[Icon Programming|Icon]] {{stage short|25%|Jan, 01 0000}}
&amp;ndash; [[QBasic|QBasic]] {{stage short|25%|Jan, 01 0000}}
&amp;ndash; [[ActionScript Programming|ActionScript]] {{stage short|25%|Jan, 18 2007}}
&amp;ndash; [[Turing]] {{stage short|25%|Jan, 01 0000}}
&amp;mdash; '''D&lt;small&gt;ECLARATIVE&lt;/small&gt;'''
&amp;ndash; [[Apache Ant]] - {{stage|75%|Feb 26, 2007}}
&amp;ndash; [[XForms]] - {{stage|75%|Feb 26, 2007}}
&amp;mdash; '''O&lt;small&gt;BJECT&lt;/small&gt; O&lt;small&gt;RIENTED&lt;/small&gt;'''
&amp;ndash; [[C Sharp Programming|C# Programming]] {{stage short|50%|May 9, 2007}}
&amp;ndash; [[Delphi Programming|Delphi Programming]] {{stage short|25%|August 1, 2008}}
&amp;ndash; [[Java Programming]] {{stage short|25%|Nov 23, 2005}}
&amp;ndash; [[Ruby Programming|Ruby]] {{stage short|25%|Jan, 01 0000}}
&amp;ndash; [[Visual Basic .NET]] {{stage short|25%|Oct, 30, 2005}}
&amp;ndash; [[Objective-J]]
&amp;mdash; '''L&lt;small&gt;OGIC&lt;/small&gt;'''
&amp;ndash; [[Prolog|Prolog]] {{stage short|50%|Jan, 01 0000}}
&amp;mdash; '''F&lt;small&gt;UNCTIONAL&lt;/small&gt;'''
&amp;mdash; [[Erlang_Programming|Erlang]] {{stage short|50%|Aug, 20 2008}}
&amp;ndash; [[Haskell]] {{stage short|50%|Jun, 18 2006}}
&amp;mdash; '''A&lt;small&gt;SSEMBLY&lt;/small&gt; L&lt;small&gt;ANGUAGES&lt;/small&gt;'''
&amp;ndash; [[x86 Assembly]] {{stage short|50%}}
&amp;ndash; [[MIPS Assembly]] {{stage short|25%}}
&amp;ndash; [[SPARC Assembly]] {{stage short|25%}}
&amp;ndash; [[360 Assembly]] {{stage short|25%}}
&lt;div style=&quot;float: left;&quot;&gt;&lt;small&gt;
({{ed|Programming languages bookshelf|template}})&lt;/small&gt;&lt;/div&gt;
&lt;div style=&quot;float: right;&quot;&gt;[[Wikibooks:Programming languages bookshelf|'''All Programming language books...''']]&lt;/div&gt;&lt;noinclude&gt;[[Category:Deprecated templates|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>5d7hvq7fn0odktkonokxxfb7ioot7jl</sha1>
    </revision>
  </page>
  <page>
    <title>Chinese: Contents</title>
    <ns>0</ns>
    <id>39946</id>
    <redirect title="Chinese (Mandarin)" />
    <revision>
      <id>228119</id>
      <timestamp>2005-09-04T17:32:26Z</timestamp>
      <contributor>
        <username>Shane Smith~enwikibooks</username>
        <id>6893</id>
      </contributor>
      <comment>Chinese: Contents moved to Chinese (Mandarin): standard nomenclature</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[Chinese (Mandarin)]]</text>
      <sha1>byncnnztje7irlnx8c0mb9wtlsp1n3c</sha1>
    </revision>
  </page>
  <page>
    <title>Zoph/Changelog</title>
    <ns>0</ns>
    <id>39949</id>
    <revision>
      <id>2604160</id>
      <parentid>2420944</parentid>
      <timestamp>2014-01-26T21:11:50Z</timestamp>
      <contributor>
        <username>Jeroenr</username>
        <id>10553</id>
      </contributor>
      <comment>/* Zoph 0.9.1 */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">=Zoph 0.9.1=
Soon

Zoph 0.9.1 is the first feature release for Zoph 0.9, it shows a preview of some of the new features for Zoph 0.10. Most important change is the move of most configuration items from &lt;tt&gt;config.inc.php&lt;/tt&gt; into the Web GUI.
==Features==
* [http://github.com/jeroenrnl/zoph/issues/28 issue#28] Configuration through webinterface [http://github.com/jeroenrnl/zoph/commit/d693f0b96e813b13ef9ce02baa8ee63fef55219c commit] (jeroenrnl)
* Removed display desc under thumbnail feature [http://github.com/jeroenrnl/zoph/commit/fca4a673e0c2a40465de0c836d99781e08b494a6 commit] (jeroenrnl)
* Removed MIXED_THUMBNAILS and THUMB_EXTENSION settings [http://github.com/jeroenrnl/zoph/commit/790d77e7327fa08be683c08db706ca2d09fddbdf commit] (jeroenrnl)
* removed DEFAULT_SHOW_ALL setting [http://github.com/jeroenrnl/zoph/commit/cdd67fce097eec6a3353667bead4df7f01489ea3 commit] (jeroenrnl)
* Removed LANG_DIR configuration item [http://github.com/jeroenrnl/zoph/commit/f687afcf72764d1b211e23040ed3aaeb1a33e414 commit] (jeroenrnl)
* Changed the looks of &lt;input&gt; fields a bit [http://github.com/jeroenrnl/zoph/commit/a589945dc2806196822b016b20ed91cd5c324f4c commit] (jeroenrnl)
* Removed alternative password validators [http://github.com/jeroenrnl/zoph/commit/96ca9674671e2f1451b36147e40e247b45be919a commit] (jeroenrnl)
* Removed checks for PHP 5.1 [http://github.com/jeroenrnl/zoph/commit/a3c772b4318ebea216c6e82b10be12ab6cc21daf commit] (jeroenrnl)
* Adding CLI support for configuration [http://github.com/jeroenrnl/zoph/commit/06b0fd4ed1529a709ffaa40fdd77ca889b13bce3 commit] (jeroenrnl) 
* [http://github.com/jeroenrnl/zoph/issues/7 issue#7] Added a favicon [http://github.com/jeroenrnl/zoph/commit/9a9f69bf45f28843cfa592c288d2f3217aaae79b commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/7 issue#18] Added &quot;return&quot; link on bulk edit page [http://github.com/jeroenrnl/zoph/commit/0796029ae7c75b373fdb3a27a9e28b00a918b9ad commit] (jeroenrnl)
* Added a script to migrate config to new db-based system [http://github.com/jeroenrnl/zoph/commit/261c41824eb501c5326c690fa5aecb1f1cb5626b commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/8 issue#8] Made template selectible from webinterface [http://github.com/jeroenrnl/zoph/commit/9c8dda562f699be18cf214d89e2be4176e1eb32d commit] (jeroenrnl)
* Removed MAX_CRUMBS [http://github.com/jeroenrnl/zoph/commit/c875412c7afa65b98c39ffb185aeacdfd37b4a3d commit] (jeroenrnl)
==Bugs==
* Simplified CLI code &amp; fixed bug in --autoadd [http://github.com/jeroenrnl/zoph/commit/0e28ffb49a5555f21862ff4a59b4730aec9e58f6 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/34 issue#34] Rows and columns swapped on photos page [http://github.com/jeroenrnl/zoph/commit/6c3005b0b7e271fc0424ff17135b2292e86a37a0 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/36 issue#36] Webimporter does not import description [http://github.com/jeroenrnl/zoph/commit/d0ea5edb38af5cce5fe0ef321d11920ef4f69e25 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/37 issue#37] Can not add position on map using the mouse [http://github.com/jeroenrnl/zoph/commit/2332246bf2641cbb982c27a3110165fb2a9d581c commit] (jeroenrnl)
* Fixed a bug that caused EXIF information in some (rare) cases to report the aperture wrong. [http://github.com/jeroenrnl/zoph/commit/bbc232ad3ffb8cd58f2c3955a792d300568e3930 commit] (jeroenrnl)
*  Strict standards warning [http://github.com/jeroenrnl/zoph/commit/133c9b6c817550687ec5b56946eb8e721f630ead commit] (jeroenrnl)

* [http://github.com/jeroenrnl/zoph/issues/45 issue#45] Pagebreak inside HTML tags causes browser to render incorrectly [http://github.com/jeroenrnl/zoph/commit/bf1f5a67f77d2ab1e2b7477f66afda165cd159d1 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/45 issue#45] Added selectArray cache to zophTable [http://github.com/jeroenrnl/zoph/commit/8eec6a55f0d03d13f13915986e8a553da17d0e76 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/48 issue#48] Repair photo ratings during import [http://github.com/jeroenrnl/zoph/commit/cfde82dd984f0c7fa89303c462782a63258dfb1c commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/50 issue#50] Geonames project has changed URL and requires username [http://github.com/jeroenrnl/zoph/commit/5d168e6ccf6afd940a051b956f27d04128c489d3 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/51 issue#51] Fixed depth in tree display when autocorrect is off [http://github.com/jeroenrnl/zoph/commit/b5834b2c9e15a3d7e10b69e98274b8ba759ba6d6 commit] (jeroenrnl)

* [http://github.com/jeroenrnl/zoph/issues/39 issue#39] Added support for session.upload_progress as APC replacement (PHP 5.4 compatibility) [http://github.com/jeroenrnl/zoph/commit/ee2e4dd1bddba2364ea8a272a53607f92847efc3 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/38 issue#38] CLI tries to lookup previous argument's value when looking up photographer [http://github.com/jeroenrnl/zoph/commit/d28c5752e38232dc6fe3f2703c2f08db77e587fa commit] (jeroenrnl)
==Improvements==
I have made quite a few improvements on the &quot;inside&quot; of Zoph. I have refactored many parts of Zoph to create cleaner, less duplicated and more robust code. I have introduced UnitTests (resulting in about 20% of Zoph's sourcecode now tested fully automatic for bugs). As a help to that, I am now using [http://www.sonarqube.org/ Sonar] to automatically run these tests and also analyse Zoph code for other problems.

* [http://github.com/jeroenrnl/zoph/issues/29 issue#29] First step in creating unittests for Zoph [http://github.com/jeroenrnl/zoph/commit/b80131bb69217524a36e104b17517aceb0cf8a5d commit] (Jeroen Roos)
* Sonar Support [http://github.com/jeroenrnl/zoph/commit/d809c6aaebdc521bf28659f637026d5a07fe24d0 commit] (jeroenrnl)
* Refactor of PHP part of Mapping implementation [http://github.com/jeroenrnl/zoph/commit/4748906cc072737920d97925479c864a58ef0b04 commit] (jeroenrnl)
* Move timezone-related global functions into class [http://github.com/jeroenrnl/zoph/commit/e0ee31d7a732bf62aa9ba68b526839896959d78f commit] (jeroenrnl)
* TimeZone object improvements [http://github.com/jeroenrnl/zoph/commit/05d93bde0bb73c1ce4d20bf3fc71128d6b639469 commit] (jeroenrnl)
* Small change in way template is called on photo page (Full page templates are now &quot;templates&quot; and partial pages are &quot;blocks&quot;) [http://github.com/jeroenrnl/zoph/commit/d064115077156252472cd08187ab239405cc0d19 commit] (jeroenrnl)

* Refactor of htmlMimeMail.php [http://github.com/jeroenrnl/zoph/commit/b0ee6b940c18082bfd3279fa67611cc100020631 commit] (jeroenrnl)
* Refactor of Mail_mimePart [http://github.com/jeroenrnl/zoph/commit/9e4542668c94e7824ff8452ab695d1b39f93cc06 commit] (jeroenrnl)
* Refactor annotate photo, watermark photo, image.php [http://github.com/jeroenrnl/zoph/commit/3f4ab554dafa1af1a2789fb6e416e2108c71dd57 commit] (jeroenrnl)

* Removed several global variables [http://github.com/jeroenrnl/zoph/commit/80861e6e1f0676283d1e73c775a9778f4d37e0c9 commit] [http://github.com/jeroenrnl/zoph/commit/8b29bc0cae178072499e6650c5d36a6128e86a78 commit] (jeroenrnl)

* Finished refactor of MIME classes [http://github.com/jeroenrnl/zoph/commit/6fe0d16c0af7876f97127e20635647c8958c4210 commit] (jeroenrnl)

* Refactor album, category, place, person, photo [http://github.com/jeroenrnl/zoph/commit/52b30e77d4a13f314bb3fda0ebea106ea47d0b8c commit] (jeroenrnl)
* Refactor: getEditArray() + unittests [http://github.com/jeroenrnl/zoph/commit/6d83a9bb3c01154daec870334420ffe5cf97a6c6 commit] (jeroenrnl)
* Further refactor of photo, album, person, place, category [http://github.com/jeroenrnl/zoph/commit/eed619139f5c0255fd676a99d320ba82759df17b commit] [http://github.com/jeroenrnl/zoph/commit/ba8ab2dc20473df91bbae79515b598955aa6bc20 commit] (jeroenrnl)
* Refactor: move ratings out of photo object [http://github.com/jeroenrnl/zoph/commit/176c22acfcb9b357d60d0454ee20f86a1327416e commit] [http://github.com/jeroenrnl/zoph/commit/058b8c75ca42ec70eb3058966307b7aa00597bef commit] (jeroenrnl)
* Refactor: moved relations from photo object to new photoRelations object [http://github.com/jeroenrnl/zoph/commit/289e022fe9a8dcd9be6c9f443412d73d7b3fc699 commit] (jeroenrnl)
* Refactor: photo object [http://github.com/jeroenrnl/zoph/commit/a9b461fa19de36511faf28123873d01808ee491a commit] (jeroenrnl)
* Got rid of adding session_id to URL [http://github.com/jeroenrnl/zoph/commit/c3ca961e5254d81dc5ac7fdb307ded140f1bd992 commit] (jeroenrnl)
* Modified internal database references to static [http://github.com/jeroenrnl/zoph/commit/9c88955f36286cf19e2ed58f95f428c934167386 commit] (jeroenrnl)
* Removed brackets from require and include statements [http://github.com/jeroenrnl/zoph/commit/7d2bf522a1358a1276c6e5d033a01479858212fc commit] (jeroenrnl)
* Replaceed a die() with exception [http://github.com/jeroenrnl/zoph/commit/7d8ea1e5baebebc5523682221c4acad9785c8d17 commit] (jeroenrnl)
* Changed self-references in objects to use self:: [http://github.com/jeroenrnl/zoph/commit/d8f1e7e66e774ea5857747650b4a9135dbffd0ae commit] (jeroenrnl)
* Removed unused class smtp [http://github.com/jeroenrnl/zoph/commit/39aacb99b89b61b5935802d78e5be1516d1048ad commit] (jeroenrnl)
* Made autoload a little more robust [http://github.com/jeroenrnl/zoph/commit/eb8e5f95b9bb186575f7a583a7c194aef088acf9 commit] (jeroenrnl)
* Changes to autoload so it works in unittests too. [http://github.com/jeroenrnl/zoph/commit/d74bc6dc9233f95052e9a78b1b02032e9e434884 commit] (jeroenrnl)

* Removed unused RFC822 class [http://github.com/jeroenrnl/zoph/commit/ef82648ceb371ec6b45c6c5f4c292414af3f777b commit] (jeroenrnl)
* Changed line-endings in mailMimePart.inc.php to unix-style [http://github.com/jeroenrnl/zoph/commit/15a8e753628379d19585a81530be736f7973457c commit] (jeroenrnl)
* Removed various unused variables [http://github.com/jeroenrnl/zoph/commit/e4c24c75bf148f9a709c4c4f50e816ba89fb8200 commit] (jeroenrnl)
* Removed duplicate templates [http://github.com/jeroenrnl/zoph/commit/e69c9220aceca2c4f6d07fd15729d6bba5afa568 commit] (jeroenrnl)
* Removed unused $user from createPulldown() calls. [http://github.com/jeroenrnl/zoph/commit/e85098f5a067cd53367d79e71b29d109d5690ee8 commit] (jeroenrnl)

* [http://github.com/jeroenrnl/zoph/issues/40 issue#40] Change documentation to Markdown [http://github.com/jeroenrnl/zoph/commit/13ce6a743f4e45691824a54f082e63aebaff4cbf commit] [http://github.com/jeroenrnl/zoph/commit/8c6e789fa37a6fca9e3dbda0df4543c8e7a63bf8 commit] [http://github.com/jeroenrnl/zoph/commit/b202516fb3708264dc1ab83a965543b8713e528e commit] [http://github.com/jeroenrnl/zoph/commit/d627e412758cc9cc3c11778722cf6cd1e493c17a commit] [http://github.com/jeroenrnl/zoph/commit/6e15bbfbc757b4a46fa9ea5d8ae139b9db92ac8d commit] [http://github.com/jeroenrnl/zoph/commit/86ddc26a2def4f7fb8bc55703530cd3cdb1ede40 commit] [http://github.com/jeroenrnl/zoph/commit/83ed6ad55d44525cb774633fff25bf9f64b60127 commit] [http://github.com/jeroenrnl/zoph/commit/5f97f5660f6349dca61615a7f6ad109b0f1223aa commit]  (jeroenrnl)

* Modified some queries to improve performance [http://github.com/jeroenrnl/zoph/commit/96b2792900dd3a342770774b23e2ae3df5701257 commit] (jeroenrnl)

=Zoph 0.9.0.1=
18 Oct 2012

Zoph 0.9.0.1 is the first maintenance release for Zoph 0.9. It adds compatibility with MySQL 5.4.4 and later and PHP 5.4 support. Several bugs were fixed.

==Bugs==
* [http://github.com/jeroenrnl/zoph/issues/1 issue#1] Changed TYPE=MyISAM to ENGINE=MyISAM for MySQL &gt; 5.4.4 compatibility [http://github.com/jeroenrnl/zoph/commit/0c89bfcde2db20cdabff8a999ac240dc4aa5685f commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/2 issue#2] Changed timestamp(14) into timestamp [http://github.com/jeroenrnl/zoph/commit/55473bf4758f797668df9a73c368bf2c4da56910 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/3 issue#3] Removed pass-by-reference for PHP 5.4 compatibility [http://github.com/jeroenrnl/zoph/commit/2fd300555f9ab9ba48453758083ee76e77a47836 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/6 issue#6] Missing French translation [http://github.com/jeroenrnl/zoph/commit/616ebad8a18c4147119241e3e5218cd42a42f291 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/30 issue#30] Remove warning about undefined variables [http://github.com/jeroenrnl/zoph/commit/fad0fe8dc460729bbb11047d91bb237e11162d7c commit] [http://github.com/jeroenrnl/zoph/commit/e2102615449ebdea8f1ec4f6aa29b575038a183f commit] [http://github.com/jeroenrnl/zoph/commit/85e53eb21ac1437da3f9b37ca1bdc735c9478218 commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/1 issue#1] Fixed: PHP Notice: Array to string conversion [http://github.com/jeroenrnl/zoph/commit/bb41ce671c55e7ad3b219fb4811aa153b37c67fb commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/31 issue#31] Fixed several errors in geotagging code [http://github.com/jeroenrnl/zoph/commit/994fb3a89a65b95a21a5fa73bd6738f4a2ad5a7c commit] (jeroenrnl)
* [http://github.com/jeroenrnl/zoph/issues/33 issue#33] Fixed: no error message when rotate fails [http://github.com/jeroenrnl/zoph/commit/16d9a65f67aa966bfda1e0617b6e766da12499bd commit] (jeroenrnl)
* Fixed a small layout issue on the prefs page [http://github.com/jeroenrnl/zoph/commit/2e476f4fd6da88e0e07e90d5ee2bd883f1a25110 commit] (jeroenrnl)
==Older Releases==
* [[Zoph/Changelog/0.8-0.9|Changelog of releases 0.8 - 0.9]]
* [[Zoph/Changelog/Archive|Changelog of older releases]]

[[Category:Zoph]]</text>
      <sha1>i72f40sbfcb4toqzn8pusqsmdmwvvyp</sha1>
    </revision>
  </page>
  <page>
    <title>Taiwanese</title>
    <ns>0</ns>
    <id>39950</id>
    <redirect title="Min Nan" />
    <revision>
      <id>328672</id>
      <parentid>228136</parentid>
      <timestamp>2006-01-06T03:39:07Z</timestamp>
      <contributor>
        <username>Guanabot~enwikibooks</username>
        <id>5478</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[Min Nan]]</text>
      <sha1>eml4ykct3dpebilm42moygyr1j0hxb5</sha1>
    </revision>
  </page>
  <page>
    <title>D'ni</title>
    <ns>0</ns>
    <id>39952</id>
    <revision>
      <id>1856727</id>
      <parentid>1795924</parentid>
      <timestamp>2010-06-25T18:00:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>removing deprecated DDC/LOC classifications</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;div style=&quot;text-align: center;&quot;&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;'''D'ni Language'''&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/div&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;Welcome to the Wikibooks course on the D'ni language.&lt;/div&gt;

==Table of contents==
*[[/Foreword/]]

===Phonology and writing===
&lt;small&gt;''Note'': You will need the [http://linguists.riedl.org/old/sebastian/ D'ni font] to view characters correctly.&lt;/small&gt;
*[[/Numbers/]]
*[[/Alphabet and Phonology/]]

===Parts of speech===
*[[/Pronouns/]]
*[[/Verbs/]]
*[[/Adverbs/]]
*[[/Nouns/]]
*[[/Conjunctions/]]
*[[/Prepositions/]]

===Other===
*[[/Derivations/]]
*[[/Idioms/]]

{{Subjects|Constructed languages}}
{{alphabetical|D}}
{{status|50%}} __NOTOC__ __NOEDITSECTION__</text>
      <sha1>fg73170txd9g50mq1mh657acwtq6q4a</sha1>
    </revision>
  </page>
  <page>
    <title>Wikibooks talk:Computer software bookshelf</title>
    <ns>5</ns>
    <id>39954</id>
    <revision>
      <id>1500216</id>
      <parentid>1495665</parentid>
      <timestamp>2009-05-15T02:02:55Z</timestamp>
      <contributor>
        <username>Swift</username>
        <id>33592</id>
      </contributor>
      <comment>added link to the replaced discussion for accessibility.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== History ==

This bookshelf has had a [http://en.wikibooks.org/w/index.php?title=Wikibooks_talk:Computer_software_bookshelf&amp;oldid=896970 long history], but in short:

* Computer software that use to be found at the computing bookshelf can now be found in [[Subject:Computer software|computer software]].
* General computing books that use to be found at the information technology bookshelf can now be found in [[Subject:Computing|computing]].
* IT certification related books can now be found in [[Subject:Information technology|information technology]]
* General technology books can now be found in [[Subject:Technology|technology]].
* Books should be properly categorized to ensure they can be found on [[Subject:Major Subjects|subject pages]].</text>
      <sha1>n3qgifbgzxpxpjs8i6zqdgo58xz0iam</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:OCR A-Level Physics/The SI System of Units</title>
    <ns>1</ns>
    <id>39955</id>
    <revision>
      <id>2668291</id>
      <parentid>2613008</parentid>
      <timestamp>2014-05-31T15:38:43Z</timestamp>
      <contributor>
        <username>Benjamin.doe</username>
        <id>1589826</id>
      </contributor>
      <minor />
      <comment>Benjamin.doe moved page [[Talk:A-level Physics/The SI System of Units]] to [[Talk:OCR A-Level Physics/The SI System of Units]]: tie in with overall book</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">If you are using English spellings (viz. metre), you should use gramme &amp; kilogramme rather than gram / kilogramme.

Given that SI stands for ''Systeme International'' , it is better to talk about SI Units not SI System of Units.

:Hi, In my experience (and I'm based in London, UK) no-one uses &quot;gramme&quot; or &quot;kilogramme&quot;, but use &quot;metre&quot; along with &quot;gram&quot; and &quot;kilogram&quot;. Also, a textbook that is endorsed br OCR uses the English spelling of metre, but adopts the American spelling of gram and kilogram.

:I can see what you mean by &quot;SI system of units&quot;, it is similar to saying &quot;ATM machine&quot;. Though not perfectly grammatically correct, as a title it makes it clear and easily understandable to students that &quot;SI&quot; is a system used for units. If anyone can suggest a better title for the page that would be great, as I can't really think of anything else. I agree, though, that it should just be &quot;SI units&quot; in the text. --[[User:Krackpipe|Krackpipe]] 10:08, 5 September 2005 (UTC)

== Pay no attention to me ==

I'm just trying out a few colour schemes for tables. I will apply them across the whole wikibook to make them easier on the eyes, and try to make it easier to read information from.

{| cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; border=&quot;1&quot; width=&quot;75%&quot; align=&quot;center&quot;
|- bgcolor=#abcdef
! Quantity
! Name
! Symbol
|- bgcolor=#ccddee
| Length
| metre
| ''m''
|- bgcolor=#ddeeff
| Mass
| kilogram
| ''kg''
|- bgcolor=#ccddee
| Time
| second
| ''s''
|- bgcolor=#ddeeff
| Electric Current
| ampere
| ''A''
|- bgcolor=#ccddee
| Thermodynamic Temperature
| kelvin
| ''K''
|- bgcolor=#ddeeff
| Amount of Substance
| mole
| ''mol''
|- bgcolor=#ccddee
| Luminous Intensity
| candela
| ''cd''
|}


&lt;center&gt;
{|- cellpadding=&quot;5px&quot; cellspacing=&quot;0&quot; border=&quot;1px&quot;
|- bgcolor=#ccddee
|  bgcolor=#abcdef |'''Symbol:'''
| α, &lt;math&gt;\ ^4_2He&lt;/math&gt;
|- bgcolor=#ddeeff
|  bgcolor=#abcdef |'''Mass:'''
| 4 times the mass of a proton
|- bgcolor=#ccddee
|  bgcolor=#abcdef |'''Charge:'''
| +2e
|- bgcolor=#ddeeff
| bgcolor=#abcdef |'''Speed:'''
| &lt;math&gt;10^6\ ms^{-1}&lt;/math&gt;
|}
&lt;/center&gt;

It's a shame that the PNGs aren't trantsparent. :( --[[User:Krackpipe|Krackpipe]] 23:05, 1 December 2005 (UTC)

== Copy-editing ==

I have taken the liberty of copy-editing the page.

Firstly, according to the [http://www.bipm.org/en/si/si_brochure/general.html SI Brochure] (which is the definitive guide to SI), units should always be written in upright Roman characters (Chapter 5).

Secondly, in my view, TeX parses poorly in Wikipedia which is why I have put the TeX formulae on a separate line, indented one tab. [[User:Martinvl|Martinvl]] ([[User talk:Martinvl|discuss]] • [[Special:Contributions/Martinvl|contribs]]) 21:56, 28 February 2014 (UTC)</text>
      <sha1>aq52yujojxotpxwuk7c1i3m4oob8dsw</sha1>
    </revision>
  </page>
  <page>
    <title>Template:VBClassicNav1</title>
    <ns>10</ns>
    <id>39956</id>
    <revision>
      <id>1964115</id>
      <parentid>1489189</parentid>
      <timestamp>2010-11-02T16:44:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed link and code</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{| cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; style=&quot;width:100%; border: 1px solid black;&quot;
| style=&quot;width:33%; background-color:#ffffe0;&quot; | [[../{{{1}}}|Previous: {{{1}}}]]
| style=&quot;width:33%; background-color:#ffffe0; text-align:center;&quot; | [[Visual Basic|Contents]]
| style=&quot;width:33%; background-color:#ffffe0; text-align:right;&quot; | [[../{{{2}}}|Next: {{{2}}}]]
|}&lt;includeonly&gt;{{BookCat}}&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Visual Basic]]&lt;/noinclude&gt;</text>
      <sha1>k87atdspdafb605s6uq5x6zqewr9ieg</sha1>
    </revision>
  </page>
  <page>
    <title>Chess Opening Theory/1. e4/1...Nf6</title>
    <ns>0</ns>
    <id>39959</id>
    <revision>
      <id>2243979</id>
      <parentid>2232255</parentid>
      <timestamp>2011-12-26T23:31:21Z</timestamp>
      <contributor>
        <username>Brad78</username>
        <id>506691</id>
      </contributor>
      <comment>/* 1...Nf6 */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Chess Position|=
|Alekhine's Defence|
   |rd|nd|bd|qd|kd|bd|  |rd|=
   |pd|pd|pd|pd|pd|pd|pd|pd|=
   |  |  |  |  |  |nd|  |  |=
   |  |  |  |  |  |  |  |  |=
   |  |  |  |  |pl|  |  |  |=
   |  |  |  |  |  |  |  |  |=
   |pl|pl|pl|pl|  |pl|pl|pl|=
   |rl|nl|bl|ql|kl|bl|nl|rl|=
|moves=1. e4 Nf6
|parent=[[Chess/King's Pawn Opening|King's Pawn Opening]]
|eco=[[Chess/ECOB|B02-B05]]
}}
= Alekhine's Defence =
===1...Nf6===
This attack is an invitation for White to push his pawn forward and gain a tempo by attacking the knight. The idea behind Black's strategy is to have White build a large pawn center that is hard to defend.

If White doesn't want to follow the main line [[/2. e5/]], he may simply defend the pawn with [[/2. Nc3/]] (which may transpose to [[Chess/Vienna Game|Vienna Game]]). [[/2. d3/]] is seldom seen, though it's quite solid.

A sharp variation called the Krejcik Variation consists in playing [[/2. Bc4/]]. It looks like a gambit but in fact, if black takes the pawn, White can regain it and prevent Black from castling with 2...Nxe4 3. Bxf7+ Kxf7 4. Qh5+.

The opening is named after [[w:Alexander Alekhine|Alexander Alekhine]], who introduced it in 1921.

==Theory table==
{{Chess Opening Theory/Table}}

'''1.e4 Nf6'''
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot;&gt;
	&lt;tr&gt;
		&lt;th&gt;&lt;/th&gt;
		&lt;th align=&quot;left&quot;&gt;2&lt;/th&gt;
		&lt;th align=&quot;left&quot;&gt;3&lt;/th&gt;
		&lt;th align=&quot;left&quot;&gt;4&lt;/th&gt;
		&lt;th align=&quot;left&quot;&gt;5&lt;/th&gt;
		&lt;th align=&quot;left&quot;&gt;6&lt;/th&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;Main Line&lt;/th&gt;
		&lt;td&gt;[[/2. e5|e5]]&lt;br&gt;Nd5&lt;/td&gt;
		&lt;td&gt;d4&lt;br&gt;d6&lt;/td&gt;
		&lt;td&gt;Nf3&lt;br&gt;Bg4&lt;/td&gt;
		&lt;td&gt;Be2&lt;br&gt;e6&lt;/td&gt;
		&lt;td&gt;O-O&lt;br&gt;Be7&lt;/td&gt;
		&lt;td&gt;&amp;infin;/=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
		&lt;td&gt;[[/2. Nc3|Nc3]]&lt;br&gt;d5&lt;/td&gt;
		&lt;td&gt;exd5&lt;br&gt;Nxd5&lt;/td&gt;
		&lt;td&gt;Bc4&lt;br&gt;Nb6&lt;/td&gt;
		&lt;td&gt;Bb3&lt;br&gt;Nc6&lt;/td&gt;
		&lt;td&gt;Nf3&lt;br&gt;Bf5&lt;/td&gt;
		&lt;td&gt;=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
		&lt;td&gt;[[/2. d3|d3]]&lt;br&gt;e5&lt;/td&gt;
		&lt;td&gt;Nf3&lt;br&gt;Nc6&lt;/td&gt;
		&lt;td&gt;g3&lt;br&gt;Bc5&lt;/td&gt;
		&lt;td&gt;Bg2&lt;br&gt;O-O&lt;/td&gt;
		&lt;td&gt;O-O&lt;br&gt;d6&lt;/td&gt;
		&lt;td&gt;=&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
		&lt;td&gt;...&lt;br&gt;...&lt;/td&gt;
		&lt;td&gt;f4&lt;br&gt;Nc6&lt;/td&gt;
		&lt;td&gt;Nf3&lt;br&gt;d5&lt;/td&gt;
		&lt;td&gt;fxe5&lt;br&gt;dxe4&lt;/td&gt;
		&lt;td&gt;exf6&lt;br&gt;exf3&lt;/td&gt;
		&lt;td&gt;=/+&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;Krejcik Variation&lt;/th&gt;
		&lt;td&gt;[[/2. Bc4|Bc4]]&lt;br&gt;Nxe4&lt;/td&gt;
		&lt;td&gt;Bxf7+&lt;br&gt;Kxf7&lt;/td&gt;
		&lt;td&gt;Qh5+&lt;br&gt;[[/2._Bc4/2...Nxe4/3._Bxf7/3...Kxf7/4._Qh5/4...Kg8|Kg8]]&lt;/td&gt;
		&lt;td&gt;Qd5+&lt;br&gt;e6&lt;/td&gt;
		&lt;td&gt;Qxe4&lt;br&gt;d5&lt;/td&gt;
		&lt;td&gt;=+&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
		&lt;td&gt;...&lt;br&gt;...&lt;/td&gt;
		&lt;td&gt;...&lt;br&gt;...&lt;/td&gt;
		&lt;td&gt;...&lt;br&gt;[[/2._Bc4/2...Nxe4/3._Bxf7/3...Kxf7/4._Qh5/4...g6|g6]]&lt;/td&gt;
		&lt;td&gt;Qd5+&lt;br&gt;e6&lt;/td&gt;
		&lt;td&gt;Qxe4&lt;br&gt;d5&lt;/td&gt;
		&lt;td&gt;=+&lt;/td&gt;
	&lt;/tr&gt;
        &lt;tr&gt;
		&lt;th align=&quot;right&quot;&gt;&lt;/th&gt;
		&lt;td&gt;...&lt;br&gt;...&lt;/td&gt;
		&lt;td&gt;...&lt;br&gt;...&lt;/td&gt;
		&lt;td&gt;...&lt;br&gt;...&lt;/td&gt;
		&lt;td&gt;...&lt;br&gt;Ke8&lt;/td&gt;
		&lt;td&gt;Qxe4&lt;br&gt;d5&lt;/td&gt;
		&lt;td&gt;=+&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
{{ChessMid}}
{{Wikipedia|Alekhine's Defence}}

==References==
{{reflist}}
{{NCO}}
{{MCO14}}
{{BCO2}}
{{Chess Opening Theory/Footer}}</text>
      <sha1>4o7me3n4078kd7plyn26y2lcx723wig</sha1>
    </revision>
  </page>
  <page>
    <title>Classical Greek</title>
    <ns>0</ns>
    <id>39961</id>
    <redirect title="Ancient Greek" />
    <revision>
      <id>399410</id>
      <parentid>228205</parentid>
      <timestamp>2006-03-16T03:18:06Z</timestamp>
      <contributor>
        <username>UserX</username>
        <id>21538</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[Ancient Greek]]</text>
      <sha1>9w39xonbvw0hv9rr2sm7hs235j2jj3v</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Language Features/Types</title>
    <ns>0</ns>
    <id>39963</id>
    <revision>
      <id>3039856</id>
      <parentid>2258995</parentid>
      <timestamp>2016-01-22T04:13:30Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <comment>/* Basic datatypes */ add a link to the description of the money datatype</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Datatypes ==

Generally ''datatypes'' are sets of values and some operations that can be performed with the values. The main purpose of knowing a datatype of a value is to know the operations we can perform with the value.

=== Dynamic typing ===

The following code is ''legal'' in REBOL:

 &gt;&gt; x: 1
 == 1
 &gt;&gt; x: &quot;2&quot;
 == &quot;2&quot;

This property can be described by saying, that ''REBOL is a dynamically typed language''. Some REBOL users describe it by saying, that ''datatypes are associated with REBOL values, not with variables''.

=== Type safety ===

The following code is ''illegal'' in REBOL:

 &gt;&gt; x: 1 + &quot;2&quot;
 ** Script Error: Cannot use add on string! value
 ** Near: x: 1 + &quot;2&quot;

This is called ''type safety'' and is caused by the fact, that neither the integer value 1 nor the string &quot;2&quot; is automatically converted when the expression is evaluated.

=== Rich set of datatypes ===

REBOL has 45 ''basic datatypes'' to handle real world concepts like URLs, email addresses, telephone numbers, currency amounts. By stigmatizing each value with a value type, REBOL restricts the kinds of things that a program can do to values.

The richness facilitates the readability of REBOL scripts as well as [[REBOL_Programming/Language_Features/Parse#Parse_expressions|block parsing]] as described elsewhere.

With the money! datatype, it is easy to do some basic accounting

 &gt;&gt; AU$1.00 + AU$0.50
 == AU$1.50

REBOL even ensures that we keep to the same currency

 &gt;&gt; AU$1.00 + US$0.02
 ** Script Error: AU$1.00 not same denomination as US$0.02
 ** Near: AU$1.00 + US$0.02

Date calculations are as simple as

 &gt;&gt; now - 1-Jan-2005
 == 251

where '''now''' happens to be today's date of 9-Sep-2005.

Datatypes are also how we can specify that functions only take certain values.  A function that expects to deal with files does not want to see an email! type of input.

 print-file: func [
     file [file!]
 ][
     print read file
 ]

 &gt;&gt; print-file support@wikibooks.org
 ** Script Error: print-file expected file argument of type: file
 ** Near: print-file support@wikibooks.org

The datatype safety means that REBOL protects us from mixing different types which might cause unexpected errors.  However, we can specify that a function be polymorphic i.e. is able to accept more than one basic datatype for its argument.

'''type?''' is an example of a polymorphic function in that it will accept an argument of any datatype and yield its datatype as a result.

 &lt;nowiki&gt;&gt;&gt; type? http://www.rebol.com
== url!&lt;/nowiki&gt;

Rebol datatypes can be divided to two groups: ''virtual datatypes'' and ''basic datatypes''. ''Virtual datatypes'' are datatypes that serve as common &quot;ancestors&quot; for groups of ''basic datatypes''.

=== Virtual datatypes ===

{|style=&quot;border:1px solid #cccccc;&quot; border=&quot;1&quot; cellpadding=&quot;2&quot; cellspacing=&quot;0&quot;
!bgcolor=&quot;#eeeeee&quot;|Type name
!bgcolor=&quot;#eeeeee&quot;|Groups
|-
|any-block!
|block! path! set-path! lit-path! paren!
|-
|any-function!
|function! native! action! op! routine!
|-
|any-string!
|string! file! email! url! tag! binary! issue!
|-
|any-type!
|all types
|-
|any-word!
|word! set-word! get-word! refinement!
|-
|number!
|integer! decimal!
|-
|series!
|any-block! any-string! list!
|}

=== Basic datatypes ===
{|style=&quot;border:1px solid #cccccc;&quot; border=&quot;1&quot; cellpadding=&quot;2&quot; cellspacing=&quot;0&quot;
!bgcolor=&quot;#eeeeee&quot;|Type name
!bgcolor=&quot;#eeeeee&quot;|Examples
|-
|action!
|&lt;ref group=&quot;n&quot; name=&quot;nolit&quot;&gt;The datatype does not have a literal representation&lt;/ref&gt;
|-
|binary!
|#{7265626F6C}&lt;br /&gt;64#{cmVib2w=}
|-
|bitset!
|#[bitset! #{00}]
|-
|block!
|[r e b o l]
|-
|char!
|#&quot;r&quot;&lt;ref group=&quot;n&quot; name=&quot;CN&quot;&gt;REBOL supports ''[[W:caret notation|caret notation]]''&lt;/ref&gt;
|-
|datatype!
|#[datatype! none!]
|-
|date!
|24-may-2005&lt;br&gt;30/Nov/2005&lt;br /&gt;2008-11-30&lt;ref group=&quot;n&quot; name=&quot;I8601&quot;&gt;REBOL supports ISO 8601&lt;/ref&gt;&lt;br /&gt;2008/Nov/30&lt;br /&gt;30-Nov-2005/10:30-7:00
|-
|decimal!
|1e-15&lt;br /&gt;1.5&lt;ref group=&quot;n&quot;&gt;REBOL decimals are 64-bit IEEE-754 binary floating point numbers&lt;/ref&gt;&lt;br /&gt;1,5&lt;br /&gt;-1e6
|-
|email!
|mail@rebol.com&lt;ref group=&quot;n&quot;&gt;REBOL supports RFC 5322&lt;/ref&gt;
|-
|error!
|
|-
|event!
|
|-
|file!
|%rebol.exe&lt;br /&gt;&lt;nowiki&gt;%/media/cdrom/file&lt;/nowiki&gt;&lt;br /&gt;%another%20file&lt;br /&gt;%&quot;file too&quot;
|-
|function!
|
|-
|get-word!
|:rebol
|-
|hash!
|
|-
|image!
|
|-
|integer!
|17
|-
|issue!
|#158&lt;br /&gt;#rebol
|-
|library!
|&lt;ref group=&quot;n&quot; name=&quot;nolit&quot; /&gt;
|-
|list!
|
|-
|lit-path!
|'rebol/words/type?
|-
|lit-word!
|'rebol
|-
|logic!
|#[true]&lt;br /&gt;#[false]
|-
|[[Rebol programming/Money datatype|money!]]
|$2.50&lt;br /&gt;US$4.75&lt;br /&gt;DKK$37.75&lt;br /&gt;-EUR$10
|-
|native!
|&lt;ref group=&quot;n&quot; name=&quot;nolit&quot; /&gt;
|-
|none!
|#[none]
|-
|object!
|
|-
|op!
|&lt;ref group=&quot;n&quot; name=&quot;nolit&quot; /&gt;
|-
|pair!
|100x200&lt;br /&gt;-1x-2
|-
|paren!
|()
|-
|path!
|rebol/words/print
|-
|port!
|
|-
|refinement!
|/case
|-
|routine!
|&lt;ref group=&quot;n&quot; name=&quot;nolit&quot; /&gt;
|-
|set-path!
|rebol/words/x:
|-
|set-word!
|rebol:
|-
|string!
|&quot;REBOL&quot;&lt;ref group=&quot;n&quot; name=&quot;CN&quot; /&gt;
|-
|struct!
|#[struct! [] []]
|-
|symbol!
|
|-
|tag!
|&lt;html&gt;
|-
|time!
|12:45:22
|-
|tuple!
|120.80.45&lt;br /&gt;40.35.12.50
|-
|unset!
|#[unset!]
|-
|url!
|&lt;nowiki&gt;http://www.rebol.com&lt;/nowiki&gt;&lt;br /&gt;&lt;nowiki&gt;ftp://www.rebol.com&lt;/nowiki&gt;&lt;ref group=&quot;n&quot; name=&quot;RFC3986&quot;&gt;REBOL supports RFC 3986&lt;/ref&gt;
|-
|word!
|rebol&lt;br /&gt;word?&lt;br /&gt;a+b&lt;br /&gt;word!
|}

==== Notes ====

&lt;references group=&quot;n&quot; /&gt;

== Type conversion ==

As stated above, there is no implicit type conversion in REBOL, i.e. when we want to convert a value to a specific datatype, we have to do it explicitly and the conversion needs to be possible. This is how to convert a string to an integer:

 &gt;&gt; to integer! &quot;145&quot;
 == 145

This rule seems to be contradicted by working code such as:

 &gt;&gt; 1 + 2.0
 == 3.0

which must have converted the integer 1 to a decimal before adding it to the decimal 2.0. However, the arguments are not converted by the REBOL interpreter ''before'' they get to the + operator. It is the + operator which is able to accept and convert that particular combination of types (integer and decimal) before doing its work and returning the result.

Generally the '''to''' function is the first function to consider when we are doing a type conversion. The '''type''' argument of the '''to''' function may be an example value instead of a datatype:

 &gt;&gt; to 1 &quot;145&quot;
 == 145

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>699dssnilvtgxlvflz8a7xptvdcod95</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Debugging techniques</title>
    <ns>0</ns>
    <id>39964</id>
    <revision>
      <id>3033929</id>
      <parentid>3033928</parentid>
      <timestamp>2016-01-05T10:59:32Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <comment>/* ?? */ REBOL -&gt; Rebol</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Debugging techniques ==
There are various debugging tools available in Rebol.

=== Probe ===
'''Probe''' is a highly useful tool. What it does, is read the return values of functions and output them on the console. The return value is passed through '''probe''', so you can insert it anywhere in your program.

 &gt;&gt; wallet: $25
 == $25.00
 &gt;&gt; probe wallet
 $25.00
 == $25.00

The value is both printed and returned as a value, because '''probe''' lets the return value pass through itself, as opposed to '''print''', which doesn't return a useful value.

A more useful example:

 &gt;&gt; add 3 probe add 2 2
 4
 == 7

'''NOTE:''' Be careful with probing large objects as they can take a very long time to print on the console. Large amounts of output can be stopped by pressing '''Escape'''.

=== Trace ===
'''Trace''' can help you to see function calls or TCP/IP network statistics on the console.

 &gt;&gt; trace/func on

'''Trace/func''' returns a large amount of feedback, so it's wise only to activate it around the code you need to examine.

 trace/func on
 ... some problematic code ...
 trace/func off

 &gt;&gt; trace/net on

=== Protect-system ===
it is easy in Rebol to accidentally redefine a system word, as ''all'' words can be redefined. This code will cause strange things to happen a long way away from the original error:

 gt: func [a b] [
     return: a &lt; b
 ]

That stray &quot;:&quot; on the return redefines return rather than returning the expected result. Any later code that uses return may misbehave.

An answer may be to protect all existing words from change:

  &gt;&gt; protect-system

=== Print ===
Adding '''print''' statements is a time-honored way of debugging code. Rebol has a neat way of letting you leave the statements in unactivated until needed

The trick is to define another word as a synonym of print, eg:

  &gt;&gt; dprint: :print

And use that to add debugging print statements:

  &gt;&gt; dprint [&quot;my count is &quot; my-count]
  &gt;&gt; dprint [&quot;file info:&quot; mold info? my-text-file.txt]

In production code, or when you want to turn the debugging statements off, simply add:

  &gt;&gt; dprint: func [data] []

=== ?? ===
Rebol provides specific functions to help with debugging.  The function '''??''' prints a variable name followed by its molded value.  Unlike the '''print''' function, it also returns the value it receives.

 &gt;&gt; test: &quot;Hello&quot;
 == &quot;Hello&quot;
 &gt;&gt; value: ?? test
 test: &quot;Hello&quot;
 == &quot;Hello&quot;
 &gt;&gt; ?? value
 value: &quot;Hello&quot;
 == &quot;Hello&quot;

Once you have finished debugging, you can either remove all the '''??''' from the source, or just redefine '''??''' so that it just passes the value as though it were no longer present.

 ??: func [val] [val]

=== Adding a debugging option to GUI programs ===

While a VID program is running, you can't use the console to type '''print''' or '''??''' or any
other debugging functions. One way round that is to add a console input field to 
your VID program, and execute whatever is typed into that:

 view layout [
     button &quot;Add&quot;
            [field1/text: 1 + to-integer field1/text show field1]
     label &quot;number&quot;
     field1: field 100 &quot;1&quot;
     
     label &quot;console:&quot;
     console: field 100 [attempt [do console/text]]
 ]

Try typing '''help view''' into the field labeled ''console''.

=== Quickly restarting a GUI program ===

You can shave off a tiny bit of debugging time, by adding a simple button to your program that quits the program and starts it again.

 unview/all
 do %&lt;programname&gt;

=== Stopping and continuing programs ===

Stopping a program to the console can be done with '''Escape''' key.

Continuing GUI programs can be done with '''do-events''' command.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>46bm8otfzqdv4vy4j5r2biv19vhxt7d</sha1>
    </revision>
  </page>
  <page>
    <title>User:Swensorm</title>
    <ns>2</ns>
    <id>39965</id>
    <revision>
      <id>228241</id>
      <timestamp>2005-09-04T20:16:14Z</timestamp>
      <contributor>
        <ip>64.108.124.240</ip>
      </contributor>
      <comment>Initial creation</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I am a Christian.  I hold a BS in Computer Science with minors in Mathematics and Physics.  I emphasized in taking electronics and computer architecture courses.

I have an extensive list of interests and hobbies.  Currently the major ones consist of:
*Christ
*Electronics
*Learning Latin
*Developing Web Applications

==What I'm Contributing to==
[[Electronics]]</text>
      <sha1>b2r548ulhp65g5ni6vbjx56wva54lqb</sha1>
    </revision>
  </page>
  <page>
    <title>Programming:Visual Basic Classic/OOP</title>
    <ns>0</ns>
    <id>39966</id>
    <redirect title="Visual Basic/Object Oriented Programming" />
    <revision>
      <id>1238214</id>
      <parentid>228250</parentid>
      <timestamp>2008-07-25T16:42:50Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT [[Visual Basic/Object Oriented Programming]]</text>
      <sha1>ls1xoph2rf6vxpqwzc5xde4on22f3ji</sha1>
    </revision>
  </page>
  <page>
    <title>User:MathMan64~enwikibooks/Arithmetic</title>
    <ns>2</ns>
    <id>39967</id>
    <revision>
      <id>2871358</id>
      <parentid>278680</parentid>
      <timestamp>2015-04-17T22:43:19Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:MathMan64/Arithmetic]] to [[User:MathMan64~enwikibooks/Arithmetic]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/MathMan64|MathMan64]]&quot; to &quot;[[Special:CentralAut...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">= Arithmetic =

This book is designed for readers who want a thorough study of the concepts of Arithmetic.  They will find enough detail and examples to apply the ideas found here to a variety of situations.  The concepts of Arithmetic are useful in the everyday world, and they are necessary in the study of higher level mathematics as well as in science and many other curriculums.  Arithmetic is, in fact, the basis and foundation for all other mathematical topics.

== Whole numbers and decimals ==
=== Notation and Rounding ===

The Arabic numeral system is used in many cultures.  It uses the ten familiar digits.  The concept of '''place value''' assigns value to each digit based on its location in relation to the others.  The '''word name''' of a number is used when it is spoken.  Word names can be used in written communication as well.

* [[User:MathMan64/Arithmetic/Notation|Notation]]

When an exact number is not needed the '''rounding''' process is applied.  Numbers are often rounded off after a calculation.  All measurements are approximate values.  When asked the price of an item that costs $299.95, an appropriate answer is $300. 

* [[User:MathMan64/Arithmetic/Rounding|Rounding]]

=== Addition and Subtraction ===

Counting is the most basic process of mathematics. Addition is built on counting.  

* [[User:MathMan64/Current Work|Addition]]

Subtraction is built on addition.  Addition and subtraction can be considered two ways to look at the same situations from different perspectives.

* Subtraction

=== Multiplication and Division ===
Multiplication is the cumulative result of repeated addition of the same value.  

* Multiplication

Division is built on multiplication.  Multiplication and division can be considered two ways to look at the same situations from different perspectives.  

* Division

Exponents are used to indicate the repeated multiplication of the same value.

* Exponents

=== Applications ===

Many times, for a calculation, what is expected is a quick result, that does not need a lot of accuracy.  The processes of estimation can achieve this goal. 

* Estimation

Proportion is the most common process for comparing numbers or computing results.

* Proportion

Percent is a common way of describing mathematical relationships in business and other application areas.

* Percent

When a situation arises that requires more than one calculation step, there is a standard way of deciding what order to the calculations in.

* Order of operations

=== Factors and Primes ===

The process of factoring is used in several area of mathematics.  In this book, factoring will be used in working with fractions.  When reducing, adding or subtracting fractions, being able to factor numbers is important.  The most complete factoring process will yield a series of primes, which when multiplied result in the original number.

*[[User:MathMan64/Arithmetic/Factoring|Factoring]]

== Fractions ==
=== Introduction to Fractions ===
* Notation
* Reducing
* Decimals and fractions
=== Multiplication and Division ===
* Multiplication
* Improper fractions to mixed numbers
* Division
* Mixed numbers to improper fractions
* Multiplication and division of mixed numbers
* Proportion
=== Addition and Subtraction ===
* Addition and subtraction with like denominators
* Least common multiple
* Common denominator
* Addition and subtraction with unlike denominators
* Addition and subtraction of mixed numbers
* Order of Operations</text>
      <sha1>ajz46ioips2xdtykk9chy67z47xhegr</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:MathMan64~enwikibooks/Arithmetic</title>
    <ns>3</ns>
    <id>39968</id>
    <revision>
      <id>2871371</id>
      <parentid>442439</parentid>
      <timestamp>2015-04-17T22:43:19Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User talk:MathMan64/Arithmetic]] to [[User talk:MathMan64~enwikibooks/Arithmetic]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/MathMan64|MathMan64]]&quot; to &quot;[[Special:...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I plan to write an Arithmetic textbook.

It will have a different goal from [[Algebra/Arithmetic]].

It may eventually replace [[Applied Math Basics]]</text>
      <sha1>trvywh47tlsa92z4sgsvfgh02jl9p6m</sha1>
    </revision>
  </page>
  <page>
    <title>Puzzles/Logic puzzles/Two Cities - Same Response/Solution</title>
    <ns>0</ns>
    <id>39969</id>
    <revision>
      <id>647664</id>
      <parentid>647662</parentid>
      <timestamp>2006-11-13T05:04:28Z</timestamp>
      <contributor>
        <username>Think Fast</username>
        <id>10874</id>
      </contributor>
      <comment>change links -&gt; naming convention</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">[[Puzzles]] | [[Puzzles/Logic puzzles|Logic puzzles]] | [[Puzzles/Logic puzzles/Two Cities - Same Response|Two Cities - Same Response]] | Solution
----
Can you tell the truth?

OR

Which city are you from?

etc...

[[Category:Puzzles]]</text>
      <sha1>h6wkrt2ierdmk7qcenm6orjoueg06aa</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Solar System/Neptune/Proteus</title>
    <ns>110</ns>
    <id>39971</id>
    <revision>
      <id>2477815</id>
      <parentid>2477788</parentid>
      <timestamp>2013-01-14T23:14:31Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>/* How long is a year on Proteus? */ wording used for [[WJ:Solar System/Moon]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">[[Image:Proteus_(Voyager_2).jpg|thumb|right|Proteus from Voyager 2 spacecraft]]
'''Proteus''' is a moon of the planet Neptune. It is sometimes called Neptune VIII. We still do not know a lot about this moon, as only a few pictures have been taken when the Voyager 2 flew by in 1989.

==How big is it?==
This moon is uneven in shape and has an average size  of just over 400 km across. This moon is nearly as a big as a satellite can be without it being pulled into a sphere by its own gravity. Even though it is a small moon, it is the second largest moon of Neptune after Triton.

==What is its surface like?==
The surface of this moon is covered in craters and some grooves. It is also a very dark moon, with a ground that is as dark as soot. It is one of the darkest objects in the Solar System.

==How long is Proteus's revolution?==
It takes 1 day, 2 hours, and 56 minutes for this moon to orbit the planet Neptune.

==Who is it named after?==
This moon is named for a sea god from ancient Greek mythology. In some tales he was the first son of Poseidon, the ancient Greek god of the sea. The Romans later called him Neptune, so Proteus was the first son of Neptune.

In Greek mythology, Proteus was able to foretell the future. He was also able to change his shape, and he used this ability to avoid being asked about what is to come.

==How was it discovered?==
Proteus was discovered in 1989 when the Voyager 2 spacecraft flew by Neptune.

[[de:Wikijunior Sonnensystem/ Neptun/ Proteus]]

{{BookCat}}</text>
      <sha1>fhkujph3thkvdm68qf1cxgzi61xg4ci</sha1>
    </revision>
  </page>
  <page>
    <title>Probability/Important Distributions</title>
    <ns>0</ns>
    <id>39982</id>
    <revision>
      <id>2768095</id>
      <parentid>2768094</parentid>
      <timestamp>2015-02-19T16:41:30Z</timestamp>
      <contributor>
        <username>The Conny Project</username>
        <id>2145528</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Uniform Distribution==
&lt;!--In this distribution, everything has equal probability. ''true, because every outcome has probability zero, but this also holds for a normal distribution!!''--&gt;The '''uniform distribution''' is a model for &quot;no preference&quot;.  For example if we roll a fair dice numbered from 1 to 6, each side has equal probability of facing up, and the probability of each number would be 1/6. For the continuous analog on of such a distribution, there is an equal probability of picking any range of a given size. For example for a uniform distribution from 0 to 10, the probability of picking a real number between 1 and 2 is 1/10, the same as for picking a real number between 5.43 and 6.43. 

This simple distribution forms the basis of much of the study of probability. It mirrors the type of activity observed from rolling a fair dice, or flipping a coin. This intuitively relates to many standard problems. A number of other distributions derive from this distribution. For instance, while any one roll of a dice has a uniform distribution, summing up the totals of rolling a dice lots of time, or taking their average, does not have a uniform distribution, but approximates a Gaussian distribution, which we will discuss later.

The uniform distribution on the interval [a,b] is a continuous distribution with probability density ''f''  given by:
:&lt;math&gt;
  f(x)=\left\{\begin{matrix}
  \frac{1}{b - a} &amp; \ \ \ \mbox{for }a &lt; x &lt; b, \\  \\
  0 &amp; \mathrm{for}\ x&lt;a\ \mathrm{or}\ x&gt;b, \\  \\
  \mathrm{see}\ \mathrm{below} &amp; \ \ \ \mbox{for }x=a \mbox{ or }x=b.
  \end{matrix}\right.
&lt;/math&gt;

The value of the density at a or b can be 0, &lt;math&gt;\frac{1}{b-a}&lt;/math&gt;, or any other finite value without changing finite probabilities. For a more complete discussion of this point and for more information on the uniform distribution, see the [[w:en:Uniform distribution (continuous)|Uniform distribution (continuous)]] page at Wikipedia.

A random variable ''X'' with this distribution is called a ''random number'' between ''a'' and ''b''.


==Binomial Distribution==
Many random experiments are of the type where one counts the number of successes in a series of a fixed number of independently repeated trials which may result in either success or failure. The distribution of the number of successes is a '''binomial distribution'''. It is a discrete probability distribution with two parameters, traditionally indicated by ''n'', the number of trials, and ''p'', the probability of success.

A well known example of such an experiment is the repeated tossing of a coin and counting the number of times &quot;heads&quot; comes up.

One says that the random variable ''X'' follows the binomial distribution with parameters ''n'' and ''p'', and writes ''X'' ~ B(''n'', ''p'') if the probability of getting exactly ''k'' successes is given by the probability mass function:

:&lt;math&gt;p(k)={n\choose k}p^k(1-p)^{n-k}\,&lt;/math&gt;

for &lt;math&gt;k=0,1,2,\dots,n&lt;/math&gt; and where

:&lt;math&gt;{n\choose k}=\frac{n!}{k!(n-k)!}&lt;/math&gt;

is the binomial coefficient. 

The formula is easily derived from the fact that from ''n'' trials ''k'' should be successfull, having probability &lt;math&gt;p^k&lt;/math&gt; and ''n'' &amp;minus; ''k'' failures, with probability &lt;math&gt;(1-p)^{n-k}&lt;/math&gt;. This gives a specific outcome a probability of &lt;math&gt;p^k (1-p)^{n-k}&lt;/math&gt;
An outcome with exactly ''k'' successes, however, may occur in a number of specific orders, i.e. one has to choose ''k'' of the ''n'' outcomes to be successful. This leads to the binomial coefficient as factor to be multiplied.

For more information see the [[w:en:Binomial distribution|binomial distribution]] article at Wikipedia.

==The Poisson Distribution==

The '''Poisson distribution''' with parameter &lt;math&gt;\lambda &gt; 0\,&lt;/math&gt; is a discrete probability distribution with mass function given by:

:&lt;math&gt;
p(k) = \frac{\lambda^k}{k!} e^{- \lambda}
&lt;/math&gt;

where k is a nonnegative integer.

The Poisson distribution is sometimes called: &quot;the distribution of rare events&quot;, meaning it indicates the distribution of the number of events occurring in a fixed time interval, or fixed spatial area, where the occurrence of an event is &quot;rare&quot; in the sense that no two events may happen together.

The random variable X indicating this number of occurrences is called a ''Poisson random variable''.
The Poisson random variable is of fundamental importance in communication and queuing theory.


It is possible to obtain the Poisson distribution as the limit of a sequence of binomial distributions.

Let &lt;math&gt;\lambda&lt;/math&gt; be fixed and consider the binomial distributions with parameters ''n'' and &lt;math&gt;\lambda /n&lt;/math&gt;:


:&lt;math&gt;
p_n (k)
= \frac{n!}{k!(n-k)!} \left( \frac{\lambda}{n} \right)^k
\left( 1 - \frac{\lambda}{n} \right)^{n-k}
= \frac{n!}{n^k (n-k)!} \frac{\lambda^k}{k!}
\left( 1 - \frac{\lambda}{n} \right)^{n-k} .
&lt;/math&gt;

In the limit, as ''n'' approaches infinity, the binomial probabilities tend to a Poisson probability with parameter &amp;lambda;:

:&lt;math&gt;
\lim_{n \rightarrow \infty} p_n (k)
= \lim_{n \rightarrow \infty} \frac{n!}{n^k (n-k)!} \frac{\lambda^k}{k!}
\left( 1 - \frac{\lambda}{n} \right)^{n-k}
= \frac{\lambda^k}{k!} e^{- \lambda}.
&lt;/math&gt;


This result shows that the Poisson PMF can be used to approximate the PMF of a binomial distribution.
Suppose that ''Y'' is a binomial random variable with parameters ''n'' and ''p''.
If ''n'' is large and ''p'' is small, the probability that ''Y'' equals ''k'' is not easily calculated, but may be approximated by a Poisson probability with parameter ''np'':

:&lt;math&gt;
P(Y=k) = {n \choose k}p^k \left( 1 - p \right)^{n-k}
\approx \frac{(np)^k}{k!} e^{- np} ,
&lt;/math&gt;.

The above mentioned limiting process may be illustrated with the following example. Count the yearly number X of car accidents on an important roundabout. Let us assume on the average 8 accidents happen 
yearly. To calculate the distribution, we consider the 12 months and count a success when an accident has happened that month and else a failure. The number of successes will constitute a binomial random variable &lt;math&gt;X_{12}&lt;/math&gt; with parameters n=12 and p=8/12. As the average number is 8, it is still likely some months will meet more than one accident, so we consider weeks and count the number of weeks with an accident as successful. This number &lt;math&gt;X_{52}&lt;/math&gt; may be considered binomial distributed with parameters n=52 and p=8/52. While there may still be weeks with two accidents, we turn to days. The number &lt;math&gt;X_{365}&lt;/math&gt; of days with success may be considered binomial distributed with parameters n=365 and p=8/365. The limiting distribution by considering hours, minutes, seconds, etc. gives the Poisson distribution of ''X'' with parameter 8. We also note an important condition on the occurrence of the events (accidents): we only count them correctly if in the end we may separate them in disjoint time intervals. So it is not allowed that two accidents happen the same moment.


==Normal Distribution==

The normal or Gaussian distribution is a thing of beauty, appearing in many places in nature.  This probably is a result of the normal distribution resulting from the law of large numbers, by which a sum of many random variables (with finite variance) becomes a normally distributed random variable according to the central limit theorem.

Also known as the bell curve, the normal distribution has been applied to many social situations, but it should be noted that its applicability is generally related to how well or how poorly the situation satisfies the property mentioned above, whereby many finitely varying, random inputs result in a normal output.

The formula for the density f of a normal distribution with mean &lt;math&gt;\mu&lt;/math&gt; and standard deviation &lt;math&gt;\sigma&lt;/math&gt; is:

&lt;math&gt;
f(x)
=
\frac{1}{\sigma\sqrt{2\pi}} \, e^{ -\frac 12 \left( \frac{x- \mu}{\sigma}\right)^2 }&lt;/math&gt;.

A rather thorough article in Wikipedia could be summarized to extend the usefulness of this book: [[w:en:Normal distribution|Normal distribution from Wikipedia]].

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>savfbguh7nlmt27ucum7167gqc5shmp</sha1>
    </revision>
  </page>
  <page>
    <title>User:Scagnoli~enwikibooks</title>
    <ns>2</ns>
    <id>39984</id>
    <revision>
      <id>2884140</id>
      <parentid>2465180</parentid>
      <timestamp>2015-04-17T23:05:42Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Scagnoli]] to [[User:Scagnoli~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Scagnoli|Scagnoli]]&quot; to &quot;[[Special:CentralAuth/Scagnoli~enwikibooks|Sca...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Norma I. Scagnoli works as Director of elearning at the [[http://www.business.uiuc.edu/elearning | College of Business ]] at the University of Illinois. She has been involved in research on online learning in the last 10 years and she has extensive experience in national and international projects.
Her most important achievements in Wikibooks are the initiation of the following books: [[http://en.wikibooks.org/wiki/Blended_Learning_in_K-12 | Blended Learning in K-12]], [[http://es.wikibooks.org/wiki/Aprendizaje_colaborativo | Aprendizaje colaborativo]] and [[http://es.wikibooks.org/wiki/Aprendizaje_combinado | Aprendizaje combinado]].
[[http://netfiles.uiuc.edu/scagnoli/www/  Norma Scagnoli's Homepage]]</text>
      <sha1>4bf4fxf3x2fg4wwr1wey5xdhrugccwz</sha1>
    </revision>
  </page>
  <page>
    <title>User:Nkrypt</title>
    <ns>2</ns>
    <id>39985</id>
    <revision>
      <id>228388</id>
      <timestamp>2005-09-05T02:04:34Z</timestamp>
      <contributor>
        <ip>158.75.38.20</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">pNoc6DZXGT4qpNoc196jo15m6DZXC5PQGT4qyzOFGT4q6DZXaoB2uO79B0Vx4iqL6DZX196j4iqLSNL7mm99</text>
      <sha1>fikyu14tnhfq7zaoz553a2c7ypwwy0l</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Ancient Civilizations/Indus Valley</title>
    <ns>111</ns>
    <id>39986</id>
    <revision>
      <id>2833471</id>
      <parentid>1695347</parentid>
      <timestamp>2015-03-22T02:38:57Z</timestamp>
      <contributor>
        <ip>220.160.66.76</ip>
      </contributor>
      <comment>/* Wikivoyage links? */ new section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==References==
*[[w:Indus Valley Civilization]] - Accessed September 4, 5, 2005
*Kosambi, D.D. (1969) Ancient India: A History of Its Culture and Civilization. Meridian Books: The World Publishing Company.
*[[http://www.straightdope.com/mailbag/mindusscript.html The Straight Dope]]-Accessed Spetember 5, 2005

--[[User:Shanel|Shanel]] 03:00, 5 September 2005 (UTC)

This is non-cited, but there seems to be growing evidence of a &quot;pole shift&quot;.  Any thoughts? (comment moved from book page &lt;font color=&quot;#E66C2C&quot;&gt;[[User:QuiteUnusual|'''QU''']]&lt;/font&gt; &lt;sup&gt;&lt;font color=&quot;#306754&quot;&gt;[[User talk:QuiteUnusual|TalkQu]]&lt;/font&gt;&lt;/sup&gt; 21:11, 11 January 2010 (UTC))

== Wikivoyage links? ==

WV has a good article on [https://en.wikivoyage.org/wiki/Mohenjo-daro Mohenjo-daro] and some coverage on [https://en.wikivoyage.org/wiki/Sahiwal Harappa]. [[Special:Contributions/220.160.66.76|220.160.66.76]] ([[User talk:220.160.66.76|discuss]]) 02:38, 22 March 2015 (UTC)</text>
      <sha1>r1wrwfgpsy338eshw7yc26fj48m2za7</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Language Features/Control</title>
    <ns>0</ns>
    <id>39987</id>
    <revision>
      <id>1517731</id>
      <parentid>1463081</parentid>
      <timestamp>2009-06-03T03:50:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">REBOL offers a variety of different control structures with many similar to those seen in other computer languages, and some unique to itself.

== Logic Functions ==

=== All ===

 all: native [
    {Shortcut AND. Evaluates and returns at the first FALSE or NONE.}
    block [block!] &quot;Block of expressions&quot;
 ]

'''all''' is a useful function that allows one to check to see if all the expressions in a block evaluate to true or not. It obviates the need for cascading the '''either''' constructs.

 &gt;&gt; all [true true true]
 == true

 &gt;&gt; all [true true false]
 == none

Now, the useful thing is that although we can use it to test for multiple conditions as above, we can perform multiple tasks inside the block as long as each expression returns a value distinct from '''false''' or '''none'''.

 all [
    create-pdf-of-newsletter
    ftp-newsletter-to-website
    check-newsletter-not-corrupt
    update-webpage-last-change-date
    spam-our-customers
 ]

Interestingly, the '''all''' construct ensures that all of the preceding expressions must be true before we complete our list of tasks, and spam-our-customers.  We wouldn't want to do this if the update to our website had not completed!

The above example takes advantage of an important property of '''all'''  which is that it does not evaluate further when it encounters '''false''' or '''none'''. This way the preceding conditions can &quot;guard&quot; the subsequent ones, like e.g.:

 &gt;&gt; x: 0
 == 0
 &gt;&gt; all [x &lt;&gt; 0 1 / x &lt; 2]
 == none

The same would not be true when using the '''and''' operator:

 &gt;&gt; (x &lt;&gt; 0) and (1 / x &lt; 2)
 ** Math Error: Attempt to divide by zero
 ** Near: 1 / x &lt; 2

'''NB:''' Although the help for '''all''' says that it is shortcut for '''and''', it is not really. So, note the following

 &gt;&gt; all [ true ]
 == true
 &gt;&gt; all [ true false ]
 == none

where the return value is '''none''' and not a logic! '''false'''.

=== Any ===

 any: native [
    {Shortcut OR. Evaluates and returns the first value that is not FALSE or NONE.}
    block [block!] &quot;Block of expressions&quot;
 ]

'''any''' returns '''true''' if any of the expressions inside the block returns true.

 &gt;&gt; any [false false false true]
 == true

Similarly as with '''all''', '''any''' &quot;guards&quot; the subsequent conditions, if it encounters a value considered true (i.e. anything distinct from '''false''' and '''none'''). Again, this property does not hold for the '''or''' operator.

== Conditionals ==

=== If, Either and Unless ===

 if: native [
     &quot;If condition is TRUE, evaluates the block.&quot;
     condition
     then-block [block!]
     /else &quot;If not true, evaluate this block&quot;
     else-block [block!]
 ]

The '''if''' function allows one to conditionally evaluate a block if the '''condition''' argument is true (which means, distinct from '''false''' or '''none'''). Otherwise '''if''' returns '''none'''. If the '''/else''' refinement is used, then the second block is evaluated in case the '''condition''' is false.

While condition can be the result of a simple expression such as

 &gt;&gt; if/else 5 &lt; 10 [print &quot;less than 10&quot;] [print &quot;greater than or equal to 10&quot;]
 less than 10

'''Warning: the &lt;code&gt;/else&lt;/code&gt; refinement may not be supported in the future versions of REBOL, being considered obsolete! It is faster and future-proof to use the &lt;code&gt;either&lt;/code&gt; native instead.'''

The condition can be a result of any legal function that returns a value. So, if you had a function named '''web-update?''' that checks to see if a particular page has been updated in the last few days, you could write

 &gt;&gt; if web-update? &lt;nowiki&gt;http://www.rebol.com&lt;/nowiki&gt; [print &quot;Rebol Tech has updated their website!&quot;]

The '''either''' native function is conditionally evaluates its second argument (the '''true-block'''), if the first argument (the '''condition''') is true (i.e. distinct from '''false''' and '''none'''), otherwise it evaluates its third argument (the '''false-block''').

 &gt;&gt; either now/time &lt; 12:00 [print &quot;Good Morning&quot;] [print &quot;Good Afternoon&quot;]

Truth in REBOL is somewhat different from the English language use of the same term.  Anything that is not '''false''' or '''none''' is treated as true. This means that all integers, including 0, are treated as true as well as all blocks, etc.

 &gt;&gt; if [] [print &quot;even an empty block is true&quot;]
 even an empty block is treated as true

'''Beginner gotcha:''' you should especially take care of:

 &gt;&gt; either [false] [true] [false]
 == true

, because the block is treated as true. The same holds for 0:

 &gt;&gt; either 0 [true] [false]
 == true

In place of the '''if not''' combination, we can use the '''unless''' function. Example:

 &gt;&gt; if not 2 &gt; 3 [&quot;OK&quot;]
 == &quot;OK&quot;

 &gt;&gt; unless 2 &gt; 3 [&quot;OK&quot;]
 == &quot;OK&quot;

=== Case ===

The general '''case''' expression form can be:

    case [
        condition1 block1
        condition2 block2
        etc.
    ]

Conditions are evaluated and checked one after another. If true, the block following the condition is evaluated and returned as the '''case''' result.

Case enhances readability replacing nested '''either'''. Example: 

 wife-birthday: 1-March-1960
 Valentines-day: 14-Feb-1900
 wedding-anniversary: 1-April-1980
 anniversary?: func [
     date [date!]
     {check to see if today's date is an anniversary of the argument}
 ][
     all [date/day = now/day date/month = now/month]
 ]
 
 greeting: case [
     anniversary? wife-birthday [&quot;Happy birthday dear&quot;]
     anniversary? Valentines-day [&quot;Happy Valentines dear&quot;]
     anniversary? wedding-anniversary [&quot;Happy anniversary dear&quot;]
     true [&quot;Hello dear&quot;]
 ]

The example above would have been almost unreadable when written using '''either'''. Notice the '''true''' condition intended to yield &quot;Hello dear&quot; if none of the previous conditions was true.

=== Switch ===

 USAGE:
    SWITCH value cases /default case
 
 DESCRIPTION:
     Selects a choice and evaluates what follows it.
     SWITCH is a function value.
 
 ARGUMENTS:
     value -- Value to search for. (Type: any)
     cases -- Block of cases to search. (Type: block)
 
 REFINEMENTS:
     /default
         case -- Default case if no others are found. (Type: any)
 
 (SPECIAL ATTRIBUTES)
     throw

'''switch''' is similar to the '''case''' function.  However, it takes a single value, and then compares that to a block of value block pairs.  If the value matches, it evaluates the block, and returns its value leaving the function at that point.  If there is no match, it returns '''none'''.  If the '''default''' refinement is specified, then the optional last block is evaluated.

Let us say that we wish to implement a POP3 server. We know that the POP3 server is state driven, and has 2 states, an authorisation state, and a transaction state.  In each of these states, the POP3 server will only accept certain commands.

 state: 'transaction
 command: 'RETR
 ..
 ..
 switch/default state [
     transaction [
         ... contains another switch to check for valid transaction commands ...
     ]
     authorisation [
         ... contains another switch to check for valid authorisation commands ...
     ]
 ] [print &quot;Unknown state error&quot;]


The authorisation switch might look like this, where the words in the blocks are pseudocode.

 switch/default command [
    user [check to see if valid user syntax]
    pass [check to see if valid username and password combination]
    apop [change authentication method]
    quit [close connection and wait for next user]
 ] [print &quot;Unknown command in authorisation mode&quot;]

In both of the above examples we have used '''word''' values for the switch, but any REBOL value can be used.

 switch 3 [
     3 [print &quot;3 received&quot;]
     4 [print &quot;4 received&quot;]
 ]

== Repetition ==

=== For ===

 USAGE:
    FOR 'word start end bump body
 
 DESCRIPTION:
     Repeats a block over a range of values.
     FOR is a function value.
 
 ARGUMENTS:
     word -- Variable to hold current value (Type: word)
     start -- Starting value (Type: number series money time date char)
     end -- Ending value (Type: number series money time date char)
     bump -- Amount to skip each time (Type: number money time char)
     body -- Block to evaluate (Type: block)
 
 (SPECIAL ATTRIBUTES)
     catch
     throw

'''for''' is much like the traditional '''for''' loop structure seen in other languages with a small twist - the increment, or bump amount, can be in a datatype other than integer! as is usually required.

So, if you wish to write a loop where the counter value is incremented in a money! type, we can do this:

 for opinion $0 $.10 $0.02 [
     print [&quot;here is my 2c again totalling &quot; opinion]
 ]

giving 

 here is my 2c again totalling  $0.00
 here is my 2c again totalling  $0.02
 here is my 2c again totalling  $0.04
 here is my 2c again totalling  $0.06
 here is my 2c again totalling  $0.08
 here is my 2c again totalling  $0.10

In case the '''repeat''' control function is suitable for the job, prefer '''repeat''', it is faster.

=== Forall ===

 USAGE:
    FORALL 'word body
 
 DESCRIPTION:
     Evaluates a block for every value in a series.
     FORALL is a function value.
 
 ARGUMENTS:
     word -- Word set to each position in series and changed as a result (Type: word)
     body -- Block to evaluate each time (Type: block)
 
 (SPECIAL ATTRIBUTES)
     catch

The most used loop in REBOL is '''foreach'''. 
But with '''foreach''' we can not change the current value as it does not give us the series-position.  '''forall''' was created for that case as it gives us the position instead of the current value.

As the series is traversed, the current value becomes the first element of the series.

We can change the first element like this:

 my-series: [1 2 3 4]
 forall my-series [ 
     change my-series (first my-series) * first my-series
 ]

 &gt;&gt; my-series
 == [1 4 9 16]

In the example above, all members of my-series are squared.

Another way to access the series is with path-notation, like my-series/1 .
Then it looks

 my-series: [1 2 3 4]
 forall my-series [ 
     my-series/1: my-series/1 * my-series/1
 ]

which is sometimes more comfortable.

The other advantage that '''forall''' gives you over '''foreach''' is that you have access to the index of the current element within the series being traversed.

 forall my-series [
     print index? my-series
 ]

Note that 'my-series is altered in the loop. 
Under certain circumstances that change stays even if the loop terminated.
That happens on a break, or on an error, and is intentional.

 my-series: [1 2 3 4]
 forall my-series [ 
     if 3 = first my-series [break]
 ]

 &gt;&gt; my-series
 == [3 4]

In pre view1.3/core 2.6 releases of REBOL, the series stayed at the tail on completion of the loop which was a source of confusion for many. 

Thats why you find
 forall series [..]
 series: head series
in some older code.

=== Forskip ===

 USAGE:
    FORSKIP 'word skip-num body
 
 DESCRIPTION:
     Evaluates a block for periodic values in a series.
     FORSKIP is a function value.
 
 ARGUMENTS:
     word -- Word set to each position in series and changed as a result (Type: word)
     skip-num -- Number of values to skip each time (Type: integer)
     body -- Block to evaluate each time (Type: block)
 
 (SPECIAL ATTRIBUTES)
     throw
     catch

'''forskip''' is similar to '''forall''' in that it traverses a series while making the current element the first element of the series.  It is different in that '''forskip''' allows you to move through the series by a specified integer amount.  From 1.3, it also reset the series on completion.  The same advantages '''forall''' has over '''foreach''' apply to '''forskip'''.  Example:

 areacodes: [
    &quot;Ukiah&quot;         707
    &quot;San Francisco&quot; 415
    &quot;Sacramento&quot;    916
 ]
 forskip areacodes 2 [
     print [first areacodes &quot;area code is&quot; second areacodes]
 ]

produces the following output

 Ukiah area code is 707
 San Francisco area code is 415
 Sacramento area code is 916

Say we now wanted to add 1000 to the area code.  Here's one way of doing that using '''forskip'''

 reverse areacodes ; so that the area code is the first element
 forskip areacodes 2 [
     change areacodes add 1000 first areacodes
 ]
 reverse areacodes ; and set it back to the original format

giving
 
 [
    &quot;Ukiah&quot; 1707
    &quot;San Francisco&quot; 1415
    &quot;Sacramento&quot; 1916
 ]

And here's an alternate way of doing this using the path notation which removes the necessity to reverse the series:

 forskip areacodes 2 [
     areacodes/2: add 1000 areacodes/2
 ]

=== Foreach ===

 USAGE:
    FOREACH 'word data body
 
 DESCRIPTION:
     Evaluates a block for each value(s) in a series.
     FOREACH is a native value.
 
 ARGUMENTS:
     word -- Word or block of words to set each time (will be local) (Type: get-word word block)
     data -- The series to traverse (Type: series)
     body -- Block to evaluate

'''foreach''' is arguably the most common repetition structure used in REBOL. Like the majority of repetition structures, it does not affect the series it traverses.

 files: read %./
 foreach file files [
     print file
 ] 

In this example, the current directory is read and stored as a series in the word '''files'''.  In the '''foreach''' structure, the temporary variable '''file''' is assigned the value of the current element in the series, and then printed to the console.  The temporary variable '''file''' is local only to the evaluation block.

This can also be written as

 foreach file read %./ [
     print file
 ]  

doing away with the necessity to define the word '''files'''.  If you really do want the word '''files''', you can also do this

 foreach file files: read %./ [
     print file
 ]  

saving one line in your source code.

If your series comes in pairs, you can create a pair of temporary variables

 names: [&quot;Joe&quot; &quot;Bloggs&quot; &quot;Jane&quot; &quot;Doe&quot;]
 foreach [first-name surname] names [
     print [first-name &quot; &quot; surname]
 ]

which prints the first name, a space, the surname, and then starts a newline.

=== Forever ===

'''Forever''' evaluates a block endlessly unless terminated at the console with the ESCAPE key, or a function inside the block.

What is it used for? Well, it could be used to increase one's Karmic credits! In Tibet mechanical prayer wheels are used to spin prayers such as &quot;Om Mani Padme Hum&quot;. His Holiness the Dalai Lama has stated that computers can be used for the same effect (since the hard drive is also spinning).

So, here we have a REBOL prayer wheel in action

 forever [
     print &quot;Om Mani Padme Hum&quot;
 ]

However, a more common usage of '''forever''' is to set up a server loop

    listen: open tcp://:12345
    waitports: [listen]
    forever [
        data: wait waitports
        either same? data listen [
            active-port: first listen
            append waitports active-port
        ][
            incoming-from-remote: first data
            print incoming-from-remote        
        ]     
    ]

=== Loop ===

 USAGE:
    LOOP count block
 
 DESCRIPTION:
     Evaluates a block a specified number of times.
     LOOP is a native value.
 
 ARGUMENTS:
     count -- Number of repetitions (Type: integer)
     block -- Block to evaluate (Type: block)

'''loop''' allows you to evaluate a block a specified number of times unless exited inside the block.  However, there is no local counter accessible, so if you wish to track at which repetition, you will have to create your own variable for this.  Alternatively you could use the '''for''' function.

 result: loop 3 [print &quot;hail Mary&quot;]
 &quot;Hail Mary&quot;
 &quot;Hail Mary&quot;
 &quot;Hail Mary&quot;

'''loop''' returns the value of the last execution of the block, and is here assigned to '''result'''.  If we had used '''print''' instead, we would have had an error as '''print''' does not return a value.

=== Repeat ===

 USAGE:
    REPEAT 'word value body
 
 DESCRIPTION:
     Evaluates a block a number of times or over a series.
     REPEAT is a native value.
 
 ARGUMENTS:
     word -- Word to set each time (Type: word)
     value -- Maximum number or series to traverse (Type: integer series)
     body -- Block to evaluate each time (Type: block)

'''repeat''' evaluates a block, and has a local counter available.  If the repetition '''value''' is an integer, then the counter starts at one, and reaches the repetition '''value'''.

 repeat value 3 [
     print value 
 ]
 1
 2
 3

If it is a series, then the &quot;counter&quot; takes the value in the series

 repeat value [&quot;a&quot; &quot;b&quot; &quot;c&quot;] [
     print value
 ]
 a
 b
 c

The final value is returned.

=== Until ===
'''Until''' is a control flow function checking the condition at the end of evaluation of its '''block''' argument.
 USAGE:
    UNTIL block

 DESCRIPTION:
     Evaluates a block until it is TRUE.
     UNTIL is a native value.

 ARGUMENTS:
     block -- (Type: block)

'''until''' evaluates a block repeatedly until the '''block''' evaluates to true.

 until [
    prin &quot;Enter password: &quot;
    pass: input/hide
    pass == &quot;Uncle&quot;
 ]

Here we prompt the user to input a password.  If it matches the secret value, a true value is obtained, and we exit the block. We ensure that the test is case sensitive by using '''==''' rather than the case insensitive '''='''.

=== While ===
 USAGE:
    WHILE cond-block body-block
 
 DESCRIPTION:
     While a condition block is TRUE, evaluates another block.
     WHILE is a native value.
 
 ARGUMENTS:
     cond-block -- (Type: block)
     body-block -- (Type: block)

'''while''' differs from '''until''' in that the '''body-block''' may not be evaluated, whereas in '''until''' the '''body''' block is always evaluated at least once.

'''While''' also differs from similar control flow constructs in other programming languages by actually evaluating the condition &quot;anywhere&quot; in the repetition. It can generally be used as follows:

&lt;pre&gt;while [
    do some pre-check stuff
    need-more-work? ; the check
] [
    do some post-check stuff
]&lt;/pre&gt;

, where neither the pre-check stuff, nor the post-check stuff are necessary.

This example is equivalent to '''forever'''

 while [true] [
     print &quot;S.O.S.&quot;
 ]

, and it is a case when the condition is evaluated &quot;at the start of a repetition&quot;, since no evaluation precedes the '''true''' expression in the '''cond-block'''.

Another example how to write an infinite loop using '''while''':

    while [print &quot;Om Mani Padme Hum&quot; true] []

, in this case the condition is actually evaluated &quot;at the end of a repetition&quot;, since nothing is done after the '''cond-block''' (yielding the '''true''' value) is evaluated and before another repetition starts.

It is quite common to use '''while''' to skip through a series

 while [not tail? my-series: next my-series] [
    do something here
 ]

=== Break ===

There is a couple of methods that can be used to stop the repetition of any repetitive control function. Specifically we can use the '''break''' function. Compare the following code with the general example used in the '''while''' section:

 while [true] [
     do some pre-check stuff
     unless need-more-work? [break]
     do some post-check stuff
 ]

The '''break''' function has got a '''/return''' refinement enabling us to cause the repetitive control function to return a specific value.

There are two other methods which can be used to stop the repetition. We can use the '''return''' or '''exit''' function if the repetition is done in a function or the '''throw''' function, if the repetition is done in a '''catch''' block.

== Bit Operators ==

=== And ===

=== Or ===

=== Xor ===

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>pw2yec03oaib0key0xnhmp7d61anc0v</sha1>
    </revision>
  </page>
  <page>
    <title>System Monitoring with Xymon/Other Docs/FAQ/Generic Monitoring System Features</title>
    <ns>0</ns>
    <id>39994</id>
    <revision>
      <id>2150034</id>
      <parentid>1552840</parentid>
      <timestamp>2011-07-27T13:31:17Z</timestamp>
      <contributor>
        <ip>66.192.59.3</ip>
      </contributor>
      <comment>/* Misc */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">= Requirements for a Monitoring System =

== Alerts ==
* Send (Email/SMS/etc)
* Acknowledge (display who is working on the issue)
* Delay
* Send to certain groups/individuals
* Escalation Path

* Ability to set severity of levels for each service test (eg, disk on a production server vs disk on a development server)
** Different actions for different levels, i.e.
*** Level 1 (disk 95% full)    alert Help Desk
*** Level 2 (disk 98% full)    alert IT team

== Display ==
                         
* Include or integrate with a real-time display system (with colours: Red, Yellow, Green, Purple,White and Blue)
** Red:
** Yellow:
** Green:
** White:
** Purple:

* Display a time of last check

* Show high level &quot;summary&quot; of status.  eg. group Unix boxes together and show if any have issues

* Ability to customise the display.  e.g. summary page for IT helpdesk, Unix page for Unix admins, Network page for Networking Team.

* Ability to restrict access to the monitoring system (we do not want the general community to see everything monitored)

* Ability to search for a host

== Monitor ==

* Microsoft Windows: Windows NT, Windows XP, Windows Vista.
** Be able to process windows event logs and performance monitoring
* UNIX: Solaris, AIX, HP-UX, IRIX, Linux, MacOS X, Tru64.
* Services (DNS/FTP/SMTP/LDAP/etc)
* Applications (Outlook, Calendar, Exchange, Certificate Services, Apache, Tomcat, etc)
** HTTP Application Monitoring
*** Expected Content returned
*** Acceptable response time (10 seconds to load a web page is not okay)
** Simulate a windows client application.  e.g. click on an icon to launch Word.  Enter some text.  Save the document to a drive.  Close word.  Ensure the whole process worked.
* Service level testing
** e.g. a web application requires a web server, DNS, LDAP, etc.  If the DNS server fails, then so will the web application.
* Allow for cluster testing (e.g. 1 web server out of a cluster of 5 fails, notify about the web server outage, but not the web service outage)
* Network File shares
* SAN Monitoring
* Citrix Servers and Services
* Printers
** Printer errors e.g. low toner
** Print Queues
* SNMP Devices
* Hardware (i.e. Dell DRAC, Sun Solaris), both via hardware card and OS software.
* UPS
* Other environmental inputs (temperature, humidity, etc) 
* Nightly backup
** Warn if backups take longer than expected
** Alarm if some backups fail

== Networking ==
* Provide integration with Cisco Works, or have similar functionality
* WAN links, LAN links, VLANs, etc 
** Verify link is up
** Verify Bandwidth is not saturated
* Cisco/Networking hardware
** CPU load
** Environmental e.g. Power supplies, temperature alarms, etc
* Ability to interact with probes (break down traffic to type and size)
* Capture and track changes to hardware configurations

== OS Monitoring ==
* Disk
* Memory
* Processes
* Response time
* CPU Load
* Hardware failures
* OS Alerts ( systems event logs and syslog )

== Database monitoring ==
* Oracle
* MySQL
* MSSQL
* Ingres

== File Monitoring ==
* file growths, if exist etc

== Customise ==

* Easy to extend/Customise your own tests (API to integrate with)

== Trending ==
* Alert on trends, ie 10% growth over 1 month might be ok but over 2 hours isn't. 
* Provide trending for network bandwidth usage or any data collected

== Integration ==

* Integrate with a helpdesk/Trouble Ticket system
** Automatically Submit Tickets
** Automatically Update existing Tickets

* Integrate with (or include) an Asset management system
** Display serial number, manufacturer, warranty periods, history of repairs/replacement, etc

* Integrate with other monitoring systems e.g. Ciscoworks, Oracle Enterprise Manager, HP, Compaq Insight Manager, etc

* Integrate with with Microsoft Operations Manager (MOM) or offer the similar functionality as available in MOM

== Agents ==

* Locally installed agent to collect data (and temporarily store data locally)
* Ability of central polling server to contact agent to get gathered data
* Local agent has ability to send data to polling server
* Ability to remotely update agents

== Misc ==

* History retention

* Provide reports

* Must be able to assign multiple IP addreses to each device and test each IP address individually if needed.

* Minimal impact on service being monitored
* Minimal effort to monitor (and manage) clients (remote devices)
** Do not require upgrades to existing infrastructure (e.g. must run latest version of software before it can be monitored)

* Ability for remote monitoring servers to report to a cental server

* Dependency aware (if a core router fails, do not send 100 alarms for devices behind it)

* Allow for scheduled downtime (disable a test in the future)
** Require authorisation
** Require a reason to be displayed

* Allow for regular maintenance windows (application is restarted every sun night - do not send out alarms)

* Ability to delegate testing to other devices (eg. tier management structure)

* Audit history in monitoring system ( server added date, when was monitoring disabled and why etc )

* The system must be able to self-monitor

* Be able to monitor 1000+ devices

* Allow variable polling (some tests every 5 mins, some tests every 1 min)

* Highly Reliable

* Redundancy (if your main monitoring server fails, have a second server on standby)

* Apply default thresholds to groups of devices.  Allow &quot;one off&quot; exceptions to these thresholds.  e.g. all file systems must be less than 90% full.  For serverX /opt must be less than 94% full since it currently is at 93% and should not change.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>b60dns0lyh2svleh9nznlq5ecu6wxuk</sha1>
    </revision>
  </page>
  <page>
    <title>Biblical Studies/Christianity/Christian music</title>
    <ns>0</ns>
    <id>39999</id>
    <revision>
      <id>1946567</id>
      <parentid>906580</parentid>
      <timestamp>2010-10-10T22:45:13Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''Audio'''
* [[Media:Amazing.ogg|Amazing Grace midi]] [[Image:ltspkr.png]]
: An instrumental representation of the slave ship origins (1779) of this famous hymn by the Englishman, John Newton (1725-1807).


== For further reading ==

* [[Writing Effective Songs/Solid &quot;Praise &amp; Worship&quot; songs|Writing Effective Praise &amp; Worship Songs]]
* [[Music Theory/Hymn]]

{{BookCat}}</text>
      <sha1>88r70gkjx8l79da1f4uo2uy8dj7p6v6</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Rebol programming</title>
    <ns>1</ns>
    <id>40000</id>
    <revision>
      <id>3033514</id>
      <parentid>272499</parentid>
      <timestamp>2016-01-04T09:36:28Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <minor />
      <comment>Ladislav moved page [[Talk:REBOL Programming]] to [[Talk:Rebol programming]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Change Log ==

Since this wiki is shared with every other book under the sun, it is not clear how to see where new sections have been started. Make an entry here for new works so others can check it out.


*started on control structures, and on databases - Graham.
*Carl did a section on /Dialects
*Moved Language Features under TOC - Henrik
*Moved Design Guide under TOC - Henrik
*Doing a lot of work on PARSE under Language Features - Henrik

== Requests ==

What should be in the book? You can find those section by hunting them, but gather them here for easier reference.

*[http://en.wikibooks.org/wiki/REBOL_Programming/Installing_REBOL Linux library dependence during installation.]

== Problems ==

===Size of Programming Section===

The Programming chapter is likely to end up getting big (huge maybe). Should it be broken into new chapters now, or later?
What's your suggested structure? G.

Post your solution here.

===Design Guide===

The Design Guide is very clear on many things, but is &quot;stuck&quot; behind the main programming guide. It will feel like all the best advice won't come until after you've spent time studying the language. - Henrik

Post your solution here.

===Console===

Carl says &quot;Command Shell&quot;. The book says &quot;Console&quot;. - Henrik

Post your solution here.

===Function Writing Style===

Some places functions are written as '''func''', in other places as FUNC. - Henrik

Post your solution here.

Other documentation uses the FUNC form, but I think, that the '''func''' form is better. Moreover, it is requested by some readers.
I propose to use this rule for other Rebol values like '''true''', '''none''', etc. When we are at it, I think, that we should write blocks with outer whitespace, but without inner whitespace, i.e.
    [1 2] [3 4]
, and not
    [ 1 2 ][ 3 4 ]
Another suggestion is to emphasize text ''like this'' - Ladislav

I've begun purging the inner-space-in-blocks style, though I'm still writing emphasized text both in bold and italic.

*Italic for something semi-important to underline a point
*Bold for something very important that could result in code loss if attempted.

I think it catches the eye easier and doesn't blend too much with using bold for values. - Henrik

===Code Coloring===

Not syntax coloring, but code coloring in the examples. I haven't studied whether it's hard or easy to do, but sometimes it can be nice to point out a word in a section of code with color, to let the viewer easier see what we are doing. - Henrik

Post your solution here.

===Printing===

The Wikibook is hard to print, since we have to print each chapter on its own. It would also be nice to get the size of the book at regular intervals. - Henrik

Post your solution here.

My solution is to use REBOL to pull down all the pages in the order you want, and print them out [[User:Graham.Chiu|Graham.Chiu]]</text>
      <sha1>d7g9jllwij2l31rton50k6qs6cryjq0</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Domain-specific languages bookshelf</title>
    <ns>10</ns>
    <id>40001</id>
    <restrictions>edit=autoconfirmed:move=autoconfirmed</restrictions>
    <revision>
      <id>1709356</id>
      <parentid>1561552</parentid>
      <timestamp>2010-01-31T17:42:08Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed links</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;center&gt;'''&lt;big&gt;[[Wikibooks:Domain-specific languages bookshelf|Domain-specific languages]]&lt;/big&gt;'''&lt;/center&gt;
'''T&lt;small&gt;EXT&lt;/small&gt; P&lt;small&gt;ROCESSING&lt;/small&gt;'''
&amp;ndash; [[AWK]] {{stage short|00%|Oct 10, 2005}}
&amp;ndash; [[Regular Expressions]] {{stage short|00%|Jun 2, 2006}}
&amp;mdash; '''M&lt;small&gt;ARKUP&lt;/small&gt;'''
&amp;ndash; [[CSS Programming|CSS]] 
&amp;ndash; [[HyperText Markup Language|HTML]] 
&amp;ndash; [[XHTML]] 
&amp;ndash; [[XForms]] {{stage short|50%|Sep, 13 2006}}
&amp;ndash; [[XML: Managing Data Exchange]]
&amp;mdash; '''C&lt;small&gt;ONFIGURATION&lt;/small&gt; M&lt;small&gt;ANAGEMENT&lt;/small&gt;
&amp;ndash; [[Apache Ant|Ant]]- {{stage short|25%|Oct, 05 2005}}
&amp;mdash; '''T&lt;small&gt;YPESETTING&lt;/small&gt;'''
&amp;ndash; [[LaTeX]]
&amp;ndash; [[PostScript FAQ]] 
&amp;ndash; [[TeX]] 
&amp;mdash; '''H&lt;small&gt;ARDWARE&lt;/small&gt; P&lt;small&gt;ROGRAMMING&lt;/small&gt;'''
&amp;ndash; [[Programmable Logic]]
&amp;mdash; '''D&lt;small&gt;ATABASE&lt;/small&gt;'''
&amp;ndash; [[MySQL]] 
&amp;ndash; [[Structured Query Language|SQL]]
&amp;ndash; [[XQuery]]
&lt;div style=&quot;float:left;&quot;&gt;&lt;small&gt;
({{ed|Domain-specific languages bookshelf|template}})&lt;/small&gt;&lt;/div&gt;
&lt;div style=&quot;float: right;&quot;&gt;[[Wikibooks:Domain-specific languages bookshelf|'''All Domain-specific language books...''']]&lt;/div&gt;&lt;noinclude&gt;[[Category:Deprecated templates|{{PAGENAME}}]]&lt;/noinclude&gt;</text>
      <sha1>nc5dyuogkixkm45mhb3qlfae55c6qrv</sha1>
    </revision>
  </page>
  <page>
    <title>File:FISCHG1.jpg</title>
    <ns>6</ns>
    <id>40002</id>
    <revision>
      <id>228568</id>
      <timestamp>2005-09-05T09:03:04Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Signal looking like a fish on 19600 Hertz


{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Signal looking like a fish on 19600 Hertz


{{Bild-GFDL}}</text>
      <sha1>c95j2l9cbtfoifil55ggo09jwp838m2</sha1>
    </revision>
  </page>
  <page>
    <title>File:GIRLAND1.jpg</title>
    <ns>6</ns>
    <id>40003</id>
    <revision>
      <id>228573</id>
      <timestamp>2005-09-05T09:06:14Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Signal looking like a garland on 19600 Hertz

{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Signal looking like a garland on 19600 Hertz

{{Bild-GFDL}}</text>
      <sha1>np3h9mrbtee5jbaipwnggw2fgju48fw</sha1>
    </revision>
  </page>
  <page>
    <title>File:ORNAM1.jpg</title>
    <ns>6</ns>
    <id>40004</id>
    <revision>
      <id>228575</id>
      <timestamp>2005-09-05T09:07:11Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Signal looking like ornaments on 19600 Hertz


{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Signal looking like ornaments on 19600 Hertz


{{Bild-GFDL}}</text>
      <sha1>2q5add13whp6vmp3lkir8en8ia0ojg8</sha1>
    </revision>
  </page>
  <page>
    <title>File:Superpuls1.jpg</title>
    <ns>6</ns>
    <id>40005</id>
    <revision>
      <id>228580</id>
      <timestamp>2005-09-05T09:10:32Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Superpuls

{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Superpuls

{{Bild-GFDL}}</text>
      <sha1>pogunr22krtbe764zrrpibhp7gfwmi5</sha1>
    </revision>
  </page>
  <page>
    <title>File:Zwanzigsekundenpuls.jpg</title>
    <ns>6</ns>
    <id>40006</id>
    <revision>
      <id>228583</id>
      <timestamp>2005-09-05T09:12:21Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Twenty-second-pulse

{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Twenty-second-pulse

{{Bild-GFDL}}</text>
      <sha1>pscsncmzxringmtqpniv9fesmp28ea9</sha1>
    </revision>
  </page>
  <page>
    <title>File:17800.jpg</title>
    <ns>6</ns>
    <id>40007</id>
    <revision>
      <id>228590</id>
      <timestamp>2005-09-05T09:15:26Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Signal of unidentified transmitter on 17800 Hertz

{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Signal of unidentified transmitter on 17800 Hertz

{{Bild-GFDL}}</text>
      <sha1>qkhfnmt64jlv61p82hqo3qhqdu9es1j</sha1>
    </revision>
  </page>
  <page>
    <title>MediaWiki:Nolicense</title>
    <ns>8</ns>
    <id>40019</id>
    <revision>
      <id>973360</id>
      <parentid>973359</parentid>
      <timestamp>2007-09-20T00:33:11Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>Reverted edit of [[Special:Contributions/Darklama|Darklama]], changed back to last version by Derbeth</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">None selected (add license manually)</text>
      <sha1>dcmwfqpirmfzsczd4m89w7uqvr9y7s2</sha1>
    </revision>
  </page>
  <page>
    <title>File:RJH63 5.jpg</title>
    <ns>6</ns>
    <id>40031</id>
    <revision>
      <id>228637</id>
      <timestamp>2005-09-05T09:17:07Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Signal of RJH63


{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Signal of RJH63


{{Bild-GFDL}}</text>
      <sha1>cohjpmawygx3bnotkf4pjjrl2n7w0pi</sha1>
    </revision>
  </page>
  <page>
    <title>File:RJH77 3.jpg</title>
    <ns>6</ns>
    <id>40032</id>
    <revision>
      <id>228641</id>
      <timestamp>2005-09-05T09:19:48Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Signal of RJH77

{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Signal of RJH77

{{Bild-GFDL}}</text>
      <sha1>2ty49am9697n8b3g2nbugxwnzaepr1v</sha1>
    </revision>
  </page>
  <page>
    <title>File:Saq4.jpg</title>
    <ns>6</ns>
    <id>40033</id>
    <revision>
      <id>228643</id>
      <timestamp>2005-09-05T09:21:22Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Signal of SAQ on July 4th, 2004

{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Signal of SAQ on July 4th, 2004

{{Bild-GFDL}}</text>
      <sha1>rfey3votnlmv2y8h4nrjy4wmnel4zzv</sha1>
    </revision>
  </page>
  <page>
    <title>File:22300 7.jpg</title>
    <ns>6</ns>
    <id>40034</id>
    <revision>
      <id>228646</id>
      <timestamp>2005-09-05T09:24:38Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Signal of unidentified transmitter on 22300 Hertz, mentioned in the table

{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Signal of unidentified transmitter on 22300 Hertz, mentioned in the table

{{Bild-GFDL}}</text>
      <sha1>q1hwd3qbo1bkijgaa8i99ir3nqb7xa5</sha1>
    </revision>
  </page>
  <page>
    <title>File:VLF-Antenne1.jpg</title>
    <ns>6</ns>
    <id>40037</id>
    <revision>
      <id>228666</id>
      <timestamp>2005-09-05T09:56:56Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>Antenna for PC-based VLF-reception

{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Antenna for PC-based VLF-reception

{{Bild-GFDL}}</text>
      <sha1>qoatm8pz799cjmta7v1u6w7zsqtsiq4</sha1>
    </revision>
  </page>
  <page>
    <title>File:TLEIS1.jpg</title>
    <ns>6</ns>
    <id>40038</id>
    <revision>
      <id>968422</id>
      <parentid>906344</parentid>
      <timestamp>2007-09-14T19:53:17Z</timestamp>
      <contributor>
        <username>Reece</username>
        <id>46573</id>
      </contributor>
      <comment>Removing Nld tag</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Taskbar

==Licensing==
{{Microsoft screenshot}}</text>
      <sha1>395ul1ss48p54wqvkbbdhath47374ad</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Visual Basic/The Language</title>
    <ns>1</ns>
    <id>40039</id>
    <revision>
      <id>1057000</id>
      <parentid>464809</parentid>
      <timestamp>2007-12-14T22:52:11Z</timestamp>
      <contributor>
        <username>Redrocketboy</username>
        <id>76247</id>
      </contributor>
      <minor />
      <comment>[[Talk:Programming:Visual Basic Classic/The Language]] moved to [[Talk:Visual Basic/The Language]]: better name</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Most of the content of this pages (all of conditionals) has been split and moved to Branching and Loops.  Turn this page into an appendix linked from the Programming table.

== Vandalism ==

66.66.38.185 vandalised this page over and over again.

Probably simplest to delete the page.  --[[User:Kwhitefoot|kwhitefoot]] 11:00, 13 October 2005 (UTC)

== Multiple variables in one Dim statment defaults to variant? ==

The text suggests that &quot;Dim anumber, anothernumber, yetanothernumber As Integer&quot; would cause anumber, anothernumber to be declared as variants (something I used to believe as well). As far as a I can see from Microsoft documentation this is not so (I would have quoted it, but I guess that might not be allowed). The examples given, also demonstrate that is is a valid way of typing multiple variables.
The documentation was found here: http://msdn2.microsoft.com/en-us/library/7ee5a7s1.aspx (look in Data Type Rules, last bullet before the second code block). -- Baard

:I'm afraid you have been misled by Microsoft's obfuscatory methods of writing documentation.  The document you refer to treats VB.NET not VB Classic.  Microsoft appear to be suppressing the documentation for VB Classic in the hope that it will go away.  You can demonstrate what actually happens by this little program:

  Option Explicit
  
  Public Sub main()
    
    Dim anumber, anothernumber, yetanothernumber As Integer
    Dim v As Variant
    
    Debug.Print TypeName(anumber), VarType(anumber), _
         TypeName(anothernumber), VarType(anothernumber), _
         TypeName(yetanothernumber), VarType(yetanothernumber)
    
    Debug.Print TypeName(anumber), VarType(v)
    
    Debug.Print &quot;Assign a number to anumber&quot;
    anumber = 1
    Debug.Print TypeName(anumber), VarType(anumber)
    
    Debug.Print &quot;Assign a string to anumber&quot;
    anumber = &quot;a string&quot;
    Debug.Print TypeName(anumber), VarType(anumber)
    
  End Sub

The result is:

  Empty          0            Empty          0            Integer        2 
  Empty          0 
  Assign a number to anumber
  Integer        2 
  Assign a string to anumber
  String         8

Notice that both VarType and TypeName return information about the variable stored inside the Variant not the Variant itself.

Thanks for the comment, it drove me to add an explanatory piece of code to the page.  Don't hesitate to add more comments, questions, improvements and so on.  Welcome to Wikibooks!  --[[User:Kwhitefoot|kwhitefoot]] 07:26, 22 May 2006 (UTC)

::Thank you for the example. Most of the time I’m fairly happy with Microsoft’s documentation practices, but I have to agree with you that it didn’t come across too clearly that it was a question of VB .Net in this instance.

::When I searched msdn for the Dim statement, I got several hits (of cource). Hit 2 and 3 had the following titles “Dim Statement (Visual Basic .NET)” and ”Dim Statement (Visual Basic)”. As I chose the latter one I felt quite confident that it was '''not''' the .Net version. 
::--[[User:Baard|Baard]] 17:53, 22 May 2006 (UTC)</text>
      <sha1>acgimjjt6vq52wlofpfwba1qiksqaop</sha1>
    </revision>
  </page>
  <page>
    <title>File:SPECP1.jpg</title>
    <ns>6</ns>
    <id>40040</id>
    <revision>
      <id>228671</id>
      <timestamp>2005-09-05T10:01:20Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>SpecLab-main dialogue

{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">SpecLab-main dialogue

{{Bild-GFDL}}</text>
      <sha1>tdsbqzxb8vkrwla4itz6898kjsw4jqs</sha1>
    </revision>
  </page>
  <page>
    <title>File:SPECP2.jpg</title>
    <ns>6</ns>
    <id>40041</id>
    <revision>
      <id>228673</id>
      <timestamp>2005-09-05T10:02:32Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Bild-GFDL}}</text>
      <sha1>9nckhnfb4kyc96q3vfsvcst17r1j8bu</sha1>
    </revision>
  </page>
  <page>
    <title>File:SPECP3.jpg</title>
    <ns>6</ns>
    <id>40042</id>
    <revision>
      <id>228674</id>
      <timestamp>2005-09-05T10:03:02Z</timestamp>
      <contributor>
        <username>Timberwind~enwikibooks</username>
        <id>11180</id>
      </contributor>
      <comment>{{Bild-GFDL}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Bild-GFDL}}</text>
      <sha1>9nckhnfb4kyc96q3vfsvcst17r1j8bu</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Electronics/VLF-reception with the PC</title>
    <ns>1</ns>
    <id>40043</id>
    <revision>
      <id>2625550</id>
      <parentid>1313731</parentid>
      <timestamp>2014-04-03T07:42:03Z</timestamp>
      <contributor>
        <ip>216.67.23.23</ip>
      </contributor>
      <comment>/* Please elaborate on the connection of the aerial to the sound card input. */ new section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The license type of the pictures is the same as in the German version! If the license type is not known, than take them of the German version!

This seems to be quite a nice article, except that the grammar is so horrible I don't want to read it for fear of fucking up my brain cells forever.  Dude, why are those Russians soooo bad at English ?  Should we blame this one on communism too ?  Maybe they are just unashamed of writing long stuff in languages they don't master ?
--[[User:81.57.79.249|81.57.79.249]] 08:41, 12 June 2006 (UTC)

:Criticism is one thing but why not offer to assist in correcting the grammar I found the article interesting [[User:Alankroeger|Alankroeger]] 18:52, 20 January 2007 (UTC)

== Please elaborate on the connection of the aerial to the sound card input. ==

How, specifically was the aerial connected to the sound card input? Was there any connection to ground?</text>
      <sha1>hnrfolxsvlejd8bqxlss2klqm2oj24i</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Electronics/Gallery of VLF-signals</title>
    <ns>1</ns>
    <id>40044</id>
    <revision>
      <id>497866</id>
      <parentid>409729</parentid>
      <timestamp>2006-06-24T11:09:55Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <comment>[[Talk:Electronics:Gallery of VLF-signals]] moved to [[Talk:Electronics/Gallery of VLF-signals]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The license type of the pictures is the same as in the German version! If the license type is not known, than take them of the German version!

I suggest somehow changing the location of those really really long pictures.</text>
      <sha1>swatbpn1w0mqyd9s1qbvx8fatbggpsr</sha1>
    </revision>
  </page>
  <page>
    <title>User:Chessprodigyman</title>
    <ns>2</ns>
    <id>40045</id>
    <revision>
      <id>228694</id>
      <timestamp>2005-09-05T10:37:36Z</timestamp>
      <contributor>
        <username>Chessprodigyman</username>
        <id>11182</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">A very boring and bored guy who isn't really all that good in chess.</text>
      <sha1>daetdzxvh3r9d9clywgpme05k635p1v</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Book of the month bookshelf</title>
    <ns>10</ns>
    <id>40046</id>
    <redirect title="Wikibooks:Book of the month" />
    <revision>
      <id>862658</id>
      <parentid>241590</parentid>
      <timestamp>2007-05-13T20:08:47Z</timestamp>
      <contributor>
        <username>Hagindaz</username>
        <id>19723</id>
      </contributor>
      <minor />
      <comment>outdated, redirecting</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT [[Wikibooks:Book of the month]]</text>
      <sha1>92nzlzdk9ztmb4v112m5tzohb8kf2b0</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:New Zealand Economics</title>
    <ns>1</ns>
    <id>40049</id>
    <revision>
      <id>1894723</id>
      <parentid>1453071</parentid>
      <timestamp>2010-07-19T23:02:46Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>{{rfd-survived}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{rfd-survived}}

This typifies why economists and academics should be the last people anyone should listen to when considering how a 'society' functions in a changing world.
Put away the text books and the dictionary and go for a walk in the sunshine...try to get some real life experiences to talk about.

It would be interesting as this book develops to do a comparison with the Australian and Singaporean economies and their management over similar time periods. The per-capita GDP (PPP) US$ figures in 2005 are: Australia, $30,900; Singapore $28,370; New Zealand $24,800, source: World Development Report 2007, IMF. Policies and resource endowments may have contributed these differences.
* I agree, it would be. We'd need someone with knowledge of those two economies to provide the same kind of economic history I've provided for NZ though ('cos I certainly don't know! :) ). [[User:Kabl00ey|kabl00ey]] ([[User talk:Kabl00ey|talk]]) 19:21, 23 March 2009 (UTC)

== Sources ==

Hi there,

Could you please identify the articles/books of the commentators that you cite? It would be great to have these for further reading.

Appreciate your help, --[[User:TimClicks|TimClicks]] ([[User talk:TimClicks|talk]]) 20:50, 10 March 2009 (UTC)
* I'll see if I can find my original; they should be in there. [[User:Kabl00ey|kabl00ey]] ([[User talk:Kabl00ey|talk]]) 19:21, 23 March 2009 (UTC)
** Alright, I couldn't find a digital copy but I trawled through my boxes and found the paper one. I'll add them in now. Someone may need to format them; I'm not really up to speed on wiki-formatting. [[User:Kabl00ey|kabl00ey]] ([[User talk:Kabl00ey|talk]]) 12:17, 26 March 2009 (UTC)</text>
      <sha1>9879d2515n1d6avhtlbjqd0bvin5575</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Using Firefox/Plug-ins</title>
    <ns>1</ns>
    <id>40050</id>
    <revision>
      <id>407609</id>
      <parentid>288820</parentid>
      <timestamp>2006-03-24T19:43:04Z</timestamp>
      <contributor>
        <username>Everlong</username>
        <id>1632</id>
      </contributor>
      <minor />
      <comment>[[Talk:Using Firefox: Plug-ins]] moved to [[Talk:Using Firefox/Plug-ins]]: moving to conform to the slash convention and automatic Contents page links</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Linux/Mac==
There needs to be information about installing plugins for mac and linux. I'm not too sure about some sources I've seen (they seem outdated). Perhaps someone with experience will be better suited in contributing this section.</text>
      <sha1>b1v6zz3wsiod6kr738hn1mm4r13xsq2</sha1>
    </revision>
  </page>
  <page>
    <title>Dialectical Behavioral Therapy/Distress Tolerance Skills/Distracting</title>
    <ns>0</ns>
    <id>40051</id>
    <revision>
      <id>499195</id>
      <parentid>369165</parentid>
      <timestamp>2006-06-24T21:07:01Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''Distress Tolerance Skills: IMPROVE the moment'''

'''Imagery'''

Use imagery to distract, soothe, bolster courage, and improve confidence.  Imagery can make future rewards more salient (a leap of faith).  
Using imagery, you can create a situation different from the actual one; so, it is like leaving the situation.  With imagery, you can go to a place that is safe and secure.  Going to an imaginary safe place or room within can be very helpful during flashbacks.  For it to be useful, you have to practice this in advance.  Your ability to conjure this place must be solid if you are going to use imagery in a crisis.  Practice imaging your safe place (when you are not in a crisis) enough times to get it firmly in mind and learned as a skill. An over-learned skill is available under stress.

'''Meaning'''

Finding or creating meaning helps many people in crises.  Meaning answers the question why?  For example, I’m doing this for the good of my family.
Problems in life are opportunities to practice skills, this is the idea behind the phrase, “when life gives you lemons, make lemonade.”  Suffering, when accepted, enhances empathy, and those who have suffered can reach out and help others.

'''Prayer'''

The essence of prayer is the complete opening of oneself to the moment.  Ask for strength from a higher power to bear the pain in this moment.  

'''Relaxation'''

Relaxing changes how the body responds to stress and crises.  This skill, like imagery, takes practice.  In crisis, some people tense their muscles as if to control the situation by controlling their body.  The goal is to accept reality with the body.  The body communicates relaxation to the mind promoting psychological acceptance.  

'''One thing at a time'''

Focusing on one thing in a stressful situation can provide a means to settle down.  One-mindfully often has a calming effect.  
The only pain one has to survive is “just this moment.”  Notice how much discomfort increases by ruminating about past stressors or worrying about future problems.  Let go of the future and the past.  When feeling discomfort, irritation, or anxiety, tell yourself to focus on “just this moment.”

'''Vacation'''

Everyone needs a vacation from adulthood occasionally.  Plan a timeout to regroup (planning is key to remaining in control and use vacations appropriately).  Make it brief, and don’t choose an inappropriate time.  

'''Encouragement'''

Talk to yourself the way you would talk to someone you care about who is in crisis.  Talk to yourself the way you would like others to talk to you.

[[Category:Dialectical Behavioral Therapy]]</text>
      <sha1>tj6q7uoe8bjm5b0jsr9j7zpde4pcgvt</sha1>
    </revision>
  </page>
  <page>
    <title>Dialectical Behavioral Therapy/Distress Tolerance Skills/Self-soothing</title>
    <ns>0</ns>
    <id>40052</id>
    <revision>
      <id>499199</id>
      <parentid>369168</parentid>
      <timestamp>2006-06-24T21:07:24Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">SELF-SOOTHE

A way to remember these skills is to think of soothing each of your

FIVE SENSES

	Vision    		Notice what you see, find soothing things to look at.

Notice the play of light on a clean wall.  Enjoy the richness of colors in the floor tile. Look out the window and watch the grass gently blow in the breeze, the sun dancing on leaves, the graceful movement of the birds, or the smooth movement of passing cars. Close your eyes and notice the textures and light colors behind your eyelids.   

	Hearing		Pay attention to what you can hear around you.

Listen to beautiful or soothing music, or to invigorating and exciting music. Pay at¬tention to sounds of nature (waves, birds, rainfall, leaves rustling). Sing to your favorite songs. Hum a soothing tune. Learn to play an instrument. Be mindful of any sounds that come your way, letting them go in one ear and out the other.  Notice how sounds on the unit feel different at various times of day.  Quietly notice the sounds of your own breath.  See if you can hear the sound of your own circulation.  

	Smell			Be aware of the memories that smell can bring.

Notice the scent of your soap and shampoo while showering.  Try to find brands of deodorant, lotion, and other things that have a soothing smell to you.   Sit quietly for a few minutes and try to identify all of the smells that you notice.  Enjoy the smell of your meals while you are in the dining room.  See if you can smell each type of food individually.  Savor the smell of popcorn and remember other times in your life when you have enjoyed popcorn.   

	Taste			Carefully savor flavors that the day brings you.

Have a good meal; enjoy your dessert; have a favorite soothing drink such as herbal tea or hot choco¬late.  Treat yourself to a favorite snack from the canteen.  Suck on a piece of peppermint candy. Chew your favorite gum.   Really taste the food you eat; eat one thing mindfully.

	Touch				Find comfort in touch.	

Take a bubble bath.  Savor the feeling of crisp, clean sheets on the bed.  Soak your feet. Soften your skin with lotion.  Put a cold compress on your forehead.  Brush your hair for a long time.  Place your hand on a smooth, cool surface.  Enjoy the feeling of a favorite piece of clothing, or clean clothes.  Notice the comforting warmth of clothing that is fresh from the dryer.  Experience whatever you are touching; notice touch that is soothing.

[[Category:Dialectical Behavioral Therapy]]</text>
      <sha1>86ml4vcpafr99q1lguemz8q6xn5126m</sha1>
    </revision>
  </page>
  <page>
    <title>Dialectical Behavioral Therapy/Distress Tolerance Skills/Improving the moment</title>
    <ns>0</ns>
    <id>40053</id>
    <revision>
      <id>499196</id>
      <parentid>369171</parentid>
      <timestamp>2006-06-24T21:07:08Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Distress Tolerance Skills: IMPROVE the moment

Imagery

Use imagery to distract, soothe, bolster courage, and improve confidence. Imagery can make future rewards more salient (a leap of faith).

Using imagery, you can create a situation different from the actual one; so, it is like leaving the situation. With imagery, you can go to a place that is safe and secure. Going to an imaginary safe place or room within can be very helpful during flashbacks. For it to be useful, you have to practice this in advance. Your ability to conjure this place must be solid if you are going to use imagery in a crisis. Practice imaging your safe place (when you are not in a crisis) enough times to get it firmly in mind and learned as a skill. An over-learned skill is available under stress.

Meaning

Finding or creating meaning helps many people in crises. Meaning answers the question why? For example, I’m doing this for the good of my family.
Problems in life are opportunities to practice skills, this is the idea behind the phrase, “when life gives you lemons, make lemonade.” Suffering, when accepted, enhances empathy, and those who have suffered can reach out and help others.

Prayer

The essence of prayer is the complete opening of oneself to the moment. Ask for strength from a higher power to bear the pain in this moment.

Relaxation

Relaxing changes how the body responds to stress and crises. This skill, like imagery, takes practice. In crisis, some people tense their muscles as if to control the situation by controlling their body. The goal is to accept reality with the body. The body communicates relaxation to the mind promoting psychological acceptance.

One thing at a time

Focusing on one thing in a stressful situation can provide a means to settle down. One-mindfully often has a calming effect.

The only pain one has to survive is “just this moment.” Notice how much discomfort increases by ruminating about past stressors or worrying about future problems. Let go of the future and the past. When feeling discomfort, irritation, or anxiety, tell yourself to focus on “just this moment.”

Vacation

Everyone needs a vacation from adulthood occasionally. Plan a timeout to regroup (planning is key to remaining in control and use vacations appropriately). Make it brief, and don’t choose an inappropriate time.

Encouragement

Talk to yourself the way you would talk to someone you care about who is in crisis. Talk to yourself the way you would like others to talk to you.

[[Category:Dialectical Behavioral Therapy]]</text>
      <sha1>3l96ukpgdb2htuhsc6offxlfs3f1vv0</sha1>
    </revision>
  </page>
  <page>
    <title>Dialectical Behavioral Therapy/Distress Tolerance Skills/Thinking of pros and cons</title>
    <ns>0</ns>
    <id>40054</id>
    <revision>
      <id>499200</id>
      <parentid>369174</parentid>
      <timestamp>2006-06-24T21:07:29Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Pros &amp; cons is the skill thinking of advantages and disadvantages of a particular course of action (or doing certain things).  Think about the advantages of doing things and the disadvantages of doing them.  Then, think about the advantages of not doing things and the disadvantages of not doing things.

[[Category:Dialectical Behavioral Therapy]]</text>
      <sha1>cpi8lz9nd2scaqi1f6mqyo206rcvzst</sha1>
    </revision>
  </page>
  <page>
    <title>Dialectical Behavioral Therapy/Distress Tolerance Skills/Radical Acceptance</title>
    <ns>0</ns>
    <id>40055</id>
    <revision>
      <id>499197</id>
      <parentid>369196</parentid>
      <timestamp>2006-06-24T21:07:12Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Radical Acceptance

Freedom from [[/suffering/]] requires [[Dialectical Behavioral Therapy/Distress Tolerance Skills/Acceptance|ACCEPTANCE]] from deep within of what is. Let yourself go completely with what is. Let go of fighting reality.

ACCEPTANCE is the only way out of hell.

Pain creates [[/suffering/]] only when you refuse to ACCEPT the pain.

Deciding to tolerate the moment is ACCEPTANCE.

ACCEPTANCE is acknowledging what is.

To ACCEPT something is not the same as judging it good.

[[Category:Dialectical Behavioral Therapy]]</text>
      <sha1>2u30j3dem7t9up3g48ntxcrfw4f2g2a</sha1>
    </revision>
  </page>
  <page>
    <title>Dialectical Behavioral Therapy/Distress Tolerance Skills/Turning the mind</title>
    <ns>0</ns>
    <id>40056</id>
    <revision>
      <id>499201</id>
      <parentid>369177</parentid>
      <timestamp>2006-06-24T21:07:34Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''Turning the Mind'''

Acceptance of reality as it is requires an act of CHOICE. It is like coming to a fork in the road. You have to turn your mind toward the acceptance road and away from the “rejecting reality” road.

You have to make an inner COMMITMENT to accept.

The COMMITMENT to accept does not itself equal acceptance. It just turns you toward the path.

You have to turn your mind and commit to acceptance OVER AND OVER AND OVER again. Sometimes, you have to make the commitment many times in the space of a few minutes.

[[Category:Dialectical Behavioral Therapy]]</text>
      <sha1>46odfirc17t7w7txkp3of40m6lpaiih</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Further dynamics</title>
    <ns>1</ns>
    <id>40057</id>
    <revision>
      <id>520551</id>
      <parentid>230289</parentid>
      <timestamp>2006-07-13T08:46:42Z</timestamp>
      <contributor>
        <ip>213.232.79.240</ip>
      </contributor>
      <comment>Elastic and inelastic collisions</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# State each of Newton’s laws of motion. &amp;#10004;
# Define, recall and use (linear) momentum as the product of mass and velocity. &amp;#10004;
# Define force as rate of change of momentum, and use this definition in situations where mass is constant.
# State the principle of conservation of momentum. &amp;#10004;
# Use the principle of conservation of momentum in simple applications including elastic and inelastic interactions between two bodies in one dimension, and the separation of an initially stationery object into two parts. (Knowledge of the concept of restitution is not required.)

== Elastic and inelastic collisions ==

It would be helpful to include brief comments about elastic and inelastic collisions here, particularly with reference to the non-conservaton of kinetic energy in inelastic collisions which confuses some of my pupils.</text>
      <sha1>o7rbpfdcug3ym6dblnsq757ihqj1c00</sha1>
    </revision>
  </page>
  <page>
    <title>Prolog/Definite Clause Grammars</title>
    <ns>0</ns>
    <id>40061</id>
    <revision>
      <id>2184596</id>
      <parentid>1471722</parentid>
      <timestamp>2011-10-17T00:01:55Z</timestamp>
      <contributor>
        <username>Xania</username>
        <id>40302</id>
      </contributor>
      <minor />
      <comment>typo</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Prolog has a mechanism for defining certain grammars called Definite Clause Grammar notation. This makes it easy to write parsers. Note that while DCG ''syntax'' is part of the ISO standard, DCG ''semantics'' are not. {{fact}}

Grammar rules can be written in the form:

 head --&gt; body

For example:

 sentence --&gt; noun_phrase, verb_phrase.

Which will be translated to:

 sentence(L0,LREMAINDER):-
    noun_phrase(L0,L1),verb_phrase(L1,LREMAINDER).

It means, that the &lt;code&gt;sentence&lt;/code&gt; clause will receive &lt;code&gt;L0&lt;/code&gt; as input, and after parsing from a sentence from &lt;code&gt;L0&lt;/code&gt;, it will give back &lt;code&gt;LREMAINDER&lt;/code&gt;. Let's assume that your start symbol is '''sentence'''. Then &lt;code&gt;LREMAINDER&lt;/code&gt; is expected to be &lt;code&gt;[ ]&lt;/code&gt; after a succesful parsing. The interpretation of the body of this clause is: if we parse a &lt;code&gt;noun_phrase&lt;/code&gt; and a &lt;code&gt;verb_phrase&lt;/code&gt; from our sentence, we will get back an empty list.

You can also call prolog predicates using braces.

== Example ==

An example DCG program, which can parse numbers:

 number --&gt; digit, number_remaining.
 number_remaining --&gt; dot,number_remaining.
 number_remaining --&gt; digit,number_remaining.
 number_remaining([],[]).
 dot --&gt;[0'.].
 digit --&gt; [J], {digit_code(J)}.
 digit_code(J):- J &gt;= 0'0, J =&lt; 0'9.

Note: &lt;code&gt;0'9&lt;/code&gt; means the character 9 (or more precisely, the character code of 9, because there's no distinct character datatype in SWI).

If you try to consult this program, you might get a warning, because we redefined the built-in &lt;code&gt;number/2&lt;/code&gt; predicate.

Running the program:

 ?- number(&quot;120&quot;,L).
 L = [] ;
 fail.

We get back one &quot;result&quot;: it means that the parsing wasn't ambiguous. (There's only one possible parsing tree of the input.)

One of the earlier examples, &lt;code&gt;revappend&lt;/code&gt;, can be written using DCG:

 revappend([]) --&gt; [].
 revappend([X|Xs]) --&gt; revappend(Xs), [X].

[[Category:Prolog]]

== External links ==
[http://en.wikipedia.org/wiki/Chomsky_hierarchy#The_hierarchy Chomsky hierarchy of grammars on Wikipedia]</text>
      <sha1>l3o09k4qut7eo3al99k24p6oslx8ukg</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Ancient Civilizations/Mound Builders</title>
    <ns>110</ns>
    <id>40062</id>
    <revision>
      <id>3041655</id>
      <parentid>3041652</parentid>
      <timestamp>2016-01-28T19:43:11Z</timestamp>
      <contributor>
        <username>Atcovi</username>
        <id>1015207</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/156.110.34.242|156.110.34.242]] ([[User talk:156.110.34.242|talk]]) to last version by Defender</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">[[Image:Emerald Mound.jpg]]
== Where did they Live? ==

The &quot;Mound Builders&quot; lived in what is today the eastern half of the United States and southern Canada, in North America.  

Because the people who lived in these societies did not leave any written records, archaeologists look for similarities and differences between the mounds, and figure out which groups of Mound Builders interacted with each other.

== What did their buildings look like? ==

[[Image:Mound Builder City.jpeg]]

The name for this society comes from the fact that they left large earthen mounds behind in what appears to be community centers of activity.  Many of these earthen mounds have been removed by modern peoples in North America, but they were found in many of the same locations where current cities in the United States are now located. They also lived in Spiro which is now present day Oklahoma.

A major feature of most villages was a trading area where items could be exchanged for items that were made in places much more distant.  It is known that these trading networks were quite large, and they may have even had contact with other major civilizations in North America like the Aztecs.  Items such as obsidian knives have been found over 1000 miles from any known source of volcanic rock.

Often within these mounds, particularly some of the larger mounds, there have been the remains of what is assumed to be a major chief or king, based on the items that are found buried with the person.  This was also a reason for why many of these mounds have disappeared, because early treasure hunters would dig through these mounds trying to find gold, silver, or other precious stones and jewelry.

== When did they live there? ==
* Early Woodland - Adena in Ohio, others in Illinois, Kentucky, West Virginia
* Middle Woodland - Hopewell in Ohio, others in Illinois, Indiana, Missouri, Kentucky
* Late Woodland - Effigy Mounds in Iowa, Illinois, Wisconsin, Michigan, and Minnesota 
* Mississippian - Cahokia Mounds in Illinois, Spiro Mounds in Oklahoma

== What did they eat? ==

They ate a wide variety of food items, depending on where they were living.  Corn (maize) was brought into the area from Mexico and was widely grown together with other vegetables like beans and squash.  They also hunted both small animals like rabbits and squirrels, and larger game animals like bison and various types of deer.  In some lake regions they ate wild rice, and also ate fish either from the ocean or from freshwater lakes and rivers. They dried many foods to eat in the winter. And they also drank water from freshwater rivers.

== What did they wear? ==

It is not completely clear how they dressed.  If you look at the traditional clothing of their descendants, it was probably simple clothing made for protection from the weather. Their clothing was probably made mostly from animal skins. It may have also included plant fibers, and might have been colored with plant-based dyes.

== What did their writing look like? ==
[[Image:Petroglyphs2-above Mesquite Springs-800px.JPG|right|200px]]
As far as we know, the Mound Builders never invented written language with an alphabet.  There are, however, images which have been carved into rocks and in caves, as well as inscribed onto everyday objects like pottery.  These can be found throughout North America.  These images are called petroglyphs.

Often these symbols were arranged to tell a story, or note something of significance to the people who drew these symbols.  Usually these symbols would be used to remind a tribal elder about a story that would then be passed on to the next generation, and unless that oral history has been preserved, the story is usually lost

The ceremonial masks, jewelry, and artifacts come from a wide range of places. The Hopewell mounds had copper from Lake Superior, mica from North Carolina, and shells from the Gulf Coast. This might show that the beliefs were held in a wide area, or it might only show that the Mound Builders traded over a wide area.

The first evidence of humans burying the dead comes from the Mound Builders.

== Are some of them famous even today? ==

We don't know the name of a single Mound Builder. Because the Mound Builders did not use writing, no names are known today. But we are still researching them, hopefully we will find names.

== What Happened To Them? ==
* There is some evidence (war, abandonment of some towns for small, stockaded settlements) that the civilization was in decline before the conquistadors arrived in Central America.
* The diseases brought by the conquistadors spread quickly through the Americas.  Lots of people died from European diseases like smallpox, especially in Mississippian towns where people lived close together.
* By the time Europeans reached the Mississippi, many of the towns were empty.

== What is left of them today? ==

* They spread the cultivation of corn, beans, and squashes throughout Eastern (and Central?) North America.  These foods were the most important foods of many Native Americans, were important foods to the Europeans who settled the land, and are still important today.  North Americans eat a lot of corn and beans.  Some squashes (like pumpkins) are important symbols of fall and Thanksgiving in the US.

* They left many mounds, which archeologists still study today. Some of the mounds are set aside in parks and monuments, so that people can look at the mounds, and learn from them. Some of the mounds are burial mounds, which contain ornaments. Archeologists learn how people lived and dressed from what is left in the mounds.

It is believed that they are the ancestors of several native American Indian groups in North America.

* The Mississippian cultures left no written records, because they did not have a writing system like we have.  They could not write books.
* culture: stories, architecture, tools, and arts of Native Americans.  
* Native American Art is known around the world today.
* Native American folk tales
* Native American religious beliefs

== Who Lives There Now? ==
Settlers from England and Europe often built their own towns on or near abandoned mound builder towns, because they were in good locations for farming or trade. In some cases, they forced the Native Americans out before settling.  Some cities that were built on or near mound builder towns are Cahokia, Illinois; Marquette, Iowa; and Chillicothe, Ohio.  Now, the people who live in these places are citizens of the USA or Canada. They study the history of Europe, and of the people who built the countries of North America. Their ancestors are mostly from Europe, Africa, and Asia.  

Most of the people who live on or near mound builder towns don't even know it.
Now, hundreds of years later, people are beginning to study the graves, towns, and temples of the mound builders.
* http://www.cahokiamounds.com/cahokia.html
* http://www.nps.gov/efmo/index.htm
* http://www.nps.gov/hocu/
* http://www.ohiohistory.org/places/newarkearthworks/index.cfm
* http://www.nativeamericans.com/MoundBuilders.htm
* http://www.cr.nps.gov/archeology/feature/feature.htm
* http://www.mississippian-artifacts.com/
* http://ngeorgia.com/history/early.html
* http://www.angelfire.com/wi/oneota/
* http://mcclungmuseum.utk.edu/permex/archaeol/archaeol.htm
* http://www.ah.dcr.state.nc.us/sections/hs/town/town.htm

{{BookCat}}

[[de:Wikijunior Alte Zivilisationen/ Hügelbauer]]
[[fr:Wikijunior:Les civilisations anciennes/Les Mound Builders]]</text>
      <sha1>6m4timv7udbug78oumcqmbb1m2cesxp</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Electrons, Waves and Photons/D.C. circuits</title>
    <ns>1</ns>
    <id>40064</id>
    <revision>
      <id>2091613</id>
      <parentid>265130</parentid>
      <timestamp>2011-05-03T10:34:07Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>moved [[Talk:A-level Physics/Electrons and Photons/D.C. circuits]] to [[Talk:A-level Physics/Electrons, Waves and Photons/D.C. circuits]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# Recall and use appropriate circuit symbols. &amp;#10004;
# Draw and interpret appropriate circuit diagrams. &amp;#10004;
# Use the concept that e.m.f. is defined in terms of the energy transferred by a source in driving unit charge round a complete circuit.
# Use energy considerations to distinguish between e.m.f. and p.d.
# Appreciate that sources of e.m.f. have internal resistance and understand the simple consequences of internal resistance for external circuits.
# Recall Kirchhoff’s first law and appreciate this as a consequence of conservation of charge.
# Understand Kirchhoff’s second law as a consequence of conservation of energy.
# Recall and use a formula for the combined resistance of two or more resistors is series.
# Recall and use a formula for the combined resistance of two or more resistors is parallel.
# Solve problems involving series and parallel circuits for one source of e.m.f.
# Understand the use of a potential divider as a source of variable p.d.
# Describe and explain the use of thermistors and light-dependant resistors in potential dividers to provide a potential difference which is dependant on temperature and on light intensity respectively.</text>
      <sha1>169ek54iwrg78queonafpwymrqk2ix0</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Electrons and Photons/Electric current</title>
    <ns>1</ns>
    <id>40065</id>
    <revision>
      <id>334383</id>
      <parentid>334287</parentid>
      <timestamp>2006-01-11T15:18:37Z</timestamp>
      <contributor>
        <username>Krackpipe</username>
        <id>8424</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# Understand electric current as a net flow of charged particles. &amp;#10004;
# Understand the concept of charge in terms of the product of current and time. &amp;#10004;
# Recall and use ∆Q=∆It. &amp;#10004;
# Define the coulomb. &amp;#10004;
# Appreciate the difference between the directions of conventional current and of electron flow. &amp;#10004;
# Define potential difference and the volt in terms of energy transfer. &amp;#10004;
# Recall and use V=W/Q and V=P/I &amp;#10004;
# Sketch and explain the I/V characteristics of a metallic conductor at constant temperature, a semiconductor diode and a filament lamp. &amp;#10004;
# Define resistance and the ohm. &amp;#10004;
# Recall and use R=V/I &amp;#10004;
# State Ohm’s law. &amp;#10004;
# Define resistivity. &amp;#10004;
# Recall and use ρ = RA/l &amp;#10004;
# Recall and use P = I2R and P = V2/R &amp;#10004;
# Recall and use W = IVt. &amp;#10004;
# Sketch the variation with temperature of the resistance of a pure metallic conductor and of a negative temperature coefficient (NTC) thermistor.</text>
      <sha1>n7m471cr59kh9ei8opzpvapfusfcrvu</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Ancient Civilizations/Mound Builders</title>
    <ns>111</ns>
    <id>40066</id>
    <revision>
      <id>1004805</id>
      <parentid>1004802</parentid>
      <timestamp>2007-10-16T18:04:49Z</timestamp>
      <contributor>
        <ip>205.213.111.54</ip>
      </contributor>
      <comment>/* Controversial statement */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== References ==

*[[w:Category:Mound Builders]]
*[[w:Mound Builders]]
*[[w:Mississippian culture]]
*[[w:Hopewell culture]]
*[http://www.mississippian-artifacts.com/ Mississippian Artifacts and Culture]
*[http://www.cr.nps.gov/archeology/feature/FEATURE.HTM U.S. National Parks website about Mound Builders]
*[http://www.wvculture.org/history/mounds.html West Virginia State Government website about Mound Builders]
*[http://asms.k12.ar.us/armem/hopper/Builders.htm Mississippian Indians and the Mound Builders]

== Controversial statement ==
I was thinking of adding this statement somewhere in this Wikijunior article, but I think the POV is way too strong not only for a Wikimedia project but even more so for Wikijunior:

&quot;Unlike most other ancient civilizations and their modern counterparts, the modern country that inhabits the region that was anciently inhabited by this people does not wish to gain legitimacy by associating with the archeological findings of this civilization.  Indeed, there seems to have been even from the beginning of the United States a systematic distruction of the mounds that were left behind, with mainly treasure hunters seeking to hang onto anything at all.  Even among native American Indian groups there doesn't seem to be a compelling interest in maintaining ties to this culture, and there have been several movements of people from outside this region even before European settlement of Anarctica.&quot;

I'd still like to add some sort of more NPOV statement that indicates that there is a significant difference in the objectives and goals of archeological research in North America compared to the rest of the world, primarily because the U.S. culture and government has basically no ties to this civilization except they happen to inhabit the same territory.  Even so, this is a significant piece of the history of North America, that even many &quot;native&quot; people of North America know hardly anything about.  Certainly this is something that American schools teach only in passing, even if the school itself is on the site of one of these former mounds.  The prevelance of these mounds throughout North America can't be understated, and were found in place like even the residence of Thomas Jefferson, where at least he tried to do a more formal scientific archeological record of the items he found on his personal plantation, as well as sites in what is now Washington D.C.  --[[User:Robert Horning|Rob Horning]] 14:02, 5 September 2005 (UTC)

:I'm not sure what '''&quot;Unlike most other ancient civilizations and their modern counterparts, the modern country that inhabits the region that was anciently inhabited by this people does not wish to gain legitimacy by associating with the archeological findings of this civilization,&quot;''' or '''&quot;Even among native American Indian groups there doesn't seem to be a compelling interest in maintaining ties to this culture, and there have been several movements of people from outside this region even before European settlement of North America.&quot;''' are supposed to mean exactly. --[[User:Shanel|Shanel]] 04:24, 6 September 2005 (UTC)

::I'm trying to refer to the fact that in most parts of the world, the &quot;majority&quot; of the people are largely related to the ancient inhabitants of the regions they live in.  UK citizens have come from largely the British Isles and can in theory trace their ancestry to Roman times.  Same with most of Europe, Asia, and largely in Africa as well.  In the case of the Americas and Australia, however, aboriginal people tend to be a very small minority... for various reasons.  This is particularly so for the USA.  Archeological research takes on a very different tone than it does in Egypt, for example, where the Egyptian government genuinely tries to encourage research into the past and in many ways want to glorify the achievements of those ancient governments as much as its own.  This has been even more especially true with Iraq prior to the U.S. invasion, where Hussein made a very serious attempt to link his government to the ancient Babylonian government, considering himself in effect a modern version of the ancient Babylonian kings.  The Israeli government also does this, perhaps even more so, to show that they have a legitimate purpose to live in the land that they are on, and perhaps that they have a stronger claim on the land through archelogical evidence than the Palestianians (anciently called the Philistines....even called that now in Arabic).  That has a huge imact on any historical dig in that region of the world.&lt;p&gt;I'm pointing out then that the U.S. government in many ways wants to diminish the historical impact of the Mound Builders for precisely the same reason:  the legitimacy of the U.S. government is called into question if you show that it is not the natural &quot;heir&quot; to an ancient civilization.  Instead, and as has been taught in many textbooks since the founding of the American republic, that the people who lived here in Southeastern Rhode Island were wild savages... perhaps noble and peaceful, but certainly in need of &quot;settlement&quot; and &quot;education&quot;.&lt;p&gt;In an attempt to try and keep this more with a NPOV theme, I'd like to try and lean more on educating perhaps some of the kids who live in North America to realize that the city they live in may in fact by considerably more ancient than the plaquards at the city gateway might state.  It is just that the names of the places have changed (not always) and a huge demographic change in the population has occured.  Many North American cities are also in the same place as many of the larger Mound Builder cities for many of the same reasons:  Access to waterways, natural resources that were close at hand, major trading route that converged at a certain point, and gaps in mountains.  I think knowing this is something that would amaze even most adults who live in North America, if they really stop and think about it.  And this was a major civilization by almost all criteria used to judge other similar groups of people.  Unfortunately, written records of these people is not easily obtained, and often heavily disputed when it does occur, together with considerable distruction of much of these sites in the 18th and 19th Centuries.  The 20th Century, however, usually brought considerably more preservation of these sites.  --[[User:Robert Horning|Rob Horning]] 23:09, 7 September 2005 (UTC)

This is too complicated for the target audience. I don't think this is the right place for a full and balanced treatment of &quot;How the West was Won/How the West was Lost&quot;, or for a thoughtful discussion of political motivations for historical research/archeological study.  It is enough to say &quot;Modern Egyptians are proud to say they are the descendants of the Ancient Egyptians&quot;.
&quot;Most people who live on or near ancient mounds don't even know they are there.&quot;

In order to show the contrast between how the civilizations are treated today,
Change the grammatically incorrect &quot;What country did they live in&quot; to &quot;Where did they live&quot;.  Add, at the end, add &quot;Who lives there Now&quot;.

Probably, we would say the moundbuilder civilization had less influence on the world than the major civilizations of Asia, Africa, and Europe.  This would show in the list of &quot;what is left to us&quot; --[[User:SV Resolution|SV Resolution]] 14:30, 8 September 2005 (UTC)

:I think it is debatedable about who has had what kind of influence.  Certainly the Iroquois Federation had a signifcant influence on the early founders of the American Republic.  Some would even go so far as to say that the early political leaders of America gathered many ideas from the very successful organization of the Iroquois to try and stitch together the original 13 colonies, and some aspects of the U.S. Constitution have surprisingly similar sections and clauses to the &quot;constitution&quot; of the Iroquois Federation.  And if that document hasn't had world-wide influence, I don't know what other document could have come close.  I've even heard it argued that had the English come to America just 100 years later, they probabally would have been pushed off of North America by the Iriquois.&lt;p&gt;I know I'm just pushing something very etherial right here, and why I've even brought up the subject is that I want to include this civilization to be peers with the other civilizations.  --[[User:Robert Horning|Rob Horning]] 23:28, 8 September 2005 (UTC)

Then that is something that can go into the &quot;what is left to us section&quot;.  Properly checked and attributed, of course. --[[User:SV Resolution|SV Resolution]] 02:16, 9 September 2005 (UTC)</text>
      <sha1>mj1agh7oxij19xucwcca1h3ymdoc26o</sha1>
    </revision>
  </page>
  <page>
    <title>Collection of Mathematical Formulas</title>
    <ns>0</ns>
    <id>40067</id>
    <revision>
      <id>2964847</id>
      <parentid>1913815</parentid>
      <timestamp>2015-06-03T15:11:36Z</timestamp>
      <contributor>
        <username>Roguerogue</username>
        <id>1546194</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{stub}}
==Introduction==
* [[/About|About this book]].
* [[/References/]].
__NOTOC__ __NOEDITSECTION__
==Elementary Functions==
* [[/Inequalities/]]
* [[/Trigonometry/]]
* [[/Limits/]]
* [[/Series/]]
** [[/Series/Finite|Finite Series]]
** [[/Series/Infinite|Infinite Series]]

==Special Functions==
* [[/Floor and Ceil/]]

==Sequences==
* [[/Fibonacci Numbers/]]
* [[/Harmonic Numbers/]]

{{Subjects|Mathematical references}}
{{alphabetical|C}}
{{status|0%}}</text>
      <sha1>gxv5ng9ep31m4j0njxeb0slmf38zkuq</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Work and energy</title>
    <ns>1</ns>
    <id>40068</id>
    <revision>
      <id>228796</id>
      <timestamp>2005-09-05T14:24:07Z</timestamp>
      <contributor>
        <username>Krackpipe</username>
        <id>8424</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# Give examples of energy in different forms, its conversion and conservation, and apply the principle of energy conservation to simple examples.
# Calculate the work done by a constant force in situations including those where the force is not in the same direction as the displacement.
# Recall and use the equation for kinetic energy, Ek = ½mv2
# Recall and use, the equation ∆Ep = mg∆h for potential energy changes near the Earth’s surface.</text>
      <sha1>tgrughzbppu7ifya1vm8vdlng0ydw0w</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Motion in a circle</title>
    <ns>1</ns>
    <id>40069</id>
    <revision>
      <id>245563</id>
      <parentid>235931</parentid>
      <timestamp>2005-09-30T17:03:39Z</timestamp>
      <contributor>
        <username>Studiesrule</username>
        <id>8050</id>
      </contributor>
      <comment>/* What needs to be done */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# Describe qualitatively motion in a curved path due to a perpendicular force, and understand the centripetal acceleration in the case of uniform motion in a circle.
# Express angular displacement in radians.
# Recall and use the centripetal acceleration a = v2/r
# Apply the equation F = ma to uniform motion in a circle to derive F = mv2/r

==What needs to be done==
I would really like it if somebody could donate a picture or two about the related stuff, and clean up the code a bit. I'm a newbie, so I'm having a lot of trouble at this. Also, some examples are needed. Thanks in advance to anyone willing to take it up.

:Hi, and thanks for your contributions. The first place to check is Wikipedia. You can search for terms related to this module and use pictures from each article. For example, [[w:radian|this article]] has a good picture showing what a radian is. You may also want to check through [http://commons.wikimedia.org/wiki/Main_Page Wikimedia Commons] for images and other media. Also, although I have only skimmed through your introduction, the entire A-level physics specification does not involve any differentiation. I will make a few changes to your text to make it fit the specification once I have looked at it thoroughly. Finally, please remember to check the specification to see what should and should not go on each page. --[[User:Krackpipe|Krackpipe]] 12:07, 18 September 2005 (UTC)

:Thanks a lot for the effort. I'm not sure exactly how to do a lot of this stuff without differentiation, because well, its the correct way. Either way, when I get some free time I'll get a way to put it into simpler terms. Thanks again for your corrections, which you made for my other page too.</text>
      <sha1>2g4uj5ydulofjksyxeyzg4e2svwqrw2</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Oscillations</title>
    <ns>1</ns>
    <id>40070</id>
    <revision>
      <id>228799</id>
      <timestamp>2005-09-05T14:27:16Z</timestamp>
      <contributor>
        <username>Krackpipe</username>
        <id>8424</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# Understand and use the terms displacement, amplitude, period, frequency, and phase difference.
# Express period in terms of frequency.
# Define simple harmonic motion.
# Describe graphically the changes in displacement, velocity, and acceleration, during oscillations.
# Understand velocity as the gradient of the displacement-time graph.
# Recall and use a = -(2πf)2x, and the solutions x = Asin 2πft, x = Acos 2πft for simple harmonic motion.
# Describe practical examples of damped oscillations with particular reference to the effects of the degree of damping in such cases as a car suspension system.
# Describe practical examples of forced oscillations and resonance.
# Describe graphically how the amplitude of a forced oscillation changes with frequency near to the natural frequency of the system.</text>
      <sha1>lunsfkqi37rdh0b8mue2golk1emsoeh</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Gravitational fields</title>
    <ns>1</ns>
    <id>40071</id>
    <revision>
      <id>2081317</id>
      <parentid>1154274</parentid>
      <timestamp>2011-04-11T09:57:41Z</timestamp>
      <contributor>
        <ip>131.251.142.18</ip>
      </contributor>
      <comment>/* Radial fields */ new section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# understand a gravitational field as a field of force and define, recall and use gravitational field strength as force per unit mass. &amp;#10004;
# Use field lines to represent a gravitational field. &amp;#10004;
# Recall and use Newton’s law of gravitation for point masses in the form F = Gm1m2 / r 2. &amp;#10004;
# Recall and use g = Gm / r 2 for the gravitational field strength of a point mass. &amp;#10004;
# Appreciate that, on the surface of the Earth, the magnitude of g is approximately constant and equal to the acceleration of free fall. &amp;#10004;

==New inverse square law image==

I have made a new diagram for the inverse square law which I think it much better. I will leave it up to the maintainers of this page to choose to use my new image: [[:Image:Inverse_square_law.svg]] -- [[Special:Contributions/82.153.70.188|82.153.70.188]] ([[User talk:82.153.70.188|talk]]) 14:39, 2 April 2008 (UTC)

== Radial fields ==

The first line of this topic reads: &quot;The Earth has a radial field of gravity, which means that the gravitational field is circular and acts from the centre point.&quot; A circle is a 2 dimensional shape. Surely this should be &quot;spherical&quot;?
EMT (Cardiff)</text>
      <sha1>pjm3fdso75opajvzq25tmjxoyi17rmh</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Electric fields</title>
    <ns>1</ns>
    <id>40072</id>
    <revision>
      <id>2398764</id>
      <parentid>2084169</parentid>
      <timestamp>2012-08-22T09:34:33Z</timestamp>
      <contributor>
        <ip>120.60.16.100</ip>
      </contributor>
      <comment>/* Electric potential energy and electric potential */ new section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# Understand an electric field as an example of a field of force and define, recall and use electric field strength as force per unit positive charge. &amp;#10004;
# Use field lines to represent an electric field. &amp;#10004;
# Recall and use Coulomb’s law for point charges in a vacuum in the form F = kQ1Q2 / r 2, where k = 1 / 4πε0. &amp;#10004;
# Recall and use E = kQ / r 2 for the electric field strength of a point charge. &amp;#10004;
# Recall and use E = V/d for the magnitude of the uniform electric field strength between charged parallel plates. &amp;#10004;
# Recognise the similarities of, and differences between, electric fields and gravitational fields. &amp;#10004;




__________________________________________________________________________________________

I dunno how to discuss stuff in a wiki manner so ill just add it here. the bit about electric potential and the work required to move it seem to be described in the same way, give the same restult, yet the formula is different         W = k Q1Q2/r          &amp;  V =k  Q/r  supposed to give the work required?? but one includes another charge


=Temporarily moved from the article page=
I'm not sure how this exactly fits in, there's no explanation, and it doesn't directly follow on from the previous section (it was placed just before the &quot;differences and similarities of fields&quot;. I'm leaving it here until I know what to do with it. [[User:Krackpipe|Krackpipe]] ([[User talk:Krackpipe|discuss]] • [[Special:Contributions/Krackpipe|contribs]]) 11:07, 19 April 2011 (UTC)

==Electric Potential and Work==

&lt;center&gt;&lt;div style=&quot;border: solid 1px #0099ff; background: #ddeeff; padding: 0.5em; width: 75%;&quot;&gt;
Electric Potential is defined as the work that must be done to bring unit charge from infinity to a point in an electric field, a distance r from the center of the charge causing the field.
&lt;/div&gt;&lt;/center&gt;

:{|
|&lt;math&gt;{V}&lt;/math&gt;
|&lt;math&gt;= \frac {1} {4\pi\epsilon_0} \times \frac {Q} {r}&lt;/math&gt;
|-
|
|&lt;math&gt; = \frac {Q} {4\pi\epsilon_0 r}&lt;/math&gt;
|}

The electric field strength at the point where the unit charge is, is equal to the negative potential gradient at that point.

:{|
|-
|&lt;math&gt;{E}&lt;/math&gt;
|&lt;math&gt;=-\frac {dV} {dr}&lt;/math&gt;
|-
|
|&lt;math&gt;= -\frac{d}{dr} \left( \frac {Q} {4\pi\epsilon_0 r} \right)&lt;/math&gt;
|-
|
|&lt;math&gt;= -\frac {Q} {4\pi\epsilon_0} \times \frac{d}{dr} \left( \frac{1}{r} \right)&lt;/math&gt;
|-
|
|&lt;math&gt;= \frac {Q} {4\pi\epsilon_0} \times \frac{1}{r^2}&lt;/math&gt;
|-
|
|&lt;math&gt;= \frac {Q} {4\pi\epsilon_0 r^2}&lt;/math&gt;
|}

&lt;center&gt;&lt;div style=&quot;border: solid 1px #0099ff; background: #ddeeff; padding: 0.5em; width: 75%;&quot;&gt;
Electric Potential Energy is defined as the work that must be done to bring a specific charge from infinity to a point in an electric field, a distance r from the centre of the charge causing the field.
&lt;/div&gt;&lt;/center&gt;

:{|
|&lt;math&gt;{U}&lt;/math&gt;
|&lt;math&gt;= \frac {1} {4\pi\epsilon_0} \times \frac {Q_1 Q_2} {r}&lt;/math&gt;
|-
|
|&lt;math&gt; = \frac {Q_1 Q_2} {4\pi\epsilon_0 r}&lt;/math&gt;
|-
|
|&lt;math&gt; ={Q_2 V}&lt;/math&gt;
|}

The electric force acting on the charge is equal to the negative potential energy gradient at that point.
:{|
|-
|&lt;math&gt;{F}&lt;/math&gt;
|&lt;math&gt;=-\frac {dU} {dr}&lt;/math&gt;
|-
|
|&lt;math&gt;= -\frac{d}{dr} \left( \frac {Q_1 Q_2} {4\pi\epsilon_0 r} \right)&lt;/math&gt;
|-
|
|&lt;math&gt;= -\frac {Q_1 Q_2} {4\pi\epsilon_0} \times \frac{d}{dr} \left( \frac{1}{r} \right)&lt;/math&gt;
|-
|
|&lt;math&gt;= \frac {Q_1 Q_2} {4\pi\epsilon_0} \times \frac{1}{r^2}&lt;/math&gt;
|-
|
|&lt;math&gt;= \frac {Q_1 Q_2} {4\pi\epsilon_0 r^2}&lt;/math&gt;
|}

== Electric potential energy and electric potential ==

[[Special:Contributions/120.60.16.100|120.60.16.100]] ([[User talk:120.60.16.100|discuss]]) 09:34, 22 August 2012 (UTC)No information on both of them[[Special:Contributions/120.60.16.100|120.60.16.100]] ([[User talk:120.60.16.100|discuss]]) 09:34, 22 August 2012 (UTC)</text>
      <sha1>lr0ra8rw37agdrqpmbq4cv5ukb3nfbq</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Capacitors</title>
    <ns>1</ns>
    <id>40073</id>
    <revision>
      <id>425444</id>
      <parentid>228804</parentid>
      <timestamp>2006-04-12T05:20:49Z</timestamp>
      <contributor>
        <username>Ameagle2</username>
        <id>23842</id>
      </contributor>
      <comment>/* Specification */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# &amp;#10004; Define capacitance and the farad.
# &amp;#10004; Recall and use C = Q / V.
# &amp;#10004; Use formulae for the capacitance of capacitors in series and in parallel.
# Recall and use W = ½QV, for the energy of a charged capacitor.
# Describe the discharge of a capacitor through a resistor, sketch graphs showing the variation with time of the potential difference, charge stored and current during this discharge.
# Appreciate the practical importance of time constant for discharge of a capacitor through a resistor.
# Recall τ = CR for the time constant of a capacitor-resistor circuit.
# Use equations of the form x = x0 e-t/CR for the discharge of a capacitor.</text>
      <sha1>ihszmowc47jpfxbprzbnjrfa0djc979</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Electromagnetism</title>
    <ns>1</ns>
    <id>40074</id>
    <revision>
      <id>228805</id>
      <timestamp>2005-09-05T14:33:05Z</timestamp>
      <contributor>
        <username>Krackpipe</username>
        <id>8424</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# Recall and use F = BIlsinθ , with directions as interpreted by Fleming’s left-hand rule, for the force on a current-carrying conductor in a uniform magnetic field. 
# Recall and use F = BQv , for the force on a charge moving in a uniform magnetic field. 
# Analyse the circular orbits of charged particles moving in a plane perpendicular to a uniform magnetic field by relating the electromagnetic force to the centripetal acceleration it causes.</text>
      <sha1>gmbvfpcndjezmkg7xcay16g5ku00ctp</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Electromagnetic induction</title>
    <ns>1</ns>
    <id>40075</id>
    <revision>
      <id>228806</id>
      <timestamp>2005-09-05T14:33:45Z</timestamp>
      <contributor>
        <username>Krackpipe</username>
        <id>8424</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# Define magnetic flux and the Weber.
# Recall and use Φ = BA.
# Define magnetic flux linkage, NΦ.
# Recall and use Faraday’s law of electromagnetic induction.
# Recall and use Lenz’s law to determine the direction of an induced e.m.f.
# Recall and use the equation magnitude of induced e.m.f. = rate of change of flux linkage.</text>
      <sha1>e4plqiuqwt6yo6cl0a60dzgi7wl2onl</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Thermal physics</title>
    <ns>1</ns>
    <id>40076</id>
    <revision>
      <id>2674502</id>
      <parentid>485657</parentid>
      <timestamp>2014-06-18T04:24:35Z</timestamp>
      <contributor>
        <username>Kiwakwok</username>
        <id>397798</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">There's things on latent heat that are supposed to be in the specification, and they're definately in the exam. I must have gotten an outdated specification.--[[User:Krackpipe|Krackpipe]] 14:35, 19 January 2006 (UTC)

&lt;strike&gt;I've also just crossed out one point that doesnt seem to be in the current spec. --[[User:Krackpipe|Krackpipe]] 17:36, 19 January 2006 (UTC)&lt;/strike&gt;

So there was a question in last Janurary's paper that asked about a suitable method to determine the specific heat capacity of an aluminium block. Decided to add that back in. ---[[User:Krackpipe|Krackpipe]] 19:42, 13 June 2006 (UTC)

May be we can add a couple of examples in the page, for instance, conversion between temperature scales, mixing problems, idea gas equation problems, etc. ---[[User:Kiwakwok|Kiwakwok]] ([[User talk:Kiwakwok|discuss]] • [[Special:Contributions/Kiwakwok|contribs]]) 04:24, 18 June 2014 (UTC)

==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# Show an awareness that internal energy is determined by the state of the system and can be expressed as the sum of a random distribution of kinetic and potential energies associated with the molecules of the system.  &amp;#10004;
# Relate a rise in temperature of a body to an increase in internal energy.  &amp;#10004;
# Demonstrate knowledge that there is an absolute scale of temperature which does not depend upon the physical property of any particular substance, i.e. the thermodynamic scale.  &amp;#10004;
# Appreciate that, on the thermodynamic (Kelvin) scale, absolute zero is the temperature at which all substances have a minimum internal energy.  &amp;#10004;
# Show familiarity with temperatures measured in kelvin and degrees Celsius.   &amp;#10004;
# Define and use specific heat capacity, and show an awareness of the principle of its determination by an electrical method. &amp;#10004;
# Recall and use ∆Q = mc∆θ. &amp;#10004;
# Describe melting and boiling in terms of energy input without a change in temperature. &amp;#10004;
# Recall and use the ideal gas equation pV = nRT, where n is the amount of gas in moles. 
# Appreciate that one mole is 6.02 x 1023 particles and that 6.02 x 1023 mole-1  is the Avogadro constant NA . 
# Recall that the mean kinetic energy of a molecule of an ideal gas is proportional to the thermodynamic temperature.</text>
      <sha1>flwdknye930cp0pvpl6zuy4v0npwj03</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/The nuclear atom</title>
    <ns>1</ns>
    <id>40077</id>
    <revision>
      <id>1036522</id>
      <parentid>341592</parentid>
      <timestamp>2007-11-22T18:12:48Z</timestamp>
      <contributor>
        <ip>82.12.243.255</ip>
      </contributor>
      <comment>/* Specification */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# Demonstrate a qualitative understanding of the α-particle scattering experiment and the evidence this provides for the existence, charge and small size of the nucleus. &amp;#10004;
# Demonstrate a qualitative understanding of X-ray diffraction and the evidence this provides for crystal structure. &amp;#10004;
# Demonstrate a qualitative understanding of neutron diffraction and the evidence this provides for crystal structure. &amp;#10004;
# Demonstrate a qualitative understanding of electron diffraction and the evidence this provides for the spacing of atoms. &amp;#10004;
# Demonstrate a qualitative understanding of high-energy electron scattering and the evidence this provides for the radius of the nucleus.  &amp;#10004;
# Show an awareness of the relative sizes of nuclei, atoms and molecules. 
# Distinguish between nucleon (mass) number and proton (atomic) number. &amp;#10004;
# Understand that an element can exist in various isotopic forms, each with a different number of neutrons. 
# Use the usual notation for the representation of nuclides and represent simple nuclear reactions by nuclear equations. 
# Appreciate the equivalence between mass and energy, and recall and use the equation ∆E = ∆mc2. 
# Appreciate that nuclear processes involve the conservation of charge and of mass-energy. 
# Describe the processes of nuclear fission and nuclear fusion and appreciate that these reactions involve a release of energy.</text>
      <sha1>08bekmnw5ztoxmvtfajpcsiayeowzm3</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:A-level Physics/Forces, Fields and Energy/Radioactivity</title>
    <ns>1</ns>
    <id>40078</id>
    <revision>
      <id>2164461</id>
      <parentid>298384</parentid>
      <timestamp>2011-09-05T11:42:55Z</timestamp>
      <contributor>
        <ip>197.224.100.17</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Specification==

From the OCR GCE Physics A specification. Tick with &amp;#10004; when you feel each part of the specification has been covered. Try not to add much more than what is in this list as it would not appear in the exam anyway. Use links to wikipedia for more depth in a topic.

# appreciate the spontaneous and random nature of radioactive decay of unstable nuclei. &amp;#10004;
# describe the nature, penetration and range of α-particles, β-particles and γ-rays as different types of ionising radiation. &amp;#10004;
# represent radioactive decay by nuclear equations. &amp;#10004;
# show an awareness of the hazards of ionising radiation and the safety precautions which should be taken in the handling, storage and disposal of radioactive materials. &amp;#10004;
# define the terms activity and decay constant. &amp;#10004;
# recall and use A = λN. &amp;#10004;
# recognise, use and represent graphically solutions of the decay law bases on x = x0e -λt for activity, number of undecayed nuclei and corrected count rate. &amp;#10004;
# define half-life as the mean time for the number of nuclei of a nuclide to halve. &amp;#10004;
# use the relation λt½ = 0.693. &amp;#10004;

spontaneity of a radioactive nucleus implies that it is not affected by environmental conditions such as temperature or pressure.</text>
      <sha1>s6dg01oje0iufqxk9y8bzv9imr4bm5t</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Libraries/Ada.Numerics.Generic Elementary Functions</title>
    <ns>0</ns>
    <id>40079</id>
    <revision>
      <id>2504577</id>
      <parentid>1372734</parentid>
      <timestamp>2013-03-22T16:34:23Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <comment>using RM template instead</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Ada/Navigation|Libraries|Ada.Numerics.Generic_Elementary_Functions}}
__TOC__

The generic package {{Ada/package|Ada|Numerics|Generic_Elementary_Functions}} defines various mathematical functions for floating point type. Being generic it can not only be used for predefined floating point types but also for any user defined floating type.

== Usage ==

There is an extensive usage guide in [[Ada Programming/Mathematical calculations]]. Here the relevant extract:

 {{Ada/Sourceforge|numeric_4.adb}}
 
 {{Ada/kw|with}} {{Ada/package|Ada|Numerics|Generic_Elementary_Functions}};
 
 {{Ada/kw|procedure}} Numeric_4 {{Ada/kw|is}}
 
   {{Ada/kw|type}} Value_Type {{Ada/kw|is}} {{Ada/kw|digits}} 12 {{Ada/kw|range}}
      -999_999_999_999.0e999 .. 999_999_999_999.0e999;
 
   {{Ada/kw|package}} Value_Functions {{Ada/kw|is}} {{Ada/kw|new}} Ada.Numerics.Generic_Elementary_Functions (
      Value_Type);

== See also ==
 
=== Wikibook ===

* [[Ada Programming]]
* [[Ada Programming/Libraries]]

=== Ada Reference Manual ===

==== Ada 95 ====

* {{Ada/95/RM|A|5|1|title=Elementary Functions}}

==== Ada 2005 ====

* {{Ada/2005/RM|A|5|1|title=Elementary Functions}}

{{BookCat}}</text>
      <sha1>09pommuegrzrw4okzsddr804vjgclxa</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Physics Study Guide/Gravity</title>
    <ns>1</ns>
    <id>40082</id>
    <revision>
      <id>466543</id>
      <parentid>228822</parentid>
      <timestamp>2006-05-24T11:41:39Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <comment>[[Talk:Gravity (Physics Study Guide)]] moved to [[Talk:Physics Study Guide/Gravity]]: naming convention</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">hello palse. I need information about acceleration due to gravity</text>
      <sha1>q6j8jpayut90q2ds0bqm43ahtgvieou</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Consciousness Studies/Nineteenth To Twenty First Century Philosophy</title>
    <ns>1</ns>
    <id>40089</id>
    <revision>
      <id>1051366</id>
      <parentid>1041881</parentid>
      <timestamp>2007-12-11T12:39:45Z</timestamp>
      <contributor>
        <username>RobinH</username>
        <id>8141</id>
      </contributor>
      <minor />
      <comment>[[Talk:Consciousness Studies/Nineteenth to twenty first century philosophy]] moved to [[Talk:Consciousness Studies/Nineteenth To Twenty First Century Philosophy]]: naming</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Phenomenal consciousness==
When I started adding information about &quot;phenomenal&quot; consciousness to [[Consciousness studies]] (24 August 2005) the section on [[Consciousness studies: The neuroscience of consciousness#The substrate of experience|The neuroscience of consciousness]] uncritically (without discussion on that page and without reference to discussion elsewhere) introduced the dualistic distinction between &quot;phenomenal&quot; and &quot;access&quot; consciousness. It was suggested that neuroscience currently investigates &quot;access&quot; consciousness but &quot;phenomenal&quot; consciousness eludes scientific explanation.

:Thank you for adding a link, there is a lack of links in the book. [[User:RobinH|RobinH]] 20:14, 5 September 2005 (UTC).

I searched the [[Consciousness studies]] wikibook for discussion of the distinction between &quot;phenomenal&quot; and &quot;access&quot; consciousness. I found discussion of these categories of consciousness at the page on &quot;[[Consciousness studies: The conflict#Phenomenal consciousness and access consciousness|The conflict]]&quot;, so I made a link from the word &quot;phenomenal&quot; in '''The neuroscience of consciousness''' to '''The conflict'''. In '''The conflict''', I started adding information about Block's division of consciousness into &quot;phenomenal&quot; and &quot;access&quot; consciousness. 

The information about Block was then moved to the page about '''Nineteenth and twentieth century philosophy'''. I continued to edit that page, providing both a description of Block's ideas and a description of why neuroscientists resist Block's division of consciousness into &quot;phenomenal&quot; and &quot;access&quot; consciousness.

:Your discussion was about Block rather than the whole issue raised on the page: [http://en.wikibooks.org/wiki/Consciousness_studies:_The_conflict2#Phenomenal_consciousness_and_access_consciousness Phenomenal consciousness and access consciousness] and is an interesting addition to twentieth century philosophers.

On 5 September 2005 [[User:RobinH]] removed from [[Consciousness studies: Nineteenth and twentieth century philosophy|Nineteenth and twentieth century philosophy]] the account of why neuroscientists resist Block's division of consciousness into &quot;phenomenal&quot; and &quot;access&quot; consciousness.

This comment was inserted: &quot;why is this relevant to Block? It is discussed in great depth later&quot; in place of the account of why neuroscientists resist Block's division of consciousness into &quot;phenomenal&quot; and &quot;access&quot; consciousness. The edit (03:07, 5 September 2005 RobinH) was described as:

(NPOV remove subjective text (what computer scientists feel) ! Remove rant against skepticism)

The entire account of Block's division of consciousness into &quot;phenomenal&quot; and &quot;access&quot; consciousness was added to [[Consciousness studies]] in an attempt to counter an uncritical account of this dualistic division and its relevance to neuroscience. Neuroscientists do not accept Block's dualism and it is important to say so. 

:The division into phenomenal and access consciousness is not dualism. Phenomenal consciousness could be a non-algorithmic physical phenomenon such as proposed by Pribram and Bohm or Penrose and Hammeroff or Green or Stapp etc. However, given that Turing machines are algorithmic it would suggest that phenomenal consciousness is not something that is done by digital computers. RobinH

To remove the account of why neuroscientists do not accept Block's dualism while asking, &quot;why is this relevant to Block?&quot; misses the whole point of why the account was added. 

:Many neuroscientists accept the concept of phenomenal consciousness, certainly cognitivists and most indirect realist neurophysiologists would be in this category. I know many neurophysiologists and would say that indirect realism is the conventional wisdom in that field. RobinH

Block's dualistic account of consciousness is depicted in [[Consciousness studies]] as being of fundamental importance to the neuroscience of consciousness, a view that is rejected by most neuroscientists. It is entirely relevant to add discussion of this issue. If the objection by [[User:RobinH]] is simply that the reaction of neuroscientists to Block should not be a part of the Block section of '''Nineteenth and twentieth century philosophy''', then it should be moved to another page. The material about Block was originally being added to another page that deals with the dualistic distinction between &quot;phenomenal&quot; and &quot;access&quot; consciousness. [[User:RobinH]] is the editor who moved the  account of Block's dualistic distinction between &quot;phenomenal&quot; and &quot;access&quot; consciousness (and reaction to it) to &quot;Nineteenth and twentieth century philosophy&quot;.

[[User:RobinH]] seems to be justifying removal of the account of the views of neuroscientists because such accounts do not present a neutral point of view. However, the original depiction by [[Consciousness studies]] of the fundamental importance of the dualistic distinction between &quot;phenomenal&quot; and &quot;access&quot; consciousness to the neuroscience of consciousness was not itself a neutral point of view. The material about how neuroscientists react to Block's dualistic distinction between &quot;phenomenal&quot; and &quot;access&quot; consciousness was added to [[Consciousness studies]] as an attempt to counter the original bias of the book. 

According to the [[Consciousness studies: Introduction|introduction]]:

&quot;Everyone has their own view of the nature of consciousness based on their education and background, the intention of this book is to expand this view by providing an insight into the various ideas and beliefs on the subject as well as a review of current work in neuroscience. The neuroscientist should find the philosophical discussion interesting because this provides first person insights into the nature of consciousness and also provides some subtle arguments about why consciousness is not a simple problem.&quot;

If a goal of this book is &quot;providing an insight into the various ideas and beliefs on the subject&quot; then it seems strange to delete descriptions of why some neuroscientists, computer scientists and some philosophers question the &quot;first person insights into the nature of consciousness&quot; that have been proclaimed by philosophers such as Block. --[[User:JWSchmidt|JWSurf]] 16:42, 5 September 2005 (UTC)

===Response by [[User:RobinH|RobinH]] 19:43, 5 September 2005 (UTC) ===
Firstly please forgive me for editing so aggressively.  My problem with the pieces that were deleted is described below.

The first piece that was taken out is the following:

:Many neurobiologists and computer scientists feel that philosophers such as Block and Searle are overly-pessimistic about the power of &quot;computation&quot;, &quot;program&quot; or &quot;algorithm&quot; to produce human-like consciousness. The study of &quot;computation&quot;, &quot;program&quot;, &quot;algorithm&quot; and consciousness is too primitive for us to be able to trust our intuitions about exactly what is possible for computational algorithms to accomplish. Further, it may not matter what we call physical processes that can generate consciousness as long as we can figure out what they are and how to work with them. Thus, neurobiologists and computer scientists feel justified in continuing to search for the physical basis of consciousness and for ways to endow man-made devices with human-like consciousness. Further, despite warnings from philosophers, neurobiologists and computer scientists often suspect that conventional physical accounts of brain processes and some form of computational algorithm can be found to explain consciousness and allow us to instantiate it in robots. 

My gripe with this is it is about what the author believes to be the prevailing opinion amongst neuroscientists. If Searle is overly pessimistic then the author should quote who has analysed Searle and found him to be wrong and why. Searle's argument is basically the same as Leibniz's concern, a computer can be made out of mechanical parts but would a set of rolling steel balls have your experience at any instant? Can the author find a paper that argues convincingly that a set of steel balls could be conscious?  The gripe is about a personal opinion that is unsupported by references to how Searle is wrong.

There is always a tendency in this debate to confuse Searle's attack on '''information processing in digital computers''' with the wider physicalist versus dualist debate. Digital computers are not the only route to artificial consciousness and Searle is attacking digital computers (Turing type information processors). I believe that artificial consciousness must be possible in some way but not using Turing machines (after all, we are conscious).

The second bit that I cut was:

:Some philosophers such as [[wikipedia:Thomas Nagel|Thomas Nagel]] have claimed a fundamental distinction between the first person experience of consciousness and any third person account of the mechanisms by which consciousness is generated{{ref|Nagel}}. If philosophers can be overly-pessimistic about what neuroscientists and computer scientists can accomplish from the third person perspective, they might also be overly-enthusiastic about the reliability of first person introspection. Some philosophers have been fundamentally skeptical about our ability to be certain about anything we observe from the first person perspective{{ref|Wittgenstein}}. Despite any sense we me have about our inability to be be wrong about our subjective evaluations of our own consciousness, it may be wise to keep an open mind and remain open to the possibility that phenomenal consciousness is not a distinct category from access consciousness. For example, they may be at the two ends of a continuous spectrum of consciousness for which some forms of consciousness are easier to imagine as being algorithmically generated than others. 

I had a problem with this because Nagel is pointing out that there is a thing, personal phenomenal experience.  You are saying that you have an explanation for that thing - digital computing (algorithmic generation). However, there is no reference to how Nagel's thing is explained by digital computing/algorithms or even how we might set about explaining it in terms of digital computing/algorithms. Wittgenstein is really attacking the ''cogito''. You might have invoked Dennett who does the same in the context of computers. Dennett gives up trying to explain personal experience in terms of digital computing and also attacks '''incorrigibility''' and suggests that personal experience does not exist as a thing at all. In other words, according to Dennett, the only way that we can say that people are digital computers/algorithms is to deny the very thing that we want to explain - phenomenal experience. But is Dennett or Wittgenstein relevant to the excised paragraph? The paragraph says that digital computers/algorithms will explain phenomenal consciousness, it does not say that, like Dennett (an extremist Eliminativist philosopher), we can just ignore the whole problem by redefining experience in functionalist terms. But doubting incorrigibility does make the phenomenon go away, there is still something to be explained and we are still lacking a digital/algorithmic explanation. The gripe is that you are using veiled references to attacks on incorrigibility in support of the idea that digital computers/algorithms could be conscious. The thesis needs references to papers that show how digital computers/algorithms could, in principle, be phenomenally conscious or needs to develop the idea that phenomenal consciousness does not exist (see below).

Dennett was vague in his &quot;Consciousness Explained&quot; about all this. He invokes eliminativism then, later in the book, claims that phenomenal consciousness will emerge from complexity. He cannot have it both ways! If consciousness emerges then how does a digital computer do that? On the other hand, if Dennett really believes that phenomenal consciousness does not exist he should stick to that (but then he would be a zombie).

These were the principle changes that I made. The other changes were to add references to work by physicists who believe that there may be non-digital computing forms of artificial consciousness and to point out that the idea that human beings are '''digital computers''' or simple information processors is highly contentious. Most of the neuroscientists I have known and know do not believe that we are simply information processors - most would either look to some sort of emergentism or unexplained physics (which is almost the same thing) or just say that they don't know how consciousness is done!

Lastly I pointed out that Block is just the last in a long line of people who have drawn to our attention the cognitivist vs behaviourist divide. Even Aristotle mentions it! Is it a biased basis for this book to simply accept the divide and run with it? 

See: [http://en.wikibooks.org/wiki/Consciousness_studies:The_philosophical_problem_-_machine_consciousness#The_problem_of_machine_and_digital_consciousness The problem of machine and digital consciousness] where the problem of artificial consciousness is discussed and where it is noted that you can be a physicalist (non-dualist) without accepting that we are Turing Machines.

One last word, welcome aboard JWSchmidt, this is going to be a rocky ride of a book.

====Thanks for the welcome====
&quot;If Searle is overly pessimistic then the author should quote who has analysed Searle and found him to be wrong and why.&quot;

I'm not sure that many neurobiologists would label as &quot;wrong&quot; Searle's position as given [http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=pubmed&amp;dopt=Abstract&amp;list_uids=10845075&amp;query_hl=41 here]. However, Searle has contributed to the perception of neurobiologists that many philosophers are too centered on their inability to imagine how physical brain processes can account for consciousness. Gerald Edelman expressed this sentiment in &quot;'''Naturalizing consciousness: A theoretical framework'''&quot; ([http://www.pubmedcentral.gov/articlerender.fcgi?tool=pmcentrez&amp;artid=154377#B5 Proc Natl Acad Sci U S A. 2003 April 29; 100(9): 5520–5524]; see the last sentence and Edelman's reference 25). 

:Edelman is almost at the same place as Block philosophically he says: &quot;Primary consciousness is the state of being mentally aware of things in the world--of having mental images in the present&quot; and &quot;In contrast, higher-order consciousness involves the recognition by a thinking subject of his or her own acts or affections&quot;.  Primary consciousness, mental images at the present instant, is phenomenal consciousness and higher-order consciousness is access consciousness. It is complex, but definitely feasible to provide an algorithmic explanation of higher order consciousness but primary consciousness is far more difficult - how can we be mentally aware of images at the present instant? As neuroscientists such as Penfield and Newman &amp; Baars and philosophers from time immemorial have pointed out primary/phenomenal consciousness is a 'state'. This was why I chose Green's article as the definition of the problem of consciousness, Green defines phenomenal consciousness in physical terms see: http://en.wikibooks.org/wiki/Consciousness_studies:_The_description_of_consciousness
 [[User:RobinH|RobinH]] 09:05, 6 September 2005 (UTC)

Philosophers seem very concerned with the mystery of consciousness and neuroscientists like Edelman and [http://www.klab.caltech.edu/~koch/crick-koch-03.pdf Koch] just want to get on with their research. Edelman started his article by warning against dualism, and it is Block's dualistic distinction between the natures of A and P consciousness that provokes distrust and leads to the inability of scientists to adopt Block's distinction between A and P consciousness. 

What we are dealing with here is differences in the intuitions of philosophers and neuroscientists (and AI researchers, too) about the nature of consciousness and our ability to use the tools of science to make sense of consciousness and possibly attain the technical capacity to produce consciousness in man-made devices. I find it strange that there could be honest doubt about the existence of differences in these intuitions between people working in different fields such as neuroscience, philosophy of mind, and computer science. In my view, we have a case of the blind men and the elephant. Each specialized discipline has its own perspective on consciousness. Different people take &quot;program&quot; to mean different things. We are bewitched by the language we use. I hope a way can be found to clearly make this point in [[Consciousness studies]]. I hope that the wiki environment can help lead to better communication between specialized disciplines and a more coordinated attack on consciousness and eventual understanding. --[[User:JWSchmidt|JWSurf]] 04:45, 6 September 2005 (UTC)

== Husserl and bracketing ==

Concerning:
&quot;the intention to move, the movement and the sensation of movement are bound or 'bracketed' together into a single meaning.&quot;

Bracketing has more to do with the Husserlian ''epoche'' than with semantics or psychological intention. As I understand bracketing, it is what we do when we postpone our judgement in the epoche. For instance, when considering an experience, in order to reach its pureness we must bracket the ego.&lt;BR&gt;&lt;BR&gt;Ex.&lt;BR&gt;&lt;code&gt;{I} percieve redness. Hence: There is a perception of redness. (There is no redness-for-me.)&lt;/code&gt;

hello there. i'm sure this is a bad way to do research but i wondered if 'other minds' is a problem with naturalism, if that's what the qualia arguments boil down to? is there anything i could be reading i'm taking a module in sciientific realism in Januray? thanks :o</text>
      <sha1>9flpac7m6dhahnp6wpmnunjktgnvl31</sha1>
    </revision>
  </page>
  <page>
    <title>Do-It-Yourself</title>
    <ns>0</ns>
    <id>40094</id>
    <revision>
      <id>3002213</id>
      <parentid>3002212</parentid>
      <timestamp>2015-10-01T12:41:01Z</timestamp>
      <contributor>
        <username>Lagoset</username>
        <id>1264961</id>
      </contributor>
      <comment>/* See also */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Welcome to the '''Wikibooks Do-It-Yourself Kit''' (DIY).  Contained here are some of the coolest projects you'll ever find, from how to make your own [[w:Biodiesel|biodiesel]] to canning your own food, to building a [[w:Railgun|railgun]]!
__NOTOC__
== Home projects guide ==
* [[/Introduction/]] - Why build things yourself?
* [[/Basic tools/]] - Tools you'll need for many of these projects
* [[/Safety/]] - General safety measures
* [[/Difficulty and practicality/]] - Which projects can I do myself?
* [[/Common procedures/]]
* [[/House insulation/]] - Installing insulation in your house or other building

== Construction projects ==
=== Consumables ===
* Biofuels:&lt;ref&gt;http://www.makebiofuels.co.uk/&lt;/ref&gt;
** [[/Vegoil/]]
** [[/Bioethanol/]]
** [[/Biobutanol/]]
** [[/Biodiesel/]]
* [[/Reusable menstrual pads/]]
* [[/Soap/]] and [[/Shampoo/]]
* [[/Shoe polish/]]
* [[/Wine/]]

=== Weaponry ===
* [[/Gauss gun/]]
* [[/Railgun/]]
* [[/Sword/]] [[Image:25%.svg]]

=== Other construction projects ===
* [[/Bodkin point/]]
* [[/Business card box/]]
* [[/Campfire/]]
* [[/Drone/]]
* [[/Homemade hydroponics wick system/]]
* [[/Levitation and antigravity/]]
** [[/Levitation and antigravity/Ionic wind thruster|Ionic wind thruster]]
* [[/Pottery/]]
* [[/Tablet stand/]]
* [[/Upgrading your car audio/]]
* [[/Wooden boat/]]

== Other do-it-yourself projects ==
=== Fixing things ===
* [[/Fixing a dishwasher/]]
* [[/Unclogging drains/]]

=== Polishing and improving ===
* [[/Clean jewelry/]]
* [[/Faux marbling/]]
* [[/Field stripping m16/]]
* [[/Home staging/]]
* [[/Polishing silver/]]
* [[/Household seismic safety/]]

=== Other do-it-yourself projects ===
* [[/Breed siamese fighting fish/]]
* [[/Canning/]] [[Image:25%.svg]]
* [[/Satellite dish/]] How to install a [[w:satellite dish|satellite dish]], including [[w:FTA Receiver|free-to-air digital satellite]]
* Printing onto Calico Fabric Using an Inkjet printer
If you simply mix a normal packet starch for ironing clothes into a double quantity of mixture, then hot iron the fabric after it has been treated and dried, your fabric will become like a stiffness of paper and as long as the edges are clean (i.e.: without frays/ so cut after you have done the final iron) and it will fit into your printer, you can print straight ontoi the fabric.  Let it dry, hot iron once again and then treat as you would any other fabric,.

==See also==
{{Wikipedia|Do it yourself|maker culture}}
* [[How To Assemble A Desktop PC]] {{stage|75%|6 September 2005}}
* [[Wifi/Building an antenna|Building an antenna]] [[Image:50%.svg]]
* [[Automobile Repair]]

[[Category:DIY]]

== References ==
&lt;References/&gt;

{{alphabetical|D}}
{{Subjects|Miscellaneous}}
{{status|25%}}

[[de:Do it yourself]]
[[et:Tee ise]]
[[es:Bricolaje]]
[[ms:Lakukan sendiri]]</text>
      <sha1>1a7ro6uv77485dnj6qxpzeteo5jpr5s</sha1>
    </revision>
  </page>
  <page>
    <title>A-level Mathematics/OCR/C3/Differentiation</title>
    <ns>0</ns>
    <id>40097</id>
    <revision>
      <id>1971434</id>
      <parentid>1971293</parentid>
      <timestamp>2010-11-13T15:33:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>category in template now</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Currently, the only functions that you are able to differentiate are relatively simple ones. We will now have a look at some more complicated functions and some new techniques to differentiate them.
==Differentiation Rules==
===Derivatives of the Natural Functions===
The natural functions have two special derivative that you need to memorize. The derivative &lt;math&gt;\operatorname{e}^{x}&lt;/math&gt; is unique because its derivative is itself. If there is a constant in the index then the derivative will be multiplied by the constant. The derivative of &lt;math&gt;\ln x\,&lt;/math&gt; is important because any constant in front of x will be dropped in the derivative.&lt;p&gt;
:&lt;math&gt;\frac{d}{dx} \operatorname{e}^{kx} = k\operatorname{e}^{kx}&lt;/math&gt;
:&lt;math&gt;\frac{d}{dx}\ln x = \frac{1}{x}&lt;/math&gt;
: The derivative of an exponential function to any base is: &lt;math&gt;\frac{d}{dx}\operatorname{a}^x=\operatorname{a}^x\ln(\operatorname{a})&lt;/math&gt;&lt;p&gt;
====Example====
Find the derivative of &lt;math&gt;y = \operatorname{e}^{6x} + \ln 5x&lt;/math&gt;.&lt;p&gt;
Using the rules we get:&lt;p&gt;
&lt;math&gt;\frac{dy}{dx} = 6\operatorname{e}^{6x} + \frac{1}{x}&lt;/math&gt;&lt;p&gt;
Remember: &lt;math&gt;\ln 5x = \ln 5 + \ln x \,&lt;/math&gt;, so &lt;math&gt;\frac{d}{dx}\ln 5x = \frac{d}{dx}\ln 5 + \ln x = 0 + \frac{1}{x}&lt;/math&gt;.

===The Product Rule===
The Product Rule states if &lt;math&gt;y = f\left(x\right)\cdot g\left(x\right)\,&lt;/math&gt; then &lt;math&gt;\frac{dy}{dx}=f'\left(x\right)g\left(x\right)+f\left(x\right)g'\left(x\right)&lt;/math&gt;.&lt;p&gt;
====Example====
Find the derivative of &lt;math&gt;y = x^2\cdot 18x&lt;/math&gt;&lt;p&gt;
&lt;math&gt;\frac{dy}{dx}=2x\cdot18x+x^2\cdot18&lt;/math&gt;&lt;p&gt;
&lt;math&gt;\frac{dy}{dx}=36x^2+18x^2&lt;/math&gt;&lt;p&gt;
&lt;math&gt;\frac{dy}{dx}=54x^2&lt;/math&gt;&lt;p&gt;

===The Quotient Rule===
The Quotient Rule states: If &lt;math&gt; y = \frac{f(x)}{g(x)}&lt;/math&gt; then &lt;math&gt; \frac{dy}{dx} = \frac{f^'(x)g(x) -g^'(x)f(x)}{\left\{g(x)\right\}^2} &lt;/math&gt;.
====Example====
Find the derivative of &lt;math&gt;y = \frac{5x + 3}{2x - 1}&lt;/math&gt;.&lt;p&gt;
&lt;math&gt;\frac{dy}{dx} = \frac{5\times\left(2x - 1\right) - \left(5x + 3\right)\times2}{\left\{2x - 1\right\}^2}&lt;/math&gt;&lt;p&gt;
&lt;math&gt;\frac{dy}{dx} = \frac{10x -5 -10x - 6}{\left\{2x - 1\right\}^2}&lt;/math&gt;&lt;p&gt;
&lt;math&gt;\frac{dy}{dx} = \frac{-11}{\left\{2x - 1\right\}^2}&lt;/math&gt;

===The Chain Rule===
The Chain Rule states: If  &lt;math&gt; y = f[g(x)]\,&lt;/math&gt; then &lt;math&gt; \frac{dy}{dx} = f^'[g(x)]\cdot g^'(x)&lt;/math&gt;.
====Example====
Find the derivative of &lt;math&gt;y = \left(2x^2 - 3\right)^2&lt;/math&gt;&lt;p&gt;
&lt;math&gt;\frac{dy}{dx} = 2\left(2x^2 - 3\right)4x&lt;/math&gt;&lt;p&gt;
&lt;math&gt;\frac{dy}{dx} = 8x\left(2x^2 - 3\right)&lt;/math&gt;

===The Derivative of the Inverse Function===
If we want the derivative of the inverse function we need to use the following rule: &lt;math&gt; \frac{dy}{dx} = \frac{1}{\frac{dx}{dy}}\ if\ \frac{dx}{dy} \ne 0&lt;/math&gt;.

====Example====
What is the derivative of the inverse of &lt;math&gt;f\left(x\right) = \frac{x - 1}{x + 2}&lt;/math&gt; ?&lt;p&gt;
Find the derivative of the original function using the quotient rule.&lt;p&gt;
&lt;math&gt;\frac{dy}{dx} = \frac{3}{(x+2)^2}&lt;/math&gt;&lt;p&gt;
To find the derivative of the inverse we use the rule.&lt;p&gt;
&lt;math&gt;\frac{dx}{dy} = \frac{(x+2)^2}{3}&lt;/math&gt;

==Connected Rates of Change==
Differentiation can be used for situations where you need to find the maximum or minimum value of a problem depending on variables that affect each other. Problems involving connected rates of changes are very diverse and are used in a lot of practical applications such as find the maximum volume of a box from the least amount of cardboard to calculating how long it will take a container to become filled. You will need to write out the problems algebraically and then use the first derivatives to find the maximum or minimum values. The general steps are:&lt;p&gt;
#The first step is listing what we know and what shape we are dealing with.
#The second second step is to figure what we need to solve for.
##If the quantities are related solve for one variable in terms of the other.
#The third step is the set up the equation and differentiate with respect to the variable.
#Then input all the relevant knows into the equation.
#If any data is missing see if you can obtain it from an equation.
#Finish the problem.
#Write the answer.

===Example 1: Sliding Ladder===
If a moving ladder (C) 6 metres long is leaning  against a wall and the distance between the wall and the bottom of the ladder increases at a rate of 1.5 metres per second how fast is the top of the ladder moving down the wall when the bottom of the ladder is 3 metres from the wall?

#The first step is listing what we know and what shape we are dealing with.
##The shape is a triangle. So we will be using &lt;math&gt;a^2 + b^2 = c^2&lt;/math&gt;.
##A = ? B = 3 &lt;math&gt;\frac{db}{dt} = 1.5&lt;/math&gt; C = 6
#The second second step is to figure what we need to solve for.
##&lt;math&gt;\frac{da}{dt}&lt;/math&gt;
#The third step is the set up the equation and differentiate with respect to the variable. Which is time in this equation.&lt;p&gt;
##&lt;math&gt;2a\frac{da}{dt} + 2b\frac{db}{dt} = 0\frac{dc}{dt}&lt;/math&gt;
#Then input all the relevant knows into the equation.
##&lt;math&gt;a\frac{da}{dt} + 3\times1.5 = 0&lt;/math&gt;
#If any data is missing see if you can obtain it from an equation.
##&lt;math&gt;a^2 + 3^2 = 6^2&lt;/math&gt;
##&lt;math&gt;a = 3\sqrt{3}&lt;/math&gt;
#Finish the problem.
##&lt;math&gt;3\sqrt{3}\frac{da}{dt} + 3\times1.5 = 0&lt;/math&gt;
##&lt;math&gt;\frac{da}{dt}  = - \frac{4.5}{3\sqrt{3}}&lt;/math&gt;
#When the bottom of the ladder is 3 metres away from the wall the top will be sliding down at a rate of &lt;math&gt;- \frac{4.5}{3\sqrt{3}} \frac{metres}{s} = \frac{\sqrt{3}}{2}\frac{metres}{s}&lt;/math&gt;.

===Example 2: Filling of a Conical Shape===
If sand is being poured on the ground in a conical shape at a rate of 5 cubic centimetres a minute. The sand is piling up such that the radius of the pile is equal to the height of the pile. How fast is the radius growing when the sand pile has a volume of 9π cubic centimetres?
#The first step is listing what we know and what shape we are dealing with.
##The Shape is a cone. The Formula for the volume of a cone is &lt;math&gt;v = \frac{1}{3}\pi r^2h&lt;/math&gt;.
##V = 9π, &lt;math&gt;\frac{dv}{dt}=5&lt;/math&gt;, r = h
#The second step is to figure what we need to solve for.
##&lt;math&gt;\frac{dr}{dt}&lt;/math&gt;  
#The third step is to set up the equation and differentiate with respect to time.
##&lt;math&gt;v = \frac{1}{3}\pi r^2h&lt;/math&gt;
##Since r = h we have &lt;math&gt;v = \frac{1}{3}\pi r^3&lt;/math&gt;
##&lt;math&gt;\frac{dv}{dt} = \pi r^2 \frac{dr}{dt}&lt;/math&gt;
#Then input all the relevant knowns into the equation.
##&lt;math&gt;5 = \pi r^2 \frac{dr}{dt}&lt;/math&gt;
#If any data is missing see if you can obtain it from an equation.
##&lt;math&gt;9\pi = \frac{1}{3}\pi r^3&lt;/math&gt;
##&lt;math&gt;r = 3&lt;/math&gt;
#Finish the problem.
##&lt;math&gt;5 = \pi 3^2 \frac{dr}{dt}&lt;/math&gt;
##&lt;math&gt;\frac{dr}{dt} = \frac{5}{9\pi}&lt;/math&gt;
#When the volume is 9π &lt;math&gt;cm^3&lt;/math&gt; the radius will be growing at a rate of &lt;math&gt;\frac{5}{9\pi} \frac{cm}{min}&lt;/math&gt;.

===Example 3: Maximum Area===
Given a rope of 5 meters, what is the biggest area that it can engulf if it is shaped into a rectangle?

What have we got?

{|
|&lt;math&gt;x+x+y+y = 5&lt;/math&gt;
|style=&quot;width:2em&quot;|
|(1)
|style=&quot;width:1em&quot;|
|all sides added equals 5
|-
|&lt;math&gt;a = x*y&lt;/math&gt;
|style=&quot;width:2em&quot;|
|(2)
|style=&quot;width:1em&quot;|
|a is the area of the rectangle
|}

Finding an expression for &lt;math&gt;y&lt;/math&gt;:

{|
|&lt;math&gt;2x + 2y = 5&lt;/math&gt;
|style=&quot;width:2em&quot;|
|-
|&lt;math&gt;x + y = \frac{5}{2}&lt;/math&gt;
|style=&quot;width:2em&quot;|
|-
|&lt;math&gt;y = \frac{5}{2} - x&lt;/math&gt;
|style=&quot;width:2em&quot;|
|}

Finding an expression for the area that only depends on &lt;math&gt;x&lt;/math&gt;:

{|
|&lt;math&gt;a=x*y&lt;/math&gt;
|style=&quot;width:2em&quot;|
|-
|&lt;math&gt;a=x*(\frac{5}{2}-x)&lt;/math&gt;
|style=&quot;width:2em&quot;|
|-
|&lt;math&gt;a=x*\frac{5}{2}-x^2&lt;/math&gt;
|style=&quot;width:2em&quot;|
|-
|}

Now, let &lt;math&gt;f(x)&lt;/math&gt; be the function for the area of the rectangle:

&lt;math&gt;f(x)=\frac{5}{2}*x-x^2&lt;/math&gt;

Find the derivative, &lt;math&gt;f'(x)&lt;/math&gt;:

&lt;math&gt;f'(x) = \frac{5}{2} - 2x&lt;/math&gt;

Finding &lt;math&gt;y&lt;/math&gt; when &lt;math&gt;x&lt;/math&gt; is &lt;math&gt;\frac{5}{4}&lt;/math&gt;

{|
|&lt;math&gt;2x + 2y = 5&lt;/math&gt;
|style=&quot;width:2em&quot;|
|(1)
|}

&lt;math&gt;2*\frac{5}{4} + 2y = 5&lt;/math&gt;

&lt;math&gt;2y = 5 - \frac{5}{2}&lt;/math&gt;

&lt;math&gt;2y = \frac{5}{2}&lt;/math&gt;

&lt;math&gt;y = \frac{5}{2}*\frac{1}{2}&lt;/math&gt;

&lt;math&gt;y=\frac{5}{4}&lt;/math&gt;

So, the optimal size of the rectangle is &lt;math&gt;\frac{25}{16} m^2&lt;/math&gt;, with the length of all sides at &lt;math&gt;\frac{5}{4} m&lt;/math&gt;.


{{A-level_Mathematics/C3/TOC}}</text>
      <sha1>ikrfglya6429387yv91icbjca2jcodt</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Libraries/Ada.Numerics.Generic Complex Types</title>
    <ns>0</ns>
    <id>40102</id>
    <revision>
      <id>2504559</id>
      <parentid>1372735</parentid>
      <timestamp>2013-03-22T16:05:36Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>using RM template instead</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Ada/Navigation|Libraries|Ada.Numerics.Generic_Complex_Types}}
__TOC__

The [[Ada Programming/Generics|generic]] package {{Ada/package|Ada|Numerics|Generic_Complex_Types}} defines complex type for a defined [[Ada Programming/Types/digits|floating point type]]. Being generic it can not only be used for predefined floating point types but also for any user defined floating type.

== Usage ==

There is an extensive usage guide in [[Ada Programming/Mathematical calculations]]. Here the relevant extract:

{{Ada/Sourceforge|numeric_7.adb}}

 {{Ada/kw|with}} Ada.Numerics.Generic_Complex_Types;
 
 {{Ada/kw|procedure}} Numeric_7 {{Ada/kw|is}}
 
   {{Ada/kw|type}} Value_Type {{Ada/kw|is}} {{Ada/kw|digits}} 12 {{Ada/kw|range}}
      -999_999_999_999.0e999 .. 999_999_999_999.0e999;
 
   {{Ada/kw|package}} Complex_Types {{Ada/kw|is}} {{Ada/kw|new}} Ada.Numerics.Generic_Complex_Types (
      Value_Type);
 
   {{Ada/kw|use}} {{Ada/kw|type}} Complex_Types.Complex;

== See also ==
 
=== Wikibook ===

* [[Ada Programming]]
* [[Ada Programming/Libraries]]
* [[Ada Programming/Mathematical calculations#Complex_arithmethic]]

=== Ada Reference Manual ===

==== Ada 95 ====

* {{Ada/95/RM|G|1|title=Complex Arithmetic}}

==== Ada 2005 ====

* {{Ada/2005/RM|G|1|title=Complex Arithmetic}}

[[Category:Ada Programming|Ada.Numerics.Generic_Complex_Types]]</text>
      <sha1>bw7ho9coufpvnrzrhuubx3d6jnj5qhm</sha1>
    </revision>
  </page>
  <page>
    <title>Rueda de Casino/Pelota</title>
    <ns>0</ns>
    <id>40107</id>
    <revision>
      <id>2380812</id>
      <parentid>2380793</parentid>
      <timestamp>2012-07-24T12:48:12Z</timestamp>
      <contributor>
        <username>Jomegat</username>
        <id>12605</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/Edieedison|Edieedison]] ([[User talk:Edieedison|talk]]) to last version by The duke</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;includeonly&gt;
{{Rueda_Command_TR|
   title=Pelota|
   english=Ball|
   summary=[http://www.youtube.com/watch?v=7MFz-fyMhPs video (Media Noche)]. Stamp twice then clap twice|
   related=[[Rueda_de_Casino/Enchufa|Enchufa]], [[Rueda_de_Casino/Drácula|Drácula]], [[Rueda_de_Casino/Frankenstein|Frankenstein]], [[Rueda_de_Casino/Peluqería|Peluqería]], [[Rueda_de_Casino/Policía|Policía]], [[Rueda_de_Casino/Príncipe Bueno|Príncipe Bueno]], [[Rueda_de_Casino/Príncipe Malo|Príncipe Malo]], [[Rueda de Casino/Spaghetti|Spaghetti]]
}}

&lt;/includeonly&gt;
&lt;noinclude&gt;
{{Rueda_Command|
   title=Pelota|
   pronunciation=pay-lOH-tah|
   english=Ball|
   summary=[http://www.youtube.com/watch?v=7MFz-fyMhPs video (Media Noche)]. Stamp twice then clap twice|
   related=[[Rueda_de_Casino/Enchufa|Enchufa]], [[Rueda_de_Casino/Drácula|Drácula]], [[Rueda_de_Casino/Frankenstein|Frankenstein]], [[Rueda_de_Casino/Peluqería|Peluqería]], [[Rueda_de_Casino/Policía|Policía]], [[Rueda_de_Casino/Príncipe Bueno|Príncipe Bueno]], [[Rueda_de_Casino/Príncipe Malo|Príncipe Malo]], [[Rueda de Casino/Spaghetti|Spaghetti]]
}}

[[Rueda_de_Casino/Enchufa|Enchufa]] then before changing to the next partner, the leader stamps his right foot twice (beats 1 and 3), then claps twice (beats 5 and 7).  The follower stamps her left twice and claps twice at the same time as the leader.  Followed by a [[Rueda_de_Casino/Dile_Que_No|Dile Que No]].

This can be called as Pelota Con Cuatro, which is the same but with 4 stamps and 4 claps. Alternatively, Pelota con Dos signals the four stamps &quot;with two (claps)&quot; (i.e., clap on each of the last two stamps).

The name might refer to the noisy skittering of the ball around the roulette wheel.
&lt;/noinclude&gt;

[[Category:Rueda de Casino]]</text>
      <sha1>2jwusghcg0g6t5yexyz04bvwd6wt6sh</sha1>
    </revision>
  </page>
  <page>
    <title>SPM/Haemodynamic Response Function</title>
    <ns>0</ns>
    <id>40108</id>
    <revision>
      <id>2528715</id>
      <parentid>2450665</parentid>
      <timestamp>2013-05-24T17:20:14Z</timestamp>
      <contributor>
        <username>SPM-wiki</username>
        <id>462340</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{SPM header}}

Generally speaking, cognitive processing is associated with increases in neuronal firing rates.  The increased neural activity leads to increased metabolic requirements for the neurons.  The onset of neural activity leads to a systematic series of physiological changes in the local network of blood vessels that include changes in the cerebral blood volume per unit of brain tissue (CBV), changes in the rate of cerebral blood flow (CBF), and changes in the concentration of oxyhaemoglobin and deoxyhaemoglobin.

There are different fMRI techniques that can pick up a functional signal corresponding to changes in each of the previously mentioned components of the haemodynamic response.  The most common functional imaging signal is the Blood Oxygenation Level Dependent signal (BOLD), which primarily corresponds to the concentration of deoxyhaemoglobin.  In simple terms, the magnetic resonance signal comes from exciting hydrogen nuclei with a radiofrequency pulse, and detecting the radio waves emitted as the nuclei return to a lower-energy configuration.  Deoxyhaemoglobin has different magnetic properties than oxyhaemoglobin-- it is paramagnetic, which means that it will make the local magnetic field over a microscopic domain inhomogenous.  This has the effect of dephasing the signal emitted by the nuclei in this domain, causing destructive interference in the observed MR signal.  Over a macroscopic domain (i.e., one functional voxel) greater amounts of deoxyhaemoglobin lead to less signal.  The functional BOLD signal is seen as an increase in the MR signal that corresponding to a decrease in the concentration of deoxyhaemoglobin.  The decrease of deoxy-Hb is seen because the increase in CBF following neural activity more than accounts for the effect of increased uptake of oxygen.

[[File:SPM hemodynamic response function.png|thumbnail|SPM Haemodynamic Response Function]]

For the purposes of estimating the BOLD signal in an experimental paradigm, SPM makes use of a canonical haemodynamic response function (HRF).  This function is assumed to be the response of the system (as reflected by the MR signal) to a brief, intense period of neural stimulation.  The SPM HRF is shown above, and exhibits a rise peaking around 6 sec, followed by an undershoot that persists for  a considerable period.  The code for this graph is below.

 &gt;&gt; RT = 0.5; hrf = spm_hrf(RT); plot(0:RT:32, hrf);

In this graph, the y-axis is in arbitrary units.  A common way to plot the impulse response is in units of percent signal change from a baseline condition.  A very robust stimulus (such as a contrast taken between a flickering visual stimulus and no visual stimulus) may produce changes on the order of 2%-4% in the BOLD signal.  The change observed in contrasts involving higher-level cognitive processes is typically much smaller.

{{SPM footer}}

[[Category:SPM]]</text>
      <sha1>0xsktjdcocacl3lro3x6ykdufvo9vzz</sha1>
    </revision>
  </page>
  <page>
    <title>ACT Study Guide/QOTD</title>
    <ns>0</ns>
    <id>40113</id>
    <revision>
      <id>2052971</id>
      <parentid>1484597</parentid>
      <timestamp>2011-02-22T02:24:14Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>clean up, typos fixed: contributer → contributor using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This page is meant for the question of the day.  Hopefully we will have a question of the day or a question of the week that is written by a contributor to Wikibooks.  If it changes to a question of the week, the address will change to http://en.wikibooks.org/wiki/ACT/QOTW.  Until then, you can follow [http://www.number2.com/exams/act/daily/question/index.cfm?s=4zg5qaSrlPSQCYDbIy4vMvOT| this] link to the Number 2 ACT Question of the Day.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>rsdv7eaj44v0k5td02in48vpmmpdu6n</sha1>
    </revision>
  </page>
  <page>
    <title>Movie Making Manual/North Carolina</title>
    <ns>0</ns>
    <id>40115</id>
    <revision>
      <id>1093765</id>
      <parentid>238156</parentid>
      <timestamp>2008-01-25T18:06:17Z</timestamp>
      <contributor>
        <username>Mike's bot account</username>
        <id>67847</id>
      </contributor>
      <minor />
      <comment>[[Movie Making Manual-North Carolina]] moved to [[Movie Making Manual/North Carolina]]: per [[WB:NP]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{MMM Header}}

The best &quot;one stop&quot; location for information on the Film Industry in North Carolina can be found at Charlotte Regional Partners - Film Production Office.  [http://www.charlotteusa.com/Film/film_overview.asp]

Another website to research is the Charlotte Film and Video Association.  [http://www.cfvonline.com]

The State of NC has been host to several block busters including &quot;The Patriot&quot;, &quot;Gettysburg&quot;, and many more.  Visit the sites for more details.

Central Piedmont Community College is now offering certificate courses in Film and Video Production.  [[http://www.cpcc.edu]]

[[category:local resources|North Corolina]]</text>
      <sha1>3wndhxvaasn8fz1wmw9q8pv76l7ctwf</sha1>
    </revision>
  </page>
  <page>
    <title>Category:Gluten-Free recipes</title>
    <ns>14</ns>
    <id>40128</id>
    <redirect title="Category:Gluten-free recipes" />
    <revision>
      <id>511300</id>
      <parentid>511257</parentid>
      <timestamp>2006-07-03T18:21:18Z</timestamp>
      <contributor>
        <username>Ants Go Marching</username>
        <id>30857</id>
      </contributor>
      <minor />
      <comment>Redirecting to [[Category:Gluten-free recipes]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[:Category:Gluten-free recipes]]</text>
      <sha1>6mgrri0gy565jy78h6y2gjv4fnhnkgj</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Technical Analysis</title>
    <ns>1</ns>
    <id>40129</id>
    <revision>
      <id>2157085</id>
      <parentid>2012479</parentid>
      <timestamp>2011-08-14T12:53:42Z</timestamp>
      <contributor>
        <username>Yndesai</username>
        <id>312033</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{rfd-survived}}

----
Before moving contents to section I am going to dump some more content on the first page. Once I get some clear sectioning I will move contents to their respective sections.([[User:Yndesai|Yndesai]] ([[User talk:Yndesai|talk]]))
----

Over and above giving brief about basic of technical analysis and asking the reader to look for more information on various reference, I want to make this wikibook more about how an individual can use technical analysis in small simple steps, I may create a section of wikibook in this direction if required.
([[User:Yndesai|Yndesai]] ([[User talk:Yndesai|talk]]) 05:51, 23 December 2010 (UTC))

----
There is lot to technical analysis then what is written. Psychology is '''NOT''' the basis of the technical analysis. The Psychology as explained is more about the economics and the creation and burst of bubble this is not due to technical analysis. The basis technical analysis is the study of the forces of demand and supply of stock. Technical analysis discount any of the fundamental or news related justifications and just view any of the stock price movement as the result of the demand and supply. 

It is said that the price is the ultimate truth and it includes all the elements into it.

Also there are lot of indicators which are statistical tools used for technical analysis which needs mention.

I would like to elaborate this section in this direction any comments. 
===Case Study ===
One of the case that comes to my mind is the Satyam stock listed on NSE / BSE in India Which had a major fraud by its CEO and the stock fell like a hell.

([[User:Yndesai|Yndesai]] ([[User talk:Yndesai|talk]]) 05:04, 17 December 2010 (UTC))

----
This page of course needs a lot of work, but that's OK, I'm glad I found it.

I re-wrote the almost unitelligible section entitled TRADING TECHNIQUES as follows:

&quot;&quot;Trading&quot; can be characterized as short-term decisons made in accordance with information gleaned from technical analysis. Traders usually move in and out of the market at a rapid pace in hopes of repeatedly extracting small profits.  Trading is helpful in that it serves the useful purpose of enhancing liquidity.  Full time traders often use multiple computer screens   to monitor prices closely throughout the trading day. For people who cannot spend all day in front of a computer monitor, one option is to anticipate substantial price moves so that the associated risk of taking a position is justified by the upside profit potential. &quot;( Source: Pattern Recogniation and Trading decisions, SatchWell,Chris 2005)&quot;

Hope this helps.

Ps This is the first article I've worked on that doesn't have a liberal bias. I guess there's still hope in the world!
[[User:68.40.151.220|68.40.151.220]] 23:36, 5 September 2005 (UTC)

== A suggested URL - http://chart.nu ==

I actually am quite enamored of your opening statement/paragraph.  Technical analysis has been the basis for real-time trading decision for my evolution from investor (years holding period) down to scalper (hours per trade).  It has been mostly a matter of being able to recognize patterns as they evolve over time and speeding up the process into tighter timeframes and quicker decisions.  Coming from a software development background, it was fairly straightforward to take my understanding of pattern trading and put it into a chart format.  The result of that effort can be found at http://chart.nu/ along with explanations of how technical analysis combined with an understanding of individual risk profile can lead to winning strategies.

Perhaps you would consider including a link to my website for further reading?  In general, it is a goal to keep the site commercial/ad - free since it is a working tool bench for my daily scanning and trading decision process.  Although there is sparse in-depth content, I hope to add to library in the future, mostly on subjects of risk profiles, pattern evolution, and stock filtering.  If you would like, I can also contribute to this wiki (note: an editorial first for me.)

Thanks for your consideration,

~~ voodoo ~~
== Work needed ==
This article desperately needs work, you can't just leave quotes under sub-titles in an attempt to explain concepts!!

It needs explanation rather than unsourced quotes</text>
      <sha1>a00ynfpgqf7ltv4clu2m7gwuc2ixlxf</sha1>
    </revision>
  </page>
  <page>
    <title>Software Engineers Handbook/Language Dictionary/Object Oriented/Visual Jplusplus</title>
    <ns>0</ns>
    <id>40130</id>
    <revision>
      <id>1524596</id>
      <parentid>1524594</parentid>
      <timestamp>2009-06-08T04:11:39Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Visual J++==
Here is the [http://en.wikipedia.org/wiki/Java_programming_language Java wikipedia entry].
===Type===
Visual J++ is a full, procedural, object-oriented, visual language.
===Execution Entry Point===
 public static void main(String args[])
 {
     // some functionality here
 }

===General Syntax===
The typical statement is completed by a semi-colon.  For the assignment of b to a use:
 a = b;

===Comments===
 // this is an inline comment.  Everything after the // is a comment.
Block comments are specified by a starting /* and ending */  They can span multiple lines.
 /*
  * this is a block comment 
  */

===Variable Declarations===
 int x = 9;
 Integer y = new Integer(4);

===Method Declaration/Implementation===
 // declaration
 private return_type class_name::function_name(argument_1_type arg_1_name, 
                           argument_2_type arg_2_name, 
                           default_argument_type default_arg_name)
 { // implementation
     // work with arg_1_name, arg_2_name, and default_arg_name
     // depending on the argument types the variables are passed by 
     //   value, reference, or are constant
     // don't forget to return something of the return type
     return 36;
 }
===Scope===
Scope is defined by curly braces.
 { // this the the beginning of a scope
     // the scope is about to end
 }
===Conditional Statements===
If and only if A is equal to B assign C to D, otherwise, assign E to F.
 if( A == B )
 {
     D = C;
     // more code can be added here.  It is used if and only if A is equal to B
 }
 else
 {
     F = E;
     // more code can be added here.  It is used if and only if A is not equal to B
 }
or
 if( A == B ) 
     D = C; //more lines of code are not permitted after this statement
 else
     F = E;

Alternatively, a switch statement can be used for multiple choice operations.  This sample converts a number input to text.
 switch( number_value )
 {
     case 37:
         text = &quot;thirty-seven&quot;;
         break; // this line prevents the program from writing over this value with the
                //   following code
     case 23:
         text = &quot;twenty-three&quot;;
         break;
     default: // this is used if none of the previous cases contain the value
         text = &quot;unknown number&quot;;
 }

===Looping Statements===
This code counts from 0 to 9, adding up the contents of the array.
 int i = 0;
 for( int index = 0; index &lt; 10; index = index + 1 )
 {
     i = array[index];
 }

This code repeats until the number 4 is found.  If this runs off of the end of the array, there could be a problem.
 int index = 0;
 while( 4 != array[index] )
 {
     index = index + 1;
 }

This code increments the counter before the check is made, so that it starts with element 1.
 int index = 0;
 do
 {
     index = index + 1;
 }
 while( 4 != array[index] );
===Output Statements===
 System.out.println( &quot;Hello World!&quot; );
And adding text to visual components.

===Containers===
Containers inherit from the Collection class.  See the java.util package for specific containers including Vector.

===Algorithms===
''What algorithms does it have?  Does sort work in J++?''

===Garbage collection===
Garbage collection is automatic.

===Physical Structure===
Code is generally kept in files with a .java extension.  It is compiled into Java byte code into files with .class extensions.

===Tips===
*The language is ''very'' similar to Java.
*Visual form layout and component access is similar to other Microsoft Visual development languages.
*Classes in the Java packages are capitalized, methods are not.
*Everything is a pointer.  Use a clone method to avoid operating on the original element of a Collection.
*Arrays start with index 0.
*Don't confuse these two:
 =  // assignment
 == // comparison, is equal to
Often using the one you don't want will compile, and will produce results you did not expect.

===Web References===
*[[Programming:Java|Java wikibooks page]]
*Microsoft support is available at the [[http://msdn.microsoft.com/ Microsoft Developers Network]] pages.

===Books and Articles===
''paper references here''

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>91nh4qhpgo4l6lmnkpq5ngai37g1qdp</sha1>
    </revision>
  </page>
  <page>
    <title>User:Jbland</title>
    <ns>2</ns>
    <id>40131</id>
    <revision>
      <id>229085</id>
      <parentid>229084</parentid>
      <timestamp>2005-09-05T23:44:53Z</timestamp>
      <contributor>
        <username>Jbland</username>
        <id>11206</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Hello, my name is Joe Land
The following text is a test. I don't fully understand how to use this Wiki-thing. So, I am going to practice on this page. 
How exciting!

&lt;math&gt;y = x^2 + 2&lt;/math&gt;


What a complicated equation...</text>
      <sha1>7t730rmumy2a0btevdw0d7snmtwpzwn</sha1>
    </revision>
  </page>
  <page>
    <title>Engineering Acoustics/Characterizing Damped Mechanical Systems</title>
    <ns>0</ns>
    <id>40133</id>
    <revision>
      <id>2488444</id>
      <parentid>2065465</parentid>
      <timestamp>2013-02-16T09:18:53Z</timestamp>
      <contributor>
        <ip>24.108.133.14</ip>
      </contributor>
      <comment>/* Characterizing Damped Mechanical Systems */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Engineering Acoustics}}

== Characterizing Damped Mechanical Systems ==

&lt;p&gt;Characterizing the response of Damped Mechanical Oscillating system can be easily quantified using two parameters. The system parameters are the resonance frequency (&lt;math&gt;'''w  resonance'''&lt;/math&gt; and the damping of the system &lt;math&gt;'''Q  (quality factor)or B  (Temporal Absorption''')&lt;/math&gt;. In practice, finding these parameters would allow for quantification of unknown systems and allow you to derive other parameters within the system.


----

Using the mechanical impedance in the following equation, notice that the imaginary part will equal zero at resonance.

(&lt;math&gt;Z_m = F/u = R_m + j(w*M_m - s/w)&lt;/math&gt;)

Resonance case:(&lt;math&gt;w*M_m = s/w&lt;/math&gt;)

== Calculating the Mechanical Resistance ==

The decay time of the system is related to 1 / B where B is the Temporal Absorption. B is related to the mechancial resistance and to the mass of the system by the following equation.

&lt;math&gt;B = Rm / 2*Mm&lt;/math&gt;

The mechanical resistance can be derived from the equation by knowing the mass and the temporal absorption.

== Critical Damping ==

The system is said to be critically damped when: 

&lt;math&gt;Rc = 2*M*sqrt(s/Mm) = 2*sqrt(s*Mm) = 2*Mm*wn&lt;/math&gt;

A critically damped system is one in which an entire cycle is never completed.  The absorption coefficient in this type of system equals the natural frequency.  The system will begin to oscillate, however the amplitude will decay exponentially to zero within the first oscillation.

== Damping Ratio ==

&lt;math&gt;Damping Ratio = Rm/Rc&lt;/math&gt;

The damping ratio is a comparison of the mechanical resistance of a system to the resistance value required for critical damping.  Rc is the value of Rm for which the absorption coefficient equals the natural frequency (critical damping).  A damping ratio equal to 1 therefore is critically damped, because the mechanical resistance value Rm is equal to the value required for critical damping Rc.  A damping ratio greater than 1 will be overdamped, and a ratio less than 1 will be underdamped.

?????

== Quality Factor ==

The Quality Factor (Q) is way to quickly characterize the shape of the peak in the response.  It gives a quantitative representation of power dissipation in an oscillation.

&lt;math&gt;Q = wresonance / (wu - wl)&lt;/math&gt;

Wu and Wl are called the half power points. When looking at the response of a system, the two places on either side of the peak where the point equals half the power of the peak power defines Wu and Wl.
The distance in between the two is called the half-power bandwidth. So, the resonant frequency divided by the half-power bandwidth gives you the quality factor.
Mathematically, it takes Q/pi oscillations for the vibration to decay to a factor of 1/e of its original amplitude.

[http://en.wikibooks.org/wiki/Engineering_Acoustics Back to Main page]</text>
      <sha1>ioq8hfdv13abpoyznaucvil8d3ku05y</sha1>
    </revision>
  </page>
  <page>
    <title>User:Mshonle/Policy</title>
    <ns>2</ns>
    <id>40134</id>
    <revision>
      <id>230505</id>
      <parentid>230503</parentid>
      <timestamp>2005-09-08T04:46:31Z</timestamp>
      <contributor>
        <username>Mshonle</username>
        <id>1957</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==A directly enumerated WikiBooks policy==
===Immediate Exclusions===
Any WikiBook must follow rules similar to the Google AdSense/Wikicities [http://www.wikicities.com/wiki/Prohibited_content prohibited content] policy. WikiBooks has extended and consolidated these prohibitions and should be considered separate.

The following is prohibited from WikiBooks:
* Excessive profanity
* Violence, racial intolerance, or advocation against any individual, group, or organization
* Hacking/cracking content with specific cracking details/exploits or scripts. Any computer security auditing instructional resource must not venture into the territory of how to perform a specific crack. However, it can discuss principles behind cracking techniques and how to guard against them
* Illicit drugs and drug paraphernalia
* Pornography, adult, or mature content
* Gambling or casino-related content; except for resources that describe the sports abstractly without any participation in actual games or betting
* Any other content that promotes illegal activity or infringes on the legal rights of others, including (but not limited to) content condoning harassment, intimidation, espionage, terrorism
* Any sales, promotion or advertising of materials whatsoever, spamming, pop-ups, pop-unders or exit windows that interfere with site navigation, change user preferences, or are for downloads, including excessive, repetitive, or irrelevant keywords in the content or code of web pages
Any material that qualifies under any of these headings are subject to speedy deletion, which does not require a vote or consensus discussion. An administrator can delete these materials immediately upon discovery or via the suggestion of a non-administrator.

===Other Exclusions===
The following works are not allowed on WikiBooks:
* Any work that would be categorized as fictional
* Any work that would be considered original research or otherwise unverifiable
* Projects seeking to build communities or political campaigns
* Any entertainment guides or hobby guides that are based on created works of fiction
* Any fan guides or actor/director/producer/writer/etc FAQs
* Personal journals or narratives
* References that are only lists facts, dates, persons, charts, etc that lack instructional value
* Any work that is better suited for a WikiMedia sister project is best directed there [The List...].

Qualifications:
* Examples in otherwise non-fictional textbooks can use fictional characters to demonstrate principles. For example, an economics text book can consider hypothetical transactions between Alice and Bob; but there should be no plot elements or character development beyond what is necessary for the example itself.
** However, even didactic works of fiction are excluded. That is, even the most educational of all works of fiction cannot qualify as a WikiBook
* The exposition, order of presentation, and examples used in an otherwise non-original works may be original. For example, if you have a unique way of describing how a known algorithm works then that unique description won't be considered original research.
* The WikiBooks community itself, however, should be built and supported!
* While video games are themselves works of fiction older games such as chess and Go should not be considered works of fiction, even both games are themselves creations based on folk interpretations of war
* Biographies on notable individuals may be allowed, but they must provide references to all sources used and have no annecdotes based on personal or indirect contact with the individual. The individual must be notable enough so that WikiBooks would not be in danger of libel or tort action.

===Inclusions===
The following ares are suitable topics for WikiBooks:

* Any topic that is taught as a serious course, from kindergarten up to and including the university level, is included, provided that the writing itself is written from a neutral point of view (NPOV) and does not violate the immediate exclusions set forth. Cookbooks qualify because there are legitimate cooking courses.

* How-to guides (provided they are not in the domain of prohibited content or are based on specific works of fiction) can be created, but they should demonstrate many opportunities for education and learning about the &quot;classroom of the world&quot;. NPOV culture guides are permitted, but travel guides are not allowed.

* Guides that introduce, explore, and teach hobbies and/or vocations, provided the guides do not conflict with the prohibitions or exclusions stated previously.

===Standards of Quality===
* All books must have a clear direction and be on a topic signifigant enough to warrant the scope of a book.
* Books must be on topics where it is concievable that another collaborator can contribute to the project.
* Content that is too small, &quot;mini-books,&quot; or &quot;bookless-chapters&quot; must be merged into larger works.
* Books cannot be collections of miscellaneous topics: Anything discussed must have come common theme warranting it to all belong in the same book.</text>
      <sha1>10ul0co1l7s7ttkfqxbdhy2tdgucsji</sha1>
    </revision>
  </page>
  <page>
    <title>Cryptography/Index of coincidence</title>
    <ns>0</ns>
    <id>40138</id>
    <revision>
      <id>2001176</id>
      <parentid>626553</parentid>
      <timestamp>2010-12-15T22:03:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The '''index of coincidence''' for a ciphertext is the probability that two letters selected from it are identical. Usually denoted by ''I'', it is a statistical measure of the redundancy of text. The index of coincidence of totally random collection (uniform distribution) of letters is around 0.0385.

{{Wikipedia|index of coincidence}}

{{Cryptography/Stub}}

{{BookCat}}</text>
      <sha1>ka3r7n8069epjhm9xlalqunz99i5sd2</sha1>
    </revision>
  </page>
  <page>
    <title>C++ Programming/Code/IO</title>
    <ns>0</ns>
    <id>40141</id>
    <revision>
      <id>2704268</id>
      <parentid>2704226</parentid>
      <timestamp>2014-09-26T15:38:25Z</timestamp>
      <contributor>
        <username>Panic2k4</username>
        <id>2865</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/151.244.124.180|151.244.124.180]] ([[User talk:151.244.124.180|talk]]) to last version by 130.218.13.52</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== I/O ==
Also commonly referenced as the C++ I/O of the [[C++ Programming/Programming Languages/C++/Code#Core vs Standard Library|C++ Standard Library]], since the library also includes the C Standard library and its I/O implementation, as seen before in the [[C++ Programming/Code/Standard C Library/IO#Standard C I/O|Standard C I/O Section]].

''Input'' and ''output'' are essential for any computer software, as these are the only means by which the program can communicate with the user. The simplest form of input/output is pure textual, i.e. the application displays in console form, using simple ASCII characters to prompt the user for inputs, which are supplied using the keyboard.

There are many ways for a program to gain input and output, including
* File i/o, that is, reading and writing to files
* Console i/o, reading and writing to a console window, such as a terminal in UNIX-based operating systems or a DOS prompt in Windows.
* Network i/o, reading and writing from a network device
* String i/o, reading and writing treating a string as if it were the input or output device

While these may seem unrelated, they work very similarly. In fact, operating systems that follow the POSIX specification deal with files, devices, network sockets, consoles, and many other things all with one type of handle, a file descriptor. However, low-level interfaces provided by the operating system tend to be difficult to use, so C++, like other languages, provide an abstraction to make programming easier. This abstraction is the '''stream'''.

=== Character encoding ===
{{TODO|Complete character encoding info}}

{{:C++ Programming/ASCII}}

=== Streams ===
A stream is a type of object from which we can take values, or to which we can pass values. This is done transparently in terms of the underlying code that demonstrates the use of the &lt;tt&gt;std::cout&lt;/tt&gt; stream, known as the ''standard output stream''.

{{:C++ Programming/Examples/Hello World}}

Almost all input and output one ever does can be modeled very effectively as a stream. Having one common model means that one only has to learn it once. If you understand streams, you know the basics of how to output to files, the screen, sockets, pipes, and anything else that may come up.

A stream is an object that allows one to push data in or out of a medium, in order. Usually a stream can only output or can only input. It is possible to have a stream that does both, but this is rare. One can think of a stream as a car driving along a one-way street of information. An output stream can insert data and move on. It (usually) cannot go back and adjust something it has already written. Similarly, an input stream can read the next bit of data and then wait for the one that comes after it. It does not skip data or rewind and see what it had read five minutes ago.

The semantics of what a stream's read and write operations do depend on the type of stream. In the case of a file, an input file stream reads the file's contents in order without rewinding, and an output file stream writes to the file in order. For a console stream, output means displaying text, and input means getting input from the user via the console. If the user has not inputted anything, then the program ''blocks'', or waits, for the user to enter in something.

{{TODO|Remember to complete with the String Stream class and include the various io stream format flags.|C++ Programming}}

==== iostream ====
[[File:Herman-ring-1.png|right|thumb|c++ program that uses iostream to save output to the file]]
'''&lt;code&gt;iostream&lt;/code&gt;''' is a [[C++ Programming/Programming Languages/C++/Code/File Organization#.h|header file]] used for input/output. It is part of the C++ standard library. The name stands for '''I'''nput/'''O'''utput '''Stream'''. In C++ there is no special syntax for streaming data input or output. Instead, these are combined as a [[C++ Programming/Compiler/Linker/Libraries|library]] of functions. Like we have seen with the [[C++ Programming/Code/Standard C Library/IO#Standard C I/O|C Standard Library use of &lt;code&gt;&lt;cstdio&gt;&lt;/code&gt; header]], &lt;code&gt;iostream&lt;/code&gt; provides basic OOP services for I/O.

The &lt;code&gt;iostream&lt;/code&gt; automatically defines and uses a few standard objects:
* '''&lt;code&gt;cin&lt;/code&gt;''', an object of the istream class that reads data from the standard input device.
* '''&lt;code&gt;cout&lt;/code&gt;''', an object of the ostream class, which displays data to the standard output device.
* '''&lt;code&gt;cerr&lt;/code&gt;''', another object of the ostream class that writes unbuffered output to the standard error device.
* '''&lt;code&gt;clog&lt;/code&gt;''', like cerr, but uses buffered output.
for sending data to and from the [[w:standard streams|standard streams]] input, output, error (unbuffered), and error (buffered) respectively. As part of the C++ standard library, these objects are a part of the '''''std namespace'''''.

;Standard input, output, and error 
The most common streams one uses are '''&lt;tt&gt;cout&lt;/tt&gt;''', '''&lt;tt&gt;cin&lt;/tt&gt;''', and '''&lt;tt&gt;cerr&lt;/tt&gt;''' (pronounced &quot;c out&quot;, &quot;c in&quot;, and &quot;c err(or)&quot;, respectively). They are defined in the header '''&lt;tt&gt;&lt;iostream&gt;&lt;/tt&gt;'''. Usually, these streams read and write from a console or terminal. In UNIX-based operating systems, such as Linux and Mac OS X, the user can redirect them to other files, or even other programs, for logging or other purposes. They are analogous to &lt;tt&gt;stdout&lt;/tt&gt;, &lt;tt&gt;stdin&lt;/tt&gt;, and &lt;tt&gt;stderr&lt;/tt&gt; found in C. &lt;tt&gt;cout&lt;/tt&gt; is used for generic output, &lt;tt&gt;cin&lt;/tt&gt; is used for input, and &lt;tt&gt;cerr&lt;/tt&gt; is used for printing errors. (&lt;tt&gt;cerr&lt;/tt&gt; typically goes to the same place as &lt;tt&gt;cout&lt;/tt&gt;, unless one or both is redirected, but it is not buffered and allows the user to fine-tune which parts of the program's output is redirected where.)

===== Output =====
The standard syntax for outputting to a stream, in this case, &lt;tt&gt;cout&lt;/tt&gt;, is

&lt;source lang=Cpp&gt;cout &lt;&lt; some_data &lt;&lt; some_more_data;&lt;/source&gt;

'''Example'''
&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;

using namespace std;

int main()
{
  int iA = 1;
  cout &lt;&lt; &quot;Hello, World! &quot; &lt;&lt; iA &lt;&lt; '\n';

  return 0;
}
&lt;/source&gt;

'''Result of Execution'''
 Hello, World! 1

To add a line break, send a newline character, &lt;tt&gt;\n&lt;/tt&gt;.
Using &lt;code&gt;std::endl&lt;/code&gt; also outputs a newline character, but it also calls os.flush().

'''Example'''
&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;
#include &lt;ostream&gt;

using namespace std;

int main()
{
  int iA = 1;
  char ch = 13;
  cout &lt;&lt; &quot;Hello, World!&quot; &lt;&lt; &quot;\n&quot; &lt;&lt; iA &lt;&lt; &quot;\n&quot; &lt;&lt; ch &lt;&lt; endl;

  return 0;
}
&lt;/source&gt;

'''Execution'''
 Hello, World!
 1

It is always a good idea to end your output with a blank line, so as to not mess up with user's terminals.

As seen in the &quot;Hello, World!&quot; program, we direct the output to &lt;code&gt;std::cout&lt;/code&gt;. This means that it is a ''member'' of the ''standard library''. For now, don't worry about what this means; we will cover the library and namespaces in later chapters.

What you do need to remember is that, in order to use the output stream, you must include a reference to the standard IO library, as shown here:
&lt;source lang=Cpp&gt;#include &lt;iostream&gt;&lt;/source&gt;

This opens up a number of streams, functions and other programming devices that we can now use. 
For this section, we are interested in two of these; &lt;code&gt;std::cout&lt;/code&gt; and &lt;code&gt;std::endl&lt;/code&gt;.

Once we have referenced the standard IO library, we can use the output stream very simply. To use a stream, give its name, then ''pipe'' something in or out of it, as shown:
&lt;source lang=Cpp&gt;std::cout &lt;&lt; &quot;Hello, World!&quot;;&lt;/source&gt;

The &lt;tt&gt;&lt;nowiki&gt;&lt;&lt;&lt;/nowiki&gt;&lt;/tt&gt; operator feeds everything to the right of it into the stream. We have essentially fed a text object into the stream. That's as far as our work goes; the stream now decides what to do with that object. In the case of the output stream, it's printed on-screen.

We're not limited to only sending a single object type to the stream, nor indeed are we limited to one object a time. Consider the examples below:
&lt;source lang=Cpp&gt;
 std::cout &lt;&lt; &quot;Hello, &quot; &lt;&lt; &quot;Joe&quot;&lt;&lt; std::endl;
 std::cout &lt;&lt; &quot;The answer to life, the universe and everything is &quot; &lt;&lt; 42 &lt;&lt; std::endl;
&lt;/source&gt;

As can be seen, we feed in various values, separated by a pipe character. The result comes out something like:

 Hello, Joe
 The answer to life, the universe and everything is 42

You will have noticed the use of &lt;tt&gt;std::endl&lt;/tt&gt; throughout some of the examples so far. 
This is a special manipulator, which not only outputs a newline character but also calls os.flush().

===== Input =====
What would be the use of an application that only ever outputted information, but didn't care about what its users wanted? Minimal to none. Fortunately, inputting is as easy as outputting when you're using the stream.

The ''standard input stream'' is called &lt;tt&gt;std::cin&lt;/tt&gt; and is used very similarly to the output stream. Once again, we instantiate the standard IO library:

&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;
&lt;/source&gt;
This gives us access to &lt;tt&gt;std::cin&lt;/tt&gt; (and the rest of that class). Now, we give the name of the stream as usual, and pipe output from it into a variable. A number of things have to happen here, demonstrated in the example below:

&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;
int main(int iArgc, char a_chArgv[]) {
  int iA;
  std::cout &lt;&lt; &quot;Hello! How old are you? &quot;;
  std::cin &gt;&gt; iA;
  std::cout &lt;&lt; &quot;You're really &quot; &lt;&lt; iA &lt;&lt; &quot; years old?&quot; &lt;&lt; std::endl;
 
  return 0;
}
&lt;/source&gt;

We instantiate the standard IO library as usual, and call our main function in the normal way. Now we need to consider where the user's input goes. This calls for a variable (discussed in a later chapter) that we declare as being called &lt;tt&gt;a&lt;/tt&gt;.

Next, we send some output, asking the user for their age. The real input happens now; everything the user types until they hit Enter is going to be stored in the input stream. We pull this out of the input stream and save it in our variable.

Finally, we output the user's age, piping the contents of our variable into the output stream.

Note: You will notice that, if anything other than a whole number is entered, the program will crash. This is due to the way in which we set up our variable. Don't worry about this for now; we will cover variables later on.

===== A Program Using User Input ===== 
The following program inputs two numbers from the user and prints their sum:
&lt;source lang=Cpp&gt;
 #include &lt;iostream&gt;
 
 int main()
 {
    int iNumber1, iNumber2;
    std::cout &lt;&lt; &quot;Enter number 1: &quot;;
    std::cin &gt;&gt; iNumber1;
    std::cout &lt;&lt; &quot;Enter number 2: &quot;;
    std::cin &gt;&gt; iNumber2;
    std::cout &lt;&lt; &quot;The sum of &quot; &lt;&lt; iNumber1 &lt;&lt; &quot; and &quot; &lt;&lt; iNumber2 &lt;&lt; &quot; is &quot;
               &lt;&lt; iNumber1 + iNumber2 &lt;&lt; &quot;.\n&quot;;
    return 0;
 }
&lt;/source&gt;

Just like &lt;tt&gt;std::cout&lt;/tt&gt; that represents the standard output stream, the C++ library provides (and the &lt;tt&gt;iostream&lt;/tt&gt; header declares) the object &lt;tt&gt;std::cin&lt;/tt&gt; representing standard input, which usually gets input from the keyboard. The statement:

&lt;source lang=Cpp&gt;
 std::cin &gt;&gt; iNumber1;
&lt;/source&gt;

uses the ''extraction operator'' (&lt;tt&gt;&gt;&gt;&lt;/tt&gt;) to get an integer input from the
user. When used to input integers, any leading whitespace is skipped, a sequence of valid digits optionally preceded by a &lt;tt&gt;+&lt;/tt&gt; or &lt;tt&gt;-&lt;/tt&gt; sign is read and the value stored in the variable. Any remaining characters in the user input are not ''consumed''. These would be considered next time some input operation is performed.

If you want the program to use a function from a specific namespace, normally you must specify which namespace the function is in. The above example calls to &lt;tt&gt;cout&lt;/tt&gt;, which is a member of the &lt;tt&gt;std&lt;/tt&gt; namespace (hence &lt;tt&gt;std::cout&lt;/tt&gt;). If you want a program to specifically use the std namespace for an identifier, which essentially removes the need for all future scope resolution (e.g. &lt;tt&gt;std::&lt;/tt&gt;), you could write the above program like this:

&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;
 
using namespace std;

int main()
{
    int iNumber1, iNumber2;
    cout &lt;&lt; &quot;Enter number 1: &quot;;
    cin &gt;&gt; iNumber1;
    cout &lt;&lt; &quot;Enter number 2: &quot;;
    cin &gt;&gt; iNumber2;
    cout &lt;&lt; &quot;The sum of &quot; &lt;&lt; iNumber1 &lt;&lt; &quot; and &quot; &lt;&lt; iNumber2 &lt;&lt; &quot; is &quot;
               &lt;&lt; iNumber1 + iNumber2 &lt;&lt; &quot;.\n&quot;;
    return 0;
}
&lt;/source&gt;

Please note that 'std' namespace is the namespace defined by standard C++ library.

===== Manipulators =====
A manipulator is a function that can be passed as an argument to a stream in different circumstances. For example, the manipulator 'hex' will cause the stream object to format subsequent integer input to the stream in hexadecimal instead of decimal. Likewise, 'oct' results in integers displaying in octal, and 'dec' reverts back to decimal.

'''Example'''
&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;
using namespace std;

int main()
{
  cout &lt;&lt; dec &lt;&lt; 16 &lt;&lt; ' ' &lt;&lt; 10 &lt;&lt; &quot;\n&quot;;
  cout &lt;&lt; oct &lt;&lt; 16 &lt;&lt; ' ' &lt;&lt; 10 &lt;&lt; &quot;\n&quot;;
  cout &lt;&lt; hex &lt;&lt; 16 &lt;&lt; ' ' &lt;&lt; 10 &lt;&lt; endl;

  return 0;
}
&lt;/source&gt;

'''Execution'''
 16 10
 20 12
 10 a

There are many manipulators that can be used in conjunction with streams to simplify the formatting of input. For example, 'setw()' sets the field width of the data item next displayed. Used in conjunction with 'left' and 'right'(that set the justification of the data), 'setw' can easily be used to create columns of data.

'''Example'''
&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;
#include &lt;iomanip&gt;
using namespace std;

int main()
{
	cout &lt;&lt; setw(10) &lt;&lt; right &lt;&lt; 90 &lt;&lt; setw(8) &lt;&lt; &quot;Help!\n&quot;;
	cout &lt;&lt; setw(10) &lt;&lt; left &lt;&lt; 45 &lt;&lt; setw(8) &lt;&lt; &quot;Hi!&quot; &lt;&lt; endl;

	return 0;
}
&lt;/source&gt;

'''Execution'''
         90   Help!
 45        Hi!

The data in the top row display at the right of the columns created by 'setw', while in the next row, the data is left justified in the column.
Please note the inclusion of a new library 'iomanip'. Most formatting manipulators require this library.

Here are some other manipulators and their uses:

{| class=&quot;wikitable&quot; style=&quot;text-align: left&quot;
|-
! Manipulator !! Function
|-
| boolalpha || displays boolean values as 'true' and 'false' instead of as integers.
|-
| noboolalpha || forces bools to display as integer values
|-
| showuppercase || converts strings to uppercase before displaying them
|-
| noshowuppercase || displays strings as they are received, instead of in uppercase
|-
| fixed || forces floating point numbers to display with a fixed number of decimal places
|-
| scientific || displays floating point numbers in scientific notation
|}

===== Buffers =====
Most stream objects, including 'cout' and 'cin', have an area in memory where the information they are transferring sits until it is asked for. This is called a 'buffer'. Understanding the function of buffers is essential to mastering streams and their use.

''' Example '''
&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;
using namespace std;

int main()
{
  int iNumber1, iNumber2;
  cin &gt;&gt; iNumber1;
  cin &gt;&gt; iNumber2;

  cout &lt;&lt; &quot;Number1: &quot; &lt;&lt; iNumber1 &lt;&lt; &quot;\n&quot;
       &lt;&lt; &quot;Number2: &quot; &lt;&lt; iNumber2 &lt;&lt; endl;

  return 0;
}
&lt;/source&gt;

''' Execution 1 '''
 &gt;74
 &gt;27
 Number1: 74
 Number2: 27

The inputs are given separately, with a hard return between them. '&gt;' denotes user input.

''' Execution 2 '''
 &gt;74 27
 Number1: 74
 Number2: 27

The inputs are entered on the same line. They both go into the 'cin' stream buffer, where they are stored until needed. As 'cin' statements are executed, the contents of the buffer are read into the appropriate variables.

''' Execution 3 '''
 &gt;74 27 56
 Number1: 74
 Number2: 27

In this example, 'cin' received more input than it asked for. The third number it read in, 56, was never inserted into a variable. It would have stayed in the buffer until 'cin' was called again. The use of buffers can explain many strange behaviors that streams can exhibit.

''' Example '''
&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;
using namespace std;

int main()
{
  int iNumber1, iNumber2, iNumber3;
  cin &gt;&gt; iNumber1 &gt;&gt; iNumber2;

  cout &lt;&lt; &quot;Number1: &quot; &lt;&lt; iNumber1 &lt;&lt; &quot;\n&quot;
    &lt;&lt; &quot;Number2: &quot; &lt;&lt; iNumber2 &lt;&lt; endl;

  cin &gt;&gt; iNumber3;

  cout &lt;&lt; &quot;Number3: &quot; &lt;&lt; iNumber3 &lt;&lt; endl;

  return 0;
}
&lt;/source&gt;

''' Execution '''
 &gt;45 89 37
 Number1: 45
 Number2: 89
 Number3: 37

Notice how all three numbers were entered at the same time in one line, but the stream only pulled them out of the buffer when they were asked for. This can cause unexpected output, since the user might accidentally put an extra space into his input. A well written program will test for this type of unexpected input and handle it gracefully.

==== ios ====
'''ios''' is a [[C++ Programming/Programming Languages/C++/Code/File Organization#.h|header file]] in the C++ standard library that defines several types and functions basic to the operation of iostreams. This header is typically included automatically by other iostream headers. Programmers rarely include it directly.

===== Typedefs =====
{|class=&quot;wikitable&quot;
|-
! Name || description
|-
|&lt;code&gt;ios&lt;/code&gt; || Supports the &lt;code&gt;ios&lt;/code&gt; class from the old &lt;code&gt;iostream&lt;/code&gt; library.
|-
|&lt;code&gt;streamoff&lt;/code&gt; || Supports internal operations.
|-
|&lt;code&gt;streampos&lt;/code&gt; || Holds the current position of the buffer pointer or file pointer.
|-
|&lt;code&gt;streamsize&lt;/code&gt; || Specifies the size of the stream.
|-
|&lt;code&gt;wios&lt;/code&gt; || Supports the &lt;code&gt;wios&lt;/code&gt; class from the old &lt;code&gt;iostream&lt;/code&gt; library.
|-
|&lt;code&gt;wstreampos&lt;/code&gt; || Holds the current position of the buffer pointer or file pointer.
|}

=====Manipulators=====
{|class=&quot;wikitable&quot;
|-
! Name || description
|-
|&lt;code&gt;boolalpha&lt;/code&gt; || Specifies that variables of type &lt;code&gt;bool&lt;/code&gt; appear as true or false in the stream.
|-
|&lt;code&gt;dec&lt;/code&gt; || Specifies that integer variables appear in base 10 notation.
|-
|&lt;code&gt;fixed&lt;/code&gt; || Specifies that a floating-point number is displayed in fixed-decimal notation.
|-
|&lt;code&gt;hex&lt;/code&gt; || Specifies that integer variables appear in base 16 notation.
|-
|&lt;code&gt;internal&lt;/code&gt; || Causes a number's sign to be left justified and the number to be right justified.
|-
|&lt;code&gt;left&lt;/code&gt; || Causes text that is not as wide as the output width to appear in the stream flush with the left margin.
|-
|&lt;code&gt;noboolalpha&lt;/code&gt; || Specifies that variables of type &lt;code&gt;bool&lt;/code&gt; appear as 1 or 0 in the stream.
|-
|&lt;code&gt;noshowbase&lt;/code&gt; || Turns off indicating the notational base in which a number is displayed.
|-
|&lt;code&gt;noshowpoint&lt;/code&gt; || Displays only the whole-number part of floating-point numbers whose fractional part is zero.
|-
|&lt;code&gt;noshowpos&lt;/code&gt; || Causes positive numbers to not be explicitly signed.
|-
|&lt;code&gt;noskipws&lt;/code&gt; || Cause spaces to be read by the input stream.
|-
|&lt;code&gt;nounitbuf&lt;/code&gt; || Causes output to be buffered and processed when the buffer is full.
|-
|&lt;code&gt;nouppercase&lt;/code&gt; || Specifies that hexadecimal digits and the exponent in scientific notation appear in lowercase.
|-
|&lt;code&gt;oct&lt;/code&gt; || Specifies that integer variables appear in base 8 notation.
|-
|&lt;code&gt;right&lt;/code&gt; || Causes text that is not as wide as the output width to appear in the stream flush with the right margin.
|-
|&lt;code&gt;scientific&lt;/code&gt; || Causes floating point numbers to be displayed using scientific notation.
|-
|&lt;code&gt;showbase&lt;/code&gt; || Indicates the notational base in which a number is displayed.
|-
|&lt;code&gt;showpoint&lt;/code&gt; || Displays the whole-number part of a floating-point number and digits to the right of the decimal point even when the fractional part is zero.
|-
|&lt;code&gt;showpos&lt;/code&gt; || Causes positive numbers to be explicitly signed.
|-
|&lt;code&gt;skipws&lt;/code&gt; || Cause spaces to not be read by the input stream.
|-
|&lt;code&gt;unitbuf&lt;/code&gt; || Causes output to be processed when the buffer is not empty.
|-
|&lt;code&gt;uppercase&lt;/code&gt; || Specifies that hexadecimal digits and the exponent in scientific notation appear in uppercase.
|}

=====Classes=====
{|class=&quot;wikitable&quot;
|-
! Name || description
|-
|&lt;code&gt;basic_ios&lt;/code&gt; || The template class describes the storage and member functions common to both input streams (of template class basic_istream) and output streams (of template class basic_ostream) that depend on the template parameters.
|-
|&lt;code&gt;fpos&lt;/code&gt; || The template class describes an object that can store all the information needed to restore an arbitrary file-position indicator within any stream.
|-
|&lt;code&gt;ios_base&lt;/code&gt; || The class describes the storage and member functions common to both input and output streams that do not depend on the template parameters.
|}

==== fstream ====
With &lt;tt&gt;cout&lt;/tt&gt; and &lt;tt&gt;cin&lt;/tt&gt;, we can do basic communication with the user. For more complex io, we would like to read from and write to files. This is done with file stream classes, defined in the header &lt;tt&gt;'''&lt;fstream&gt;'''&lt;/tt&gt;. '''&lt;tt&gt;ofstream&lt;/tt&gt;''' is an output file stream, and '''&lt;tt&gt;ifstream&lt;/tt&gt;''' is an input file stream.

;Files
To ''open'' a file, one can either call &lt;tt&gt;open&lt;/tt&gt; on the file stream or, more commonly, use the constructor. One can also supply an open mode to further control the file stream. Open modes include
*ios::app Leaves the file's original contents and appends new data to the end.
*ios::out Outputs new data in the file, removing the old contents. (default for ofstream)
*ios::in  Reads data from the file. (default for ifstream)

'''Example'''
&lt;source lang=Cpp&gt;
// open a file called Test.txt and write &quot;HELLO, HOW ARE YOU?&quot; to it
#include &lt;fstream&gt;

using namespace std;

int main()
{
  ofstream file1;

  file1.open(&quot;file1.txt&quot;, ios::app);
  file1 &lt;&lt; &quot;This data will be appended to the file file1.txt\n&quot;;
  file1.close();

  ofstream file2(&quot;file2.txt&quot;);
  file2 &lt;&lt; &quot;This data will replace the contents of file2.txt\n&quot;;

  return 0;
}
&lt;/source&gt;

The call to &lt;code&gt;close()&lt;/code&gt; can be omitted, if you do not care about the return value (whether it succeeded); the destructors will call close when the object goes out of scope.

If an operation (e.g. opening a file) was unsuccessful, a flag is set in the stream object. You can check the flags' status using the &lt;/code&gt;bad()&lt;/code&gt; or &lt;/code&gt;fail()&lt;/code&gt; member functions, which return a boolean value. The stream object doesn't throw any exceptions in such a situation; hence manual status check is required. See reference for details on &lt;/code&gt;bad()&lt;/code&gt; and &lt;/code&gt;fail()&lt;/code&gt;.

===== Text input until EOF/error/invalid input =====
Input from the stream &lt;tt&gt;infile&lt;/tt&gt; to a variable &lt;tt&gt;data&lt;/tt&gt; until one of the following:
*EOF reached on &lt;tt&gt;infile&lt;/tt&gt;.
*An error occurs while reading from &lt;tt&gt;infile&lt;/tt&gt; (e.g., connection closed while reading from a remote file).
*The input item is invalid, e.g. non-numeric characters, when &lt;tt&gt;data&lt;/tt&gt; is of type &lt;tt&gt;'''int'''&lt;/tt&gt;.

&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;

// …

while (infile &gt;&gt; data)
{
    // manipulate data here
}
&lt;/source&gt;

Note that the following is not correct:

&lt;source lang=Cpp&gt;
#include &lt;iostream&gt;

// …

while (!infile.eof())
{
    infile &gt;&gt; data; // wrong!
    // manipulate data here
}
&lt;/source&gt;

This will cause the last item in the input file to be processed twice, because &lt;tt&gt;eof()&lt;/tt&gt; does not return true until input ''fails'' due to EOF.

==== ostream ====
;Classes and output streams
It is often useful to have your own classes' instances compatible with the stream framework. For instance, if you defined the class Foo like this:
&lt;source lang=Cpp&gt;
 class Foo
 {
 public:

	Foo() : m_iX(1), m_iY(2)
	{
	}

	int m_iX, m_iY;
 };
&lt;/source&gt;

You will not be able to pass its instance to cout directly using the '&lt;&lt;' operator, because it is not defined for these two objects (Foo and ostream). What needs to be done is to define this operator and thus bind the user-defined class with the stream class.
&lt;source lang=Cpp&gt;
 ostream&amp; operator&lt;&lt;(ostream&amp; output, Foo&amp; arg)
 {
	output &lt;&lt; arg.m_iX &lt;&lt; &quot;,&quot; &lt;&lt; arg.m_iY;
	return output;
 }
&lt;/source&gt;

Now this is possible:
&lt;source lang=Cpp&gt;
 Foo myObject;
 cout &lt;&lt; &quot;my_object's values are: &quot; &lt;&lt; myObject &lt;&lt; endl;
&lt;/source&gt;

The operator function needs to have 'ostream&amp;' as its return type, so chaining output works as usual between the stream and objects of type Foo:
&lt;source lang=Cpp&gt;
 Foo my1, my2, my3;
 cout &lt;&lt; my1 &lt;&lt; my2 &lt;&lt; my3;
&lt;/source&gt;

This is because (cout &lt;&lt; my1) is of type ostream&amp;, so the next argument (my2) can be appended to it in the same expression, which again gives an ostream&amp; so my3 can be appended and so on.

If you decided to restrict access to the member variables &lt;code&gt;m_iX&lt;/code&gt; and &lt;code&gt;m_iY&lt;/code&gt; (that is probably a good idea) within the class Foo, i.e.:

&lt;source lang=Cpp&gt;
 class Foo
 {
 public:

	Foo() : m_iX(1), m_iY(2)
	{
	}

 private:
	int m_iX, m_iY;
 };
&lt;/source&gt;

you will have trouble, because &lt;code&gt;operator&lt;/code&gt;&lt;&lt; function doesn't have access to the private variables of its second argument. There are two possible solutions to this problem:

1. Within the class Foo, declare the &lt;code&gt;operator&lt;/code&gt;&lt;&lt; function as the classes' friend that grants it access to private members, i.e. add the following line to the class declaration:

&lt;source lang=Cpp&gt; 
 friend ostream&amp; operator&lt;&lt;(ostream&amp; output, Foo&amp; arg);
&lt;/source&gt;

Then define the operator&lt;&lt; function as you normally would (note that the declared function is not a member of Foo, just its friend, so don't try defining it as Foo::operator&lt;&lt;).

2. Add public-available functions for accessing the member variables and make the &lt;code&gt;operator&lt;/code&gt;&lt;&lt; function use these instead:

&lt;source lang=Cpp&gt;
 class Foo
 {
 public:

	Foo() : m_iX(1), m_iY(2)
	{
	}

	int getX()
	{
		return m_iX;
	}

	int getY()
	{
		return m_iY;
	}

 private:
	int m_iX, m_iY;
 };

 ostream&amp; operator&lt;&lt;(ostream&amp; output, Foo&amp; arg)
 {
	output &lt;&lt; iArg.getX() &lt;&lt; &quot;,&quot; &lt;&lt; iArg.getY();
	return output;
 }
&lt;/source&gt;

=== ‎Rounding number example ===
This is a small example that rounds a number to a string, a function called &lt;code&gt;RoundToString&lt;/code&gt;. Figures may have trailing zeros, those that would be expected to disappear using a number format.

The constant class contains repeating constants that should exist only once in the code so that to avoid inadvertent changes. (If the one constant is changed inadvertently, it is most likely to be seen, as it is used at several locations.)

The code was first cross-compiled by the [http://tangiblesoftwaresolutions.com/Product_Details/Java_to_CPlusPlus_Converter_Details.html JAVA TO C++ CONVERTER] of Tangible Software Solutions. Parts may have a copyright notice requirement that prevents inclusion in this work you can get yourself the code for the &lt;code&gt;StringConverter&lt;/code&gt; at that location.

Here is the relevant code and its call. You are invited to write a shorter version that gives the same result.

&lt;u&gt;&lt;code&gt;Common.cpp&lt;/code&gt;&lt;/u&gt;:
&lt;source lang=Cpp&gt;
#include &quot;StdAfx.h&quot;

namespace common
{
    double const Common::NEARLY_ZERO = 1E-4;
    double const Common::VERY_LARGE = 1E10;
    string const Common::strZERO = *new string(1, Common::ZERO);
    
    bool Common::IsTrimmable(char const chCHARACTER,
        char const chTRIM,
        bool const bIS_NUMERIC)
    {
        return ((chCHARACTER == chTRIM)
            || (bIS_NUMERIC &amp;&amp; (chCHARACTER == Common::ZERO)));
    }

    string const&amp; Common::Trim(string const&amp; strVALUE, char const chTRIM)
    {
        return TrimLeft(TrimRight(strVALUE, chTRIM), chTRIM);
    }

    string const&amp; Common::TrimLeft(string const&amp; strVALUE,
            char const chTRIM)
    {
        if (strVALUE.length() == 0) return strVALUE;
        else
        {
            ushort usPosition = 0;

            for (; usPosition &lt; strVALUE.length(); usPosition++)
            {
                if (!IsTrimmable(strVALUE[usPosition], chTRIM)) break;
            }

            return *new string(strVALUE.substr(usPosition));
        }
    }

    string const&amp; Common::TrimRight(string const&amp; strVALUE,
        char const chTRIM)
    {
        if (strVALUE.length() == 0) return strVALUE;
        else
        {
            ushort usPosition = strVALUE.length() - 1;

            for (; usPosition &lt; strVALUE.length(); usPosition--)
            {
                if (!IsTrimmable(strVALUE[usPosition], chTRIM))
                {
                    if (strVALUE[usPosition] != Common::PERIOD) ++usPosition;

                    break;
                }
            }

            return *new string(strVALUE.substr(0, usPosition));
        }
    }
}&lt;/source&gt;

&lt;u&gt;&lt;code&gt;Common.h&lt;/code&gt;&lt;/u&gt;:
&lt;source lang=Cpp&gt;
#pragma once

#include &lt;string&gt;

namespace common
{
    /// &lt;summary&gt;
    /// Class that comprises of constant values and recurring algorithms.
    /// 
    /// @author Saban
    /// 
    ///&lt;/summary&gt;
    class Common
    {
        /// &lt;summary&gt;
        /// Determines, if the character is trimmable or not.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;chCHARACTER&quot;&gt;Character to be checked&lt;/param&gt;
        /// &lt;param name=&quot;chTRIM&quot;&gt;
        /// Trim character that defaults to a space
        /// &lt;/param&gt;
        /// &lt;param name=&quot;bIS_NUMERIC&quot;&gt;
        /// If numeric, zeros are also considered as trimmable characters
        /// &lt;/param&gt;
        /// &lt;returns&gt;Whether the character is trimmable or not&lt;/returns&gt;
        static bool IsTrimmable(char const chCHARACTER,
            char const chTRIM = SPACE, bool const bIS_NUMERIC = true);

    public:
        /// &lt;summary&gt;Carriage return constant&lt;/summary&gt;
        //static char const CARRIAGE_RETURN = '\r';
        /// &lt;summary&gt;Constant of comma or decimal point in German&lt;/summary&gt;
        static char const COMMA = ',';
        /// &lt;summary&gt;Dash or minus constant&lt;/summary&gt;
        static char const DASH = '-';
        /// &lt;summary&gt;
        /// The exponent sign in a scientific number, or the letter e.
        /// &lt;/summary&gt;
        static char const EXPONENT = 'e';
        /// &lt;summary&gt;The full stop or period&lt;/summary&gt;
        static char const PERIOD = '.';
        /// &lt;summary&gt;Space constant&lt;/summary&gt;
        static char const SPACE = ' ';
        /// &lt;summary&gt;Space constant&lt;/summary&gt;
        static char const ZERO = '0';
        /// &lt;summary&gt;
        //// Value under which the double should switch to fixed-point.
        /// &lt;/summary&gt;
        static double const VERY_LARGE;
        /// &lt;summary&gt;
        //// Value above which the double should switch to fixed-point.
        /// &lt;/summary&gt;
        static double const NEARLY_ZERO;
          /// &lt;summary&gt;
          /// The zero string constant used at several places
        /// &lt;/summary&gt;
          static string const strZERO;

        /// &lt;summary&gt;
        /// Trims the trim character from left and right of the value.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;strVALUE&quot;&gt;Value to be trimmed&lt;/param&gt;
        /// &lt;param name=&quot;chTRIM&quot;&gt;
        /// Trim character that defaults to a space
        /// &lt;/param&gt;
        /// &lt;returns&gt;Trimmed string&lt;/returns&gt;
        static string const&amp; Trim(string const&amp; strVALUE,
            char const chTRIM = Common::SPACE);

        /// &lt;summary&gt;
        /// Trims the trim character from left the value.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;strVALUE&quot;&gt;Value to be trimmed&lt;/param&gt;
        /// &lt;param name=&quot;chTRIM&quot;&gt;
        /// Trim character that defaults to a space
        /// &lt;/param&gt;
        /// &lt;returns&gt;Trimmed string&lt;/returns&gt;
        static string const&amp; TrimLeft(string const&amp; strVALUE,
            char const chTRIM = Common::SPACE);

        /// &lt;summary&gt;
        /// Trims the trim character from right of the value.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;strVALUE&quot;&gt;Value to be trimmed&lt;/param&gt;
        /// &lt;param name=&quot;chTRIM&quot;&gt;
        /// Trim character that defaults to a space
        /// &lt;/param&gt;
        /// &lt;returns&gt;Trimmed string&lt;/returns&gt;
        static string const&amp; TrimRight(string const&amp; strVALUE,
            char const chTRIM = Common::SPACE);
    }; // class Common
}&lt;/source&gt;

The &lt;code&gt;Math&lt;/code&gt; class is an enhancement to the &lt;code&gt;&lt;math.h&gt;&lt;/code&gt; library and contains the rounding calculations.

&lt;u&gt;&lt;code&gt;Math.cpp&lt;/code&gt;&lt;/u&gt;:
&lt;source lang=Cpp&gt;
#include &quot;StdAfx.h&quot;
#include &lt;string&gt;

namespace common
{
    string const Maths::strZEROS = &quot;000000000000000000000000000000000&quot;;

    byte Maths::CalculateMissingSignificantZeros(
        byte const ySIGNIFICANTS_AFTER,
        char const chSEPARATOR,
        double const dVALUE,
        string const strMANTISSA)
    {
        // Existing significants after decimal separator are
        byte const yAFTER = FindSignificantsAfterDecimal(chSEPARATOR, strMANTISSA);
        // Number of digits to add are
        byte const yZEROS = ySIGNIFICANTS_AFTER - ((yAFTER == 0) ? 1 : yAFTER);

        return ((yZEROS &gt;= 0) ? yZEROS : 0);
    }

    byte Maths::FindDecimalSeparatorPosition(string const&amp; strVALUE)
    {
        byte const ySEPARATOR_AT = (byte)strVALUE.find(Common::PERIOD);

        return (ySEPARATOR_AT &gt; -1)
            ? ySEPARATOR_AT : (byte)strVALUE.find(Common::COMMA);
    }

    byte Maths::FindFirstNonZeroDigit(double const dVALUE)
    {
        return FindFirstNonZeroDigit(StringConverter::ToString
            &lt;double, StringConverter::DIGITS&gt;(dVALUE));
    }

    byte Maths::FindFirstNonZeroDigit(string const&amp; strVALUE)
    {
        // Find the position of the first non-zero digit:
        byte yNonZeroAt = 0;

        for (; (yNonZeroAt &lt; (byte)strVALUE.length())
            &amp;&amp; ((strVALUE[yNonZeroAt] == Common::DASH)
            || (strVALUE[yNonZeroAt] == Common::PERIOD)
            || (strVALUE[yNonZeroAt] == Common::ZERO)); yNonZeroAt++) ;

        return yNonZeroAt;
    }

    byte Maths::FindSignificantDigits(byte const ySIGNIFICANTS_AFTER,
        char const chSEPARATOR,
        double const dVALUE)
    {
        if (dVALUE == 0) return 0;
        else
        {
//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
            string strMantissa = FindMantissa(TestCommons::SIGNIFICANTS,
                chSEPARATOR, StringConverter::ToString&lt;double,
                StringConverter::DIGITS&gt;(dVALUE));

            if (dVALUE == static_cast&lt;long&gt;(dVALUE))
            {
                strMantissa =
                    strMantissa.substr(0, strMantissa.find(Common::COMMA));
            }

            strMantissa = RetrieveDigits(chSEPARATOR, strMantissa);

            return strMantissa.substr(
                FindFirstNonZeroDigit(strMantissa)).length();
        }
    }

    byte Maths::FindSignificantsAfterDecimal(byte const ySIGNIFICANTS_BEFORE,
        byte const ySIGNIFICANT_DIGITS)
    {
        byte const yAFTER_DECIMAL = ySIGNIFICANT_DIGITS - ySIGNIFICANTS_BEFORE;

        return (yAFTER_DECIMAL &gt; 0) ? yAFTER_DECIMAL : 0;
    }

    byte Maths::FindSignificantsAfterDecimal(char const chSEPARATOR,
        double const dVALUE)
    {
        if (dVALUE == 0) return 1;
        else
        {
//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
            string strValue = StringConverter::ToString&lt;double,
                StringConverter::DIGITS&gt;(dVALUE);

            byte const ySEPARATOR_AT = (byte)strValue.find(chSEPARATOR);

            if (ySEPARATOR_AT &gt; -1)
            {
                strValue = strValue.substr(ySEPARATOR_AT + 1);
            }

            short const sE_AT = strValue.find(Common::EXPONENT);

            if (sE_AT &gt; 0) strValue = strValue.substr(0, sE_AT);

            long lValue = StringConverter::FromString
                &lt;long, StringConverter::DIGITS&gt;(strValue);

            if (abs(dVALUE) &lt; 1)
            {
                return (byte)StringConverter::ToString&lt;long,
                    StringConverter::DIGITS&gt;(lValue).length();
            }
            else if (lValue == 0) return 0;
            else
            {
                strValue = &quot;0.&quot; + strValue;

                return (byte)(strValue.length() - 2);
            }
        }
    }

    byte Maths::FindSignificantsBeforeDecimal(char const chSEPARATOR,
        double const dVALUE)
    {
        string const strVALUE = StringConverter::ToString&lt;double,
            StringConverter::DIGITS&gt;(dVALUE);

        // Return immediately, if result is clear: Special handling at
        // crossroads of floating point and exponential numbers:
        if ((dVALUE == 0)
            || (abs(dVALUE) &gt;= Common::NEARLY_ZERO) &amp;&amp; (abs(dVALUE) &lt; 1))
        {
            return 0;
        }
        else if ((abs(dVALUE) &gt; 0) &amp;&amp; (abs(dVALUE) &lt; Common::NEARLY_ZERO))
        {
            return 1;
        }
        else
        {
            byte significants = 0;
            // Significant digits to the right of decimal separator:
            for (byte s = 0; s &lt; (byte)strVALUE.length(); s++)
            {
                if ((strVALUE[s] == chSEPARATOR)
                    || (strVALUE[s] == Common::EXPONENT))
                {
                    break;
                }
                else if (strVALUE[s] != Common::DASH) significants++;
            }

            return significants;
        }
    }

    byte Maths::FindSignificantsAfterDecimal(char const chSEPARATOR,
        string const strVALUE)
    {
        size_t const COMMA_AT = strVALUE.find(chSEPARATOR);
        size_t const LENGTH = strVALUE.length();
        // Existing digits after decimal separator are
        byte yAfter = 0;
        // Existing significants after decimal separator may start at the first
        // non-zero digit:
        if (StringConverter::FromString&lt;double, 5&gt;
            (strVALUE.substr(0, COMMA_AT)) == 0)
        {
            string strRightOf = Common::TrimLeft(strVALUE.substr(COMMA_AT + 1));

            yAfter = strRightOf.length();
        }
        else yAfter = (COMMA_AT &lt; string::npos) ? LENGTH - 1 - COMMA_AT : 0;

        return yAfter;
    }

    double Maths::Power(short const sBASIS, short const sEXPONENT)
    {
        if (sBASIS == 0) return (sEXPONENT != 0) ? 1 : 0;
        else
        {
            if (sEXPONENT == 0) return 1;
            else
            {
                // The Math method power does change the least significant 
                // digits after the decimal separator and is therefore useless.
                double result = 1;

                if (sEXPONENT &gt; 0)
                {
                    for (short s = 0; s &lt; sEXPONENT; s++) result *= sBASIS;
                }
                else if (sEXPONENT &lt; 0)
                {
                    for (short s = sEXPONENT; s &lt; 0; s++) result /= sBASIS;
                }

                return result;
            }
        }
    }

    double Maths::Round(byte const yDIGITS,
        char const chSEPARATOR,
        double const dVALUE)
    {
        if (dVALUE == 0) return 0;
        else
        {
            bool bIsScientific = false;
            double const dCONSTANT = Power(10, yDIGITS);

            if ((abs(dVALUE) &lt; Common::NEARLY_ZERO)
                || (abs(dVALUE) &gt;= Common::VERY_LARGE))
            {
                bIsScientific = true;
            }
            
            short const sEXPONENT =
                FindExponent(dVALUE, chSEPARATOR, bIsScientific);

            short sExponent = sEXPONENT;

            // Determine the correcting power:
            short sPower = sExponent;

            if (sEXPONENT == 0)
            {
                sPower = FindExponent(dVALUE, chSEPARATOR, HasDecimals(dVALUE));
            }

            double dValue1 = dVALUE*dCONSTANT*pow(10., -sPower);

            string const strE_SIGN = (sExponent &lt; 0)
                ? StringConverter::ToString&lt;char,
                StringConverter::DIGITS&gt;(Common::DASH) : &quot;&quot;;

            if (sExponent != 0)
            {
                sExponent = static_cast&lt;short&gt;(abs(sExponent));
                dValue1 = Round(dValue1);
            }
            else dValue1 = Round(dValue1)/dCONSTANT/pow(10., -sPower);

            // Power method cannot be used, as the exponentiated number may
            // exceed the maximal long value.
            sExponent -= Signum(sEXPONENT)*(FindSignificantDigits(
                yDIGITS, chSEPARATOR, dValue1) - 1);

            if (sEXPONENT != 0)
            {
//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
                string strValue = StringConverter::ToString&lt;double,
                    StringConverter::DIGITS&gt;(dValue1);

//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
                strValue =
                    strValue.substr(0, FindDecimalSeparatorPosition(strValue))
                    + Common::EXPONENT + strE_SIGN
                    + StringConverter::ToString&lt;short,
                    StringConverter::DIGITS&gt;(sExponent);

                dValue1 = StringConverter::FromString&lt;double, 5&gt;(strValue);
            }

            return dValue1;
        }
    }

    double Maths::Round(double const dValue)
    {
        return (double)(long long)(dValue + .5);
    }

    short Maths::FindExponent(double const dVALUE,
        char const chSEPARATOR,
        bool const bSCIENTIFIC)
    {
//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
        return (short)StringConverter::FromString&lt;short,
            StringConverter::DIGITS&gt;(FindExponent(StringConverter::ToString
            &lt;double, StringConverter::DIGITS&gt;(dVALUE), chSEPARATOR,
            bSCIENTIFIC));
    }

    string Maths::FindExponent(string const&amp; strVALUE,
        char const chSEPARATOR,
        bool const bSCIENTIFIC)
    {
        if (StringConverter::FromString
            &lt;double, StringConverter::DIGITS&gt;(strVALUE) == 0)
        {
            return Common::strZERO;
        }

        short const sE_AT = strVALUE.find(Common::EXPONENT);
        short sExponent = 0;

        if (sE_AT &lt; 0)
        {
            // If all numbers are to be considered scientific, such as
            // 1 = 1.0000e0…
            if (bSCIENTIFIC)
            {
                // Find the exponent by counting leading zeros:
                byte const ySEPARATOR_AT = strVALUE.find(chSEPARATOR);

                if (ySEPARATOR_AT &gt; -1)
                {
                    string const strAFTER = strVALUE.substr(ySEPARATOR_AT + 1);
                    sExponent = 0;

                    for (; sExponent &lt; (short)strAFTER.length(); sExponent++)
                    {
                        if ((strAFTER[sExponent] &gt;= '1')
                            &amp;&amp; (strAFTER[sExponent] &lt;= '9'))
                        {
                            sExponent *= -1;
                            break;
                        }
                    }
                }
            }
            else return Common::strZERO;
        }
        else
        {
            sExponent = (short)StringConverter::FromString
                &lt;double, StringConverter::DIGITS&gt;(strVALUE.substr(sE_AT + 1));
        }

        return StringConverter::ToString&lt;short,
            StringConverter::DIGITS&gt;(sExponent);
    }

    string Maths::FindMantissa(byte const yDIGITS,
        char const chSEPARATOR,
        const string&amp; strVALUE)
    {
        byte yDigits = yDIGITS;
        short const sE_AT = strVALUE.find(Common::EXPONENT);
        string strValue = strVALUE;

        // Remove lagging insignificant zeros, if any:
        if (sE_AT == -1)
        {
            if (StringConverter::FromString&lt;short,
                3&gt;(strValue.substr(0, 2)) == 0)
            {
                byte yPosition = 2;

                for (; (yPosition &lt; (byte)strValue.length())
                    &amp;&amp; ((strValue[yPosition] == Common::PERIOD)
                    || (strValue[yPosition] == Common::ZERO)); yPosition++);

                yDigits += yPosition;

                strValue = strValue.substr(0, yDigits);
            }
        }
        else strValue = Common::TrimRight(strValue.substr(0, sE_AT));

        if (StringConverter::FromString&lt;double, StringConverter::DIGITS&gt;(strValue) == 0)
        {
            strValue = RemoveInsignificants(yDIGITS, strValue);
        }
        else strValue = RemoveInsignificants(yDigits, strValue);

        if (FindDecimalSeparatorPosition(strValue) == -1)
        {
            return strValue + &quot;.0&quot;;
        }
        else return strValue;
    }

    string Maths::RemoveInsignificants(byte const yDIGITS,
        string const&amp; strVALUE)
    {
        byte const yCHARACTERS = yDIGITS
            + ((FindDecimalSeparatorPosition(strVALUE) &lt; string::npos) ? 1 : 0)
            + ((strVALUE[0] == Common::DASH)
            ? ((strVALUE[1] == Common::ZERO) ? 2 : 1)
            : ((strVALUE[0] == Common::ZERO) ? 1 : 0));

        return strVALUE.substr(0, yCHARACTERS);
    }

    string Maths::RetrieveDigits(char const chSEPARATOR, const string&amp; strNUMBER)
    {
        string strNumber = strNUMBER;

        short const sE_AT = strNumber.find(Common::EXPONENT);
        // Strip off exponent part, if it exists:
        if (sE_AT &gt; -1) strNumber = strNumber.substr(0, sE_AT);

//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'replace':
        return StringConverter::Replace(StringConverter::Replace(strNumber,
            StringConverter::ToString&lt;char, 1&gt;(Common::DASH), &quot;&quot;),
            StringConverter::ToString&lt;char, 1&gt;(chSEPARATOR), &quot;&quot;);
    }

    string Maths::RoundToString(byte const ySIGNIFICANT_DIGITS,
        char const chSEPARATOR,
        double dValue)
    {
        // Number of significants that *are* before the decimal separator:
//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
        byte const ySIGNIFICANTS_BEFORE =
            FindSignificantsBeforeDecimal(chSEPARATOR, dValue);
        // Number of decimals that *should* be after the decimal separator:
        byte const ySIGNIFICANTS_AFTER = FindSignificantsAfterDecimal(
            ySIGNIFICANTS_BEFORE, ySIGNIFICANT_DIGITS);

        byte const yDIGITS = (dValue != 0)
            ? ySIGNIFICANTS_BEFORE + ySIGNIFICANTS_AFTER : 3 /* = 0.0 */;
        // Round to the specified number of digits after decimal separator:
        double const dROUNDED =
            Maths::Round(ySIGNIFICANTS_AFTER, chSEPARATOR, dValue);

//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
        string const strEXPONENT = FindExponent(StringConverter::ToString
            &lt;double, StringConverter::DIGITS&gt;(dROUNDED));
//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
        string const strMANTISSA = FindMantissa(TestCommons::SIGNIFICANTS,
            chSEPARATOR, StringConverter::ToString&lt;double,
            StringConverter::DIGITS&gt;(dROUNDED));

        double const dMANTISSA = StringConverter::FromString
            &lt;double, TestCommons::SIGNIFICANTS&gt;(strMANTISSA);
        StringBuilder* pRESULT = new StringBuilder(strMANTISSA);

        // Determine the significant digits in this number:
        byte const ySIGNIFICANTS = FindSignificantDigits(ySIGNIFICANTS_AFTER,
            chSEPARATOR, dMANTISSA);
        // Add lagging zeros, if necessary:
        if (ySIGNIFICANTS &lt;= ySIGNIFICANT_DIGITS)
        {
            if (ySIGNIFICANTS_AFTER != 0)
            {
                if (dValue != 0)
                {
                    pRESULT-&gt;Append(strZEROS.substr(0,
                        CalculateMissingSignificantZeros(ySIGNIFICANTS_AFTER,
                        chSEPARATOR, dMANTISSA, strMANTISSA)));
                }
            }
            else
            {
                // Cut off the decimal separator &amp; after decimal digits:
//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
                byte const yDECIMAL =
                    pRESULT-&gt;Find(StringConverter::ToString&lt;char,
                    StringConverter::DIGITS&gt;(chSEPARATOR));

                if (yDECIMAL &gt; -1) pRESULT-&gt;SetLength(yDECIMAL);
            }
        }
        else if (ySIGNIFICANTS_BEFORE &gt; ySIGNIFICANT_DIGITS)
        {
            dValue /= Power(10, ySIGNIFICANTS_BEFORE - ySIGNIFICANT_DIGITS);

            dValue = Round(dValue);

            byte const yDIGITS = ySIGNIFICANT_DIGITS + ((dValue &lt; 0) ? 1 : 0);
//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
            string const strVALUE = StringConverter::ToString&lt;double,
                StringConverter::DIGITS&gt;(dValue).substr(0, yDIGITS);
            pRESULT-&gt;SetLength(0);

            pRESULT-&gt;Append(strVALUE + strZEROS.substr(0,
                ySIGNIFICANTS_BEFORE - ySIGNIFICANT_DIGITS));
        }

        if (StringConverter::FromString&lt;double,
            StringConverter::DIGITS&gt;(strEXPONENT) != 0)
        {
            pRESULT-&gt;Append(Common::EXPONENT + strEXPONENT);
        }

//JAVA TO C++ CONVERTER TODO TASK: No native C++ equivalent to 'ToString':
        return pRESULT-&gt;ToString();
    } // public static String RoundToString(…)
}&lt;/source&gt;

&lt;u&gt;&lt;code&gt;Math.h&lt;/code&gt;&lt;/u&gt;:
&lt;source lang=Cpp&gt;
#pragma once

#include &lt;string&gt;
#include &lt;cmath&gt;

/// 
namespace common
{
    /// &lt;summary&gt;
    /// Class for special mathematical calculations.
    /// ATTENTION: Should not depend on any other class except Java libraries!
    /// @author Saban
    ///&lt;/summary&gt;
    class Maths
    {
    private:
        /// &lt;summary&gt;The string of zeros&lt;/summary&gt;
        static string const strZEROS;

        /// &lt;summary&gt;
        /// Determines how many zeros are to be appended after the decimal
        /// digits.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;ySIGNIFICANTS_AFTER&quot;&gt;
        /// Requested significant digits after decimal
        /// &lt;/param&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;
        /// Language-specific decimal separator
        /// &lt;/param&gt;
        /// &lt;/param&gt;
        /// &lt;param name=&quot;dVALUE&quot;&gt;Rounded number&lt;/param&gt;
        /// &lt;param name=&quot;strMANTISSA&quot;&gt;
        /// Current string where missing digits are to be determined
        /// &lt;/param&gt;
        /// &lt;returns&gt;Requested value&lt;/returns&gt;
        static byte CalculateMissingSignificantZeros(
            byte const ySIGNIFICANTS_AFTER, char const chSEPARATOR,
            double const dVALUE,
            string const strMANTISSA = &quot;&quot;);

        /// &lt;summary&gt;
        /// Finds the decimal position language-independently.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;strVALUE&quot;&gt;
        /// Value to be searched for the decimal separator
        /// &lt;/param&gt;
        /// &lt;returns&gt;
        /// The position of the decimal separator or string::npos,
        /// if no decimal separator has been found.
        /// &lt;/returns&gt;
        static byte FindDecimalSeparatorPosition(string const&amp; strVALUE);

        /// &lt;summary&gt;
        /// Finds the first non-zero decimal position.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;dVALUE&quot;&gt;
        /// Value to be searched for the decimal position
        /// &lt;/param&gt;
        /// &lt;returns&gt;The first non-zero decimal position&lt;/returns&gt;
        static byte FindFirstNonZeroDigit(double const dVALUE);

        /// &lt;summary&gt;
        /// Finds the first non-zero decimal position.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;strVALUE&quot;&gt;
        /// Value to be searched for the decimal position
        /// &lt;/param&gt;
        /// &lt;returns&gt;The first non-zero decimal position&lt;/returns&gt;
        static byte FindFirstNonZeroDigit(string const&amp; strVALUE);

        /// &lt;summary&gt;
        /// Calculates the number of all significant digits (without the sign
        /// and the decimal separator).
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;ySIGNIFICANTS_AFTER&quot;&gt;
        /// Number of decimal places after the separator&lt;/param&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;
        /// Language-specific decimal separator
        /// &lt;/param&gt;
        /// &lt;param name=&quot;dVALUE&quot;&gt;
        /// Value where the digits are to be counted
        /// &lt;/param&gt;
        /// &lt;returns&gt;Number of significant digits&lt;/returns&gt;
        static byte FindSignificantDigits(byte const ySIGNIFICANTS_AFTER,
            char const chSEPARATOR, double const dVALUE);

        /// &lt;summary&gt;
        /// Determines the number of significant digits after the decimal
        /// separator knowing the total number of significant digits and the
        /// number before the decimal separator.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;ySIGNIFICANTS_BEFORE&quot;&gt;
        /// Number of significant digits before separator
        /// &lt;/param&gt;
        /// &lt;param name=&quot;ySIGNIFICANT_DIGITS&quot;&gt;
        /// Number of all significant digits
        /// &lt;/param&gt;
        /// Number of significant decimals after the separator
        /// &lt;/returns&gt;
        static byte FindSignificantsAfterDecimal(
            byte const ySIGNIFICANTS_BEFORE, byte const ySIGNIFICANT_DIGITS);

        /// &lt;summary&gt;
        /// Finds the significant digits after the decimal separator of a
        /// mantissa.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;
        /// Language-specific decimal separator
        /// &lt;/param&gt;
        /// &lt;param name=&quot;dVALUE&quot;&gt;Value to be scrutinised&lt;/param&gt;
        /// &lt;returns&gt;
        /// Number of insignificant zeros after decimal separator.
        /// &lt;/returns&gt;
        static byte FindSignificantsAfterDecimal(char const chSEPARATOR,
            double const dVALUE);

        /// &lt;summary&gt;
        /// Finds the significant digits after the decimal separator of a
        /// mantissa.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;
        /// Language-specific decimal separator
        /// &lt;/param&gt;
        /// &lt;param name=&quot;strVALUE&quot;&gt;Value to be scrutinised&lt;/param&gt;
        /// &lt;returns&gt;
        /// Number of insignificant zeros after decimal separator.
        /// &lt;/returns&gt;
        static byte FindSignificantsAfterDecimal(char const chSEPARATOR,
            string const strVALUE);

        /// &lt;summary&gt;
        /// Determines the number of digits before the decimal point.&lt;/summary&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;
        /// Language-specific decimal separator
        /// &lt;/param&gt;
        /// &lt;param name=&quot;dVALUE&quot;&gt;Value to be scrutinised&lt;/param&gt;
        /// &lt;returns&gt;Number of digits before the decimal separator&lt;/returns&gt;
        static byte FindSignificantsBeforeDecimal(char const chSEPARATOR,
            double const dVALUE);

        /// &lt;summary&gt;
        /// Returns the exponent part of the double number.&lt;/summary&gt;
        /// &lt;param name=&quot;dVALUE&quot;&gt;
        /// Value of which the exponent is of interest
        /// &lt;/param&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;Decimal separator&lt;/param&gt;
        /// &lt;param name=&quot;bSCIENTIFIC&quot;&gt;
        /// If true, the number is considered in scientific notation of the form
        /// 9.999e999 (like 1 = 1.0e0 or 0.124 = 1.24e-1).
        /// &lt;/param&gt;
        /// &lt;returns&gt;Exponent of the number or zero.&lt;/returns&gt;
        static short FindExponent(double const dVALUE,
            char const chSEPARATOR = Common::PERIOD,
            bool const bSCIENTIFIC = false);

        /// &lt;summary&gt;
        /// Finds the exponent of a number.&lt;/summary&gt;
        /// &lt;param name=&quot;strVALUE&quot;&gt;
        /// Value where an exponent is to be searched
        /// &lt;/param&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;Decimal separator&lt;/param&gt;
        /// &lt;param name=&quot;bSCIENTIFIC&quot;&gt;
        /// If true, the number is considered in scientific notation of the form
        /// 1 = 1.0e0 or 0.124 = 1.24e-1.
        /// &lt;/param&gt;
        /// &lt;returns&gt;Exponent, if it exists, or &quot;0&quot;&lt;/returns&gt;
        static string FindExponent(string const&amp; strVALUE,
            char const chSEPARATOR = Common::PERIOD,
            bool const bSCIENTIFIC = false);

        /// &lt;summary&gt;
        /// Finds the mantissa of a number.&lt;/summary&gt;
        /// &lt;param name=&quot;yDIGITS&quot;&gt;
        /// Number of all digits
        /// &lt;/param&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;
        /// Language-specific decimal separator
        /// &lt;/param&gt;
        /// &lt;param name=&quot;strVALUE&quot;&gt;
        /// Value where the mantissa is to be found
        /// &lt;/param&gt;
        /// &lt;returns&gt;Mantissa of the number&lt;/returns&gt;
        static string FindMantissa(byte const yDIGITS,
            char const chSEPARATOR,
            string const&amp; strVALUE);

        /// &lt;summary&gt;
        /// Removes all insignificant digits.&lt;/summary&gt;
        /// &lt;param name=&quot;yDIGITS&quot;&gt;
        /// Number of significant digits
        /// &lt;/param&gt;
        /// &lt;returns&gt;Number with the requested number of digits&lt;/returns&gt;
        static string RemoveInsignificants(byte const yDigits,
            string const&amp; strVALUE);

        /// &lt;summary&gt;
        /// Retrieves the digits of the value without decimal separator or
        /// sign.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;strNUMBER&quot;&gt;Mantissa to be scrutinised&lt;/param&gt;
        /// &lt;returns&gt;The digits only&lt;/returns&gt;
        static string RetrieveDigits(char const chSEPARATOR,
            string const&amp; strNUMBER);

    public:
        /// &lt;summary&gt;
        /// Determines whether the number has decimal places after 
        /// the separator or not.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;VALUE&quot;&gt;&lt;/param&gt;
        /// &lt;returns&gt;true, if it has decimals and false otherwise.&lt;/returns&gt;
        template&lt;class T&gt; 
        static bool HasDecimals(const T VALUE)
        {
            return ((VALUE - (long long)VALUE) != 0);
        }

        /// &lt;summary&gt;
        /// Calculates the power of the base to the exponent without changing
        /// the least-significant digits of a number.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;BASIS&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;EXPONENT&quot;&gt;&lt;/param&gt;
        /// &lt;returns&gt;BASIS to power of EXPONENT&lt;/returns&gt;
        static double Power(short const sBASIS, short const sEXPONENT);

        /// &lt;summary&gt;
        /// Rounds a number to the decimal places.&lt;/summary&gt;
        /// &lt;param name=&quot;yDIGITS&quot;&gt;Number of all decimal places&lt;/param&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;
        /// Language-specific decimal separator
        /// &lt;/param&gt;
        /// &lt;param name=&quot;dVALUE&quot;&gt;Number to be rounded&lt;/param&gt;
        /// &lt;returns&gt;Rounded number to the requested decimal places&lt;/returns&gt;
        static double Round(byte const yDIGITS,
            char const chSEPARATOR, double const dVALUE);

        /// &lt;summary&gt;
        /// Replacement for Math.round(double) of Java.&lt;/summary&gt;
        /// &lt;param name=&quot;dValue&quot;&gt;Number to be rounded&lt;/param&gt;
        /// &lt;returns&gt;Rounded number to the requested decimal places&lt;/returns&gt;
        static double Round(double const dVALUE);

        /// &lt;summary&gt;Signum function&lt;/summary&gt;
        /// &lt;param name=&quot;number&quot;&gt;Value to be scrutinised&lt;/param&gt;
        /// &lt;returns&gt;Sign of the number&lt;/returns&gt;
        template&lt;class T&gt; 
        static byte Signum(T number) 
        {
            return (number &lt; T(0)) ? T(-1) : (number &gt; T(0));
        }

        /// &lt;summary&gt;
        /// Rounds to a fixed number of significant digits.&lt;/summary&gt;
        /// &lt;param name=&quot;ySIGNIFICANT_DIGITS&quot;&gt;
        /// Requested number of significant digits
        /// &lt;/param&gt;
        /// &lt;param name=&quot;chSEPARATOR&quot;&gt;
        /// Language-specific decimal separator
        /// &lt;/param&gt;
        /// &lt;param name=&quot;dValue&quot;&gt;Number to be rounded&lt;/param&gt;
        /// &lt;returns&gt;Rounded number&lt;/returns&gt;
        static string RoundToString(byte const ySIGNIFICANT_DIGITS,
            char const chSEPARATOR, double dValue);
    }; // class Maths
}&lt;/source&gt;

Using precompiled headers requires the StdAfx files:

&lt;u&gt;&lt;code&gt;StdAfx.cpp&lt;/code&gt;&lt;/u&gt;:
&lt;source lang=Cpp&gt;
// StdAfx.cpp : Quelldatei, die nur die Standard-Includes einbindet.
// Commons.pch ist der vorkompilierte Header.
// StdAfx.obj enthält die vorkompilierten Typinformationen.

#include &quot;StdAfx.h&quot;
&lt;/source&gt;

&lt;u&gt;&lt;code&gt;StdAfx.h&lt;/code&gt;&lt;/u&gt;:
&lt;source lang=Cpp&gt;
// StdAfx.h : Includedatei für Standardsystem-Includedateien
// oder häufig verwendete projektspezifische Includedateien,
// die nur in unregelmäßigen Abständen geändert werden.
//

#pragma once

using namespace std;

typedef signed char byte;
typedef unsigned short ushort;

// Used headers:
#include &quot;Common.h&quot;
#include &quot;Maths.h&quot;
#include &quot;StringBuilder.h&quot;
#include &quot;TestCommons.h&quot;

#include &quot;StringConverter.h&quot;

#include &lt;iostream&gt;
&lt;/source&gt;

The &lt;code&gt;StringBuilder&lt;/code&gt; class was added by the JAVA TO C++ CONVERTER during the crosscompilation:

&lt;u&gt;&lt;code&gt;StringBuilder.cpp&lt;/code&gt;&lt;/u&gt;:
&lt;source lang=Cpp&gt;
#include &quot;StdAfx.h&quot;

namespace common
{
    StringBuilder::StringBuilder()
    {
        strMain = &quot;&quot;;
    }
    
    StringBuilder::StringBuilder(string const&amp; strVALUE)
    {
        Append(strVALUE);
    }
    
    size_t const StringBuilder::Find(string const&amp; strSEARCH) const
    {
        return strMain.find(strSEARCH);
    }
 
    string const&amp; StringBuilder::ToString() const
    {
        return strMain; 
    }

    void StringBuilder::Append(string const&amp; strVALUE)
    {
        strMain.append(strVALUE);
    }

    void StringBuilder::SetLength(const string::size_type SIZE)
    {
        strMain.resize(SIZE);
    }
}&lt;/source&gt;

&lt;u&gt;&lt;code&gt;StringBuilder.h&lt;/code&gt;&lt;/u&gt;:
&lt;source lang=Cpp&gt;
#pragma once

namespace common
{
    class StringBuilder
    {
    private: 
        string strMain; 

    public:
        /// &lt;summary&gt;
        /// Standard constructor
        /// &lt;/summary&gt;
        StringBuilder();

        /// &lt;summary&gt;
        /// Constructor
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;strSUBJECT&quot;&gt;Value to be used&lt;/param&gt;
        StringBuilder(string const&amp; strSUBJECT);

        /// &lt;summary&gt;
        /// Finds the search string inside itself.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;strSEARCH&quot;&gt;Value to be used&lt;/param&gt;
        /// &lt;returns&gt;
        /// The position of the searched text or -1, if the search string
        /// has not been found.
        /// &lt;/returns&gt;
        size_t const Find(string const&amp; strSEARCH) const;

        /// &lt;summary&gt;
        /// Converts the contents of itself to a string.
        /// &lt;/summary&gt;
        /// &lt;returns&gt;String content&lt;/returns&gt;
        string const&amp; ToString() const;

        /// &lt;summary&gt;
        /// Appends a text to this object
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;strVALUE&quot;&gt;Value to be appended&lt;/param&gt;
        void Append(string const&amp; strVALUE);

        /// &lt;summary&gt;
        /// Sets the length of the content of this object.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;SIZE&quot;&gt;New reduced size&lt;/param&gt;
        void SetLength(const string::size_type SIZE);
    };
}&lt;/source&gt;

Extensive testing of a software is crucial for qualitative code. To say that the code is tested does not give much information. The question is ''what'' is tested. Not in this case, but often it is also important to know ''where'' (in which environment) it was tested, and ''how'' - i.e. the test succession. Here is the code used to test the &lt;code&gt;Maths&lt;/code&gt; class.

&lt;u&gt;&lt;code&gt;TestCommons.cpp&lt;/code&gt;&lt;/u&gt;:
&lt;source lang=Cpp&gt;
#include &quot;StdAfx.h&quot;


namespace common
{
    void TestCommons::Test()
    {
        // Test rounding
        vector&lt;double&gt;* pa_dValues = new vector&lt;double&gt;();

        vector&lt;double&gt;&amp; a_dValues = *pa_dValues;

        a_dValues.push_back(0.0);
        AddValue(1.4012984643248202e-45, a_dValues);
        AddValue(1.999999757e-5, a_dValues);
        AddValue(1.999999757e-4, a_dValues);
        AddValue(0.000640589, a_dValues);
        AddValue(1.999999757e-3, a_dValues);
        AddValue(0.3396899998188019, a_dValues);
        AddValue(0.34, a_dValues);
        AddValue(7.07, a_dValues);
        AddValue(118.188, a_dValues);
        AddValue(118.2, a_dValues);
        AddValue(123.405009, a_dValues);
        AddValue(30.76994323730469, a_dValues);
        AddValue(130.76994323730469, a_dValues);
        AddValue(540, a_dValues);
        AddValue(12345, a_dValues);
        AddValue(123456, a_dValues);
        AddValue(540911, a_dValues);
        AddValue(9.223372036854776e56, a_dValues);

        byte const ySIGNIFICANTS = 5;

        for (vector&lt;double&gt;::const_iterator element = a_dValues.begin();
            element != a_dValues.end(); ++element)
        {
            cout &lt;&lt; &quot;Maths::RoundToString(&quot; &lt;&lt; (short)ySIGNIFICANTS &lt;&lt; &quot;, '&quot;
                &lt;&lt; Common::PERIOD &lt;&lt; &quot;', &quot; &lt;&lt; StringConverter::ToString
                &lt;double, StringConverter::DIGITS&gt;(*element) &lt;&lt; &quot;) = &quot;;
            cout &lt;&lt; Maths::RoundToString(ySIGNIFICANTS, Common::PERIOD,
                *element) &lt;&lt; endl;
        }

        pa_dValues-&gt;clear();
        byte y;

        cin &gt;&gt; y;
    } // void Test()

    void TestCommons::AddValue(double const dVALUE, vector&lt;double&gt;&amp; a_dValues)
    {
        a_dValues.push_back(-dVALUE);
        a_dValues.push_back(dVALUE);
    }
}&lt;/source&gt;

&lt;u&gt;&lt;code&gt;TestCommons.h&lt;/code&gt;&lt;/u&gt;:
&lt;source lang=Cpp&gt;
#pragma once

#include &lt;string&gt;
#include &lt;vector&gt;

namespace common
{
    /// &lt;summary&gt;
    /// Test class for the common functionality
    /// @author Saban
    ///&lt;/summary&gt;
    class TestCommons
    {
    private:
        /// &lt;summary&gt;
        /// Method that adds a negative and a positive value to values.&lt;/summary&gt;
        /// &lt;param name=&quot;dVALUE&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;a_dValues&quot;&gt;&lt;/param&gt;
        static void AddValue(double const dVALUE, vector&lt;double&gt;&amp; a_dValues);

    public:
        /// &lt;summary&gt;Number of significant digits&lt;/summary&gt;
        static short const SIGNIFICANTS = 5;

        /// &lt;summary&gt;
        /// Test for the common functionality&lt;/summary&gt;
        /// &lt;param name=&quot;args&quot;&gt;&lt;/param&gt;
        static void Test();
    }; // class TestCommons
}&lt;/source&gt;

The results of your better code should comply with the result I got:

 Maths::RoundToString(5, '.', 0.00000000000000000) = 0.00000
 Maths::RoundToString(5, '.', -1.40129846432482020e-045) = -1.4012e-45
 Maths::RoundToString(5, '.', 1.40129846432482020e-045) = 1.4013e-45
 Maths::RoundToString(5, '.', -1.99999975700000000e-005) = -1.9998e-5
 Maths::RoundToString(5, '.', 1.99999975700000000e-005) = 2.0000e-5
 Maths::RoundToString(5, '.', -0.00019999997570000) = -0.00019999
 Maths::RoundToString(5, '.', 0.00019999997570000) = 0.00020000
 Maths::RoundToString(5, '.', -0.00064058900000000) = -0.00064058
 Maths::RoundToString(5, '.', 0.00064058900000000) = 0.00064059
 Maths::RoundToString(5, '.', -0.00199999975700000) = -0.0019999
 Maths::RoundToString(5, '.', 0.00199999975700000) = 0.0020000
 Maths::RoundToString(5, '.', -0.33968999981880188) = -0.33967
 Maths::RoundToString(5, '.', 0.33968999981880188) = 0.33968
 Maths::RoundToString(5, '.', -0.34000000000000002) = -0.33999
 Maths::RoundToString(5, '.', 0.34000000000000002) = 0.34000
 Maths::RoundToString(5, '.', -7.07000000000000030) = -7.0699
 Maths::RoundToString(5, '.', 7.07000000000000030) = 7.0700
 Maths::RoundToString(5, '.', -118.18800000000000000) = -118.18
 Maths::RoundToString(5, '.', 118.18800000000000000) = 118.19
 Maths::RoundToString(5, '.', -118.20000000000000000) = -118.19
 Maths::RoundToString(5, '.', 118.20000000000000000) = 118.20
 Maths::RoundToString(5, '.', -123.40500900000001000) = -123.40
 Maths::RoundToString(5, '.', 123.40500900000001000) = 123.41
 Maths::RoundToString(5, '.', -30.76994323730469100) = -30.768
 Maths::RoundToString(5, '.', 30.76994323730469100) = 30.770
 Maths::RoundToString(5, '.', -130.76994323730469000) = -130.75
 Maths::RoundToString(5, '.', 130.76994323730469000) = 130.77
 Maths::RoundToString(5, '.', -540.00000000000000000) = -539.99
 Maths::RoundToString(5, '.', 540.00000000000000000) = 540.00
 Maths::RoundToString(5, '.', -12345.00000000000000000) = -12344
 Maths::RoundToString(5, '.', 12345.00000000000000000) = 12345
 Maths::RoundToString(5, '.', -123456.00000000000000000) = -123450
 Maths::RoundToString(5, '.', 123456.00000000000000000) = 123460
 Maths::RoundToString(5, '.', -540911.00000000000000000) = -540900
 Maths::RoundToString(5, '.', 540911.00000000000000000) = 540910
 Maths::RoundToString(5, '.', -9.22337203685477560e+056) = -9.2232e56
 Maths::RoundToString(5, '.', 9.22337203685477560e+056) = 9.2234e56

If you are interested in a comparison of C++ with [[w:C Sharp|C#]], take a look at [[C Sharp Programming/The .NET Framework/Console Programming#Rounding_number_example|C# programming rounding number example]]. If you want to compare C++ with [[w:Java (programming language)|Java]], compare it to the rounding code at [[Java Programming/Mathematical_functions#Rounding_number_example|Java Programming rounding number example]].

[[Category:{{FULLBOOKNAME}}|I]]</text>
      <sha1>e4zt3mdllaxxpo2zvl9jxjl3527hixd</sha1>
    </revision>
  </page>
  <page>
    <title>Introduction to Sociology/Politics and Government</title>
    <ns>0</ns>
    <id>40146</id>
    <revision>
      <id>2365011</id>
      <parentid>1548019</parentid>
      <timestamp>2012-06-17T11:50:20Z</timestamp>
      <contributor>
        <username>Mabdul</username>
        <id>173174</id>
      </contributor>
      <minor />
      <comment>remove templates which aren't existent/not used/not useful</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{cleanup|Fork of [[Wikipedia:Politics]] and [[Wikipedia:Government]] with no credit to Wikipedia, and no work to fix this to work as a textbook module. I will divert the links from [[Introduction to Sociology]] to link to Wikipedia instead. --[[User:Kernigh|Kernigh]] 18:21, 1 January 2006 (UTC)}}

'''Politics''' is the process by which decisions are made for a given society. The method of making decisions for groups varies, but the act of decision making is the key component that characterises politics.  Although it is generally applied to [[government]]s, politics is also observed in all human group interactions, including [[corporate]], [[academic]], and [[religion|religious]] institutions.  
{{Elections|
image=|
caption=|
Politics= political science
}}
'''[[Political science]]''' is the study of political behavior and examines the acquisition and application of [[power]], i.e. the ability to impose one's will on another.  

One theorist, [[Harold Lasswell]], has defined politics as &quot;who gets what, when, and how.&quot;

Another definition of 'politics' is: &quot;how power is distributed within a group or system&quot;. 

==A natural state==
In [[1651]], [[Thomas Hobbes]] published his most famous work, ''[[Leviathan (book)|Leviathan]]'', in which he proposed a model of early human development to justify the creation of human associations.  Hobbes described an ideal [[state of nature]] wherein every person had equal right to every resource in nature and was free to use any means to acquire those resources.  Noting that such an arrangement created a “war of all against all” (''[[bellum omnium contra omnes]]'').   Further, he noted that men would enter into a [[social contract]] and would give up absolute rights for certain protections.  

While it appears that social cooperation and [[dominance hierarchy|dominance hierarchies]] predate human societies, Hobbes’s model illustrates a rationale for the creation of [[societies]] ([[polity|polities]]).

==Early history==
[[V.G. Childe]] describes the transformation of human society that took place around [[6th millennium BCE|6000 BCE]] as an urban revolution.  Among the features of this new type of civilization were the institutionalization of social stratification, non-agricultural specialised crafts (including priests and lawyers), taxation, and writing.  All of which require densely populated settlements - cities.

The word &quot;Politics&quot; is derived from the Greek word for city-state, &quot;[[Polis]]&quot;.  Corporate, religious, academic and every other polity, especially those constrained by limited resources, contain dominance hierarchy and therefore politics.  Politics is most often studied in relation to the administration of governments.

The oldest form of government was tribal organization.  Rule by elders was supplanted by [[monarchy]], and a system of [[Feudalism]] as an arrangement where a single family dominated the political affairs of a community.  Monarchies have existed in one form or another for the past 5000 years of human history.

==Definitions==
*'''[[Political power|Power]]''' is the ability to impose one's will on another. It implies a capacity for force, i.e violence.  
*'''[[Authority]]''' is the power to enforce laws, to exact obedience, to command, to determine, or to judge.  
*'''[[Legitimacy]]''' is an attribute of government gained through the acquisition and application of power in accordance with recognized or accepted standards or principles.  
*A '''[[government]]''' is the body that has the authority to make and enforce rules or laws.

==Political power==
[[Samuel Gompers]]’ maxim,&quot;Reward your friends and punish your enemies,&quot; hints at two of the five types of power recognized by [[social psychology|social psychologists]]: '''incentive power''' (the power to reward) and '''coercive power''' (the power to punish).  Arguably the other three grow out of these two.

'''Legitimate power''', the power of the policeman or the referee, is the power given to an individual by a recognized authority to enforce standards of behavior.  Legitimate power is similar to coercive power in that unacceptable behavior is punished by fine or penalty.

'''Referent power''' is bestowed upon individuals by virtue of accomplishment or attitude.  Fulfillment of the desire to feel similar to a celebrity or a hero is the reward for obedience.

'''Expert power''' springs from education or experience.  Following the lead of  an experienced coach is often rewarded with success.  Expert power is conditional to the circumstances.  A brain surgeon is no help when your pipes are leaking.

==Authority and legitimacy==
[[Max Weber]] identified three sources of legitimacy for authority known as ([[tripartite classification of authority]]). He proposed three reasons why people followed the orders of those who gave them:

===Traditional===
[[traditional domination|Traditional authorities]] receive loyalty because they continue and support the preservation of existing values, the status quo. Traditional authority has the longest history.  Patriarchal (and more rarely Matriarchal) societies gave rise to hereditary monarchies where authority was given to descendants of previous leaders. Followers submit to this authority because &quot;we've always done it that way.&quot;  Examples of traditional authoritarians include kings and queens.

===Charismatic===
[[Charismatic domination|Charismatic authority]] grows out of the personal charm or the strength of an individual personality (see [[cult of personality]] for the most extreme version).  Charismatic regimes are often short lived, seldom outliving the charismatic figure that leads them.  Examples include [[Hitler]], [[Napoleon]], and [[Mao Zedong|Mao]]. Charismatic authority is also frequently seen as the catalyzing force of social movements, such as in Jesus Christ, Mohandas Gandhi, or Martin Luther King, Jr. Weber was interested in what happens to the authority embodied in these charismatic leaders once they died. He argued that the authority structure would be transmitted to one of the other two types. One possibility is that an heir of some kind (offspring or an influential follower) would take over, leading towards a form of traditional authority. Or, the charisma of the leader would be rationalized and placed into a bureaucratic or rule-oriented power authority structure (i.e legal-rational authority).

===Legal-rational===
[[Legal domination|Legal-Rational authorities]] receive their ability to compel behavior by virtue of the office that they hold. It is the authority that demands obedience to the office rather than the office holder. Modern democracies are examples of legal-rational regimes.

==See also==
{{Wikiquote}} {{Wiktionary}}

A '''government''' is the body that has the [[Political power|power]] to make and enforce laws within an  [[organization]] or group. In its broadest sense, &quot;to govern&quot; means to administer or supervise, whether over an area of land, a set group of people, or a collection of assets. The word ''government'' is derived the [[Greek language|Greek]] Κυβερνήτης (''kubernites''), which means &quot;steersman&quot;, &quot;governor&quot;, &quot;pilot&quot; or &quot;rudder&quot;.

== Definitions ==

One approach is to define government as the dominant(on top) better decision-making arm of the [[state]], and define the latter on the basis of the control it has over [[violence]] and the use of force within its territory. Specifically, the state (and by extension the government) has been considered by some to be the entity that holds a [[monopoly on the legitimate use of force]] within a territory. This view has been taken by the political economist [[Max Weber]] and subsequent [[political philosophy|political philosophers]]. The exact meaning of it depends on what is understood by “legitimate”. If we use the term in an ethical sense, then this definition would suggest that an organisation might be considered a state by its supporters but not by its detractors. An alternative definition is to take &quot;legitimate&quot; violence to be simply that which has active or tacit acceptance by the vast majority of the population.  In this view, the presence of insurrection or [[civil war]] against an entity would jeopardise its claim to be a state, provided the insurrection enjoyed significant popular support. Similarly, an entity that shared [[army|military]] or [[police]] power with independent [[paramilitary|militias]] and bandits could be considered to have a monopoly on “legitimate” violence but to be failing to enforce it, reducing its claim to statehood. In practice, such situations are often described as &quot;[[failed state]]s&quot;.

Government can also be defined as the [[politics|political]] means of creating and enforcing [[law]]s; typically via a [[bureaucracy|bureaucratic]] [[hierarchy]].  Under this definition, a purely [[despotism|despotic]] organization which controls a territory without defining laws would not be considered a government.

Another alternative is to define a government as an organisation that attempts to maintain control of a [[territory]], where &quot;control&quot; involves activities such as collecting [[tax]]es, controlling entry and exit to the state, preventing encroachment of territory by neighbouring states and preventing the establishment of alternative governments within the country. 

In [[Commonwealth English]], the word &quot;Government&quot; can also be used to refer only to the [[Executive (government)|executive branch]], in this context being a synonym for the word &quot;administration&quot; in [[American English]] (e.g. the Blair Government, the Bush Administration). In countries using the [[Westminster system]], the Government (or ''party in Government'') will also usually control the [[legislature]]. The [[French (language)|French]] use of the word ''gouvernement'' covers both meanings, whereas [[French in Canada|Canadian French]] generally uses it to mean the executive branch. The [[German language|German]] word ''Regierung'' refers only to government as the executive branch; the wider meaning of the word, government as a system, can be translated as ''Staatsgewalt''.

== Forms of government ==
Various [[form of government|forms of government]] have been implemented. A government in a developed state is likely to have various sub-organisations known as offices, departments, or agencies, which are headed by politically appointed officials, often called [[Political minister|ministers]] or secretaries. Ministers may in theory act as advisors to the [[head of state]], but in practice have a certain amount of direct power in specific areas. In most modern [[democracy|democracies]], the elected [[legislative assembly]] has the power to dismiss the government, but in those states that have a separate [[head of government]] and [[head of state]], the [[head of state]] generally has great latitude in appointing a new one.

== Theories ==

There are a wide range of theories about the reasons for establishing governments. The four major ones are briefly described below. Note that they do not always fully oppose each other - it is possible for a person to subscribe to a combination of ideas from two or more of these theories.

=== Greed and oppression ===

Many political philosophies that are opposed to the existence of a government (such as [[Anarchism]], and to a lesser extent [[Marxism]]), as well as others, emphasize the historical roots of governments - the fact that governments, along with [[private property]], originated from the authority of warlords and petty despots who took, by force, certain patches of land as their own (and began exercising authority over the people living on that land). Thus, it is argued that governments exist to enforce the will of the strong and oppress the weak.

=== Order and tradition ===

The various forms of [[conservatism]], by contrast, generally see the government as a positive force that brings order out of chaos, establishes laws to end the &quot;[[Bellum omnium contra omnes|war of all against all]]&quot;, encourages moral [[virtue]] while punishing [[vice]], and respects [[tradition]]. Sometimes, in this view, the government is seen as something ordained by a higher power, as in the [[divine right of kings]], which human beings have a duty to obey.

=== Natural rights ===

[[Natural rights]] are the basis for the theory of government shared by most branches of [[liberalism]] (including [[libertarianism]]). In this view, human beings are born with certain ''natural rights'', and governments are established strictly for the purpose of protecting those rights. What the ''natural rights'' actually '''are''' is a matter of dispute among liberals; indeed, each branch of liberalism has its own set of rights that it considers to be ''natural'', and these rights are sometimes mutually exclusive with the rights supported by other liberals.

=== Social contract ===

One of the most influential theories of government in the past two hundred years has been the [[social contract]], on which modern [[democracy]] and most forms of [[socialism]] are founded. The social contract theory holds that governments are created by the people in order to provide for collective needs (such as safety from crime) that cannot be properly satisfied using purely individual means. Governments thus exist for the purpose of serving the needs and wishes of the people, and their relationship with the people is clearly stipulated in a &quot;social contract&quot; (a [[constitution]] and a set of laws) which both the government and the people must abide by. If a majority is unhappy, it may change the social contract. If a minority is unhappy, it may persuade the majority to change the contract, or it may opt out of it by emigration or secession.

== Operations ==
Governments concern themselves with regulating and administering many areas of human activity, such as [[trade]], [[education]], [[medicine]], [[entertainment]], and [[war]].

=== Enforcement of power ===

Governments use a variety of methods to maintain the established order, such as [[police]] and [[military forces]], (particularly under [[despotism]], see also [[police state]]), making agreements with other states, and maintaining support within the state.  Typical methods of maintaining support and legitimacy include providing the [[infrastructure]] for [[administration]], [[justice]], [[transport]], [[communication]], [[social welfare]] etc., claiming support from [[deity|deities]], providing benefits to [[elites]], holding [[election]]s for important posts within the state, limiting the power of the state through [[law]]s and [[constitution]]s (see also [[Bill of Rights]]) and appealing to [[nationalism]]. Different political ideologies hold different ideas on what the government should or should not do.

=== Territory ===

The modern standard unit of [[territory]] is a [[country]]. In addition to the meaning used above, the word [[state]] can refer either to a government or to its territory. Within a territory, [[subnational entity|subnational entities]] may have [[local government]]s which do not have the full power of a national government (for example, they will generally lack the authority to declare war or carry out diplomatic negotiations).

== Scale of government ==
The scale to which government should exist and operate in the world is a matter of debate. Government spending in [[developed countries]] varies considerally but generally makes up between about 30% and 70% of their [[Gross domestic product|GDP]].

Politics is the study of power relations. Power is all pervasive. All of us organise our relations with others through the manipulation of power. Government is a form of organising the power relations in a society. In the ancient societies we had clan groups, caste groups, elders, village council, etc to regulate the relationships that exist in a society. In the modern society, there emerged a new form of regulating the relationship called government.</text>
      <sha1>o72qir2m787e67xtk9qjdxnb6fnne2n</sha1>
    </revision>
  </page>
  <page>
    <title>A-level Physics/Electrons, Waves and Photons/Electric current</title>
    <ns>0</ns>
    <id>40149</id>
    <revision>
      <id>2735015</id>
      <parentid>2262354</parentid>
      <timestamp>2014-11-22T17:23:14Z</timestamp>
      <contributor>
        <username>Fimatic</username>
        <id>1902259</id>
      </contributor>
      <comment>{{A-level physics}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Electricity is useful because we can easily transform electrical energy to other forms of energy such as light, sound and heat. Electricity is transferred from place to place by wires as an electric current.

==Current and Charge==

'''Electric current''' is the flow of charged particles, usually electrons, around a circuit. Metals are good conductors of electricity because they have '''free electrons''' that can move around easily.

Current is measured in '''amperes'''.

Charged particles have a charge which is either positive or negative. The strength of a charge can be found using the formula:

:&lt;math&gt;Q = I \times t&lt;/math&gt; 

where Q is the quantity of charge in coulombs, I is the current in amps, and t is the time in seconds

We can use this formula to define the coulomb:

&lt;center&gt;&lt;div style=&quot;border: solid 1px #0099ff; background: #ddeeff; padding: 0.5em; width: 75%;&quot;&gt;
One coulomb is the amount of charge which flows past a point when a current of 1 ampere flows for 1 second&lt;/div&gt;&lt;/center&gt;

===Electron flow===

When you attach a battery to a small bulb with wires, you would say that the current is flowing from the positive terminal of the battery to the negative one. This is called '''conventional current'''. The electrons, however, flow from the negative terminal to the positive. This '''electron flow''' is in the opposite direction to the conventional current, and care must be taken to not confuse the two. When we just say current it is assumed that we are talking about conventional current.

The reason for this is that the direction of conventional current was chosen before people knew what was happening inside a conductor when a current flows.

In A-level, charge in coulombs is the product of current in amperes by the time in seconds.

==Resistance==

Any component with electrical resistance opposes the flow of an electrical current.

===Electrical Resistance===

In an electrical circuit, current flows around it. Each component in the circuit has a resistance, which resists the flow of the current.

The voltage that you get from the power supply can be simply described as the &quot;push&quot; given to the electrons to go around the circuit.

It would then make sense to say that the greater the voltage, the greater the current, and the greater the resistance, the lower the current. The current flowing around the circuit could then be written as the equation:

:&lt;math&gt;I=\frac {V}{R}&lt;/math&gt;.

For example, if you were to connect a 9 volt power supply to a 3 &amp;Omega; (read as 3 ohm) resistor, you could use the formula above to find the current. &lt;math&gt;I=\frac {9}{3}&lt;/math&gt;, so &lt;math&gt;I=3A&lt;/math&gt;.

A particular arrangement of this formula is used to define resistance and the ohm.

:&lt;math&gt;R=\frac {V}{I}&lt;/math&gt;.

This says that the resistance of a component is the voltage across it for every unit of current flowing through it. More formally this can be written as:

&lt;center&gt;&lt;div style=&quot;border: solid 1px #0099ff; background: #ddeeff; padding: 0.5em; width: 75%;&quot;&gt;
The resistance of a component in a circuit is the ratio of the voltage across that component to the current in it.
&lt;/div&gt;&lt;/center&gt;

The unit of resistance, the ohm (&amp;Omega;), is defined so that one ohm is the resistance of a component that has a voltage of 1 volt across it for every amp of current flowing through it. In other words, one ohm is one volt per amp.

===Ohm's Law===

In many components, the voltage across it is proportional to the current flowing through it. You can make this observation on a circuit with a resistor of a known resistance, a voltmeter, an ammeter, and a power supply with a variable voltage. As you increase the voltage, the current will also increase. You will come to the conclusion that &lt;math&gt;V \propto I&lt;/math&gt;, with the constant of proportionality equal to &lt;math&gt;R&lt;/math&gt;. This gives us &lt;math&gt;V = IR&lt;/math&gt;, an arrangement of the familiar formula.

Components where &lt;math&gt;V \propto I&lt;/math&gt;, are known as '''ohmic conductors''', and have a constant resistance. They are said to follow '''Ohm's law''', which states that:
&lt;center&gt;&lt;div style=&quot;border: solid 1px #0399ff; background: #ddeeff; padding: 0em; width: 75%;&quot;&gt;
If the source voltage remains constant, the flow of current is inversely proportional to resistance.
       '''OR'''
If the temperature remains constant, the current flowing through a conductor is directly proportional to the potential difference across it. 
&lt;/div&gt;&lt;/center&gt;

Note that not all components are ohmic conductors, and can have varying values of resistance. You will have to use the formula &lt;math&gt;R = \frac {V}{I}&lt;/math&gt; to find the resistance for specific values of &lt;math&gt;V&lt;/math&gt; and &lt;math&gt;I&lt;/math&gt;.

Below you can see 3 graphs with current on the vertical axis, and voltage on the horizontal axis. Where the graph is a straight line, the voltage is proportional to the current. Therefore, only the metallic conductor is an ohmic conductor.

[[Image:I-V_characteristics.png|350px|center]]

A diode and a filament lamp are two examples of '''non-ohmic''' conductors. The diode is designed to only allow current through in one direction, hence the use of negative values on its graph. The filament lamp doesn't have a constant temperature, which according to Ohm's law is required for a component to be an ohmic conductor. Instead, it heats up as a current passes through it, which has an effect on the resistance.

===Temperature===
===Resistivity===

The '''resistivity''' of a material is the property that determines its resistance for a unit length and unit cross sectional area of that material. Copper, for example, is a better conductor than lead, in other words lead has a higher resistivity than copper. You can compare different materials in this way.

Resistivity, ρ (the Greek letter rho), is defined by the equation:

:&lt;math&gt;\rho = \frac{RA}{l}&lt;/math&gt;

Where ρ is resistivity, R is the resistance, A is the cross sectional area of the material, and l is the length of the material.

The units of resistivity are Ohm-meters, Ωm.

If we rearrange the above equation so that:

:&lt;math&gt;R = \frac{\rho l}{A}&lt;/math&gt;

You can see that as the length of a wire is increased, its resistance will increase, and as the cross sectional area of a wire is increased, its resistance will decrease. This is true provided that the temperature is constant, and that the same materials are always used, to make sure that the resistivity stays the same.

==Voltage and Energy==

Earlier, we simply said that a voltage is the &quot;push&quot; given to electrons, or units of charge. Now, we will take a look at voltage in terms of energy, and find a more accurate definition of the volt.

===Potential Difference===

When you attach a voltmeter across a component, the voltage you are measuring is a '''potential difference''' (PD). Electrical energy is being used up by the component, and so we can say that a potential difference is a voltage where the charge is ''losing energy''. Potential difference has the symbol V.

By definition, the potential difference is the energy converted from electrical energy to other forms of energy in moving a unit of electrical charge from one point to another. So, if the PD of a resistor is say, 2V then if 3 coulomb of charges pass through it, then the energy used up is 6 Joules. 

Potential difference is the energy lost per unit charge, and can be written as the following formula:

:&lt;math&gt;V=\frac{W}{Q}&lt;/math&gt;

===Electromotive Force===

A battery provides a certain voltage to the circuit, and the electrons are ''gaining energy'' from the battery as they flow past. This voltage where the charge gains energy is called an '''electromotive force''' (EMF), and has the symbol V.

EMF. is the energy gained per unit charge, and can be written as the following formula:

:&lt;math&gt;V=\frac{W}{Q}&lt;/math&gt;

Both the PD and EMF are measured in volts, and one volt is equivalent to one joule per coulomb.

===Electrical Energy and Power===

Power is the rate at which energy is transferred, written as the formula:

:&lt;math&gt;P=\frac{W}{t}&lt;/math&gt;

To find a formula for electrical power, we take the following formula for voltage and make W the subject:

:&lt;math&gt;V=\frac{W}{Q}&lt;/math&gt;

:&lt;math&gt;W=QV&lt;/math&gt;

Then we need to divide both sides by t to get power:

:&lt;math&gt;\frac{W}{t}=\frac {QV}{t}&lt;/math&gt;

Recall that charge divided by time is current, we now have:

:&lt;math&gt;P=I \times V&lt;/math&gt;

From the formula above, you can see that the electrical power is simply the product of current and voltage. You can combine this with &lt;math&gt;V=IR&lt;/math&gt; to give two further equations:

:&lt;math&gt;P=I^2R&lt;/math&gt;

:&lt;math&gt;P=\frac{V^2}{R}&lt;/math&gt;

One last formula is for energy and is derived from the formula for power:

:&lt;math&gt;P=\frac{W}{t}=IV&lt;/math&gt;

:&lt;math&gt;W=IVt&lt;/math&gt;

{{A-level physics}}
[[Category:A-level Physics|Electric current]]</text>
      <sha1>8chv4fain004raqht1j8lx85e3z5u1i</sha1>
    </revision>
  </page>
  <page>
    <title>User:1983/myskin.css</title>
    <ns>2</ns>
    <id>40150</id>
    <revision>
      <id>229316</id>
      <timestamp>2005-09-06T09:46:06Z</timestamp>
      <contributor>
        <username>1983</username>
        <id>8523</id>
      </contributor>
      <model>css</model>
      <format>text/css</format>
      <text xml:space="preserve">@import url(&quot;/style/common.css&quot;);

body {background: white; color: black; margin: 2px; padding: 0;}
h1 { margin:0;
    padding: 1em 0em 0; 
    font: bold 36px Arial, sans-serif; 
    line-height: 0.8em; 
    border-bottom: 1px solid silver; 
    text-align: right; 
    color: #557; 
    letter-spacing: 2px;
    margin-right: 135px;
}
h2 { border-bottom: 1px solid silver; }
h3 { border-bottom: 1px dotted silver; }
h2,h3,h4,h5,h6 {
    margin:0;
    padding: 0.5em 0.25em 0;
    font: bold Arial,sans-serif;
    text-align: left;
    color: #557;
    letter-spacing: 1px;
}
h3#siteSub {
    text-align: right;
    letter-spacing: 2px;
    margin-right: 135px;
    margin-bottom: 20px;
}

#globalWrapper {
  margin-right: 2px;
  margin-left: 2px;
}

#globalWrapper a {
  text-decoration: none;
  color:  #339;
}

#globalWrapper a:hover {
  /*text-decoration: underline;*/
  border-bottom: 1px dotted black;
  color:  #00F;
}

#globalWrapper a.new {
  color: #933;
}

#globalWrapper a.new:hover {
  
  color: #F00;
}

#globalWrapper pre {
  border: 1px dotted silver;
  background-color: #F8F8F8;
}

#contentSub {
  clear: both;
  margin-top:1em;
}

/**********************************************************************/

#column-one {
   position: fixed; 
   top: 0em; 
   right: 0; 
   width: 120px; 
   margin: 0; 
   padding: 0; 
   font-family: Arial, sans-serif;
   font-size: 9px;
   background-color: #EEE ;}

#column-one ul {display: none;}

#column-one li {
  list-style-type: none;
  margin: 0; 
  padding: 0;}

#column-one li a {
  display: block; 
  text-decoration: none;
  padding: 2px;
  background: #F8F8F8;
  color: black;
}

#column-one h5 {
   padding: 0 0 0 5px; 
   line-height: 1.25em;
   text-decoration: none;
   font-weight: normal;
   font-size: 9px;
   color: black;
   letter-spacing: 1px;
}
#column-one h5:hover {
    background-color: #EED;
    background: #F8F8F8;
    letter-spacing: 2px;
    color: blue;
}

#column-one div.portlet:hover ul {
   display: block;
   width: 11em;
   position: absolute;
   margin-left: -8em;
   margin-top: 0em;
}

#column-one div.portlet:hover a:hover {
   letter-spacing: 1px;
   color: blue;
}

#urlexpansion {
  display: none;
}

div#catlinks {
  position: fixed;
  top: 0px;
  left: 0px;
  background: #EEE;
  font-size: 9px;
  margin-top : 0px ;
  margin-right: 3px;
  margin-left: 3px;
  margin-bottom: 0px;
}

div#catlinks &gt; p &gt; a {
  display: none;
  color: black;
  text-decoration: none;
}

div#catlinks &gt; p {
  margin: 0px;
}

div#catlinks &gt; p a:first-child {
  display: inline;
}

div#catlinks &gt; p:hover &gt; a {
  display: inline;
}

/*********************************************************************/

div#footer {
  padding-top: 5px;
  padding-right: 5px;
  padding-left: 5px;
  padding-bottom: 1px;
  margin-right: 1em;
  margin-left: 1em;
  border: 1px dotted silver;
  background: #F8F8F8;
}

div#footer &gt; div#f-copyrightico {
  display:block;
}
div#footer &gt; div#f-poweredbyico {
  display:block;
  text-align:right;
  width:100%
  margin-right:0px;
}
div#footer &gt; div#f-copyrightico {
  display:block;
  margin-top:-31px;
}
div#footer &gt; ul {
  display:block;
  margin-top:-3em;
  margin-left:60px;
  font-size: 9px;
}
div#footer li {
  list-style-type: none;
  display:block;
  padding-right:3em;
}
div#footer img {
  border: none;
}</text>
      <sha1>719wa44j3c01kx0f6uwhxy6ks9fejo6</sha1>
    </revision>
  </page>
  <page>
    <title>Programming:Visual Basic Classic/File Input-Output</title>
    <ns>0</ns>
    <id>40151</id>
    <redirect title="Visual Basic/Files" />
    <revision>
      <id>1238205</id>
      <parentid>229332</parentid>
      <timestamp>2008-07-25T16:37:07Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT [[Visual Basic/Files]]</text>
      <sha1>o0hb1nskgplvsx3m0fpbrp14bnu0eip</sha1>
    </revision>
  </page>
  <page>
    <title>Trigonometry/Graphs of Other Trigonometric Functions</title>
    <ns>0</ns>
    <id>40154</id>
    <revision>
      <id>2012018</id>
      <parentid>1998850</parentid>
      <timestamp>2011-01-04T20:18:19Z</timestamp>
      <contributor>
        <username>JamesCrook</username>
        <id>381149</id>
      </contributor>
      <comment>NavBox</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">A graph of &lt;math&gt;\tan(x)&lt;/math&gt;. &lt;math&gt;\tan(x)&lt;/math&gt; is defined as &lt;math&gt;\frac{\sin(x)}{\cos(x)}&lt;/math&gt;.

[[Image:Tan.svg|Graph of tan(x)|540px]]

A graph of &lt;math&gt;\csc(x)&lt;/math&gt;. &lt;math&gt;\csc(x)&lt;/math&gt; is defined as &lt;math&gt;\frac{1}{\sin(x)}&lt;/math&gt;.

[[Image:Csc.svg|Graph of csc(x)|550px]]

A graph of &lt;math&gt;\sec(x)&lt;/math&gt;. &lt;math&gt;\sec(x)&lt;/math&gt; is defined as &lt;math&gt;\frac{1}{\cos(x)}&lt;/math&gt;.

[[Image:Sec.svg|Graph of sec(x)|550px]]

A graph of &lt;math&gt;\cot(x)&lt;/math&gt;. &lt;math&gt;\cot(x)&lt;/math&gt; is defined as &lt;math&gt;\frac{1}{\tan(x)}&lt;/math&gt; or &lt;math&gt;\frac{\cos(x)}{\sin(x)}&lt;/math&gt;.

[[Image:Cot.svg|Graph of cot(x)|550px]]

Note that &lt;math&gt;\tan(x)&lt;/math&gt;, &lt;math&gt;\sec(x)&lt;/math&gt;, and &lt;math&gt;\csc(x)&lt;/math&gt; are unbounded, positive or negative.  While  &lt;math&gt;\tan(x)&lt;/math&gt; (and &lt;math&gt;\cot(x)&lt;/math&gt;) can take any value, &lt;math&gt;\sec(x)&lt;/math&gt; and &lt;math&gt;\csc(x)&lt;/math&gt; can never lie between -1 and 1.

{{Trig/NAV
|next=
|previous=
}}
{{BookCat}}</text>
      <sha1>cqu466h9ryuws4tu6bpjkvmhxjo9xhb</sha1>
    </revision>
  </page>
  <page>
    <title>Collection of Mathematical Formulas/Floor and Ceil</title>
    <ns>0</ns>
    <id>40155</id>
    <revision>
      <id>1520936</id>
      <parentid>1001812</parentid>
      <timestamp>2009-06-05T14:34:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed category.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''Floor''' and '''ceil''' are defined in the following way, respectively,

&lt;math&gt;\lfloor x \rfloor = \mbox{the greatest integer less than or equal to } x&lt;/math&gt;

&lt;math&gt;\lceil x \rceil = \mbox{the least integer greater than or equal to } x&lt;/math&gt;

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>pihos982gqgik2z76wqg6y4qp8ildym</sha1>
    </revision>
  </page>
  <page>
    <title>File:Funimj.jpg</title>
    <ns>6</ns>
    <id>40158</id>
    <revision>
      <id>658790</id>
      <parentid>229443</parentid>
      <timestamp>2006-11-22T17:09:12Z</timestamp>
      <contributor>
        <username>Suchenwi</username>
        <id>11126</id>
      </contributor>
      <minor />
      <comment>added PD-self license</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Screenshot of functional imaging in Tcl/Tk {{PD-self}}</text>
      <sha1>7tcb1cwzfpodv6ranhoefdpyq375u40</sha1>
    </revision>
  </page>
  <page>
    <title>File:Doodler.jpg</title>
    <ns>6</ns>
    <id>40159</id>
    <revision>
      <id>658792</id>
      <parentid>229449</parentid>
      <timestamp>2006-11-22T17:10:33Z</timestamp>
      <contributor>
        <username>Suchenwi</username>
        <id>11126</id>
      </contributor>
      <minor />
      <comment>PD-self license</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Screenshot of a simple doodler in Tcl/Tk {{PD-self}}</text>
      <sha1>8lpia23y94p68mttf76y3xgiw8a5mgi</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Language Features/VID</title>
    <ns>0</ns>
    <id>40160</id>
    <revision>
      <id>1517716</id>
      <parentid>701541</parentid>
      <timestamp>2009-06-03T03:47:27Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== VID ==

VID stands for '''Visual Interface Dialect''' and is the most commonly used method for designing graphical user interfaces with REBOL/View. It works very well for interfaces that use a lot of graphics, e.g. images, animation.

One of the strong points of VID is that you can create a user interface very quickly, using only a couple of lines of code to make a button do something.

The GUI itself is platform independent, which means it looks the same whether you run your program on Windows, MacOSX, Linux or other platforms.

The most important thing to know about VID is that it is, as the name suggests, a dialect or sub-language of REBOL.  Code written in VID does not evaluate as REBOL code, but has to be translated first into REBOL code prior to execution.  In essence, a code generator called '''layout''' creates the REBOL code that is then executed by the REBOL View engine.  Words used in the visual interface dialect may share the same spelling as normal REBOL functions, but are used completely differently.  

 view lo: layout [ button &quot;Press Me&quot; return button &quot;Press Me Too!&quot; ]

Here, '''layout''' takes a block of words written in the visual interface dialect.  You can see the word '''return''' used here, but in this context, it has a totally different meaning.  It is not used to '''return''' a value, but tells the '''layout''' engine to place the next button to the left of the screen, and on the next line.  This different meaning of '''return''' also illustrates the context sensitive nature of REBOL programming.

'''layout''' returns a block of REBOL code, and in this example, it is assigned to the variable '''lo'''.  If you were then to look at what code has been generated by

 probe lo

you will see screens and screens of code flashing before you.


=== Showcase ===

Here are a few examples of what can be done with VID.

''Need more examples''{{clr}}

=== Faces ===

Each graphical element in a VID layout is called a '''face''', which basically is a tree structure of objects. A face can contain other faces.

The full mechanics of faces and the face object will be explained in the next chapter.

=== Example Notes ===

The examples only show the '''layout code block''', which means the block used for creating the layout. All examples should be written as:

 view layout [button &quot;Hello World!&quot;]

while we only show:

 button &quot;Hello World!&quot;

This makes it a bit easier to write the examples.

=== Buttons ===

There are two kinds of buttons: BTN and BUTTON

 btn &quot;Hello World!&quot;

{{clr}}

This button is the standard type, and the easiest to use. It scales automatically with the text, but you can for example set a width for the button:

 btn 150 &quot;Hello World!&quot;
 btn 150 &quot;This is REBOL&quot;

{{clr}}

It's also easy to provide different colors and sizes for BTN:

 btn 150x40 red &quot;Big Red Button!&quot;
 btn 200x20 yellow &quot;Wide Yellow Button!&quot;

{{clr}}

BUTTON is different because it offers more customization in terms of coloring, edge size and gradients.

 button &quot;Hello World!&quot;

{{clr}}

==== Button Actions ====

In order to do something with the button, you can specify an action block. This is simply a block of code that is evaluated when the button is pressed, e.g. on left mouse button press. This block can be specified like so:

  button &quot;Hello World!&quot; [print &quot;Hello World!&quot;]

When running this program, the console will print &quot;Hello World!&quot;, every time you click the button.

=== Toggles ===

A toggle is a button which has two states. There are two kinds of toggles: TOG and TOGGLE.

 tog &quot;Activated&quot;

 toggle &quot;Activated&quot;

Like BUTTON, TOGGLE is customizable.

http://en.wikibooks.org/wiki/REBOL_Programming

=== Choice ===

A choice is a button which has many states.  It takes several strings to create the selection.  Here is an example:

choice &quot;Excellent&quot; &quot;Good&quot; &quot;Ok&quot; &quot;Lacking&quot; &quot;Dismal&quot;

We can extend this example by providing code within a block.  The state of the choice is held in c/data/1

 c: choice &quot;Excellent&quot; &quot;Good&quot; &quot;Ok&quot; &quot;Lacking&quot; &quot;Dismal&quot; [print c/data/1]

Using this, we can trigger events based on a certain selection by using SWITCH:

 c: choice &quot;Excellent&quot; &quot;Good&quot; &quot;OK&quot; &quot;Lacking&quot; &quot;Dismal&quot; [
     switch c/data/1 [
         &quot;Excellent&quot; [alert &quot;Yeah!!!!!!&quot;]
         &quot;Good&quot; [alert &quot;Thank you!&quot;]
         &quot;OK&quot; [alert &quot;eh&quot;]
         &quot;Lacking&quot; [alert &quot;Come on!&quot;]
         &quot;Dismal&quot; [alert &quot;You can do better than that!&quot;]
     ]
 ]

=== Lists ===

==== Simple Lists ====

Simple lists are single column lists, which can be created with TEXT-LIST. The advantage is that it's very simple to access and is very useful in multi-list layouts, where multiple lists need to interact.

A simple list:

 &gt;&gt; view layout [text-list data [&quot;Hello World!&quot; Rebol is Cool!]]

{{clr}}

==== Complex Lists ====

Complex lists provide a lot more functionality, but take more time to setup. With a complex list, you can use:

* Multiple Columns
* Varying font and color schemes

For a typical complex list, you use LIST:

 l: list [
   ''... GUI code ...''
 ] supply [
   ''... DATA code ...''
 ]

==== List Code ====

The GUI code is a simple layout that represents one entry in the list. The layout can be as flexible as any other layout in VID and thus you can produce both vertical and horizontal layouts with text, graphics or images. Certain rules should be followed.

Example:

 l: list 300x100 [across text text text] supply []

will produce an empty list of '''iterated faces'''.

==== List Data ====

The DATA code is the code to supply the list with data, and is a function that is iterated through out each single face in the list. Two variables '''index''' and '''count''' can be used directly to automatically iterate through your data in the function. The '''index''' value is used by each '''column''' of the list, while '''count''' specifies each '''row'''. For a list with 3 columns, the sequence will be:

 ROW1 COLUMN1
 ROW1 COLUMN2
 ROW1 COLUMN3
 
 ROW2 COLUMN1
 ROW2 COLUMN2
 ROW2 COLUMN3
 
 ROW3 COLUMN1
 ROW3 COLUMN2
 .
 .
 .

For the list, the '''scroller''' is separate and should also be managed manually. It can also be placed where you want.

==== Selecting Values ====

Events in the list layout can be used to select or display an '''over''' color when you hover the mouse over a list entry.

==== Complete Example ====

A complete example:

 l: list 300x200 [
   across
   text 200 bold
   text 50 red
   text 50 blue
 ] supply [
   (complete this)
 ]

==== Manipulating Iterated Faces ====

The '''supply''' function can manipulate the list layout as you are iterating down through the list. This is nice when you want to make the text style, background color or other face attribute data dependent.

===== Alternating Background Colors Example =====

 l: list 300x200 [
   across space 0
   text 200 bold
   text 50 red
   text 50 blue
 ] supply [
   (complete this)
 ]

=== Layout functions ===

VID provides various functions for ordering your faces in a specific layout.

=== Resizing ===

Using VID with resizing windows is a bit hard, but still possible: You need to detect when the window is resized and then redraw your GUI according to this new size.

==== Adhering to resizable layouts ====

To use VID with resizable faces, you need to know about the dimensions of your GUI.

VID has no direct functions for &quot;attaching&quot; faces to a specific size-dependent location of a GUI, so we need to carry out those calculations ourselves.

=== Panels ===

Panels are groups of VID faces. This has many advantages:

* Faces in a panel can be moved together
* Textfields in a panel can be updated together

==== Updating Panel Faces ====

When you have a form, that needs to be automatically filled, you can either fill out each field, one at a time, or group them in a panel, and update all fields at once using SET-FACE:

 person: panel [
   field field field
 ]

And updating all fields:

 set-face person [&quot;This&quot; &quot;is&quot; &quot;Cool&quot;]

Not only strings can be used:

 set-face person [25$ now http://www.rebol.com]

If you have other faces than fields, they can be skipped by inserting a NONE in the block:

 person: panel [
   field field box field
 ]

 set-face person [&quot;This&quot; &quot;is&quot; none &quot;Cool&quot;]

'''TODO: Please check which faces, SET-FACE works on'''

=== Multiple Windows ===

In REBOL there is no real concept of a &quot;main window&quot;, except for the console. If you close the console, you'll close all windows and quit the running program. If you have a script that is run from a double clicked script icon in Windows XP, you will be able to run your program without the console window and hence no main window.

It's possible to open as many windows as you want and they are equal in capability to each other and can control each other fully.

VID windows are really groups of faces, stored in another face object. This gives you the flexibility to present your GUI in a window or as part of a group of a larger GUI.

==== Windows ====

To open a single window, you normally use VIEW:

 view layout [btn &quot;Hello World&quot;]

To open additional windows from this window, add an action to the BTN:

 view layout [
   btn &quot;Hello World&quot; [view/new layout [h1 &quot;New Window&quot;]]
 ]

VIEW/NEW is also useful, if you want to set variables or run other code, before capturing events from the created window.

Write something about DO-EVENTS.

==== Alerts ====

Alerts are useful if you quickly want to display a dialog box with a message and a few buttons. It's a fast way to get user feedback. ALERT is the simplest one:

 alert &quot;This is an Alert Window&quot;

will give the following:

REQUEST offers more flexibility with various button arrangements.

 request &quot;Do you want to Rock and REBOL?&quot;

==== Dialogs ====

=== Styles ===

Styles are useful if you want more control over the visual appearance over a large section of faces. Let's say you want all buttons to be red? You can do that with '''stylize'''. You can produce a new kind of button that behaves differently from standard buttons. All parts of a face can be altered in your customized style. '''Styles are the easiest way to produce a customized, but uniform GUI look and behaviour.'''

Think of it as the style palette of a word processor. You can define a variety of styles, use them in your GUI and change them in a similar way to all the section headlines of your document. The concept is also similar to that of Cascading Style Sheets used with webpages and HTML.

There are two ways of using styles:

==== 'Style ====

The ''''style''' word is used within a layout:

 view layout [
   style my-btn btn red
   my-btn &quot;Customized Button&quot;
 ]

==== Stylize ====

If you want a larger separate section of styles, you can define that as a block:

 my-styles: stylize [
   my-btn: btn red
 ]
 
 view layout [
    styles my-styles
    my-btn &quot;Customized Button&quot;
    my-btn &quot;Another Button&quot;
 ]

=== Events ===

This should probably be moved to View, as it's a more basic function than VID.

All faces share the same event system, which means '''the way to handle events for a face is the same for all faces'''. (true?)

To control events for a face, you use the FEEL keyword.

=== Animation ===

=== Images ===

Images can be loaded into a VID GUI.

=== Special Effects ===

=== Feels ===

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>12k806t907q5b36pgmhdw6o8t7az4v3</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Blender 3D: Noob to Pro/Simple Vehicle</title>
    <ns>1</ns>
    <id>40161</id>
    <revision>
      <id>770702</id>
      <parentid>716940</parentid>
      <timestamp>2007-03-01T02:55:53Z</timestamp>
      <contributor>
        <username>Boyage</username>
        <id>51804</id>
      </contributor>
      <comment>Inconsistent sequence of pages</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Err I thought this was about path modelling, so why using mesh? On the other hand why would anybody want to model a vehicle using paths, except for creating a spline cage or better blueprints? To cut it short, what should go here?

== new way ==

I think this was no taking any progress, so ive changed it fro a line modeling to a general design tutorial,  just do no know how to change the place it takes in the general diagram.

[[User:Reptiles extintos|Reptiles extintos]] 19:51, 21 April 2006 (UTC)

==Revision==
The above suggestion was taken, and the page was moved to the Mesh section.  Hopefully this will reduce confusion.

[[User:AverieZen|Averie Zen]] 11:39, 26 November 2006 (UTC)

== Inconsistent sequence of pages ==

The sequence of pages is inconsistent around this page.
*On [[Blender_3D:_Noob_to_Pro/Model_a_Silver_Goblet|Model_a_Silver_Goblet]] the next page is [[Blender_3D:_Noob_to_Pro/Simple_Vehicle_Part_I|Simple_Vehicle_Part_I]].
*On [[Blender_3D:_Noob_to_Pro/Simple_Vehicle_Part_I|Simple_Vehicle_Part_I]] the previous page is [[Blender_3D:_Noob_to_Pro/Model_a_Silver_Goblet|Model_a_Silver_Goblet]] and the next is [[Blender_3D:_Noob_to_Pro/Simple_Vehicle:_Wheel|Simple_Vehicle:_Wheel]].
*On [[Blender_3D:_Noob_to_Pro/Simple_Vehicle:_Wheel|Simple_Vehicle:_Wheel]] the previous page is [[Blender_3D:_Noob_to_Pro/Simple_Vehicle|Simple_Vehicle]].
*On [[Blender_3D:_Noob_to_Pro/Simple_Vehicle|Simple_Vehicle]] the previous page is [[Blender_3D:_Noob_to_Pro/Model_a_Silver_Goblet|Model_a_Silver_Goblet]] and the next is [[Blender_3D:_Noob_to_Pro/Simple_Vehicle:_Wheel|Simple_Vehicle:_Wheel]].
On the [[Blender_3D:_Noob_to_Pro#Table_of_Contents|TOC]] of this wikibook only [[Blender_3D:_Noob_to_Pro/Simple_Vehicle|Simple_Vehicle]] shows.</text>
      <sha1>d0oegp93gtka7p581fte52z8n8et6lb</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/Thyroid</title>
    <ns>0</ns>
    <id>40162</id>
    <revision>
      <id>2238596</id>
      <parentid>1725423</parentid>
      <timestamp>2011-12-19T19:53:44Z</timestamp>
      <contributor>
        <username>Brim</username>
        <id>2387</id>
      </contributor>
      <comment>official guidelines</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;!--Thy-roid and thy staff comfort me--&gt;
{{Radiation Oncology:TOC}}
{{Radiation Oncology:Template Edit|Radiation Oncology/Thyroid:TOC|the thyroid table of contents bar}}
&lt;!--changes on this page should be reflected at Radiation Oncology/Thyroid:TOC--&gt;

*[[/Workup/]]
*[[/Staging/]]
*[[/Guidelines|Official Guidelines]]
*[[/Papillary and follicular|Papillary and follicular]]
*[[/Medullary|Medullary]]
*[[/Hurthle cell|Hurthle cell]]
*[[/Anaplastic|Anaplastic]]


See also:
*[[Radiation_Oncology/NHL/Thyroid|Thyroid Lymphoma]]</text>
      <sha1>g1prghx0kc3gcrtnfbptwuepx1z1uz5</sha1>
    </revision>
  </page>
  <page>
    <title>File:Calculator.jpg</title>
    <ns>6</ns>
    <id>40163</id>
    <revision>
      <id>658795</id>
      <parentid>229480</parentid>
      <timestamp>2006-11-22T17:12:13Z</timestamp>
      <contributor>
        <username>Suchenwi</username>
        <id>11126</id>
      </contributor>
      <minor />
      <comment>+ PD-self license</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Screenshot of a little calculator in Tcl/Tk, running on a Windows/CE device {{PD-self}}</text>
      <sha1>cwrzwyyk54ixckimn3u2qxjov7nrvg7</sha1>
    </revision>
  </page>
  <page>
    <title>Programming languages bookshelf</title>
    <ns>0</ns>
    <id>40164</id>
    <redirect title="Wikibooks:Programming languages bookshelf" />
    <revision>
      <id>229515</id>
      <timestamp>2005-09-06T17:08:42Z</timestamp>
      <contributor>
        <username>Krischik</username>
        <id>3011</id>
      </contributor>
      <comment>Programming languages bookshelf moved to Wikibooks:Programming languages bookshelf: bookshelf exists in Wikibooks: namespace</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[Wikibooks:Programming languages bookshelf]]</text>
      <sha1>p9i46pddtspmpdvcprn5yda07be149i</sha1>
    </revision>
  </page>
  <page>
    <title>Meta-languages bookshelf</title>
    <ns>0</ns>
    <id>40166</id>
    <redirect title="Wikibooks:Domain-specific languages bookshelf" />
    <revision>
      <id>229519</id>
      <timestamp>2005-09-06T17:08:48Z</timestamp>
      <contributor>
        <username>Krischik</username>
        <id>3011</id>
      </contributor>
      <comment>Meta-languages bookshelf moved to Wikibooks:Domain-specific languages bookshelf: 1. It's just the wrong name
2. bookshelf exists in Wikibooks: namespace</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[Wikibooks:Domain-specific languages bookshelf]]</text>
      <sha1>m0axz0vpizdhxt3za03db8ve3ypwsgg</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Meta-languages bookshelf</title>
    <ns>10</ns>
    <id>40167</id>
    <redirect title="Template:Domain-specific languages bookshelf" />
    <revision>
      <id>229521</id>
      <timestamp>2005-09-06T17:09:09Z</timestamp>
      <contributor>
        <username>Krischik</username>
        <id>3011</id>
      </contributor>
      <comment>Template:Meta-languages bookshelf moved to Template:Domain-specific languages bookshelf: It's just the wrong name</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[Template:Domain-specific languages bookshelf]]</text>
      <sha1>5ggtndwrgqqbqppxilw1wi770qzrn14</sha1>
    </revision>
  </page>
  <page>
    <title>Subject:Software reverse engineering</title>
    <ns>112</ns>
    <id>40168</id>
    <revision>
      <id>2221564</id>
      <parentid>1760871</parentid>
      <timestamp>2011-11-28T00:50:40Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>noinclude</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{subject page
 |parent=Computer engineering
 |description=These books deal with '''[[w:Reverse engineering#Reverse engineering of software|software reverse engineering]]'''.
}}&lt;noinclude&gt;
&lt;!-- CATEGORIES AND INTERWIKIS HERE --&gt;

&lt;/noinclude&gt;</text>
      <sha1>44y8w8zr1hbql6w2qo94v2dv3i8sa2u</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/Head &amp; Neck/Sinonasal/Maxillary sinus</title>
    <ns>0</ns>
    <id>40170</id>
    <revision>
      <id>1720825</id>
      <parentid>1719302</parentid>
      <timestamp>2010-02-16T04:32:22Z</timestamp>
      <contributor>
        <username>Brim</username>
        <id>2387</id>
      </contributor>
      <comment>/* Staging */ link to staging page</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Radiation Oncology:TOC}}
==Epidemiology==
*3% of aerodigestive tract malignancies
*Peak incidence in age 50-59
*M:F 3:1
*70-80% of tumors of the paranasal sinuses originate in maxillary sinus.

==Risk Factors==
*Medical/occupational exposure (thorotrast, nickel, chromium,hydrocarbons, nitrogen mustard)
*Woodworkers have 500 times greater risk than general population of having carcinoma of maxillary sinus

==Anatomy==
*The paranasal sinuses include the frontal, ethmoid, sphenoid, and maxillary sinuses.

'''Borders of Maxillary Sinus'''
*Medial border - nasal cavity
*Superior border - orbit
*Anterolateral border - facial bone
*Posteromedial border - infratemporal fossa

'''Ohngren's line''' is the oblique plane joining medial canthus of the eye with the angle of the mandible.  It divides the maxilla into the infrastructure and superstructure.  This line was originally described in the 1930's by Dr. Ohngren to delineate the limits of resectability of a tumor in the maxillary sinus.  Tumors that extended into the superstructure (superoposterior to Ohngren's line) were more likely to involve the orbit, ethmoids, and pterygopalatine fossa.  This line became the basis of original staging systems.

'''Nodal drainage of Paranasal sinuses'''
*Retropharyngeal nodes 1st echelon
*Periparotid nodes
*Submandibular nodes
''Clinically involved nodes occur in approximately 15% of pts overall, but has been reported as &gt;20% for SCC histology.''

==Staging==
see [[Radiation_Oncology/Head_%26_Neck/Sinonasal/Staging| Staging]]

==Treatment==
*Radiation therapy alone can be used as a primary modality for T1-T2 N0 patients, inoperable patients.
*Indications for adjuvant radiation therapy include: T1N0 patients with positive margins, perineural invasion, T3 or T4; consider for T2N0.  For any N+, radiation to the neck
*Contraindications of surgery include intracranial invasion, carotid involvement, bilateral cavernous sinus involvement, and distant metastases
'''NCCN Radiation Therapy Guidelines:'''
*Definitive xrt for primary and gross adenopathy: &gt;66 Gy
*Treatment of undissected neck:  50 Gy
*Adjuvant xrt for primary tumor bed:  &gt;60 Gy
*Adjuvant xrt to dissected neck (high risk nodal stations): &gt;60 Gy
*Adjuvant xrt to dissected neck (low risk nodal stations): &gt;50 Gy

===Surgical Management===

*'''Subtotal Maxillectomy''' - 2 walls of maxilla removed. Generally indicated only for early (T1-2 lesions) of infrastructure.

*'''Radical Maxillectomy''' - The entire maxilla is removed.  This is the standard operation for locally advanced carcinoma of maxilla.  Resection includes the maxilla, nasal bone, ethmoid sinus, and sometimes the pterygoid plates.  The surgery spares the zygoma, orbital periosteum, and palatal mucosa.

*'''Craniofacial Resection''' This surgery is indicated when tumor involves the roof of the ethmoid sinus.  The posterior line of resection is foramen ovale, foramen rotundum and internal carotid.  The inferior line of resection is similar to craniofacial frontoethmoidectomy and radical maxillectomy.

*'''Orbital Exenteration'''  This surgery was practiced commonly in the 50's and 60's, but has fallen out of favor.  It is generally indicated when orbital fat invasion is seen or orbital contents grossly involved.


===Adjuvant Radiation Therapy===
*'''UT Southwestern, 2002''' (1980-97) PMID 12439163 -- &quot;Paranasal sinus malignancies: an 18-year single institution experience.&quot; (Myers LL et al, Laryngoscope. 2002 Nov;112(11):1964-9.)
**141 pts w/ paranasal sinus malignancy, 88% w/ locally advanced dz, 70% maxillary sinus, 26% ethmoid sinus
**62% underwent surgery as part of multimodality tx approach.
**5yr DSS 52%, 10yr DSS 35%
**Local recurrence rate 56%

*'''The Netherlands, 2000''' (1977-1996) PMID 10924968 -- &quot;Does the combination of radiotherapy and debulking surgery favor survival in paranasal sinus carcinoma?&quot; (Jansen EP et al, Int J Radiat Oncol Biol Phys. 2000 Aug 1;48(1):27-35.)
**73 pts w/ paranasal sinus carcinoma tx'd w/ either combination therapy (surg + RT) or monotherapy (surg, RT alone)
**5yr local control 65% w/ combination surg + xrt, 47% w/ xrt alone
**Orbital invasion associated w/ poor local control.

*'''MDACC, 1991''' (1969-85) PMID 1924855 -- &quot;Maxillary sinus carcinomas: natural history and results of postoperative radiotherapy.&quot; (Jiang GL et al, Radiother Oncol 1991 Jul;21(3):193-200.)
**73 pts w/ maxillary sinus CA tx'd w/ surgery and postop xrt (dose of 50-60 Gy via wedged pair or 3-field technique)
**5yr local control was 78%
**5yr relapse free survival was 51%
**Overall nodal recurrence rate w/o elective nodal irradiation was 38% for SCC or undifferentiated, 5% for adenoid cystic.

===Elective Nodal Irradiation===
*'''Stanford, 2000''' (1959-96) PMID 10701732 -- &quot;Lymph node metastasis in maxillary sinus carcinoma.&quot; (Le QT, Int J Radiat Oncol Biol Phys. 2000 Feb 1;46(3):541-9.)
**97 pts w/ maxillary sinus carcinoma (61 receiving surgery + xrt, 36 pts xrt alone)
**5yr actuarial survival 34%, 10 yr 31%
**Most common sites of nodal recurrence were levels I and II; 12% nodal relapse at 5yrs; 5yr actuarial risk of nodal relapse was 20% w/o ENI, 0% w/ ENI.
**5yr actuarial risk of distant relapse 29% w/ neck control, and 81% if neck failure.

===Combined Modality Approach===
*'''Tennessee, 2004''' PMID 15313865 -- &quot;Intra-arterial cisplatin and concomitant radiation therapy followed by surgery for advanced paranasal sinus cancer.&quot; (Samant S, Arch Otolaryngol Head Neck Surg 2004 Aug;130(8):948-55.)
**18 pts tx'd w/ preop high dose intra-arterial cisplatin + IV thiosulfate w/ concurrent xrt (50 Gy).  84% T4 lesions.  Planned surgery 8 wks post xrt (organ sparing, if possible).  
**2 yr OS 68%, 5 yr OS 53%

==Radiation Techniques and Treatment Planning==
*Also please see [[Radiation_Oncology/Head_%26_Neck/Protons|H&amp;N proton therapy]]


*'''Duke, 1999''' PMID 10435816 -- &quot;Conformal radiation therapy treatment planning reduces the dose to the optic structures for patients with tumors of the paranasal sinuses.&quot; (Brizel, Radiother Oncol. 1999 Jun;51(3):215-8.)
**Comparison of 2D and 3D treatment plans, using Dmax, NTCP and V80
**Conformal plan better: ipsilateral optic nerve 13% NTCP reduction (SS), ipsilateral eye 3% (SS), optic chiasm 0.5% (SS) driven by decreased Dmax and V80</text>
      <sha1>jrkh7hd9ek2lhhzwwunrkk9lxg3yt8k</sha1>
    </revision>
  </page>
  <page>
    <title>Wikibooks:Linux software howtos bookshelf</title>
    <ns>4</ns>
    <id>40171</id>
    <revision>
      <id>1940781</id>
      <parentid>1326851</parentid>
      <timestamp>2010-09-29T13:07:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>rm cat; no longer applies</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">''''' For more books about Linux, visit the [[Wikibooks:Computer_software_bookshelf#Unix|Computer software bookshelf]].'''''

==Linux Software HOWTOs==
===Table of Contents===

'''Desktops'''
*[[Enlightenment]]
*[[Using GNOME|GNOME]]
*[[Using KDE|KDE]]
*[[Xfce]]
*[[olpc:Category:Installing_Sugar|Sugar]]

'''Office Software'''
*[[AbiWord]]
*[[GnuCash]]
*[[Koffice]]
*[[OpenOffice.org]]
*[[Scribus]]

'''Multimedia Software'''

*[http://amarok.kde.org/component/option,com_staticxt/staticfile,index.html/Itemid,49/ Amarok]
*[[Audacity]]
*[[Mplayer]]
*[[Rosegarden]]
*[[Xine]]

'''Graphics Software'''
*[[The GIMP]]
*[[Inkscape]] (Needs work)
*[[Xpdf]]
*[[XSane]]
*[[Krita]]

'''Programming Software'''
*[[Kate]]
*[[Quanta]]
*[[Eclipse]]
*[[Kdevelop]]
*[[Emacs]]
*[[Anjuta]]

'''Installers / Package Managers, etc'''
*[[RPM]]
*[[smart]]
*[[apt-get]]
*[[yum]]
*[[Loki Game Installer]]
*[[Compiling Code]]
*[[Autopackage]]

'''Games'''
*[[Freeciv]]
*[[Battle for Wesnoth]]
*[[Scorched 3D]]
*[[Bzflag]]
*[[Gnome / KDE Games]]

'''Virtualisation and emulation'''
*[[QEMU]]</text>
      <sha1>gqgf62anny48x7dbo9pmxo8rn3qdga8</sha1>
    </revision>
  </page>
  <page>
    <title>Mplayer</title>
    <ns>0</ns>
    <id>40172</id>
    <revision>
      <id>2370928</id>
      <parentid>2370569</parentid>
      <timestamp>2012-06-29T19:29:01Z</timestamp>
      <contributor>
        <username>Recent Runes</username>
        <id>66908</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/124.180.114.216|124.180.114.216]] ([[User talk:124.180.114.216|talk]]) to last version by 91.132.198.131</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Subpages}}
MPlayer is a multi-platform media player. It handles many file formats, and can play CDs, VCDs and DVDs. MPlayer also includes Mencoder which is a powerful video conversion program. Both MPlayer and Mencoder can be used from the command line (shell). MPlayer has one official graphical interface (GMplayer), however there are several third party graphic interfaces that allow access to some of Mencoder's functionality.

===Installing MPlayer===
There are three components to MPlayer: MPlayer itself, GMplayer (the graphical interface), and Mencoder (the video conversion utility). You may need to install each individually if they are not packaged together.

Something else that you may find necessary are external codecs for video file formats not natively supported by MPlayer.

MPlayer packages can be obtained through your linux distributions software manager (RPM DEB etc) or from the MPlayer website http://www.mplayerhq.hu/ which also contains versions for other operating systems (Windows, Apple, Amiga) as well as extra codecs you may require.

Functionality of MPlayer in Windows is very similar to Linux.

===Starting MPlayer &amp; Playing Files===

At its simplest, MPlayer can be started from the command line; executable followed by the video file you wish to view:
 &lt;code&gt;mplayer &lt;filename&gt;&lt;/code&gt; 
You may find, if your MPlayer executable is not in your path, you'll have to specify its location:
 &lt;code&gt;/usr/bin/mplayer &lt;path to file&gt;&lt;/code&gt;
or 
 &lt;code&gt;C:\&gt; &quot;C:\Program Files\mplayer\mplayer.exe&quot; &lt;path to file&gt;&lt;code&gt;
as an example.

GUI:

When you start GMplayer, two windows will open:
*A viewing window - this is where videos / dvds will play.
*A control window - this is where you can use the most common commands in MPlayer.
To play a file, right-click in the viewing window, click on 'Open', and then 'Play file'.
A file choosing dialog should then open. It is important to note that the file format filter at the bottom of the dialog is, by default, set to 'Video files'. This means that if you want to play an audio (sound) file, it will not be displayed in the dialog. To view audio files, click on the down arrow on the left hand side of the file format filter box, and choose 'All files'.
Select a file, and click on OK.
The file should start playing immediately.

Windows command line (no GUI):

Easiest way is to get the basic MPlayer package and codecs from the main MPlayer site (nothing with GUI in the name). Extract all the required files to a directory of your choosing.
From there, right click on the video you'd like to watch, and choose 'Open with' and choose other. Browse for your new mplayer directory you created and check &quot;Always use this program&quot; to make it work via double-click.

If you experience problems, just launch mplayer via Windows CMD to get good feedback as to what the trouble is. Dragging and dropping files into a windows command line will print the name, to avoid having to type names/directories. This works with every functionality of mplayer.

(adjust content locations and continue cleanup from here -- kokushibyou).

This shows a file that starts properly; there are some errors (no subtitle fonts, which is easily fixed if required) and other interesting feedback you might be interested in. 

&lt;code&gt;
 (move this to the bottom soon)
 C:\Documents and Settings\DL.UNIVERSE&gt;G:\mplayer\mplayer.exe &quot;N:\testfile.rmvb&quot;
 MPlayer dev-CVS-050626-17:02-3.4.2 (C) 2000-2005 MPlayer Team
 CPU: Advanced Micro Devices Athlon MP/XP Thoroughbred (Family: 6, Stepping: 1)
 Detected cache-line size is 64 bytes
 CPUflags:  MMX: 1 MMX2: 1 3DNow: 1 3DNow2: 1 SSE: 0 SSE2: 0
 Compiled with runtime CPU detection - WARNING - this is not optimal!
 To get best performance, recompile MPlayer with --disable-runtime-cpudetection.
 
 Cannot load font: C:\mplayer\font-arial-iso-8859-1\font-arial-14-iso-8859-1\font.desc
 Playing N:\testfile.rmvb.
 REAL file format detected. 
 Stream description: Audio Stream
 Stream mimetype: audio/x-pn-realaudio
 Stream description: Video Stream
 Stream mimetype: video/x-pn-realvideo
 Stream mimetype: logical-fileinfo
 VIDEO:  [RV40]  640x368  24bpp  23.000 fps    0.0 kbps ( 0.0 kbyte/s)
 Clip info:
 name: testfile.rmvb
 Opening audio decoder: [realaud] RealAudio decoder
 opening win32 dll 'cook3260.dll'
 Audio codec: [24] 64 kbps Stereo Music - RA8
 Audio bitrate: 64.083 kbit/s (8010 bps)
 AUDIO: 44100 Hz, 2 ch, s16le, 64.1 kbit/4.54% (ratio: 8010-&gt;176400)
 Selected audio codec: [racookwin] afm:realaud (Win32 RealAudio COOK) 
 &lt;vo_directx&gt;&lt;ERROR&gt;Your card doesn't support overlay
 Opening video decoder: [realvid] RealVideo decoder
 opening win32 dll 'drv43260.dll'
 Selected video codec: [rv40win] vfm:realvid (Win32 RealPlayer 9 RV40 decoder)
 Building audio filter chain for 44100Hz/2ch/s16le -&gt; 0Hz/0ch/??...
 AO: [dsound] 44100Hz 2ch s16le (2 bps)
 Building audio filter chain for 44100Hz/2ch/s16le -&gt; 44100Hz/2ch/s16le...
 Starting playback...
 VDec: vo config request - 640 x 368 (preferred csp: Planar I420)
 Could not find matching colorspace - retrying with -vf scale...
 Opening video filter: [scale]
 VDec: using Planar I420 as output csp (no 0)
 Movie-Aspect is 1.74:1 - prescaling to correct movie aspect.
 SwScaler: using unscaled Planar YV12 -&gt; BGR 16-bit special converter
 VO: [directx] 640x368 =&gt; 640x368 BGR 16-bit
 New_Face failed. Maybe the font path is wrong.
 Please supply the text font file (~/.mplayer/subfont.ttf).
 subtitle font: load_sub_face failed.
&lt;/code&gt;
(and movie launches in its own window, with the cmd window in the background).

===Playing CDs, DVDs and VCDs===
GMplayer's menus allow access to your CD/DVD drive for playing most on disk video files. On the command prompt you can simply refer to the DVD:// device or if you have an image of a disk on your hard drive you can use the BIN:// or ISO:// devices.
A win32 example is mplayer -dvd-device e: dvd://1 (for title 1).

If the disk does not play, then the system may not have a CDDA extractor such as [http://www.xiph.org/paranoia/ cdparanoia], or MPlayer was not compiled from source with the correct option enabled.  The CDDA extractor is only needed at compile time.

===Codecs===

In most cases mplayer will automatically recognize the video's format and the environment it is running in. It will then show the video as best it can. If you are running a graphical interface (XWindow, MS Windows) you may wish to start MPlayer's GUI. This can also be started at a command line or from your desktop's &quot;Run file&quot; option or via its menu system. In all cases above the command is; gmplayer.

If you start running into issues with trying to determine why video/sound isn't working, try a few of the following things:
* Try running mplayer command-line only - your prompt will usually output good information about errors.
* Be sure you have the full codec pack from http://www.mplayerhq.hu ; or any other codec packs that aren't included there (pretty much everything you'd ever need is already available on their site).

===While Watching===
Keyboard shortcuts for MPlayer include:
*q = quit
*r = sub position -
*t = sub position +y
*T = enable/disable stay on top mode
*y = sub delay reset to 0
*o/O = toggle on-screen display (enabled, disabled, time lapsed, time lapsed/remaining)
*p = play/pause
*[ = speed -10%
*] = speed +10%
*{ = speed x 1/2
*} = speed x 2
*a = sub alignment
*d = toggle framedropping (on, hard, off)
*f = toggle full-screen
*j = toggle subtitle (off, language 1, language 2, etc...)
*l = load file to playlist (GUI only)
*z = sub delay -
*x = sub delay +
*c = skin browser
*v = enable/disable subtitles
*b = toggle subtitle (off, language 1, language 2, etc...)
*m = mute on/off
*/ = volume down,
*0 = play
*. = frame advance
*1 = contrast -
*2 = contrast +
*3 = brightness -
*4 = brightness +
*5 = tint - (green)
*6 = tint + (red)
*7 = color -
*8 = color +
*/ = volume -
*&lt;nowiki&gt;* = volume +&lt;/nowiki&gt;
*- = audio-video delay -
*+ = audio-video delay +
*up = forward 1 minute
*down = back 1 minute
*left = rewind
*right = fast forward
*home = beginning
*end = end
*pg up = forward 10 mins
*pg dn = back 10 mins
*&lt;nowiki&gt;# = toggle audio&lt;/nowiki&gt;


===OSD Menu===
Mplayer has a freely configurable OSD menu. Unfortunately it is not well documented (or rather, not at all...). The following is an example menu.conf (to be put in ~/.mplayer on GNU/Linux systems):
&lt;code&gt;
 &lt;keybindings name=&quot;default&quot;&gt;
    &lt;binding key=&quot;UP&quot; cmd=&quot;menu up&quot; /&gt;
    &lt;binding key=&quot;DOWN&quot; cmd=&quot;menu down&quot; /&gt;
    &lt;binding key=&quot;LEFT&quot; cmd=&quot;menu left&quot; /&gt;
    &lt;binding key=&quot;RIGHT&quot; cmd=&quot;menu right&quot; /&gt;
    &lt;binding key=&quot;ENTER&quot; cmd=&quot;menu ok&quot; /&gt;
    &lt;binding key=&quot;ESC&quot; cmd=&quot;menu cancel&quot; /&gt;
    &lt;binding key=&quot;HOME&quot; cmd=&quot;menu home&quot; /&gt;
    &lt;binding key=&quot;END&quot; cmd=&quot;menu end&quot; /&gt;
    &lt;binding key=&quot;PGUP&quot; cmd=&quot;menu pageup&quot; /&gt;
    &lt;binding key=&quot;PGDWN&quot; cmd=&quot;menu pagedown&quot; /&gt;
    &lt;binding key=&quot;JOY_UP&quot; cmd=&quot;menu up&quot; /&gt;
    &lt;binding key=&quot;JOY_DOWN&quot; cmd=&quot;menu down&quot; /&gt;
    &lt;binding key=&quot;JOY_LEFT&quot; cmd=&quot;menu left&quot; /&gt;
    &lt;binding key=&quot;JOY_RIGHT&quot; cmd=&quot;menu right&quot; /&gt;
    &lt;binding key=&quot;JOY_BTN0&quot; cmd=&quot;menu ok&quot; /&gt;
    &lt;binding key=&quot;JOY_BTN1&quot; cmd=&quot;menu cancel&quot; /&gt;
    &lt;binding key=&quot;AR_VUP&quot; cmd=&quot;menu up&quot; /&gt;
    &lt;binding key=&quot;AR_VDOWN&quot; cmd=&quot;menu down&quot; /&gt;
    &lt;binding key=&quot;AR_PREV&quot; cmd=&quot;menu left&quot; /&gt;
    &lt;binding key=&quot;AR_NEXT&quot; cmd=&quot;menu right&quot; /&gt;
    &lt;binding key=&quot;AR_PLAY&quot; cmd=&quot;menu ok&quot; /&gt;
    &lt;binding key=&quot;AR_MENU&quot; cmd=&quot;menu cancel&quot; /&gt;
    &lt;binding key=&quot;AR_PREV_HOLD&quot; cmd=&quot;menu home&quot; /&gt;
    &lt;binding key=&quot;AR_NEXT_HOLD&quot; cmd=&quot;menu end&quot; /&gt;
    &lt;binding key=&quot;MOUSE_BTN3&quot; cmd=&quot;menu up&quot; /&gt;
    &lt;binding key=&quot;MOUSE_BTN4&quot; cmd=&quot;menu up&quot; /&gt;
    &lt;binding key=&quot;MOUSE_BTN0&quot; cmd=&quot;menu click&quot; /&gt;
    &lt;binding key=&quot;MOUSE_BTN2&quot; cmd=&quot;menu cancel&quot; /&gt;
 &lt;/keybindings&gt;
 &lt;keybindings name=&quot;list&quot; parent=&quot;default&quot;&gt;
    &lt;binding key=&quot;AR_PREV&quot; cmd=&quot;menu pageup&quot; /&gt;
    &lt;binding key=&quot;AR_NEXT&quot; cmd=&quot;menu pagedown&quot; /&gt;
 &lt;/keybindings&gt;
 &lt;keybindings name=&quot;filesel&quot; parent=&quot;list&quot;&gt;
    &lt;binding key=&quot;BS&quot; cmd=&quot;menu left&quot; /&gt;
 &lt;/keybindings&gt;
 &lt;keybindings name=&quot;chapsel&quot; parent=&quot;list&quot; /&gt;
 &lt;keybindings name=&quot;cmdlist&quot; parent=&quot;list&quot;&gt;
    &lt;binding key=&quot;AR_PREV&quot; cmd=&quot;menu left&quot; /&gt;
    &lt;binding key=&quot;AR_NEXT&quot; cmd=&quot;menu right&quot; /&gt;
 &lt;/keybindings&gt;
 &lt;keybindings name=&quot;txt&quot; parent=&quot;list&quot; /&gt;
 &lt;keybindings name=&quot;pt&quot; parent=&quot;list&quot; /&gt;
 &lt;keybindings name=&quot;pref&quot; parent=&quot;list&quot;&gt;
    &lt;binding key=&quot;AR_PREV&quot; cmd=&quot;menu left&quot; /&gt;
    &lt;binding key=&quot;AR_NEXT&quot; cmd=&quot;menu right&quot; /&gt;
    &lt;binding key=&quot;AR_PREV_HOLD&quot; cmd=&quot;menu left&quot; /&gt;
    &lt;binding key=&quot;AR_NEXT_HOLD&quot; cmd=&quot;menu right&quot; /&gt;
 &lt;/keybindings&gt;
 &lt;filesel name=&quot;open_file&quot;/&gt;
 &lt;filesel name=&quot;open_list&quot; file-action=&quot;loadlist '%p'&quot; auto-close=&quot;yes&quot;
         title=&quot;Open a playlist: %p&quot;
         filter=&quot;/etc/mplayer/extensions_filter&quot;
         actions=&quot;d:run 'mp_loader \'%p\' d',c:run 'mp_loader \'%p\' c'&quot; /&gt;
 &lt;chapsel name=&quot;select_chapter&quot; /&gt;
 &lt;pt name=&quot;jump_to&quot;/&gt;
 &lt;console name=&quot;console0&quot; height=&quot;80&quot; vspace=&quot;0&quot;&gt;Welcome to MPlayer&lt;/console&gt;
 &lt;txt name=&quot;man&quot; file=&quot;manpage.txt&quot;/&gt;
 &lt;pref name=&quot;general_pref&quot; title=&quot;General&quot;&gt;
      &lt;e property=&quot;osdlevel&quot; name=&quot;OSD level&quot;/&gt;
      &lt;e property=&quot;speed&quot; name=&quot;Speed&quot;/&gt;
      &lt;e property=&quot;loop&quot; name=&quot;Loop&quot;/&gt;
 &lt;/pref&gt;
 &lt;pref name=&quot;demuxer_pref&quot; title=&quot;Demuxer&quot;&gt;
 &lt;/pref&gt;
 &lt;pref name=&quot;osd_sub_pref&quot; title=&quot;Subtitles&quot;&gt;
      &lt;e property=&quot;sub&quot; name=&quot;Subtitles&quot;/&gt;
      &lt;e property=&quot;sub_visibility&quot; name=&quot;Visibility&quot;/&gt;
      &lt;e property=&quot;sub_forced_only&quot; name=&quot;Forced sub only&quot;/&gt;
      &lt;e property=&quot;sub_alignment&quot; name=&quot;Alignment&quot;/&gt;   
      &lt;e property=&quot;sub_pos&quot; name=&quot;Position&quot;/&gt;
      &lt;e property=&quot;sub_delay&quot; name=&quot;Delay&quot;/&gt;
      &lt;e property=&quot;sub_scale&quot; name=&quot;Scale&quot;/&gt;
 &lt;/pref&gt;
 &lt;pref name=&quot;audio_pref&quot; title=&quot;Audio&quot;&gt;
      &lt;e property=&quot;volume&quot; name=&quot;Volume&quot;/&gt;
      &lt;e property=&quot;balance&quot; name=&quot;Balance&quot;/&gt;
      &lt;e property=&quot;mute&quot; name=&quot;Mute&quot;/&gt;
      &lt;e property=&quot;audio_delay&quot; name=&quot;Delay&quot;/&gt;
 &lt;/pref&gt;
 &lt;pref name=&quot;colors_pref&quot; title=&quot;Colors&quot;&gt;
      &lt;e property=&quot;gamma&quot; name=&quot;Gamma&quot;/&gt;
      &lt;e property=&quot;brightness&quot; name=&quot;Brightness&quot;/&gt;
      &lt;e property=&quot;contrast&quot; name=&quot;Contrast&quot;/&gt;
      &lt;e property=&quot;saturation&quot; name=&quot;Saturation&quot;/&gt;
      &lt;e property=&quot;hue&quot; name=&quot;Hue&quot;/&gt;
 &lt;/pref&gt;
 &lt;pref name=&quot;video_pref&quot; title=&quot;Video&quot;&gt;
      &lt;e property=&quot;fullscreen&quot; name=&quot;Fullscreen&quot;/&gt;
      &lt;e property=&quot;panscan&quot; name=&quot;Panscan&quot;/&gt;
      &lt;menu menu=&quot;colors_pref&quot; name=&quot;Colors ...&quot;/&gt;
      &lt;e property=&quot;ontop&quot; name=&quot;Always on top&quot;/&gt;
      &lt;e property=&quot;rootwin&quot; name=&quot;Root window&quot;/&gt;
      &lt;e property=&quot;framedropping&quot; name=&quot;Frame dropping&quot;/&gt;
      &lt;e property=&quot;vsync&quot; name=&quot;VSync&quot;/&gt;
 &lt;/pref&gt;
 &lt;cmdlist name=&quot;pref_main&quot; title=&quot;Preferences&quot; ptr=&quot;&lt;&gt;&quot; &gt;
    &lt;e name=&quot;General ...&quot; ok=&quot;set_menu general_pref&quot;/&gt;
    &lt;e name=&quot;Audio ...&quot; ok=&quot;set_menu audio_pref&quot;/&gt;
    &lt;e name=&quot;Video ...&quot; ok=&quot;set_menu video_pref&quot;/&gt;
    &lt;e name=&quot;Subtitles ...&quot; ok=&quot;set_menu osd_sub_pref&quot;/&gt;
    &lt;e name=&quot;Back&quot; ok=&quot;menu cancel&quot;/&gt;
 &lt;/cmdlist&gt;
 &lt;pref name=&quot;properties&quot; title=&quot;Stream Properties&quot;&gt;
      &lt;e txt=&quot;${filename}&quot; name=&quot;Name&quot;/&gt;
      &lt;e txt=&quot;${video_format}&quot; name=&quot;Video Codec&quot;/&gt;
      &lt;e txt=&quot;${video_bitrate}&quot; name=&quot;Video Bitrate&quot;/&gt;
      &lt;e txt=&quot;${width} x ${height}&quot; name=&quot;Resolution&quot;/&gt;
      &lt;e txt=&quot;${audio_codec}&quot; name=&quot;Audio Codec&quot;/&gt;
      &lt;e txt=&quot;${audio_bitrate}&quot; name=&quot;Audio Bitrate&quot;/&gt;
      &lt;e txt=&quot;${samplerate}, ${channels}&quot; name=&quot;Audio Samples&quot;/&gt;
      &lt;e txt=&quot;${metadata/Title}&quot; name=&quot;Title&quot;/&gt;
      &lt;e txt=&quot;${metadata/Artist}&quot; name=&quot;Artist&quot;/&gt;
      &lt;e txt=&quot;${metadata/Album}&quot; name=&quot;Album&quot;/&gt;
      &lt;e txt=&quot;${metadata/Year}&quot; name=&quot;Year&quot;/&gt;
      &lt;e txt=&quot;${metadata/Comment}&quot; name=&quot;Comment&quot;/&gt;
      &lt;e txt=&quot;${metadata/Track}&quot; name=&quot;Track&quot;/&gt;
      &lt;e txt=&quot;${metadata/Genre}&quot; name=&quot;Genre&quot;/&gt;
      &lt;e txt=&quot;${metadata/Software}&quot; name=&quot;Software&quot;/&gt;
 &lt;/pref&gt;
 &lt;cmdlist name=&quot;main&quot; title=&quot;Menu&quot; ptr=&quot;&lt;&gt;&quot; &gt;
      &lt;e name=&quot;Pause&quot; ok=&quot;pause&quot;/&gt;
      &lt;e name=&quot;Chapter ...&quot; ok=&quot;set_menu select_chapter&quot;
                            left=&quot;seek_chapter -1&quot; right=&quot;seek_chapter +1&quot;/&gt;
      &lt;e name=&quot;Prev/Next ...&quot; ok=&quot;set_menu jump_to&quot;
                            left=&quot;pt_step -1&quot; right=&quot;pt_step 1&quot;/&gt;
      &lt;e name=&quot;Open ...&quot; ok=&quot;set_menu open_file&quot;/&gt;
      &lt;e name=&quot;Open playlist ...&quot; ok=&quot;set_menu open_list&quot;/&gt;
      &lt;e name=&quot;Help&quot; ok=&quot;set_menu man&quot;/&gt;
      &lt;e name=&quot;Pref&quot; ok=&quot;set_menu pref_main&quot;/&gt;
      &lt;e name=&quot;Properties&quot; ok=&quot;set_menu properties&quot;/&gt;
      &lt;e name=&quot;Console&quot; ok=&quot;set_menu console0&quot;/&gt;
      &lt;e name=&quot;Quit&quot; ok=&quot;quit&quot;/&gt;
 &lt;/cmdlist&gt;
&lt;/code&gt;
To enable it you must include something like the following keybinding in the 'input.conf' file in the same directory as 'menu.conf':

&lt;code&gt;
m menu main
&lt;/code&gt;

'm' can be any key (or mouse button (i.e MOUSE_BTN2)). Then start mplayer with the -menu switch (alternatively you can put &lt;code&gt;menu=yes&lt;/code&gt; in the 'config' file.

===Preferences===

==Mencoder==
'''MEncoder''' is a command line video decoding, encoding and filtering tool that is included with most MPlayer packages. It is a close sibling to MPlayer and can convert all the formats that MPlayer understands into a variety of compressed and uncompressed formats using different codecs.

===Capabilities===
As it is built from the same code as MPlayer, it can read from every source which MPlayer can read, decode all media which MPlayer can decode and it supports all filters which MPlayer can use. MPlayer can also be used to view the output of most of the filters (or of a whole pipeline of filters) before running MEncoder. If the system is not able to process this in realtime, audio can be disabled using -nosound to allow a smooth review of the video filtering results.

It is also possible to copy audio and/or video unmodified into the output file to avoid quality loss because of re-encoding for example, to only modify the audio or video, or to simply put the audio/video data unmodified into a different container format.

Since it uses the same code as MPlayer, it also features the same huge number of highly-configurable video and audio filters to transform the video and audio stream: Filters include Cropping, Scaling, Vertical Flipping, horizontal mirroring, expanding to create letterboxes, rotating, brightness/contrast, changing the aspect ratio of a video, colorspace conversion, hue/saturation, color-specific Gamma correction, filters for reducting the visibility of compression artifacts caused by MPEG compression (deblocking, deringing), automatic brightness/contrast enhancement (autolevel), sharpness/blur, denoising filters, several different ways of de-interlacing, and reversing telecine.

===Frame rate conversions and slow-motion===
Also, changing the frame rate is possible using the -ofps or -speed options and, in addition, by using the framestep filter for skipping frames. Reducing the frame rate can be used to create fast-motion &quot;speed&quot; effects which are sometimes seen in films.

Doubling the frame rate of interlaced footage without duplicating or morphing frames is possible using the tfields filter to create two different frames from each of the two fields in one frame of interlaced video. This allows playback on progressive displays, while preserving the full resolution and framerate of interlaced video, unlike any de-interlacing method.  It also makes the footage more usable for framerate conversion, and creating slow-motion scenes from footage taken at standard video/TV frame rates, e.g. using cheap consumer camcorders. If the filter gets wrong information about the top/bottom field order, the resulting output video will have juddering motion, because the two frames created would be displayed in the wrong order.

===Common tasks===

====Create an animation from a series of static images====
To combine all png images in a directory to create an avi movie do this:

 mencoder mf://*.png -mf w=400:h=400 -ovc lavc -lavcopts vcodec=xvid -of avi -o output.avi

====Split a video in a series of static images====

To split up an input movie into a subdir &quot;dirname&quot; with a special quality.

 mplayer input.avi -vo jpeg:outdir=dirname:quality=80

====Join/Merge multiple videos====
To join two or more video files into one, do this:

 mencoder -oac copy -ovc copy -idx -o whole.avi part1.avi part2.avi ...

This will only work if the video contained in the files have the same resolution and use the same codec.  Of course, this works for any file format that MPlayer can play, not just AVI files. If your files are not AVI files you have to specify the output format -of. Otherwise your joined mpeg movies will reside in an AVI container. This is because AVI is the default output format. (To see the available output formats, type &lt;code&gt;mencoder -of help&lt;/code&gt;.)

====Rip DVD to raw video====

mplayer can make quite accurate &quot;raw stream&quot; DVD rips, ex (saves DVD track 1 to file dvdout.mpg):

 mplayer -dumpstream dvdnav://1 -nocache -dvd-device d: -dumpfile dvdout.mpg

If you're on windows, you may need to replace &quot;mplayer&quot;, above, with something like &quot;C:\Program Files (x86)\MPlayer for WindowsUI\mplayer\mplayer.exe&quot; to get it to work.  (In this example, running from an installation of Mulder's Mplayer for Windows).  Your paths may be different.

If you're on mac, and have downloaded something like mplayerx and installed it to your Applications folder, then &quot;mplayer&quot; above might look something like  &quot;/Applications/MPlayerX.app/Contents/Resources/binaries/m32/mplayer&quot; or the like.  Or if you installed mplayer via macports then /opt/local/bin/mplayer

Mencoder can also rip raw video streams from dvd

 mencoder dvdnav://2 -nocache -oac copy -ovc copy -of mpeg -o dvdout.mpg

Though mencoder seems to have a bug that it sometimes will leave off say 20 minutes at the end of the title.

Another option might be dvd://2 instead of dvdnav://2 -nocache, though dvdnav -nocache is said to compatible with more DVD's.

NB that the mpeg is a real &quot;raw&quot; rip which means that its indexes might be messed up, if it comes from a DVD that resets the MPEG TS timestamps half-way through (many do, typically at about the hour mark).  You can run mencoder -idx on the file to fix them up.  If they're broken then seeking may behave oddly for absolute seeking/EDL's.

====Rip DVD into quality compressed avi====
To perform a two-pass encode of the second title on a DVD to an MPEG-4 AVI while copying the audio track, execute these two commands in this order:

 mencoder dvd://2 -ovc lavc -lavcopts vcodec=mpeg4:vpass=1 -oac copy -o /dev/null
 mencoder dvd://2 -ovc lavc -lavcopts vcodec=mpeg4:mbd=2:trell:vpass=2 -oac copy -o output.avi

The first pass creates some temporary files (having names ending with &lt;tt&gt;.log&lt;/tt&gt;) with a size of few megabytes.  Do not delete these temporary files between the two passes.  In the second pass, the output file is created using the bitrate data from the temporary file.  The resulting file will have much better image quality than a one-pass encoding would produce, since the extra step allows for more bitrate for those moments that need it and less for those that don't in order to keep a stable quality level as opposed to having a stable bitrate, and while still keeping the desired average bitrate. 

For subtitles, use the '''-slang''' (for example, to have English subtitles along with the video do '''-slang en''') or '''-sid''' (eg. '''-sid 0''') switch. When more than one language is used for dialogue subtitles may appear for all dialogue including the primary language. '''−forcedsubsonly''' may, depending on how the DVD was authored, because only dialogue that is not in the primary language to be subtitled. e.g. In a movie with both english and german dialogue with the primary language being english, using -forcedsubsonly may stop english dialogue being subtitled as well as german.

For changing the audio (such is the case in Canada where videos are often available in French and English) specify the '''-alang''' or '''-switch (eg. '''-alang en''')

You may also want to use dvdnav:// -nocache for newer dvd's

====Split/sub-section videos====
You can use the -ss and -endpos parameters to specify start and end point, but it can only start on the nearest keyframe. So, depending on how frequently keyframes were placed into the video, the actual start time may be as much as 10 seconds off (mp4) or 0.5s off (MPEG-2 [dvd's] an i-frame occurs at least every 15 frames, or 0.5 seconds).  The stop time will be relative to the adjusted start time

Example: note the '''mb''' suffix in the '''-endpos''' switch:
 mencoder -ovc copy -oac copy -ss 0 -endpos 700mb -o movie_part1.avi movie.avi

Suppose you want to split ''video_input.avi'' such that you skip &quot;approximately&quot; the first 3.2 seconds and will take the next 2 seconds of video (until &quot;approximately&quot; second 5.2)

 mencoder -ss 3.2 -endpos 2 -oac copy -ovc copy video_input.avi -o video_output.avi

In general

 mencoder -ovc copy -oac copy -ss hh:mm:ss -endpos hh:mm:ss video_input.avi -o video_output.avi

This copy part of ''video_input.avi'' to ''video_output.avi''. Part start from '''-ss time''' and stops to '''-endpos time'''. Those time could also be megabytes with '''mb'''-postfix.

If your audio/video codecs support exact positioning (e.g. a full-frame codec like [[Wikipedia:Motion JPEG|MJPEG]], [[Wikipedia:Huffyuv|huffyuv]], regular [[Wikipedia:PCM|PCM]] for audio, etc.), mencoder is able to losslessly cut an audio/video container into segments.

You could also first re-encode your stream with a &quot;keyint&quot; setting of 1, which would make every frame an i-frame, and thus make it subsequently support exact positioning.

If your stream supports exact positioning, the following command could then be used for losslessly cutting a video in 1-minute segments:

 mencoder -ss 0 -endpos 59.999 -oac copy -ovc copy video_input.avi -o video_output-001.avi
 mencoder -ss 60 -endpos 59.999 -oac copy -ovc copy video_input.avi -o video_output-002.avi
 mencoder -ss 120 - endpos 59.999 ...

Also note that the -hr-edl-seek option might help it be more accurate with certain streams, see http://betterlogic.com/roger/2011/06/mplayer-hr-edl-seek.

====Convert FLV to AVI====
You can use mencoder to convert FLV files from sites like YouTube and Google Video to AVI with mencoder.

 mencoder input.flv -ovc lavc -oac mp3lame -o output.avi


==== Using filters ====


=====Increase or decrease gamma, contrast , brightness, saturation=====
 mencoder -oac copy -ovc lavc input.flv '''-vf eq2=gamma:contrast:brightness:saturation''' -o output.avi

where gamma 0.1 - 10 (default 1.0),
contrast    -2 − 2 (default 1.0),
brightness  -1 - 1 (default 0.0),
saturation   0 − 3 (default 1.0),

{{Subjects|Multimedia software}}
{{Alphabetical|M}}
{{status|0%}}</text>
      <sha1>e0fh4lza1ttaz21cf429oij6n1j98pr</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:WhirlWind</title>
    <ns>3</ns>
    <id>40173</id>
    <revision>
      <id>230452</id>
      <parentid>229873</parentid>
      <timestamp>2005-09-08T02:34:57Z</timestamp>
      <contributor>
        <username>WhirlWind</username>
        <id>10953</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Welcome! Thanks for your contributions. If you have any questions at all don't hesitate to ask. :-) [[User:Mshonle|MShonle]] 20:17, 6 September 2005 (UTC)

Cool.  Thanks!
[[User:WhirlWind|WhirlWind]] 20:43, 6 September 2005 (UTC)
:I also made some changes to Chapter 2, in the spirit of your edits. You can look them over again if you want. Perhaps by now you've added these modules to your watch list? :-) [[User:Mshonle|MShonle]] 03:46, 7 September 2005 (UTC) (Oh yeah, and it also bugged me how it was spelled Big-Oh instead of Big-O. [[User:Mshonle|MShonle]])
:I will try to keep going through the chapters when I have time.  I'm learning a bit, but I like to reword things that I have trouble understanding.  Thanks for your comments.</text>
      <sha1>seuo4y5zfx1xvjeq5iwnjaewll2f2qu</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/Thyroid/Papillary and follicular</title>
    <ns>0</ns>
    <id>40174</id>
    <revision>
      <id>2526000</id>
      <parentid>2256205</parentid>
      <timestamp>2013-05-14T22:06:49Z</timestamp>
      <contributor>
        <username>Cheerio~enwikibooks</username>
        <id>962929</id>
      </contributor>
      <minor />
      <comment>/* Post-operative Radiotherapy */ spelling correction</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/Thyroid:TOC}}

==Clinical features==
*Papillary
**most common (75%), 
**palpable adenopathy in 33%; 35-50% chance of positive lymph nodes
**extrathyroidal extension 15%
**distant mets in 1-7% at diagnosis
**better 10-year survival (74-93%)
*Follicular
**less common (10%), 10% chance of lymph node involvement (may actually be 1% for pure follicular carcinomas)
**10-year survival somewhat lower (43-94%)

Risk of distant mets - about 1-2% (papillary) or 2-5% (follicular) at time of diagnosis

==Anatomy==
'''''Lymph node groups:'''''
*'''ATA Consensus Statement (2009)''': PMID 19860578 [http://www.thyroid.org/professionals/publications/documents/Consensus_Statement_Neck_Dissection_2009.pdf PDF] &amp;mdash; &quot;Consensus statement on the terminology and classification of central neck dissection for thyroid cancer.&quot; (Carty SE, Thyroid. 2009 Nov;19(11):1153-8.)

==Pathology==
*'''U Connecticut''' PMID 15944425 -- ''Independent clonal origins of distinct tumor foci in multifocal papillary thyroid carcinoma.'' ('''2005 Shattuck''' TM, N Engl J Med. 2005 Jun 9;352(23):2406-12.)
**10 patient samples analyzed, 5 independent clonal origin, 5 either shared or independent clonal origin
**&lt;u&gt;Conclusion&lt;/u&gt;: &quot;Individual tumor foci in patients with multifocal papillary thyroid cancer often arise as independent tumors. This provides theoretical support for bilateral thyroidectomy and radioablation of remaining tissue.&quot;


==Prognostic indices==
'''AMES''' (age, metastases, extent of primary cancer, tumor size) {{note|AMES}}
*High risk features:
**Age: males &gt; 41, females &gt; 51
**Metastases: distant metastases
**Extent: papillary with extrathryoidal spread or follicular with major capsule invasion
**Size: &gt;= 5 cm
*Risk groups:
**Low risk - not high risk
**High risk - 1) any patient with metastases, or 2) high risk age and either high risk extent or size
*Overall survival:
**Low risk 98% (95% DFS). High risk - 54% (45% DFS)

'''DAMES''' - modification of AMES with addition of DNA content measured by flow cytometry {{note|DAMES}}
*Risk groups:
**Low risk - Low risk AMES + euploid
**Intermediate risk - Low risk AMES + aneuploid
**High risk - High risk AMES + aneuploid
*Disease-free survival:
**Low risk - 92%. Intermediate 45%. High 0%.

'''AGES''' - age, tumor grade, tumor extent, tumor size (from Mayo clinic) {{note|AGES}}
*Prognostic score = 0.05 x age in years (except in pts &lt; 40, then y=0) +1 (grade 2) or +3 (grade 3 or 4) +1 (if extrathyroidal) or +3 (distant mets) + 0.2 x tumor size in cm
*Risk categories - 0-3.99, 4-4.99, 5-5.99, &gt;6   (median is 2.6)
*20-year survival:
**&lt;4 (99%), 4-5 (80%), 5-6 (33%), &gt;6 (13%)

'''MACIS''' - metastasis, age, completeness of resection, invasion, size {{note|MACIS}}
*Prognostic score = 3.1 (age &lt; 39 yrs) or 0.08 x age (if &gt;40) + 0.3 x tumor size in cm + 1 (if incompletely resected) +1 (if locally invasive) +3 (if distant mets)
*Risk categories - 0-5.99, 6-6.99, 7-7.99, &gt;8
*20-year survival:
**&lt;6 (99%), 6-7 (89%), 7-8 (56%), &gt;8 (24%)


'''''Comparison of staging systems:'''''
*'''1997: Princess Margaret''' PMID 9191532 -- &quot;A comparison of different staging systems predictability of patient outcome. Thyroid carcinoma as an example.&quot; (Brierley JD, Cancer. 1997 Jun 15;79(12):2414-23.)

==Prognosis==
*'''National Thyroid Cancer Treatment Cooperative Study (NTCTCS) Registry''' (1987-95)
**'''1998''' PMID 9731906 -- &quot;Prospective multicenter study of thyroid carcinoma treatment: initial analysis of staging and outcome. National Thyroid Cancer Treatment Cooperative Study Registry Group.&quot; (Sherman SI, Cancer.  1998 Sep 1;83(5):1012-21.)
***1607 pts. Staged according to NTCTCS system. Papillary carcinoma = 80%, follicular carcinoma = 13% (including oxyphilic / Hurthle), medullary = 4%, anaplastic = 1%. High risk disease (Stages III-IV) was found in 22% of pts with papillary carcinoma and 61% with follicular. For papillary, 49% Stage I, 27% II, 19% III, 4% IV. For follicular, 31% I, 13% II, 44% III, 13% IV. 
***Median f/u 40 months. Disease-specific mortality in 1.6% of papillary, 10.3% of follicular, and 12.9% Hurthle. 5-yr DSS was 99.9% for low risk, 87.5% for high risk. Pts alive without relapse at last follow-up, 93.6% for low risk and 70.5% for high risk.

==Iodine-131==
For papillary and follicular. Some Hurthle cell cancers may respond.  

Total ablation achieved with either 30 mCi or 100 mCi dose in &gt;80% of the pts who have a complete surgery. For less complete surgery, 30 mCi dose is effective in only 66%. 
Dose required for total ablation is 300 Gy to the residual thyroid. 
I-131 scan postoperatively: 1-5 mCi.

'''Role for post-operative I-131:'''
#Ablate residual normal thyroid - increases sensitivity of subsequent I-131 whole body scans and allows measurement of thyroglobulin levels to reflect recurrence disease
#Destroy occult carcinoma - decrease recurrence rate
#Allows post-treatment I-131 whole body scan to detect persistent disease

'''Procedure:'''
*Withhold Synthroid (T4; levothyroxine) for 4-6 weeks. Cytomel (T3; liothyronine) can be substituted for 3-4 weeks, but discontinued at least 2 weeks before radioiodine studies.
*TSH should be &gt;25 to 30 at the time of the radioiodine study
*Administer I-131 tracer dose
*If high post-op uptake (&gt;10%), should have completion surgery. 
*Others can have treatment dose of I-131. 
*Perform total body scan 4-7 days after treatment dose. 
*Administer levothyroxine suppressive therapy
*Repeat total body scan in 6 months

===Indications for Postoperative I-131===
'''Strong indications for post-operative treatment:'''
*Distant metastases
*Incomplete resection
*High risk pts (papillary with MACIS 6+, Stage II-III follicular or Hurthle cell)
'''Probable indications:'''
*Papillary/follicular in children &lt; 16 yrs
*Tall cell or columnar cell variant of papillary
'''Possible indications:'''
*Diffuse sclerosing variant of papillary
*Bulky bilateral LN mets
*Elevated thyroglobulin at 3 months post-op
'''No post-operative treatment needed for:'''
*Low risk pts: papillary with MACIS &lt; 6, or Stage I follicular or Hurthle cell

===Series showing I-131 Efficacy===

*'''U.Michigan''' - PMID 6502251, 1984 &amp;mdash; &quot;An analysis of &quot;ablation of thyroid remnants&quot; with I-131 in 511 patients from 1947-1984: experience at University of Michigan.&quot;
**Retrospective. Pts given treatment doses of I-131 after positive uptake postsurgically. 
**No difference in rate of successful ablation between groups treated with 100-149 mCi, 150-174 mCi, 179-199 mCi, and 200 mCi or more.
**Conclusion: 100-149 mCi dose is appropriate adjuvant therapy.

*'''Ohio State''' - PMID 7977430, 1994 &amp;mdash; &quot;Long-term impact of initial surgical and medical therapy on papillary and follicular thyroid cancer.&quot;
**Prospective, non-randomized. 1355 pts over 40 yrs. 
**I-131 decreases recurrence rate by 33% compared to thyroid hormone therapy alone. No difference in recurrence rate for low doses (29-50 mCi) vs high doses (51-200 mCi).

*'''Ohio State''' - PMID 9133698, 1997 &amp;mdash; &quot;Thyroid remnant 131I ablation for papillary and follicular thyroid carcinoma.&quot; Mazzaferri EL et al. Thyroid. 1997 Apr;7(2):265-71.
**Retrospective. 1004 pts. Compared I131 ablation vs thyroid hormone alone or no further treatment.
**Decrease in recurrences by 75%, decreased rate of DM, and decreased cancer deaths after I131. Benefit restricted to those with tumors &gt;=1.5 cm (for recurrence and DM) and for age 40 or older with tumors &gt;=1.5 cm (for cancer deaths). No difference between low and high dose therapy.
**I-131 treatment benefits pts with tumors &gt;=1.5 cm.

===Salivary Gland Protection===
*'''West China Hospital; Chengdu''' -- Vitamic C after 1 vs 5 vs 13 vs 25 hours after I-131
**Randomized, 4 arms. 72 patients. Effect of sucking Vitamin C after receiving 3.7 Gbq of I-131 at Arm 1) 1 hour vs Arm 2) 5 hours vs Arm 3) 13 hours and Arm 4) 25 hours post treatment. Salivary dose calculated
**'''2010''' PMID 20237029 -- &quot;Influence of vitamin C on salivary absorbed dose of 131I in thyroid cancer patients: a prospective, randomized, single-blind, controlled trial.&quot; (Liu B, J Nucl Med. 2010 Apr;51(4):618-23. Epub 2010 Mar 17.)
***Outcome: Parotid absorbed dose comparable. Majority (86%) of salivary activity accumulated during first 24 hours
***Conclusion: Salivary stimulation with vitamin C after I-131 administration doesn't protect salivary glands

===Reviews===
*'''Review, 2005''' PMID 15653649 -- &quot;The evolving role of (131)I for the treatment of differentiated thyroid carcinoma.&quot; (Robbins RJ, J Nucl Med. 2005 Jan;46 Suppl 1:28S-37S.)
*'''Review, 2001''' Mazzaferri et al, 2001 &amp;mdash; &quot;Clinical review 128: Current approaches to primary therapy for papillary and follicular thyroid cancer.&quot; Mazzaferri EL et al. J Clin Endocrinol Metab. 2001 Apr;86(4):1447-63.

==External beam radiotherapy==
Controversial. Early series show no benefit or even had patients who had received radiation doing worse.  Modern series appear to show benefit of a combination of RT + radioiodine in some patient populations (e.g. macroscopic residual disease in the neck).

===Post-operative Radiotherapy===
*'''German MSDS Study''' (1999-2003) -- surgery + I-131 +/- adjuvant RT
**Originally randomized, converted to prospective cohort study. 279 patients met inclusion criteria, 45 consented to randomization, 35 were randoimzed. T4 tumors (extending beyond capsule with/without LN involvement) treated with surgery and I-131, then Arm 1) observation vs. Arm 2) adjuvant RT. If R0 resection used 59.4/33, if R1 resection used 66.6/37. GTV1 = tumor region, ipsilateral or bilatera. GTV2 = thyroid bed, cervical LNs, infra/supraclavicular LNs, upper mediastinum.
**'''Acute Toxicity; 2003''' PMID 14652672 -- &quot;Acute toxicity of adjuvant radiotherapy in locally advanced differentiated thyroid carcinoma. First results of the multicenter study differentiated thyroid carcinoma (MSDS).&quot; (Schuck A, Strahlenther Onkol. 2003 Dec;179(12):832-9.)
***Outcome: Grade 3+ in 9% (pharynx, larynx, and skin). Maximal late toxicity Grade 2 in 4 patients, no Grade 3 toxicity
***Conclusion: Acute toxicity is tolerable
**'''Conversion; 2003''' PMID 14668957 -- &quot;Multicenter study differentiated thyroid carcinoma (MSDS). Diminished acceptance of adjuvant external beam radiotherapy.&quot; (Biermann M, Nuklearmedizin. 2003 Dec;42(6):244-50.)
***Study converted to prospective cohort due to low acceptance of adjuvant RT (only 14% of trial cohort actually assigned)
*'''Villejuif, France''' - PMID 3919920  &quot;External radiotherapy in thyroid cancers.&quot; Tubiana et al.  Cancer. 1985
**97 pts treated w/ external beam xrt after incomplete resection; 76 pts treated with surgery alone.  Low incidence of local recurrence in pts tx'd with xrt (11% at 15 yrs vs 23% for pts treated w/ surgery alone; pts tx'd with xrt had larger/more extensive tumors).  Reasons for residual disease included laryngeal, tracheal, esophageal, mediastinal or major vessel involvement.
**Conclusion:  Radiotherapy effective means of controlling residual disease after surgery if doses &gt;50 Gy delivered.

*'''Princess Margaret Hospital''', 1998 - PMID 9445196 &amp;mdash; &quot;The effects of surgery, radioiodine, and external radiation therapy on the clinical outcome of patients with differentiated thyroid carcinoma.&quot; Tsang RW et al. Cancer. 1998 Jan 15;82(2):375-88.
**382 pts w/ stage I-IV papillary or follicular thyroid CA w/ median FU of 10.8 yrs.  Factors predictive of local relapse were age&gt;60,poor differentiation,&gt;4cm,macroscopic residual,lack of radioiodine.  10 yr OS was 93% for papillary and 86% for follicular.  Local control improved in cases of EBRT for microscopic residual disease (93% vs 78% at 10yrs).  If macroscopic residual disease, local control 62% at 5yrs if adjuvant EBRT.
**Conclusion:  microscopically +margins and macroscopic residual disease both appear to benefit from adjuvant external beam xrt.

*'''Essen''', 1995 - PMID 8630926  &quot;Impact of Adjuvant EBRT in pts with Perithyroidal Infiltration&quot;  Farahati et al.  Cancer. 1996
**169 pts with T4 follicular or papillary thyroid and free of mets after 2nd radioiodine tx.  Cohorts got either xrt or no xrt; all got surgery, ablative I-131, levothyroxine.  Xrt comprised of 50-60 Gy to neck.  RFS benefit was seen in pts &gt;40 y/o w/ N+ disease.
**Conclusion:  T4N+ should be considered for adjuvant xrt.

===IMRT===
*'''MSKCC, 2005''' (2001-4) - PMID 16154712 &amp;mdash; &quot;Intensity-modulated radiation therapy for the treatment of nonanaplastic thyroid cancer.&quot; Rosenbluth BD et al. Int J Radiat Oncol Biol Phys. 2005 Dec 1;63(5):1419-26.
**20 pts with non-anaplastic thyroid cancer treated with IMRT. Treated microscopic disease to 54 Gy, higher risk areas to 59.4-63 Gy, positive margins to 63-66 Gy, and gross disease to 63-70 Gy. Elective nodal volume extended from the top of level II (sometimes retropharyngeal nodes were included) to below the thoracic inlet to the level of the aortic arch. High risk area was the tumor bed and central neck lymphatics.
**Conclusion: IMRT is feasible for treatment of thyroid cancer

==Follow-up==
'''''Monitoring of thyroglobulin:'''''
*'''Consensus report; 2003''' PMID 12679418 -- &quot;A consensus report of the role of serum thyroglobulin as a monitoring method for low-risk patients with papillary thyroid carcinoma.&quot; (Mazzaferri EL, J Clin Endocrinol Metab. 2003 Apr;88(4):1433-41.)
**Consensus report of experts, industry sponsored, not representing any official society. Recommendations apply to patients who are low-risk, s/p total or near-total thyroidectomy and I-131 ablation, with no clinical evidence of tumor, undetectable Tg levels (&lt;1 ug/L) during THST. Most of these have tumors &lt;4 cm, not a virulent subtype, with or without positive lymph nodes, no distant metastases. These patients are low-risk by AMES, usually have MACIS scores of &lt;6, and are AJCC Stage I (if age &lt;45) or Stage II (if age &gt;=45).

==Recurrent disease==
Excellent prognosis for patients with locoregional recurrences, with 70-90% long-term survivors. For patients who develop distant metastasis, 50-90% die of their disease. 

I-131 for ablation (if post-op scan reveals gross residual disease): 100 mCi.  

I-131 for recurrent disease, post-op residual in the neck, nodal or distant metastases, or inoperable tumors: 150-250 mCi.

Re-imaging should be done 1-2 days after ablation or therapy.

Recommended maximum dose: 800-1000 mCi.

Estimation of absorbed dose is 0.1 Gy per microcurie per gram of thyroid cancer tissue.

==References==
*{{ref|AMES}} - PMID 3194846
*{{ref|DAMES}} - PMID 1455318 
*{{ref|AGES}} - PMID 3686348 
*{{ref|MACIS}} - PMID 8256208
*Larsen: Williams Textbook of Endocrinology, 10th ed., 2003 Saunders.

[[Category:Radiation Oncology]]</text>
      <sha1>5uk2g1fsyyhd8zkzyoiacyy4x50odo8</sha1>
    </revision>
  </page>
  <page>
    <title>Cookbook:Hominy Bread</title>
    <ns>102</ns>
    <id>40176</id>
    <revision>
      <id>2684767</id>
      <parentid>632455</parentid>
      <timestamp>2014-07-25T23:29:48Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Adjusted cats added metrics.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{recipe}}

== Ingredients ==
* 2 cups cooked hominy grits
* 1 cup cornmeal
* 1 tablespoon baking powder
* 1 scant teaspoon salt
* 2 tablespoons butter
* 2 large eggs
* 1 1/2 cups milk
* 3 tablespoons sugar (optional)

== Procedure ==
# Preheat oven 350F (175C).
# In a large bowl combine hominy grits, cornmeal, baking powder, salt, butter, and sugar if using.
# In another bowl beat 2 eggs thoroughly, then add milk and mix together completely.  
# Add egg and milk mixture to dry ingredients.
# Grease 1 large bake dish, or 2 loaf pans.  
# Pour mixture in bake dish or 2 loaf pans.  
# Bake in preheated oven 35 minutes, or until golden brown, or knife inserted in bread comes out clean.

This bread is best eaten warm for breakfast with butter or honey.

[[Category:Hominy recipes]]
[[Category:Cornbread recipes]]
[[Category:Baking recipes]]
[[Category:Recipes with metric units]]</text>
      <sha1>9zg4rkdynnsva2gmazcnt6u1semt7pa</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/Thyroid/Hurthle cell</title>
    <ns>0</ns>
    <id>40177</id>
    <revision>
      <id>940869</id>
      <parentid>530218</parentid>
      <timestamp>2007-08-11T17:05:57Z</timestamp>
      <contributor>
        <username>MDChanderson</username>
        <id>9434</id>
      </contributor>
      <comment>/* References */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/Thyroid:TOC}}
&lt;h1&gt;H&amp;uuml;rthle cell carcinoma&lt;/h1&gt;
Variant of follicular carcinoma. Is relatively aggressive with prognosis worse than papillary carcinoma. Represent about 3% of thyroid cancer. 



==Prognostic factors==
*M.D.Anderson, 2003 (1944 - 1995) - PMID 12599224 &amp;mdash; &quot;Prognostic factors in patients with Hurthle cell neoplasms of the thyroid.&quot; Lopez-Penabad L et al. Cancer. 2003 Mar 1;97(5):1186-94.
**89 pts with Hurthle cell carcinoma, 38 with Hurthle cell adenoma.

==Patterns of failure==
Most recurrences are in the neck. Lung is most common site of distant mets. Recurrent disease in the neck can be treated surgically. 

Cause-specific mortality approximately 30%. 

==Treatment==
Treatment should include total thyroidectomy and unilateral central compartment neck dissection. There is no known role for adjuvant radiation therapy; however, the tumor is radiosensitive.

Only about 7% respond to I-131; however, one study (PMID 12599224; see M.D.Anderson study above) suggested a survival benefit for thyroid ablation with radioactive iodine.

===Adjuvant Radiation Therapy===
*'''Mayo Clinic, 2003''' - PMID 12829143 &amp;mdash; &quot;Is there a role for radiation therapy in the management of Hurthle cell carcinoma?&quot; Foote RL et al. Int J Radiat Oncol Biol Phys. 2003 Jul 15;56(4):1067-72.

[[Category:Radiation Oncology]]</text>
      <sha1>ol6s7ulkwrtfda540a5ucjszvn5tyjp</sha1>
    </revision>
  </page>
  <page>
    <title>Category:Placenta recipes</title>
    <ns>14</ns>
    <id>40179</id>
    <revision>
      <id>2670980</id>
      <parentid>825431</parentid>
      <timestamp>2014-06-07T13:54:27Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Moved this into the Esoteric meat recipes subcat.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{cooknav}}

Recipes involving [[Cookbook:Placenta|placenta]].

[[Category:Esoteric meat recipes]]</text>
      <sha1>536i0grxrtw92yhguxaunahjyakwsfl</sha1>
    </revision>
  </page>
  <page>
    <title>User:Christyor73</title>
    <ns>2</ns>
    <id>40181</id>
    <revision>
      <id>229687</id>
      <parentid>229686</parentid>
      <timestamp>2005-09-06T22:35:53Z</timestamp>
      <contributor>
        <username>Christyor73</username>
        <id>11233</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" />
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    </revision>
  </page>
  <page>
    <title>Neuroanatomy</title>
    <ns>0</ns>
    <id>40182</id>
    <redirect title="Neuroscience/Neuroanatomy" />
    <revision>
      <id>244858</id>
      <parentid>229714</parentid>
      <timestamp>2005-09-29T21:44:20Z</timestamp>
      <contributor>
        <username>Dan-aka-jack</username>
        <id>3738</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[Neuroscience/Neuroanatomy]]</text>
      <sha1>g35w5bipt0kstwihp8l3uq2hp8n6e8x</sha1>
    </revision>
  </page>
  <page>
    <title>How To Build A Computer</title>
    <ns>0</ns>
    <id>40184</id>
    <redirect title="How To Assemble A Desktop PC" />
    <revision>
      <id>378680</id>
      <parentid>378332</parentid>
      <timestamp>2006-02-26T15:19:45Z</timestamp>
      <contributor>
        <username>Derbeth</username>
        <id>6139</id>
      </contributor>
      <minor />
      <comment>correct revert</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[How To Assemble A Desktop PC]]</text>
      <sha1>7gjhb05ah4s07aq3pptkjmy7yozv94k</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Language Features/Dialects</title>
    <ns>0</ns>
    <id>40187</id>
    <revision>
      <id>1873976</id>
      <parentid>1873974</parentid>
      <timestamp>2010-07-04T21:48:03Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <comment>/* They're Everywhere */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">A lot of the power of REBOL comes from its concept of '''''dialects'''''. A dialect is a sub-language used for a specific purpose (also called a domain specific language).

=== They're Everywhere ===

It's like buying a Volkswagen Bug. Once you own one, you start to see them everywhere. That's true for dialects as well. And, even better, once you know what they are, you start to add them to your code and use them to gain greater programming leverage in writing applications.

You use dialects a lot in REBOL, even though you may not realize it. For example, when you write:

 sum: func [num1 [number!] num2 [number!]] [num1 + num2]

The block that follows the '''func''' word is actually a dialect. It is not &quot;normal REBOL code&quot; (also called the Do dialect), it is a special little language that is used for defining the arguments of functions.

Similarly, when you create GUI you often write it in VID, the visual interface dialect. A snip of VID might look like this:

 image %nice-graphic.jpg
 button &quot;Go&quot; [do something]
 button &quot;Stop&quot; [quit]
 the-field: area &quot;Enter text here&quot;

You may not realize it, but you use a dialect when you tell the '''parse''' function how to parse strings or blocks:

 thru &lt;title&gt; copy title to &lt;/title&gt;

When you want to control the security for your program, you also use a dialect:

 net allow
 file [
     ask all
     allow read
     quit execute
 ]
 shell quit

So, there are many such dialects in REBOL.

=== Definition of a Dialect ===

The definition of a dialect in REBOL is very simple: '''''any loadable expression is a dialect'''''.

That is, for a dialect to be valid, you must be able to use the '''load''' function to load it into REBOL. The dialect must be a valid lexical expression of REBOL. If a string cannot be loaded, then it is not a dialect (it might be a valid language of some kind, but it is just not a dialect).

For example, this code shows that a given string is a valid dialect of REBOL because it can be loaded:

 &gt;&gt; load {sell 100 shares &quot;aacmee&quot; now}
 == [sell 100 shares &quot;aacmee&quot; now]

But, the example below is not a valid dialect. It cannot be loaded.

 &gt;&gt; load {move 100-200 draw @line}
 ** Syntax Error: Invalid date -- 100-200

Nor is this line of C code a valid dialect:

 &gt;&gt; load {for (i = 1; i &lt; 10; i++) print(i);}
 ** Syntax Error: Missing ) at end-of-script

These examples contain character sequences that are not valid in REBOL; therefore, they are not dialects of REBOL.

This '''''loadability factor''''' is part of what makes dialecting so special in REBOL. You don't need to write a lexical string scanner. You get to skip that part and get to the meat of your special language.

=== Not Just Code, Data Too ===

Dialects are not only useful for code expressions, they are equally productive for data storage (and data exchange over the net).

It is important to recognize that a dialect does not require that you write a parser or any other complex method to interpret the meaning of the data.
Even a block as simple as this is considered to be a dialect:

  &quot;Bob&quot; 21 bob@example.com $100

This is a dialect because it is a loadable REBOL string. The way you interpret it is up to you, but it can be as simple as using a multivariable assignment:

  data: load {&quot;Bob&quot; 21 bob@example.com $100}
  set [name age email payment] data

Here is a more complex data dialect that is used for holding data about students in a REBOL-based class reunion program. This is a single record, but we've broken it into separate lines so you can see the details:

 37 &quot;Bob&quot; &quot;Smith&quot; &quot;1000 Example Dr.&quot; &quot;Example&quot; &quot;CA&quot; &quot;90000&quot;
 spouse &quot;Linda Smith&quot;
 phone &quot;555-1234&quot;
 package [all 2 true]
 paid $70.00
 bio {I went to school for Industrial Instrumentation.}
 approve [book-name book-bio]

The words in this dialect (like spouse, phone, package) are used for optional fields of the record.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>8d87u8j8yx3au8qo4ydcztlyozckaa6</sha1>
    </revision>
  </page>
  <page>
    <title>User:MathMan64~enwikibooks/Arithmetic/Previous</title>
    <ns>2</ns>
    <id>40192</id>
    <revision>
      <id>2871363</id>
      <parentid>464275</parentid>
      <timestamp>2015-04-17T22:43:19Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:MathMan64/Arithmetic/Previous]] to [[User:MathMan64~enwikibooks/Arithmetic/Previous]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/MathMan64|MathMan64]]&quot; to &quot;[[...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Simple arithmetic==
There are four basic operations one can perform on different numerical quantities (as well as other mathematical objects which you will encounter later). These are:
*addition
*subtraction
*multiplication
*division

There is also the use of exponents, explained briefly under '''Multiplication''' in this section and explained further in the section, [[Algebra/Further arithmetic]], under Exponents.

It is also important to understand that the equals sign (in this book, '&lt;math&gt;=&lt;/math&gt;' ) means that the things on both sides are of equal value, and that &lt;math&gt;=&lt;/math&gt; is not an operator.

When you see an &lt;math&gt;=&lt;/math&gt; sign, say to yourself ''Same value, different appearance''.

=== Addition ===
Addition operations are denoted by the + sign. The addition operator (plus sign) will take any two numbers, called addends, as operands to work on.  The result is called the sum of the two numbers.

The operation of addition is commutative.  This means that the addition of two numbers will give the same sum regardless of the order in which the numbers are added.  

Example:
*&lt;math&gt;7 + 5 = 12&lt;/math&gt; and &lt;math&gt;5 + 7 = 12&lt;/math&gt;

*&lt;math&gt;3 + 2 + 4 = 9&lt;/math&gt; and &lt;math&gt;4 + 3 + 2 = 9&lt;/math&gt;

See also [[Algebra/Arithmetic/Numerical Axioms|Numerical axioms]].

====Exercises====
In Exercises 1&amp;ndash;25, find the sum.
*1. &lt;math&gt;5 + 3&lt;/math&gt;
*2. &lt;math&gt;8 + 7&lt;/math&gt;
*3. &lt;math&gt;9 + 2&lt;/math&gt;
*4. &lt;math&gt;6 + 3&lt;/math&gt;
*5. &lt;math&gt;1 + 4&lt;/math&gt;
*6. &lt;math&gt;2 + 17&lt;/math&gt;
*7. &lt;math&gt;12 + 11&lt;/math&gt;
*8. &lt;math&gt;53 + 8&lt;/math&gt;
*9. &lt;math&gt;41 + 9&lt;/math&gt;
*10. &lt;math&gt;84 + 12&lt;/math&gt;
*11. &lt;math&gt;16 + 17&lt;/math&gt;
*12. &lt;math&gt;7,576 + 5,345&lt;/math&gt;
*13. &lt;math&gt;2,345 + 3,245&lt;/math&gt;
*14. &lt;math&gt;8,952 + 9,423&lt;/math&gt;
*15. &lt;math&gt;2,783 + 2,389&lt;/math&gt;
*16. &lt;math&gt;189,583 + 1,574,822&lt;/math&gt;
*17. &lt;math&gt;1.5 + 2.7&lt;/math&gt;
*18. &lt;math&gt;5.4 + 3.9&lt;/math&gt;
*19. &lt;math&gt;8.3 + 9.2&lt;/math&gt;
*20. &lt;math&gt;2.23 + 4.89&lt;/math&gt;
*21. &lt;math&gt;534.4 + 34.675&lt;/math&gt;
*22. &lt;math&gt;348.904 + 23,498.2&lt;/math&gt;
*23. &lt;math&gt;1.673 + 48,210.38&lt;/math&gt;
*24. &lt;math&gt;10.4823 + 94.29478&lt;/math&gt;
*25. &lt;math&gt;128.52 + 2,070.24&lt;/math&gt;

[[Algebra/Arithmetic/Answers to Addition Exercises|Answers]]

=== Subtraction ===
Subtraction, as you probably also have seen, uses the - sign.  The generic subtraction operator will take any two numbers as operands.  The result is called the difference of the two numbers.

Subtraction is not a commutative operation.  Changing the order of the operands will likely give a different (not the same) result.  

Example:
*&lt;math&gt;7 - 5 = 2&lt;/math&gt; and &lt;math&gt;5 - 7 = -2&lt;/math&gt;

*&lt;math&gt;3 - 2 - 4 = -3&lt;/math&gt; and &lt;math&gt;4 - 3 - 2 = -1&lt;/math&gt;


====Exercises====
In Exercises 26&amp;ndash;50, find the difference.
*26. &lt;math&gt;5 - 3&lt;/math&gt;
*27. &lt;math&gt;8 - 7&lt;/math&gt;
*28. &lt;math&gt;9 - 2&lt;/math&gt;
*29. &lt;math&gt;6 - 3&lt;/math&gt;
*30. &lt;math&gt;1 - 4&lt;/math&gt;
*31. &lt;math&gt;2 - 17&lt;/math&gt;
*32. &lt;math&gt;12 - 11&lt;/math&gt;
*33. &lt;math&gt;53 - 8&lt;/math&gt;
*34. &lt;math&gt;41 - 9&lt;/math&gt;
*35. &lt;math&gt;84 - 12&lt;/math&gt;
*36. &lt;math&gt;16 - 17&lt;/math&gt;
*37. &lt;math&gt;7,576 - 5,345&lt;/math&gt;
*38. &lt;math&gt;2,345 - 3,245&lt;/math&gt;
*39. &lt;math&gt;8,952 - 9,423&lt;/math&gt;
*40. &lt;math&gt;2,783 - 2,389&lt;/math&gt;
*41. &lt;math&gt;1,574,822 - 189,583&lt;/math&gt;
*42. &lt;math&gt;2.7 - 1.5&lt;/math&gt;
*43. &lt;math&gt;5.4 - 3.9&lt;/math&gt;
*44. &lt;math&gt;8.3 - 9.2&lt;/math&gt;
*45. &lt;math&gt;2.23 - 4.89&lt;/math&gt;
*46. &lt;math&gt;10.38 - 1.673&lt;/math&gt;
*47. &lt;math&gt;534.4 - 34.675&lt;/math&gt;
*48. &lt;math&gt;348.904 - 23,498.2&lt;/math&gt;
*49. &lt;math&gt;10.4823 - 94.29478&lt;/math&gt;
*50. &lt;math&gt;2,070.24 - 128.52&lt;/math&gt;

[[Algebra/Arithmetic/Answers to Subtraction Excercises|Answers]]

=== Multiplication ===
Multiplication is denoted by a ''*'', &lt;math&gt;\times&lt;/math&gt;, or &lt;math&gt;\cdot&lt;/math&gt; sign. However, the X sign is normally not used in algebra, and is instead limited to very basic elementary math, as it can easily be confused with an &quot;x&quot; variable.  The generic multiplication operator will take any two numbers, called factors, as operands. The result is called the product of the two numbers. If the multiplicants are not both written as numbers, the multiplication sign can be left out. Thus, the following example expressions are equivalent: 

&lt;center&gt;
&lt;math&gt;3*\!(a*b) = 3 \times \!(a \times b) = 3\! \cdot \!(a \!\cdot \! b) = 3 \!\cdot \!(ab) = 3(a \!\cdot \! b) = 3(ab) = 3ab&lt;/math&gt;
&lt;/center&gt;

Multiplication is a form of repeated addition.  For example 
&lt;math&gt; 3 \times 5 &lt;/math&gt; means 

&lt;math&gt; 3 + 3 + 3 + 3 + 3 \quad \operatorname{or} \quad 5 + 5 + 5 &lt;/math&gt;

Multiplication is also commutative.  This means that the multiplication of two numbers (factors) will give the same product regardless of the order in which the numbers are multiplied together.

Numbers with exponents that are whole numbers larger than 1 indicate the number of factors to be multiplied, thus that number is multiplied by itself as many times as the exponent shows.  Numbers with an exponent of 1 have only one factor, and therefore are equal to the number.  Any number with an exponent of 0 has no factors at all, and the result is 1.  Examples:

&lt;center&gt;
&lt;math&gt;5^3 = 5 \times 5 \times 5 \qquad\qquad 5^1 = 5 \qquad\qquad 5^0 = 1&lt;/math&gt;
&lt;/center&gt;

Further information on exponents is given under '''Radicals''' in this section and in the section,  [[Algrebra/Further arithmetic]], under Exponents.


&lt;!-- ===Exercises=== --&gt;

=== Division ===
Division uses the ÷ sign.  It may also be signified by the slash, /, :, or the fraction bar.  The generic division operator will take any two numbers as operands.  The number before the ÷ sign is called the dividend and the number after the ÷ sign is called the divisor.  The result is called the quotient of the two numbers.

Division is not a commutative operation.  Switching the dividend and the divisor will likely give a different quotient. The division with a divisor of 0 is not defined.  There is no answer for it. 

Example:
*&lt;math&gt;4 / 2 = 2&lt;/math&gt; and &lt;math&gt;2 / 4 = 0.5&lt;/math&gt;

====Long Division====

In [[Wikipedia:arithmetic|arithmetic]], '''long division''' is an algorithm for [[Wikipedia:division|division]] of two [[Wikipedia:real number|real number]]s. It requires only the means to write the numbers down, and is simple to perform even for large [[Wikipedia:dividend|dividend]]s because the [[Wikipedia:algorithm|algorithm]] separates a complex division problem into smaller problems. However, the procedure requires various numbers to be divided by the [[Wikipedia:divisor|divisor]]: this is simple with single-digit divisors, but becomes harder with larger ones.

A more generalized version of this method is used for [[Wikipedia:polynomial long division|dividing polynomials]] (sometimes using a shorthand version called [[Wikipedia:synthetic division|synthetic division]]).

In long division notation,  ''500'' &amp;divide; ''4'' = ''125'' is denoted as follows:

:&lt;math&gt;
\begin{matrix}
\quad 125\\
4\overline{)500}\\
\end{matrix}
&lt;/math&gt;

The method involves several steps:

1. Write the dividend and divisor in this form: 

:&lt;math&gt;4\overline{)500}&lt;/math&gt; 

In this example, 500 is the dividend and 4 is the divisor.

2. Consider the leftmost digit of the dividend ''(5)''. Find the largest multiple of the divisor that is less than the leftmost digit: in other words, mentally perform &quot;5 divided by 4&quot;. If this digit is too small, consider the first two digits.

In this case, the largest multiple of ''4'' that is less than ''5'' is ''4''. Write this number under the leftmost digit of the dividend. Write the multiple divided by the divisor ''(4 divided by 4 = 1)'' above the line over the leftmost digit of the dividend.

:&lt;math&gt;
\begin{matrix}
1\\
4\overline{)500}\\
4
\end{matrix}
&lt;/math&gt;

3. Subtract the digit under the dividend from the digit used in the dividend. Write the result (remainder) (5 &amp;minus; 4 = 1) under the bottom digit, then drop the zero (the second digit) to the right of it. 

:&lt;math&gt;
\begin{matrix}
1\\
4\overline{)500}\\
\underline{4}\\
\;\,10
\end{matrix}
&lt;/math&gt;

4. Repeat steps 2 and 3, except use the number you just created to divide by, and write above and under the second digit.

:&lt;math&gt;
\begin{matrix}
\,\,12\\
4\overline{)500}\\
\underline{4}\\
\;\,10\\
\quad\underline{8}\\
\quad\;\,20
\end{matrix}
&lt;/math&gt;

5. Repeat step 4 until there are no digits remaining in the dividend. The number written above the bar is the quotient, and the last remainder calculated is the remainder for the entire problem.

:&lt;math&gt;
\begin{matrix}
\quad 125\\
4\overline{)500}\\
\underline{4}\\
\;\,10\\
\quad\underline{8}\\
\quad\;\,20\\
\quad\;\,\underline{20}\\
\qquad0
\end{matrix}
&lt;/math&gt;


&lt;!-- ===Exercises=== --&gt;

== Order of operations ==
The order of operations is the order in which all algebraic expressions should be simplified. Oftentimes, the meaning of a complex expression changes depending upon the order in which it is calculated. The order of operations is:

::'''P'''arentheses
::'''E'''xponents
::'''M'''ultiplication &amp; '''D'''ivision
::'''A'''ddition &amp; '''S'''ubtraction

This means that expressions within parentheses are evaluated first, then exponents (including roots, i.e. radicals), then multiplication and division (at the same level), and finally addition and subtraction (at the same level).  If there are multiple operations at the same level on the order of operations, move from left to right.

There are a number of different abbreviations for memorizing the order.  PEMDAS, BEDMAS and BODMAS (B is Brackets) are common.  Another common way to remember the order is the mnemonic 

*&quot;Please Excuse My Dear Aunt Sally,&quot; 

with the beginning letters standing for each operation.  Whichever mnemonic you use, be aware that multiplication does '''not''' always come before division, and addition does '''not''' always come before subtraction.  For example:

If you have an expression like 

*3 &amp;times; 3 - 5 + 2 

you work like this:  First notice that, there are no Parenthesis or Exponents, so we move to Multiplication and Division.  There's only the one multiplication, so we do that first and end up with 9 - 5 + 2.  Now we move to Addition and Subtraction, working left to right.  So firstly we do the subtraction to get 4 + 2, and finally the addition to give 6.  If we had blindly done the addition first, we would have got the answer 2, which is wrong!

The rationale for the grouping (apart from parentheses, which are obviously first) is that multiplication is repeated addition and exponentiation is repeated multiplication. Also, division is multiplication by the reciprocal and subtraction is addition of the negative, so these operations are equivalent. In fact PEMA would be a better phrase (&quot;Please Excuse My Aunt&quot;), but in lower arithmetic courses MDAS is often taught without explaining reciprocals.

Parentheses are curved symbols, '''(''' and ''')''', that are put around part of an expression in order to convey that the expressions inside them should be evaluated first. Within a set of parentheses, the order of operations should be followed. Square brackets, '''[''' and ''']''', are sometimes used around parentheses to avoid confusion: [(3+5)&amp;times;2]&lt;sup&gt;2&lt;/sup&gt; means the same as ((3+5)&amp;times;2)&lt;sup&gt;2&lt;/sup&gt;. The fraction bar and radical bar (often called a vinculum) groups expressions like parentheses.

For example, the expression 2&amp;times;(6+7)-8&lt;sup&gt;2&lt;/sup&gt; should be solved in the following order:

&lt;table align=center cellspacing=5&gt;
&lt;tr&gt;
    &lt;td&gt;2&amp;times;(6+7)-8&lt;sup&gt;2&lt;/sup&gt; &lt;/td&gt;
    &lt;td&gt;   {first compute the expression inside the parentheses (6+7)}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt; &amp;nbsp;= 2&amp;times;(13)-8&lt;sup&gt;2&lt;/sup&gt;  &lt;/td&gt;
    &lt;td&gt;    {second, calculate the exponent 8&lt;sup&gt;2}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt; &amp;nbsp;= 2&amp;times;(13)-64   &lt;/td&gt;
    &lt;td&gt;   {third, calculate the muliplication 2&amp;times(13)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt; &amp;nbsp;= 26-64 &lt;/td&gt;
    &lt;td&gt;  {finally, calucate the subtraction}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt; &amp;nbsp;= -38   &lt;/td&gt;
    &lt;td&gt;   {our final answer}&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
If the desired order for solving the expression were different (based on the initial problem), parentheses would be positioned differently, or even omitted.

The meaning of the fraction and radical bars must be deciphered carefully.  The part of the expression directly below or above the bar is to be treated as parenthesised.  (Care must be taken in writing expressions with a bar.)

The expression &lt;math&gt;\sqrt{a + b} \times c&lt;/math&gt; means ''c'' times the root of ''a'' + ''b'', not the root of ''a'' + ''b'' &amp;times; ''c'' or even the root of ''c'' times the sum ''a'' + ''b'', since the bar is above the ''a'' and the ''b'', but not the ''c''.

The expression &lt;math&gt;\frac{4 + 5}{1 + 2}&lt;/math&gt; could be written in one line as &lt;br&gt;(4+5)/(1+2) = 9/3 = 3, not as 4+5/1+2 = 4+5+2 = 11.  As you see, the expression above the bar is evaluated, as is the expression below the bar.  Finally we can divide.

Because of order of operations -2&lt;sup&gt;2&lt;/sup&gt; = -(2&lt;sup&gt;2&lt;/sup&gt;) = -4, not (-2)&lt;sup&gt;2&lt;/sup&gt; = +4: the negative sign can be considered to have an implicit 0 in front, making the expression 0 - 2&lt;sup&gt;2&lt;/sup&gt;.

The order of operations is very important, and you must remember the order when using simple calculators. Expressions such as 2+3&amp;times;5 vary on the order used. Entering [2] [+] [3] [&amp;times;] [5] on most calculators would result in adding three to two and then multiplying by five, resulting in 25; the proper evaluation sequence would be 2+(3&amp;times;5), multiplying three and five and then adding that to two to get 17. Some scientific calculators and most graphing calculators use the proper order of operations, but four-function calculators typically use &quot;left-to-right&quot; evaluation, which can return incorrect results.

'''See Also:''' 
* [[Algebra/Further_arithmetic#Exponents|Exponents]]

== Fractions ==
A '''fraction''' consists of one quantity divided by another quantity. The fraction &quot;three divided by five&quot; or &quot;three over five&quot;  or &quot;three fifths&quot; can be written as:
&lt;center&gt;&lt;math&gt; \frac{3}{5} &lt;/math&gt;  &lt;/center&gt;

&lt;center&gt;or as:    '''3/5'''&lt;/center&gt;

In this section, we will use the notation 3/5.  Note that some fractions have special names.

: 1/2 - Instead of calling this a twoth, or a second, it's called a ''half''.
: 3/4 - As well as three fourths, it can also be called three ''quarters''.

===Numerator and Denominator===
The first quantity, the number on top of the fraction, is called the '''numerator'''.  It tells you the number, or how many of something you've got.  The other number, on the bottom, is called the '''denominator'''.  The denominator tells you the ''denomination'' of the fraction, which is really just a fancy way of telling you the ''type'' of the fraction.  In exactly the same way, we know a £5 note and a £10 pound note are different because they are different types.

So, look at a number like 3/5.  The numerator is 3.  So whatever we've got, we've got three of them.  The denominator is 5, so we've got fifths, whatever they are.  Put the two together, we've got ''three'' of those things called ''fifths''.  We've got three fifths, we've got 3/5.  ''Same value, different appearance''.


Several rules for the calculation with fractions are useful:

===Changing the ''type'' of a fraction===
If both the numerator and the denominator of a fraction are multiplied or divided by the same number, then the fraction does not change its value.

&lt;!--If the numerator and denominator are not relatively prime they are both divided by a number that makes them relatively prime.--&gt;

This means we can make some fractions simpler, by making the numbers involved smaller.  When the numbers are as small as possible, the fraction is said to be expressed in its lowest terms, or reduced.  Let's look at an example:  &amp;nbsp;&amp;nbsp;
4/6 = 2/3.  

&lt;!--Is it usual to use such complicated language on a simple idea?  Do we really need to talk about numbers being relatively prime here?--&gt;

Remember what that ' = ' sign means?  It means that 4/6 and 2/3, although they look different, have the same value.  ''Same value, different appearance''.

This is because 

:::&lt;math&gt; \frac{4}{6} = \frac{4/2}{6/2} = \frac{2}{3}&lt;/math&gt;. 

Try it out yourself with a calculator or with long division. From here, there is nothing we can divide both numbers by, so the the fraction is reduced, which is our goal.

&lt;!--Exercises--&gt;

===Adding fractions===
Before we go into fractions, let's have a think about what addition is.  Answer these really simple questions.

*What is 1 bird + 5 birds?
*What is 3 elephants + 9 elephants?
*What is 6 birds + 2 elephants?

Hopefully you could answer the first two, but you might have had trouble with the third.  Why?  Because we can't add up two different things!  However, before we add them up, we can change them into something else.  We can say that 6 birds are really just 6 animals, and 2 elephants are really 2 animals, so now

:::6 birds + 2 elephants = 8 animals.

You probably did all this in your head without even thinking about it - so what has it all got to do with fractions?  

To add or subtract two fractions, you first need to change the two fractions so that they have the same type. The simplest way to do this is to multiply the numerator and denominator of each fraction by the denominator of the other. 

For instance, 

&lt;center&gt;&lt;math&gt;\frac{2}{3} + \frac{1}{4} = \frac{2 \times 4}{3 \times 4} + \frac{1 \times 3}{4 \times 3} = \frac{8}{12} + \frac{3}{12} = \frac{(8+3)}{12} = \frac{11}{12}&lt;/math&gt;&lt;/center&gt;

A more advanced way is to use the LCM of the denominators, which will be explained later in this section. Then you can add or subtract the numerators and put the common denominator as the denominator of the solution.

===Multiplying fractions===
To multiply two fractions: 
*'''multiply the numerators''' to get the new '''numerator''', and 
*'''multiply the denominators''' to get the new '''denominator'''. 

For instance, 

:::&lt;math&gt;\frac{2}{3} \times \frac{1}{4} = \frac{2 \times 1}{3 \times 4} = \frac{2}{12} = \frac{1}{6}&lt;/math&gt;.

===Dividing fractions===
To divide one fraction by another one, flip numerator and denominator of the second one, and then multiply the two fractions. The flipped-over fraction is called the multiplicative inverse or '''reciprocal'''. 

For instance, 

:::&lt;math&gt;\left(\frac{2}{3}\right) / \left(\frac{4}{5}\right) = \frac{2}{3} \times \frac{5}{4} = \frac{2 \times 5}{3 \times 4} = \frac{10}{12} = \frac{5}{6}&lt;/math&gt;.

&lt;!--I don't know how to made the compound fraction look pretty--&gt;
To simplify a compound fraction, like &lt;math&gt;\frac{\left(\frac{3}{5}\right)}{\left(\frac{1}{4}\right)}&lt;/math&gt;, just remember that a fraction is the same as division, and divide (3/5) &amp;divide; (1/4), which comes to 12/5.

===Mixed fractions===
Sometimes you may meet 'mixed fractions' like &lt;math&gt;1\frac{3}{5}&lt;/math&gt;. This really means &lt;math&gt;1+\frac{3}{5}&lt;/math&gt;, or in words ''one and three-fifths''. Mixed fractions are hard to work with... how would you go about working out the following?

::::&lt;math&gt;1\frac{3}{5} \times 2\frac{2}{7}&lt;/math&gt;

The answer is to convert the mixed fraction into a standard fraction of the form numerator/denominator. For example, 

&lt;center&gt;&lt;math&gt;1\frac{3}{5}=1+\frac{3}{5}=\frac{5}{5}+\frac{3}{5}=\frac{8}{5}\,\,\,\,&lt;/math&gt;


and    


&lt;math&gt;2\frac{2}{7}=2+\frac{2}{7}=\frac{14}{7}+\frac{2}{7}=\frac{16}{7}&lt;/math&gt;&lt;/center&gt;

Now, it's simple to multiply the fractions together:


&lt;center&gt;&lt;math&gt;1\frac{3}{5} \times 2\frac{2}{7}=\frac{8}{5} \times \frac{16}{7}=\frac{128}{35}=\frac{105}{35}+\frac{23}{35}=3\frac{23}{35}&lt;/math&gt;&lt;/center&gt;

=== External links ===

*[http://wims.unice.fr/wims/wims.cgi?module=home&amp;search_category=X&amp;search_keywords=fraction Online interactive exercises] on fractions.

== Absolute value ==
The absolute value of a number is found by applying a simple rule: If you see a negative sign in front of the number, change it to a plus sign. If you see a plus sign, leave it alone.  So, for example, the absolute value of -17 is +17. The absolute value of +36 is +36. 

Another way to understand the absolute value of a number is to think about the number line:

[[image:Real_Number_Line.PNG]]

The absolute value of a number is the distance from zero to that number on the number line. 

The absolute value of x is usually written as |x|. On calculators and computers it is sometimes written as abs (x). 

'''Questions:'''

1. Calculate the absolute value of the following numbers:
: a. -5  
: b. 9  
: c. -3.8   
: d. -139,462  
: e. 5/8

2. What is the absolute value of zero? Explain.

3. Calculate the following:

: a. |27|   
: b. |-1.9|  
: c. |3 - 7|  
: d. |3 - 0.5| 
: e. abs (-6)

4. Draw a graph of abs(x) from -5 to +5.  Can abs(x) ever be less than zero? How can you see that from your graph?

'''Answers:'''

1. a. 5
b. 9
c. 3.8
d. 139,462
e. 5/8

2. Zero, because zero is exactly zero away from zero on the number line.

3. a. 27
b. 1.9
c. |3-7| = |-4| = 4
d. |3-0.5| = |2.5| = 2.5
e. 6

4. [[media:Abs_of_x.png|Image of the absolute value of x]]

== Radicals ==

&lt;!--Maybe we should bring part of the Exponents section over here before we get into radicals?  Alternately, maybe this isn't the place for discussion of radicals?--&gt;
A '''radical''' is a special kind of number that is the root of a polynomial equation. First, let us look at one specific kind of radical, the &quot;square root&quot;. It is a special kind of number related to squaring.

When we have a number, say 2, what positive number will give us, when we square it, the number 2?

* 1 &amp;times; 1 = 1, so the number must be higher than 1.
* 2 &amp;times; 2 = 4, so the number must be lower than 2.
* 1.5 &amp;times; 1.5 = 2.25, so the number must be lower than 1.5.

We could continue like this forever, and with each step get closer and closer to the answers (this kind of process for refining the answer is called [[iteration]]). The number we are looking for is approximately 1.41421...

Obviously this is very difficult for us to work with, so we have a special notation. We write for a number ''a'', &lt;math&gt;\sqrt{a}&lt;/math&gt; to represent the number when squared will give us ''a'' back.

Since this is the inverse operation from squaring, it can also be denoted as a&lt;sup&gt;1/2&lt;/sup&gt; and &lt;br&gt;&lt;math&gt;(a^{1/2})^2=a^1=a&lt;/math&gt;.

We can extend this idea to other kinds of radicals. &lt;math&gt;\sqrt[3]{a}&lt;/math&gt; indicates the number &lt;math&gt;x&lt;/math&gt; such that &lt;br&gt;&lt;math&gt;x^3=a&lt;/math&gt;. For example, &lt;math&gt;\sqrt[3]{7}=1.91293...&lt;/math&gt;

Note that it is not possible to find any [[Real numbers|real number]] whose square would be negative. Multiplying with a negative number changes the sign of the number being multiplied and two negative signs thus eliminate each other. For example, -7 &amp;times; -7 = 49 and also 7 &amp;times; 7 = 49 . Therefore the square root of a negative number is an undefined operation unless imaginary numbers are allowed as answers.

== Estimation ==

Estimation involves working out a rough answer to a calculation. The most common way to estimate a solution to a calculation is to round the numbers up or down to numbers which are easier to calculate with.

An example: Estimate the answer to 99 &amp;times; 9. In this case we can easily see that 9 is almost 10, and multiplying by 10 is really easy, so we can replace our calculation with 99 &amp;times; 10 which is far more easy to calculate. As we rounded a number up we know that our ''estimate'' is going to be larger than the real answer.

Why don't we just call this a guess?  The difference is that a guess is just that, a completely wild guess.  An estimate is based on some extra information.  So whilst you might guess that &lt;br&gt;99 &amp;times; 9 is something around 1000 by just pulling a number out of the air, we estimate that 99 &amp;times; 9 is close to 99 &amp;times; 10, then we work out 99 &amp;times; 10 exactly, which gives 990 as an ''estimate'' of &lt;br&gt;99 &amp;times; 9.

When we estimate, we want our estimate to be close enough to the actual value so as to be useful. (This also applies to approximation.) In our example above, the answer deviates from the actual value by about 10%, which might not be acceptable. Estimation often involves some guesswork, so we might not actually know how accurate our estimate is. (And yes, that figure 10% is itself an estimate.)

A better way to estimate 99 &amp;times; 9 is to say that 99 is close to 100, then we work out 100 &amp;times; 9 exactly, which gives 900 as an ''estimate'' of 99 &amp;times; 9.  This estimate is about 1% off.  The reason this is a better estimate is that 99 deviates from 100 much less than 9 deviates from 10 in percentage terms (although the absolute difference is one in each case).</text>
      <sha1>9a2raphe27q5ux1yd3hx1bx4zkx03n1</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Radiation Oncology/Thyroid:TOC</title>
    <ns>10</ns>
    <id>40193</id>
    <revision>
      <id>1666958</id>
      <parentid>1649489</parentid>
      <timestamp>2009-11-28T21:05:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;!-- This is the table of contents that will appear on the top of each page and allow navigation to the front page as well as other chapters of the book --&gt;
&lt;!-- Changes here should also be reflected at Radiation Oncology/Thyroid --&gt;
{| WIDTH=&quot;100%&quot; style=&quot;background-color: #f2fff2; border: solid 1px #bfffbf;&quot; cellspacing=&quot;0&quot;
|- valign=top
| 
'''Front Page:''' [[Radiation Oncology]] | [[Radiation Oncology:RTOG_Trials|RTOG Trials]]
| align=right | {{:Radiation Oncology:Template Edit|Radiation Oncology/Lung/NSCLC:TOC|this}}
|-
| colspan=2 |
'''Thyroid:''' [[Radiation Oncology/Thyroid|Main Page]] | 
[[Radiation Oncology/Thyroid/Workup|Workup]] |
[[Radiation Oncology/Thyroid/Staging|Staging]] |
[[Radiation Oncology/Thyroid/Papillary and follicular|Papillary and follicular]] |
[[Radiation Oncology/Thyroid/Medullary|Medullary]] |
[[Radiation Oncology/Thyroid/Hurthle cell|Hurthle cell]] |
[[Radiation Oncology/Thyroid/Anaplastic|Anaplastic]]
|}{{BookCat}}</text>
      <sha1>ecajaoy632h8ncx0299l4fjdf6ttmid</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/Thyroid/Workup</title>
    <ns>0</ns>
    <id>40194</id>
    <revision>
      <id>2695110</id>
      <parentid>2238601</parentid>
      <timestamp>2014-08-27T12:57:29Z</timestamp>
      <contributor>
        <username>Rotlink</username>
        <id>761486</id>
      </contributor>
      <minor />
      <comment>fixing dead links</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/Thyroid:TOC}}

==Thyroid nodules==
*95% of palpable thyroid nodules in adults are benign. 
*Prevalence is around 4% in the general population by palpation. Prevalence is 30-50% by ultrasound.
*FNA biopsy is the most reliable diagnostic test for a thyroid nodule. Can be positive for malignancy, negative, or indeterminate.

If positive for malignancy, should proceed to definitive treatment.

If negative, serial follow-up is recommended.

Indeterminate biopsies can be:
*Suspicious for papillary carcinoma: patients with biopsy suspicious have a high likelihood (82%) of having papillary carcinoma. Recommend total thyroidectomy.
*Suspicious for follicular or H&amp;uuml;rthle cell carcinoma: Only 15-20% chance of invasive carcinoma. Usually proceed to thyroidectomy with frozen section analysis.

'''''Reviews:'''''
*PMID 12588078, 2003 &amp;mdash; &quot;Thyroid nodules.&quot; Welker MJ et al. Am Fam Physician. 2003 Feb 1;67(3):559-66.

'''''Guidelines:'''''
*'''Society of Radiologists in Ultrasound (2004)''' 
**PMID 16304103 [http://radiology.rsna.org/content/237/3/794.long Full text] -- &quot;Management of thyroid nodules detected at US: Society of Radiologists in Ultrasound consensus conference statement.&quot; (Frates MC, Radiology. 2005 Dec;237(3):794-800.) -- 2004 consensus statement
**Solitary nodule:
***Microcalcifications - strongly consider U/S guided FNA if &amp;ge; 1 cm
***Solid (or almost entirely solid) or coarse calcifications - strongly consider U/S guided FNA if &amp;ge; 1.5 cm
***Mixed solid and cystic or almost entirely cystic with solid mural component - consider U/S guided FNA if &amp;ge; 2 cm
***None of the above, but substantial growth since prior U/S - consider U/S guided FNA
***Almost entirely cystic and none of the above and no substantial growth (or no prior U/S) - U/S guided FNA probably unnecessary
**Multiple nodules - consider U/S guided FNA of one or more nodules on basis of criteria (in order listed) for solitary nodule
*'''AACE/AME Guidelines (2006)''' - [http://www.aace.com/pub/guidelines/ Website] [http://web.archive.org/web/20051230182714/http://www.aace.com/pub/pdf/guidelines/thyroid_nodules.pdf PDF]
**PMID 16596732 &amp;mdash; &quot;American Association of Clinical Endocrinologists and Associazione Medici Endocrinologi medical guidelines for clinical practice for the diagnosis and management of thyroid nodules.&quot; (Endocr Pract. 2006 Jan-Feb;12(1):63-102.)
*'''ATA Guidelines''' - [http://www.thyroid.org/professionals/index.html Website]
**'''2009:''' PMID 19860577 [http://web.archive.org/web/20100331221507/http://www.thyroid.org/professionals/publications/documents/ATA_Guidelines_DTC_2009.pdf PDF] &amp;mdash; &quot;Revised American Thyroid Association management guidelines for patients with thyroid nodules and differentiated thyroid cancer.&quot; (Cooper DS, Thyroid. 2009 Nov;19(11):1167-214.)

==Thyroid incidentalomas==
Thyroid incidentalomas are thyroid nodules discovered incidentally by an imaging procedure (e.g. US or CT) performed for an unrelated incidcation.

'''''Prevalence:'''''
*PMID 15009911, 2004 &amp;mdash; &quot;Prevalence, clinical and ultrasonographic characteristics of thyroid incidentalomas.&quot;
*PMID 15840794, 2005 &amp;mdash; &quot;Rates of malignancy in incidentally discovered thyroid nodules evaluated with sonography and fine-needle aspiration.&quot;

'''''Diagnosis:'''''
*PMID 14678283, 2004 &amp;mdash; &quot;Ultrasonography-guided fine-needle aspiration of thyroid incidentaloma: correlation with pathological findings.&quot;

'''''Reviews:'''''
*PMID 15145242, 2004 &amp;mdash; &quot;Management of thyroid incidentalomas.&quot;

==Guidelines==
:see [[Radiation Oncology/Thyroid/Guidelines]]
'''''Management/Treatment:'''''
*'''AACE/AAES Guidelines (2001)''' - [http://www.aace.com/pub/guidelines/ Website] [https://www.aace.com/sites/default/files/thyroid_carcinoma.pdf PDF]
**PMID 11430305 &amp;mdash; &quot;AACE/AAES medical/surgical guidelines for clinical practice: management of thyroid carcinoma. American Association of Clinical Endocrinologists. American College of Endocrinology.&quot; (Endocr Pract. 2001 May-Jun;7(3):202-20.)

[[Category:Radiation Oncology]]</text>
      <sha1>ehnk82n8533le6zj758j3wehn0qenq9</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/Thyroid/Medullary</title>
    <ns>0</ns>
    <id>40195</id>
    <revision>
      <id>2991190</id>
      <parentid>1704191</parentid>
      <timestamp>2015-09-09T13:36:13Z</timestamp>
      <contributor>
        <username>Cwatson5040</username>
        <id>1012919</id>
      </contributor>
      <comment>/* Staging */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/Thyroid:TOC}}

==Epidemiology==
*About 5% of thyroid cancers.
*Present in 5th decade.
*80% are sporadic, but some can result from MEN 2 syndrome.
*There is also a Familial (non MEN 2-related) medullary thyroid cancer syndrome

==Genetics==
*Medullary thyroid CA associated w/ MEN 2 syndrome results from a mutation in RET gene.
*MEN 2 w/ ~70% penetrance

==Pathophysiology==
*Neuroendocrine tumor that derive from parafollicular C cells
*C cells secrete can secrete calcitonin (which can therefore be used as a tumour marker)
*Non iodine avid therefore no role for I-131 ablation after surgery

==Staging==
''UICC/AJCC Staging''
:''see [[Radiation Oncology/Thyroid/Staging|Staging]]'' for details
*Stage I - &lt;2cm, confined to thyroid
*Stage II - 2-4cm, confined to thyroid
*Stage III - &gt;4cm, N+ in level VI, or microscopic extrathyroid extension
*Stage IV - M+, N+ outside of level VI, gross soft tissue extension

==Treatment==
*Treatment includes total thyroidectomy with central neck lymph node dissection.
*Indications for adjuvant radiation:  microscopic residual dz, extensive nodal involvement, extrathyroid extension.

===Adjuvant Radiation===
*'''University of Toronto, 1996''' (1954-92) PMID 8875751 -- &quot;Medullary thyroid cancer: analyses of survival and prognostic factors and the role of radiation therapy in local control.&quot;  Thyroid. 1996 Aug;6(4):305-10.
**73 pts w/ medullary thyroid CA.  46 pts received xrt (median dose 40 Gy).
**On multi-variate analysis, factors that predicted for lower CSS were extraglandular invasion and postop gross residual dz.
**Pts w/ high risk for locoregional relapse (microscopic residual dz, extraglandular invasion, N+) benefited from RT.
**Conclusion:  external beam RT recommended if high risk

*'''FFCI, 1992''' (1971-89) PMID 1736326 --  &quot;Results of postoperative radiation therapy in medullary carcinoma of the thyroid: a retrospective study by the French Federation of Cancer Institutes--the Radiotherapy Cooperative Group.&quot;  Radiother Oncol. 1992 Jan;23(1):1-5.
**59 pts w/ medullary thyroid CA receiving EBRT w/ curative intent.  Total thyroidectomy in 55 pts.  11 pts w/ residual tumor, 44 pts w/ N+.  Mean dose 54 Gy.
**70% local control, with failures mostly occurring in RT field.

*'''MDACC, 1988''' (1943-87) PMID 2807151 --  &quot;Medullary thyroid carcinoma: prognosis of familial versus nonfamilial disease and the role of radiotherapy.&quot; Samaan NA et al.  Horm Metab Res Suppl. 1989;21:21-5.
**202 pts w/ medullary thyroid CA
**Pts w/ MEN2 had longer survival rates than sporadic medullary thyroid CA
**When pts who were matched for age, extent of dz, and surgery were compared for effect of radiation therapy, pts who had no radiotherapy were found to live significantly longer.

==Guidelines==
*'''ATA Guidelines''' - [http://www.thyroid.org/professionals/index.html Website]
**'''2009:''' PMID 19469690 [http://www.thyroid.org/professionals/publications/documents/MTC_Guidelines.pdf PDF] &quot;Medullary Thyroid Cancer: Management Guidelines of the American Thyroid Association&quot; (Kloos RT, Thyroid. 2009 Jun;19(6):565-612.)


[[Category:Radiation Oncology]]</text>
      <sha1>kgr4mussuruoqb59odp4gr41lcn1thn</sha1>
    </revision>
  </page>
  <page>
    <title>Portuguese/Conjunctions</title>
    <ns>0</ns>
    <id>40197</id>
    <revision>
      <id>1999654</id>
      <parentid>1439088</parentid>
      <timestamp>2010-12-13T23:30:41Z</timestamp>
      <contributor>
        <username>MGFE Júnior</username>
        <id>230586</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Conjunctions are words that join phrases together. The most common in Portuguese are:

'''e''' - and &lt;br&gt;
''Os colegas bebem café frio '''e''' chá quente'' &lt;br&gt;
The colleagues drink cold coffee and hot tea. &lt;br&gt;
	 
'''mas''' - but &lt;br&gt;
''Este copo está vazio, '''mas''' o outro copo está cheio.'' &lt;br&gt;
This glass is empty, but the other glass is full. &lt;br&gt;

'''porque''' - because &lt;br&gt;
''Eu tento interessar-me por política '''porque''' tenho que ir votar para o mês que vem.''&lt;br&gt;
I am trying to get interested (''lit. interest myself'') in politics because I have to go to vote next month. &lt;br&gt;

'''enquanto''' - while &lt;br&gt;
''Ele cantou '''enquanto''' os seus pais ouviam.'' &lt;br&gt;
He sang while his parents listened. &lt;br&gt;

'''logo''' - therefore, so &lt;br&gt;
''Estou cansado, '''logo''' não vou me levantar. &lt;br&gt;
I am tired, therefore I won't get up.

[[Category:Portuguese]]</text>
      <sha1>9b0u69m2bw1u94v8owvlxxv51zibmip</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Forget the Past</title>
    <ns>0</ns>
    <id>40202</id>
    <revision>
      <id>3033935</id>
      <parentid>3033934</parentid>
      <timestamp>2016-01-05T11:27:39Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <minor />
      <comment>format</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This is perhaps the most important single piece of advice when learning Rebol for the first time: ''forget the past''. Forget what you already know about programming.

''Rebol is different.'' If you know other programming languages such as C or BASIC, and you expect to program Rebol the same way, then what you will get as a result is C or BASIC. Nothing better. We've seen this happen many times.

When programmers finally &quot;get&quot; Rebol, they often make this comment: &quot;You should have told me to forget what I know about programming, I would have been better off.&quot;

Does that mean Rebol is difficult to learn? No it's not. But, it's different in many ways, and it makes you think differently about how to program... that is, if you want to program well. Rebol's powerful concept of &quot;dialecting&quot; is just one example.

Here's another way to look at Rebol: If you compare the way you code in assembly language to the way you write in higher level languages, your approach is quite different. This same amplification factor is true with Rebol when compared to most higher level languages.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>begvgojvykn7i6ofkvs1a4pjxtt51c7</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/Bone</title>
    <ns>0</ns>
    <id>40203</id>
    <revision>
      <id>2311450</id>
      <parentid>2311448</parentid>
      <timestamp>2012-04-23T18:22:20Z</timestamp>
      <contributor>
        <username>Brim</username>
        <id>2387</id>
      </contributor>
      <comment>bone metastases</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Radiation Oncology:TOC}}
==Bone tumors==
*[[Radiation_Oncology/Bone/Staging|Staging]]
*[[Radiation Oncology/Bone/Background|Background]]

Types:
*[[Radiation Oncology/Sarcoma/Osteosarcoma|Osteosarcoma]]
*[[Radiation Oncology/Sarcoma/Chondrosarcoma|Chondrosarcoma]]
*[[Radiation Oncology/Sarcoma/Ewing's sarcoma|Ewing sarcoma]]
*[[Radiation Oncology/Sarcoma/Fibrosarcoma|Fibrosarcoma]]
*[[Radiation_Oncology/Chordoma|Chordoma]]
*[[Radiation Oncology/Giant cell tumor of bone|Giant cell tumor of bone]]

&lt;br&gt;
Other:
*[[Radiation Oncology/Palliation/Bone metastases|Bone metastases]]
*[[Radiation Oncology/NHL/Specific sites|Primary Bone Lymphoma]]</text>
      <sha1>buy6hahc9csytj09g2rrquae694zek4</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/Bone/Background</title>
    <ns>0</ns>
    <id>40204</id>
    <revision>
      <id>1875354</id>
      <parentid>1777080</parentid>
      <timestamp>2010-07-06T20:04:29Z</timestamp>
      <contributor>
        <username>Tdvorak</username>
        <id>7644</id>
      </contributor>
      <comment>location</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Radiation Oncology:TOC}}

==Epidemiology==
Incidence: 8 per 1,000,000.
&lt;br&gt;2440 cases in 2004.

Incidence: osteosarcoma (35%), chondrosarcoma (30%), Ewing's sarcoma (16%)


==Histology==
{| class=&quot;wikitable&quot; 
|-
! Histologic Origin !! Proportion !! Malignant Tumor
|-
| Hematopoietic || align=&quot;center&quot; | 41% || [[Radiation_Oncology/Multiple_myeloma|Myeloma]]
|-
| Chondrogenic || align=&quot;center&quot; | 21% || [[Radiation_Oncology/Sarcoma/Chondrosarcoma|Chondrosarcoma]]
|-
| Osteogenic || align=&quot;center&quot; | 19% || [[Radiation_Oncology/Sarcoma/Osteosarcoma|Osteosarcoma]]
|-
| Unknown/bone marrow || align=&quot;center&quot; | 10% || [[Radiation_Oncology/Sarcoma/Ewing%27s_sarcoma|Ewing's tumor]]&lt;br&gt;
Malignant giant cell tumor&lt;br&gt;
Adamantinoma
|- 
| Fibrogenic || align=&quot;center&quot; | 4% || [[Radiation_Oncology/Sarcoma/Fibrosarcoma|Fibrosarcoma]]
|-
| Notochordal || align=&quot;center&quot; | 3% || [[Radiation_Oncology/Chordoma|Chordoma]]
|-
| Vascular || align=&quot;center&quot; | 2% || [[Radiation_Oncology/Sarcoma/Hemangioendothelioma|Hemangioendothelioma]]&lt;br&gt;
[[Radiation_Oncology/Miscellaneous/Hemangiopericytoma|Hemangiopericytoma]]
|}
Note: Adapted from Dahlin DC, ''Bone tumors: general aspects and data on 6,221 cases'', 3rd ed. 1978

==Location==
*EG-MODE
**Epiphysis: Giant cell
**Metaphysis: Osteosarcoma
**Diaphysis: Ewing's sarcoma</text>
      <sha1>izn37w2sy48067234ucks09pcfpbpjs</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:68.82.142.172</title>
    <ns>3</ns>
    <id>40207</id>
    <revision>
      <id>229840</id>
      <timestamp>2005-09-07T03:06:31Z</timestamp>
      <contributor>
        <username>Brim</username>
        <id>2387</id>
      </contributor>
      <comment>Radiation Oncology</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Radiation Oncology==
Hello, and thank you for your contributions to the [[Radiation Oncology]] wiki!  &amp;mdash; [[User:Brim|Brim]] 03:06, 7 September 2005 (UTC)</text>
      <sha1>611itzdl8ikrsku57k3k4uk0evm396n</sha1>
    </revision>
  </page>
  <page>
    <title>Sexual Psychology/Pornography</title>
    <ns>0</ns>
    <id>40211</id>
    <revision>
      <id>1000542</id>
      <parentid>531643</parentid>
      <timestamp>2007-10-12T01:46:42Z</timestamp>
      <contributor>
        <username>Mike's bot account</username>
        <id>67847</id>
      </contributor>
      <minor />
      <comment>recategorization to clean up Subject: pages</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Pornography (from Greek πορνογραφια pornographia — literally writing about or drawings of harlots) (also informally referred to as &quot;porn&quot; or &quot;porno&quot;) is the representation of the human body or human sexual behaviour with the goal of sexual arousal, similar to, but (according to some) distinct from, erotica.

Pornography may use any of a variety of media — written and spoken text, photos, sculpture, drawings, moving images (including animation), and sounds such as heavy breathing. Pornographic films combine moving images, spoken erotic text and/or other erotic sounds, while magazines often combine photos and written text. Novels and short stories provide written text, sometimes with illustrations. In addition to media, a live performance may also be called pornographic.

[[Category:Sexual Psychology]]</text>
      <sha1>mhby6e685d00y66nv10h3cawg9ilyp7</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Language Features/Series</title>
    <ns>0</ns>
    <id>40212</id>
    <revision>
      <id>2000757</id>
      <parentid>1874169</parentid>
      <timestamp>2010-12-15T16:22:40Z</timestamp>
      <contributor>
        <username>PatrickP61</username>
        <id>410587</id>
      </contributor>
      <minor />
      <comment>/* From head to tail and back again */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Introducing series ==

''Series'' were introduced to REBOL by its designer to represent sequences of values. The most typical series in REBOL are blocks.

Naturally, it would be quite nifty if you could access, manipulate, and refer to individual entries within a series.

Well, it just so happens that REBOL provides a quite extensive &quot;data access technology&quot; for accomplishing this.

Let's look at a first example which will help to sharpen our intuitive idea as to what a ''series'' looks like.

The following is a REBOL block which has two entries:

    series1: [1 2] ; == [1 2]

You might read this as {{cquote|The word '''''series1''''' refers to a block having 2 entries, both of which happen to refer to integers.}}

Since any block has zero or more entries (you ''did'' know that a block can have nothing in it, n'est-ce pas?), and since as a point of fact this particular block happens to have 2 entries, you would be quite correct to say that the block can be treated as a series.

And of course, looking at this, you might wonder, how do you do things like &quot;ask&quot; what the second entry's value is?  Or maybe you want to know if the n'th entry in a particular series exists? Or maybe you wish to change a particular entry within a series.

You can do all this and much more in REBOL.

So let's take a look at how we can access data in a series within REBOL.

== Data access methods ==

In REBOL we can use several methods. The method using the '''first''', '''second''', etc. functions:

    first series1 ; == 1

The method using the ''path notation'':

    series1/1 ; == 1

The method using the '''pick''' function:

    pick series1 1 ; == 1

=== Using variables for data access ===

Let's suppose, that we have got a variable (e.g. '''''i'''''),

    i: 2

that shall be used to access a specific entry within a series. How can this be done?

Although the method using the '''first''' function doesn't look useful for this, it can be used too. The details are described in the subsequent sections.

The method using the path notation is:

    series1/:i ; == 2

The method using the '''pick''' function:

    pick series1 i ; == 2

=== Why &lt;code&gt;series/i&lt;/code&gt; doesn't work? ===

Actually, &lt;code&gt;series/i&lt;/code&gt; ''does'' work, but it doesn't interpret the word '''''i''''' as a variable. Example:

    i: 20
    series23: [1 i 3]
    series23/i ; == 3

Description: when the interpreter encountered the &lt;tt&gt;series23/i&lt;/tt&gt; expression, it tried to find the word '''''i''''' in '''series23''', i.e. it took the word as a ''value'', not as a ''variable''. The value returned is the value next to the value, that has been found.

'''But since core 2.6.0 &lt;code&gt;series/(i)&lt;/code&gt; is implemented:'''
    i: 1
    series23: [1 i 3]
    series23/(i) ; == 1

By placing the word '''''i''''' into parentheses, the parenthesized expression is evaluated and the value of the third entry of the series is returned.

== Changing series ==

Sometimes we need to change a series. Let's suppose, that we want to change '''series1'''. The first method uses the '''change''' function:

    series1: [1 2]
    change series1 3
    series1 ; == [3 2]

The path notation method:

    series1: [3 2]
    series1/1: 1 ; == [1 2]

The '''poke''' function method:

    series1: [1 2]
    poke series1 1 3 ; == [3 2]

=== Using variables ===

If we have got a variable '''''i''''' as above, we can still use the '''change''' method. The details are discussed in the subsequent sections.

The ''path notation'' method:

    series1: [3 2]
    i: 2
    series1/:i: 4

The '''poke''' method:

    series1: [3 2]
    i: 2
    poke series1 i 4 ; == [3 4]

== Data access method differences ==

The three data access methods listed above exhibit different behaviour in special situations. Let's prepare '''series2''' to see the differences:

    series2: [1 2]
    f: does [&quot;&quot;]
    poke series2 1 :f

=== The &lt;code&gt;first&lt;/code&gt; function access method ===

When we try to access an entry that doesn't exist, an error is caused:

    third series2
    ** Script Error: Out of range or past end
    ** Near: third series2

When we access a function using this method, the function is the result:

    type? first series2 ; == function!

=== The path notation access method ===

When we try to get the value of an entry that doesn't exist, we obtain the '''none''' value:

    series2/3 ; == none

When we access a function using the path method, the function is evaluated:

    type? series2/1 ; == string!

=== The &lt;code&gt;pick&lt;/code&gt; function access method ===

When we try to get the value of an entry that doesn't exist, we obtain the '''none''' value:

    pick series2 3 ; == none

When we access a function using the pick method, the function is the result:

    type? pick series2 1 ; == function!

=== Why does REBOL need so many access methods? ===

Actually it doesn't, but the methods work differently as has been shown and that is why we can choose the method that is the most appropriate for our task.

If we prefer the most strict bound checking, we may prefer '''first'''.

If we need automatic evaluation of functions or automatic searching, we may prefer the ''path access''.

If we want a simple access method, that doesn't evaluate functions, we may choose '''pick'''.

== Length of a series ==

A series can have many entries. It may be useful to know the actual number for a given series. We can use the '''length?''' native to find it:

    length? [1 2 3] ; == 3

On the other hand, it is even possible, that a series does not have any entry. There is a Rebol native '''empty?''' which tells us, whether a series &quot;does not have any entry&quot;. In that case the '''length?''' native yields zero:

    series3: []     ; == []
    empty? series3  ; == true
    length? series3 ; == 0

== From head to tail and back again ==

Sometimes we need to access series sequentially instead of using indexed access. REBOL series can be accessed sequentially without a need to use any additional datatype.

To move sequentially &quot;one entry at a time&quot; in a non-empty series we can use the '''next''' native. The '''next''' native yields a series with the first entry &quot;skipped&quot;. The second entry of the original series becomes the first entry of the new series.

    series8: [1 2 3 4]     ; == [1 2 3 4]
    series9: next series8  ; == [2 3 4]

The first, second, etc. entries of the new series are the same, as the second, third, etc. entries of the original series:

    series9/1 ; == 2
    series8/2 ; == 2
    series9/2: 5 ; == [2 5 4]
    series8/3 ; == 5

In the new series we can use even the skipped entries:  (R2 only)

    series9/-1 ; == 1

The length of the new series is equal to the length of the original series minus one:

    length? series8 ; == 3
    length? series9 ; == 2

Instead of skipping one entry at a time, we can skip more entries at once using the '''skip''' action. A REBOL description of the '''skip''' action for non-negative '''offset''':

    skip-def: func [
        {Skips some places of a series}
        series [series!]
        offset [integer!] {Can be positive, or zero.}
    ][
        loop offset [
            series: next :series
        ]
        :series
    ]
    series8: [1 2 3 4]            ; == [1 2 3 4]
    series10: skip-def series8 2  ; == [3 4]

If we skip zero entries, we obtain the original series:

    series8: [1 2 3 4]            ; == [1 2 3 4]
    same? series8 skip series8 0  ; == true

If we skip all entries of a series, we obtain an empty series called its tail:

    tail-def: func [
        {Returns the tail of a series.}
        series [series!]
    ][
        skip :series length? :series
    ]
    tail-def [1 2 3] ; == []

Here is a definition of a function that determines whether a series is a tail:

    tail?-def: func [
        {Finds out, if a given series is a tail}
        series [series!]
    ][
        empty? :series
    ]

    tail?-def [1 2 3]  ; == false
    tail?-def []       ; == true

Skipping further from tail using the '''next''' function, doesn't have any effect:

    same? next tail [1 2 3] tail [1 2 3] ; == true

We can use the '''back''' action to skip one entry backwards, which means the reverse of '''next''':

    series11: tail [1 2 3 4]   ; == []
    series12: back series11    ; == [4]

Let's enhance the '''skip-def''' to use negative '''offset''' values:

    skip-def: func [
        {Skips some places of a series}
        series [series!]
        offset [integer!] {Can be positive, zero, or negative.}
    ][
        either positive? offset [
            loop offset [
                series: next :series
            ]
        ][
            loop negate offset [
                series: back :series
            ]
        ]
        :series
    ]

    series11: tail [1 2 3 4]         ; == []
    series13: skip-def series11 -2   ; == [3 4]

The series we obtain from a given series by skipping the maximum possible number of entries backwards is called the head of the given series. Any subsequent '''back''' call doesn't skip any further and yields the head too:

    series14: next [1 2 3]    ; == [2 3]
    head series14             ; == [1 2 3]
    same? back head series14 head series14 ; == true

We can use the above definition to provide a Rebol function determining
if a series is a head:

    head?-def: func [
        {Returns true for a head series.}
        series [series!]
    ][
        same? :series back :series
    ]

    head?-def [] ; == true

With a help of '''head?''' we can even provide the Rebol description of '''head''':

    head-def: func [
        {Returns the head of a series.}
        series [series!]
    ][
        while [not head? :series] [series: back :series]
        :series
    ]

The number of the &quot;backward&quot; entries increased by one can be obtained as a result of the '''index?''' native:

    index? next [1 2] ; == 2

== Referring to values ==

Let's discover a less natural property of series. A series can refer twice (or more times) to a given value. The following function creates a block referring to a given value exactly twice:

    twice: func [value [any-type!]] [
        head insert/dup make block! 2 get/any 'value 2
    ]

Let's test the properties of the function we defined:

    series3: twice 1 ; == [1 1]
    same? first series3 second series3 ; == true

    series4: twice 'o1 ; == [o1 o1]
    same? first series4 second series4 ; == true

    o2: make object! [attribute: &quot;OK&quot;]
    series5: twice o2
    ; == [
    ;    make object! [
    ;        attribute: &quot;OK&quot;
    ;    ]
    ;    make object! [
    ;        attribute: &quot;OK&quot;
    ;    ]]
    same? first series5 second series5 ; == true
    o2/attribute: &quot;Surprise?&quot;
    series5
    ; == [
    ;    make object! [
    ;        attribute: &quot;Surprise?&quot;
    ;    ]
    ;    make object! [
    ;        attribute: &quot;Surprise?&quot;
    ;    ]]

By analogy, one value can be referenced by two series:

    o3: make object! [attribute: &quot;OK&quot;]
    series6: reduce [o3 1]
    ; == [
    ;     make object! [
    ;         attribute: &quot;OK&quot;
    ;     ] 1]

    series7: reduce [o3 2]
    ; == [
    ;     make object! [
    ;         attribute: &quot;OK&quot;
    ;     ] 2]
    o3/attribute: &quot;Surprised Again?&quot;
    series6
    ; == [
    ;     make object! [
    ;         attribute: &quot;Surprised Again?&quot;
    ;     ] 1]
    series7
    ; == [
    ;    make object! [
    ;        attribute: &quot;Surprised Again?&quot;
    ;    ] 2]

== Properties of the &lt;code&gt;change&lt;/code&gt; action ==

If we want to change a series, we can use the '''change''' action. '''Change''' can be said to change the series; it causes the affected entry to refer to another value. On the other hand, '''change''' doesn't affect the values:

    a: make object! [attribute: &quot;OK&quot;]

    series15: twice a
    ; == [
    ;     make object! [
    ;         attribute: &quot;OK&quot;
    ;     ]
    ;     make object! [
    ;         attribute: &quot;OK&quot;
    ;     ]]

    change series15 2
    ; == [
    ;     make object! [
    ;         attribute: &quot;OK&quot;
    ;     ]]

    series15
    ; == [2
    ;     make object! [
    ;         attribute: &quot;OK&quot;
    ;     ]]
    probe a
    ;     make object! [
    ;         attribute: &quot;OK&quot;
    ;     ]

'''change''' doesn't return the original series. It skips the affected entries to facilitate subsequent changes.

== Comparing entries and series ==

For any series we can use the '''copy''' action to create a new series referring to the same values. A copy of a series is not the same series as the original, though:

    series16: reduce [make object! [attribute: &quot;OK&quot;]]
    ; == [
    ;     make object! [
    ;         attribute: &quot;OK&quot;
    ;     ]]

    series17: copy series16
    ; == [
    ;     make object! [
    ;         attribute: &quot;OK&quot;
    ;     ]]

    same? series16 series17   ; == false
    change series16 1         ; == []
    series16                  ; == [1]
    series17
    ; == [
    ;     make object! [
    ;         attribute: &quot;OK&quot;
    ;     ]]


We have seen an example of a situation, when two distinct series entries refer to one REBOL value, or a situation, when two distinct series (prepared using e.g. the '''skip''' function) share some entries. Although series entries do not behave as stand-alone entities in Rebol, we can specify an individual entry by specifying a series and a number of the entry in the
series. Thus, we can find out, if two entries (references) specified are the same. The function doing this can be found at [http://www.fm.vslib.cz/~ladislav/rebol/identity.html#section-20 References].

Since we are able to compare entries, we can say, that non-empty series having the same datatype are the same, if they consist of the same entries. The trouble with this method is, that it is not usable for empty series, because in an empty series there is no entry we could use for the comparison purposes.

We call two series mutually independent, if they neither share any entries, nor they can be derived from one &quot;mother&quot; series using the '''skip''' function. In Rebol this definition can be written as follows:

    independent?: func [
        {Find out, if two series are mutually independent.}
        series1 [series!]
        series2 [series!]
    ] [
        not same? head :series1 head :series2
    ]
    series19: [1 2 3]                ; == [1 2 3]
    series20: next series19          ; == [2 3]
    series21: copy series19          ; == [1 2 3]
    independent? series19 series20   ; == false
    independent? series19 series21   ; == true

Observation: a series and its copy are mutually independent.

== Cumulative properties of series operations ==

A cumulative property of '''change/only''': '''change/only''' changes the reference of its argument Series. From this description is immediately obvious, that '''change/only''' affects all series sharing the reference in question.

We can create a new reference using the '''insert''' action.

    series22: [1 2 3]         ; == [1 2 3]
    length? series22          ; == 3
    insert/only series22 0    ; == [1 2 3]
    series22                  ; == [0 1 2 3]
    length? series22          ; == 4

We can use '''insert''' to define the meaning of the '''same?''' action for empty series. We say, that two empty series are the same, if '''insert''' used for the first series causes the second series to become non-empty too.

The description of the '''insert/only''' work: '''insert/only''' defines a new entry in the series, enlarging the number of entries in the series by one. The newly inserted entry becomes the first entry of the series, while the numbers of the other entries in the series are therefore higher by one. '''insert/only''' causes the newly created entry to refer to its '''value''' argument. Note, that '''insert/only''' doesn't change Index of any series! It skips the inserted entry to facilitate subsequent inserts.

The cumulative property of '''insert/only''': for all series dependent on the series affected by '''insert/only''' holds: the dependent series is enlarged by one entry too, moreover, if the index of the dependent series is lower than the index of the affected series, its first entry remains the same, if the index of the dependent series is equal to the index of the affected series, the first entry of the series after insert will be the newly inserted reference and if the index of the dependent series is higher than the index of the affected series, then the first entry of the dependent series will be the entry preceding the original first entry.

For lowering the number of entries in a series we can use the '''remove''' and '''clear''' actions. Probably every reader is now able to use the above described methods for exploring the cumulative properties of these. I shall leave that as an exercise for the reader.

== Series with fast index access versus series with fast remove/insert operations ==

=== Series with fast index access ===

REBOL blocks are examples of series with fast index access. That means, that operations like

    pick series index

have the same speed regardless of:

*the length of the series
*the value of the index

Generally, all REBOL series except for REBOL lists are of this type.

==== Advantages ====

*the speed of index access (pick, poke, skip, at, length?, index?, offset?, etc.)

==== Disadvantages ====

*general remove/insert operations are &quot;slow&quot;, the time needed to perform a remove/insert operation is proportional to the length of the series in general case
*after any insert/remove operation the index of all related series remains the same, which means, that after an insert or a remove operation a series actually refers to different entries than before such an operation:

    s: [1 2 3 4 5 6]
    t: skip s 2 ; == [3 4 5 6]
    remove s
    t ; == [4 5 6]

*due to the above property, it is even possible to obtain past-tail series, i.e. series having an index that is actually not &quot;available&quot; in the given series

=== Series with fast insert/remove ===

As already mentioned, there is only one REBOL series type having this property. It is the list! datatype.

==== Advantages ====

*remove/insert operations are fast
*after an insert operation, all REBOL lists remain &quot;unaffected&quot; in that they point to the entry they pointed to before the insert operation was performed
*after a remove operation, all rebol lists (except for the ones directly affected, having a removed entry as the first) remain &quot;unaffected&quot; in that they point to the entry they did point to before the remove operation was performed
*no list can be caused to become past-tail

==== Disadvantages ====

*due to the way how REBOL lists are implemented in R2 currently, a removal of the first element of a list causes the list to become a &quot;list having an invalid (removed) position&quot;; but see my list prototype below coping with this problem without a significant slow-down of any operation; the prototype adjusts such lists to point to the first subsequent valid entry instead of the removed one
*general index operations are &quot;slow&quot;; time needed to perform such operations is proportional to the length of the list in the general case

==== List prototype ====

Since lists are not present in R3, and due to the above mentioned problem with removed entries I decided to implement a list prototype that can improve the situation.

&lt;pre&gt;use [] [
    list-proto: make object! [
        ; the position of a list is not an integer index,
        ; it is a list entry
        position: none

        ; to have fast tail tail? head head?
        ; we need to know the position of the list tail
        tail: none
    ]

    list-entry-proto: make object! [
        ; every list entry refers to a value
        ; the tail entry always refers to NONE
        value: none

        ; for every list entry we want to know,
        ; where the previous entry is

        ; for convenience we define,
        ; that the previous entry of a head entry
        ; is the tail entry

        ; to be able to detect the deleted entries
        ; we define, that the previous entry
        ; of a deleted entry is NONE
        previous: none

        ; for every list entry we want to know,
        ; where the subsequent entry is

        ; for convenience we define,
        ; that the subsequent entry of the tail entry
        ; is the head entry
        subsequent: none
    ]

    set 'make-empty-list func [
        {create an empty list}
    ] [
        make list-proto [
            position: tail: make list-entry-proto []

            ; head entry is the tail entry for empty lists 
            tail/subsequent: tail/previous: tail
        ]
    ]

    set 'tail-s func [
        {return the tail of a list}
        list [object!]
    ] [
        make list-proto [position: tail: list/tail]
    ]

    set 'head-s func [
        {return the head of a list}
        list [object!]
    ] [
        make list-proto [
            tail: list/tail
            position: tail/subsequent
        ]
    ]

    set 'last-s func [
        {returns the last value of a list}
        list [object!]
    ] [
        return get/any in list/tail/previous 'value
    ]

    adjust-position: func [
        {this function adjusts the list position to not refer to a removed entry}
        list [object!] {the list to check/adjust}
        /local current valid subsequent
    ] [
        ; note:
        ; even though this function uses two while cycles,
        ; it is implemented so,
        ; that its running time is insignificant

        ; explanation:
        ; for the adjust-position call to take O(n) time
        ; it is necessary to perform n removes,
        ; and after the adjustment,
        ; all subsequent calls to the adjust-position function
        ; become O(1) again
        ; this means, that the adjust-position call adds just
        ; O(1) time to every remove call,
        ; in addition to the O(1) time needed for every adjust-position call
        ; when the list position is valid

        ; we look for the first valid entry
        current: list/position
        while [
            ; test, if the current entry is a removed entry
            none? current/previous
        ] [current: current/subsequent]
        valid: current

        ; now we &quot;clean&quot; the removed entries
        ; to not have to traverse them any more
        current: list/position
        while [
            ; test, if the current entry is a removed entry
            none? current/previous
        ] [
            subsequent: current/subsequent

            ; doing the cleanup
            current/subsequent: valid

            current: subsequent
        ]

        ; adjust the list position to be valid
        list/position: valid
    ]

    set 'head?-s func [
        {returns TRUE if at head}
        list [object!]
    ] [
        adjust-position list

        list/position = list/tail/subsequent
    ]

    set 'tail?-s func [
        {returns TRUE if at tail}
        list [object!]
    ] [
        adjust-position list

        list/position = list/tail
    ]

    set 'index?-s func [
        {returns the index of a list}
        list [object!]
        /local current index
    ] [
        adjust-position list

        current: list/position
        index: 1
        while [
            ; the current entry is not head
            current/previous &lt;&gt; list/tail
        ] [
            index: index + 1
            current: current/previous
        ]
        index
    ]

    set 'length?-s func [
        {returns the length of a list}
        list [object!]
        /local current length
    ] [
        adjust-position list

        current: list/position
        length: 0
        while [
            ; the current entry is not tail
            current &lt;&gt; list/tail
        ] [
            length: length + 1
            current: current/subsequent
        ]
        length
    ]

    set 'skip-s func [
        {returns the list forward or backward from the current position}
        list [object!]
        offset [integer!]
        /local current
    ] [
        adjust-position list

        current: list/position
        either negative? offset [
            ; traversing the list towards its head
            while [
                all [
                    ; not at the head?
                    current/previous &lt;&gt; list/tail

                    offset &lt; 0
                ]
            ] [
                current: current/previous
                offset: offset + 1
            ]
        ] [
            ; traversing the list towards its tail
            while [
                all [
                    ; not at the tail?
                    current &lt;&gt; list/tail

                    offset &gt; 0
                ]
            ] [
                current: current/subsequent
                offset: offset - 1
            ]
        ]
        make list-proto [
            position: current
            tail: list/tail
        ]
    ]

    set 'first-s func [
        {returns the first value of a list}
        list [object!]
    ] [
        adjust-position list

        return get/any in list/position 'value
    ]

    set 'remove-s func [
        {removes an element from a list}
        list [object!]
        /local current
    ] [
        adjust-position list

        current: list/position
        either current = list/tail [
            ; no removal needed, just return the argument
            list
        ] [
            ; adjust links
            current/previous/subsequent: current/subsequent
            current/subsequent/previous: current/previous

            ; mark the current element as removed
            current/previous: none

            ; return the next position
            make list-proto [
                position: current/subsequent
                tail: list/tail
            ]
        ]
    ]

    set 'insert-only func [
        {insert one value into a list}
        list [object!]
        value [any-type!]
    ] [
        adjust-position list

        make list-proto [
            ; create a new list entry
            position: make list-entry-proto [
                previous: list/position/previous
                subsequent: list/position
            ]

            error? set/any in position 'value get/any 'value

            ; adjust links
            position/previous/subsequent: position
            position/subsequent/previous: position

            tail: list/tail
        ]
    ]

    set 'change-only func [
        {change a value in a list}
        list [object!]
        value [any-type!]
        /local new-entry
    ] [
        adjust-position list

        if list/position = list/tail [
            ; we are at tail, change is not possible
            do make error! &quot;out of range&quot;
            ; (alternatively, we may insert a new entry, if preferred)
        ]

        error? set/any in list/position 'value get/any 'value

        ; return the list at the next position
        make list-proto [
            position: list/position/subsequent
            tail: list/tail
        ]
    ]   
]&lt;/pre&gt;

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>8dtibxag7b0gj6r6ut6hwrfxmy3eu5u</sha1>
    </revision>
  </page>
  <page>
    <title>Arabic/Basic Sentences</title>
    <ns>0</ns>
    <id>40213</id>
    <revision>
      <id>2600840</id>
      <parentid>2600837</parentid>
      <timestamp>2014-01-15T20:42:59Z</timestamp>
      <contributor>
        <username>Mona Williams</username>
        <id>466567</id>
      </contributor>
      <comment>/* Writing it */ minor changes and resequencing of man/mankind example.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==&quot;The&quot;-the definite article==

In Arabic the word ال &quot;el/èl&quot; does what the English word &quot;the&quot; does. It is pronounced [ al ] but the &quot;a&quot; at the beginning is often elided (not pronounced, because the previous word ended in a vowel).

Examples:
&lt;font size=&quot;+3&quot;&gt;
رَجُل 
&lt;/font&gt;&lt;br&gt;
rajuluń = a man
&lt;br&gt;
Pronounced: ra-jul   &lt;br&gt;&lt;br&gt;

&lt;font size=&quot;+3&quot;&gt;
الرَّجُل
&lt;/font&gt;&lt;br&gt;
èl rajul= the man&lt;br&gt;
pronounced: ar-ra-jul.&lt;br&gt;

الرجل èl rajul is pronounced ar-ra-jul instead of al-rajul, because &quot;r&quot; is a sun letter. Whenever el is prefixed to a sun letter the transliteration system will indicate this by writing èl instead of el. There is no need to memorize sun letters.
e.g.
الشمس èl shams is pronounced ash-shams (meaning: the sun).


Add ال el to the beginning of a word, is like adding &quot;the&quot; before a word in English.

==Writing it==
Here is an example of what not to do:

 Incorrect:&lt;font size=&quot;+3&quot;&gt; ال رجل
&lt;/font&gt;
 Correct:&lt;font size=&quot;+3&quot;&gt;  الرجل
&lt;/font&gt;
Notice that the ل  (laam) must connect to the next letter, which was a ر (raa') in the case above.

ال el also has a second use. When you find ال it usually has the same function as &quot;the&quot; in English. It is also often used to talk about a thing in general. 

man&lt;font size=&quot;+3&quot;&gt;  إنسان

&lt;/font&gt;mankind&lt;font size=&quot;+3&quot;&gt;   الإنسان

&lt;/font&gt;The previous example shows one word meaning &quot;a man.&quot; The second is the same word with the prefix &quot;ال&quot; (al), and it means man in general (i.e. mankind). So in English where one says &quot;owls go to sleep at night&quot; in Arabic we would say &quot;the owl goes to sleep at night.&quot; This would indicate owls in general and not a specific owl.

So what word holds the same functions as the word &quot;a&quot;, you might ask?
In Arabic there is no word that holds that function.

So &quot;a man&quot; is just one word, &lt;font size=&quot;+3&quot;&gt;   رجل
&lt;/font&gt;
There is no word, or prefix, that has the same funciton as &quot;a&quot;.



*[[Arabic/XisY|Next Lesson]]

[[Category:Arabic]]</text>
      <sha1>5x0lt4fpoj7erba13kn5o4gf79z8jvy</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Carl~enwikibooks</title>
    <ns>3</ns>
    <id>40214</id>
    <revision>
      <id>2903967</id>
      <parentid>2850125</parentid>
      <timestamp>2015-04-19T04:46:32Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== [[Programming:REBOL]] ==

So you where alive at the &quot;Jan, 01 0000&quot; wow - and the best thing: you read [[Programming:REBOL]] and decided it was 0% ready - not suprising. Well it is 2005 years later now - pehaps you want to re-read the book (you know it is now called [[REBOL Programming]]) an  change the name and state to be more up-to-date ;-)

--[[User:Krischik|Krischik]] 06:29, 7 September 2005 (UTC)

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called Carl. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name Carl~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 23:01, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 04:46, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>88rs5a5r04hm97chrvsuowhyxfptfu7</sha1>
    </revision>
  </page>
  <page>
    <title>Arabic/XisY</title>
    <ns>0</ns>
    <id>40215</id>
    <revision>
      <id>2314467</id>
      <parentid>486956</parentid>
      <timestamp>2012-04-29T04:06:12Z</timestamp>
      <contributor>
        <ip>66.212.213.168</ip>
      </contributor>
      <comment>/* Equational Sentences */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Equational Sentences==
&lt;br&gt;
Here are some examples of Equational sentences in English:
&lt;br&gt;
The boy is big.&lt;br&gt;
The girl is small.&lt;br&gt;
The girl is big.&lt;br&gt;
The man is tall.
&lt;br&gt;&lt;br&gt;

Remember the following:

#&quot;the&quot;  =&lt;font size=&quot;+3&quot;&gt; ال &lt;/font&gt;(el/èl)    
#&lt;font size=&quot;+3&quot;&gt; ال &lt;/font&gt;(el) always connects to the word following it, it leaves no space between it and the word it connects to.
# There is no word for &quot;a&quot; in Arabic.

&lt;br&gt;
First let's translate the first sentence:
&lt;br&gt;
The boy is big.
&lt;br&gt;
So what we need to know is the word for &quot;boy&quot; and &quot;big&quot; in Arabic. The word for &quot;the&quot; in Arabic (it is &quot;ال&quot; (el)). The word for &quot;is&quot; can be ignored.
&lt;br&gt;&lt;br&gt;
&lt;br&gt;boy=وَلَد
&lt;br&gt;waladuń
&lt;br&gt;(wa-lad)&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;big= كَبـِيـْر
&lt;br&gt;kabiiruń
&lt;br&gt;(ka-biir)&lt;br&gt;

So now we have the words boy and big.

&lt;br&gt;&lt;font size=&quot;+3&quot;&gt;
ولد كبير

&lt;br&gt;&lt;/font&gt;(wa-lad--ka-biir)
&lt;br&gt;waladuń kabiiruń
&lt;br&gt;wa-la-dun-ka-biir
A big boy.
&lt;br&gt;&lt;br&gt;
But we wanted to say &quot;The boy is big&quot;, we did not want to say &quot;a big boy&quot;. Let's try again. I must have forgotten something. Can you guess what it is.
&lt;br&gt;
I forgot the word ال el. I need that word to inidicate &quot;the boy&quot; instead of &quot;boy/a boy&quot;. Let's add it to the word that means boy. ولد walad means boy.&lt;br&gt;

&lt;font size=&quot;+3&quot;&gt;
ال +ولد كبير

&lt;br&gt;&lt;/font&gt;
&lt;font size=&quot;+3&quot;&gt;
الولد كبير

&lt;br&gt;&lt;/font&gt;(al-wa-lad--ka-biir)&lt;br&gt;
&lt;br&gt;el waladu kabiiruń
&lt;br&gt;al-wa-la-du-ka-biir
The boy is big.&lt;br&gt;&lt;br&gt;

The first word means &quot;the boy&quot; the second means &quot;big&quot;. So how come there was no word meaning &quot;is&quot; in the sentence, you might ask. This is because in Arabic &quot;is&quot; is not used for such sentences, it is understood, by the sentence structure (the way the words are placed).
&lt;br&gt;&lt;br&gt;
The sentence structure of 
&lt;br&gt;
The   _______   is/are   ________ .&lt;br&gt;
&lt;br&gt;
in Arabic is.&lt;br&gt;&lt;font size=&quot;+3&quot;&gt;
الـ ــــــــ          ــــــــــ
&lt;br&gt;&lt;/font&gt;
(al)____________      ___________   &lt;br&gt;

The first word has &quot;ال&quot; and the second word doesn't. That is all.
&lt;br&gt;&lt;br&gt;
Now here are some examples, memorize these, and practice building your own:

&lt;br&gt;&lt;font size=&quot;+3&quot;&gt;
الرجل كبير
&lt;/font&gt;&lt;br&gt;el rajulu kabiiruń
&lt;br&gt; al-ra-jul-ka-biir
(ar-ra-jul--ka-biir) &lt;br&gt;
The man is big.
&lt;br&gt;&lt;br&gt;

&lt;font size=&quot;+3&quot;&gt;
الرجل رجل
&lt;/font&gt;&lt;br&gt;el rajulu rajuluń
&lt;br&gt;ar-ra-ju-lu-ra-jul
(ar-ra-jul--ra-jul)&lt;br&gt;
&lt;br&gt;The man is a man.
&lt;font size=&quot;+3&quot;&gt;

الإمرأة إمرأة&lt;br&gt;&lt;/font&gt;
el imra'ätu imra'ätuń.
al-im-ra-a-tu-im-ra-ah
(al-im-ra-a--im-ra-a)&lt;br&gt;
The woman is a woman.&lt;br&gt;
&lt;br&gt;

Vocabulary to learn:
&lt;font size=&quot;+3&quot;&gt;كبير
&lt;/font&gt;&lt;br&gt; (ka-biir)&lt;br&gt;big
&lt;br&gt;&lt;br&gt;&lt;font size=&quot;+3&quot;&gt;
جـميل
&lt;br&gt;&lt;/font&gt;
beautiful

[[Category:Arabic]]</text>
      <sha1>an5avxnxf41kzamqkrlkxp65gn0ylrk</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Language Features/Recursion</title>
    <ns>0</ns>
    <id>40216</id>
    <revision>
      <id>1517722</id>
      <parentid>611012</parentid>
      <timestamp>2009-06-03T03:48:28Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Recursion ==

REBOL allows for recursive programming.  This is when a function is able to invoke itself, and can be quite useful eg. for tracing through a tree structure such as spidering a website.  However, if the number of times the function is invoked is too many, a stack error occurs.  It is better to restrict the use of recursive functions to where the recursion is known to be limited.

However, it should be noted that the REBOL interpreter evaluates REBOL code in a recursive fashion.

For example of a recursive function, here we define '''read-dir''' to collect file and directory names from the directory given to it as an argument, and all the sub directories below that directory.

 file-list: []
 '''read-dir''': func [ 
    dir [file!]
 ][
    foreach file read dir [
        file: either dir = %./ [file][dir/:file]
        append file-list file
            if dir? file [
            	'''read-dir''' file
            ]
     ]
 ]
 read-dir %./
 new-line/all file-list on
 print mold file-list
 
Starting with an empty file-list block, the function read-dir reads all the files in the current directory.  If the file is a directory, it then calls itself to read that directory, returning to the calling version of itself on completion.

The question is often asked as to whether REBOL supports [[w:Tail_recursion|Tail recursion]], and [[w:Continuation|Continuations]].  The answer is, that it used to do so, but it was removed as it caused REBOL to consume large amounts of memory.  [[w:Carl Sassenrath|Carl Sassenrath]], REBOL's chief architect, has stated that at some stage '''tail recursion''' may be re-implemented, but it is not a priority.  However, tail recursion would fix the problems sometimes seen with a stack overflow with the parse dialect, and allow deeply recursive functions.

== Examples ==

* [[REBOL_Programming/Language_Features/Recursion/wikichanges|wikichanges.r]] An example on crawling the REBOL Programming wikibook to see the latest changes

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>41f43xsd0cftxu2y7ei6dw8eon876ua</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:72.49.94.199</title>
    <ns>3</ns>
    <id>40217</id>
    <revision>
      <id>229964</id>
      <timestamp>2005-09-07T08:12:34Z</timestamp>
      <contributor>
        <username>Krischik</username>
        <id>3011</id>
      </contributor>
      <comment>[[Programming:Delphi]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== [[Programming:Delphi]] ==

So you where alive at the &quot;Jan, 01 0000&quot; wow - and the best thing: you read [[Programming:Delphi]] and decided it was 25% ready - very suprising - there had not been Delphi at that time - so how could the book be ready by 25%? Well it is 2005 years later now - pehaps you want to re-read the book  an  change the name and state to be more up-to-date ;-)

--[[User:Krischik|Krischik]] 06:29, 7 September 2005 (UTC)</text>
      <sha1>7sytr5j83r62uyqo3dau1feu706e7ne</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Language features</title>
    <ns>0</ns>
    <id>40218</id>
    <revision>
      <id>3033549</id>
      <parentid>1873944</parentid>
      <timestamp>2016-01-04T10:09:21Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <minor />
      <comment>Ladislav moved page [[REBOL Programming/Language Features]] to [[Rebol programming/Language features]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Language Features ==

* [[REBOL Programming/Language Features/Types|Types]] &lt;!-- {{stage short|50%|Sep 10, 2005}} --&gt;
* [[REBOL Programming/Language Features/Series|Series]] &lt;!-- {{stage short|75%|Sep 10, 2005}} --&gt;
* [[REBOL Programming/Language Features/Control|Control Structures]] &lt;!-- {{stage short|100%|Sep 11, 2005}} --&gt;
* [[REBOL Programming/Language Features/Objects|Objects]] &lt;!-- {{stage short|00%|Sep 13, 2005}} --&gt;
* [[REBOL Programming/Language Features/Parse|Parse]] &lt;!-- {{stage short|50%|Sep 10, 2005}} --&gt;
* [[REBOL Programming/Language Features/Dialects|Dialects]] &lt;!-- {{stage short|75%|Sep 10, 2005}} --&gt;
* [[REBOL Programming/Language Features/Recursion|Recursion]] &lt;!-- {{stage short|25%|Sep 10, 2005}} --&gt;
* [[REBOL Programming/Language Features/Database|Database]] &lt;!-- {{stage short|25%|Sep 07, 2005}} --&gt;
* [[REBOL Programming/Language Features/View|View]] &lt;!-- {{stage short|25%|Sep 11, 2005}} --&gt;
* [[REBOL Programming/Language Features/VID|VID]] &lt;!-- {{stage short|25%|Sep 10, 2005}} --&gt;
* [[REBOL Programming/Language Features/Rebcode|Rebcode]] &lt;!-- {{stage short|00%|Oct 12, 2005}} --&gt;
&lt;!-- * [[REBOL Programming/Language Features/Context Sensitivity|Context Sensitivity]] --&gt; &lt;!-- {{stage short|00%|Sep 10, 2005}} --&gt;
&lt;!-- * [[REBOL Programming/Language Features/Ports|Ports]] --&gt; &lt;!-- {{stage short|00%|Sep 10, 2005}} --&gt;
&lt;!-- * [[REBOL Programming/Language Features/Files|Files]] --&gt; &lt;!-- {{stage short|00%|Oct 28, 2005}} --&gt;
&lt;!-- * [[REBOL Programming/Language Features/Networking|Networking]] --&gt; &lt;!-- {{stage short|00%|Nov 10, 2005}} --&gt;
&lt;!-- * [[REBOL Programming/Language Features/Services|REBOL/Services]] --&gt; &lt;!-- {{stage short|00%|Nov 10, 2005}} --&gt;
&lt;!-- * [[REBOL Programming/Language Features/Errors|Errors]] --&gt; &lt;!-- {{stage short|00%|Sep 10, 2005}} --&gt;
&lt;!-- * [[REBOL Programming/Language Features/Basic Graphics|Basic Graphics]] --&gt; &lt;!-- {{stage short|00%|Sep 10, 2005}} --&gt;
&lt;!-- * [[REBOL Programming/Language Features/Security|Security]] --&gt; &lt;!-- {{stage short|00%|Nov 9, 2005}} --&gt;

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>8tyg28mg4hlf4pcdcj9c6rgqu0w3r0k</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Hungarian/Lesson 1</title>
    <ns>1</ns>
    <id>40248</id>
    <revision>
      <id>2429236</id>
      <parentid>1864761</parentid>
      <timestamp>2012-10-28T12:55:45Z</timestamp>
      <contributor>
        <ip>195.38.126.26</ip>
      </contributor>
      <comment>/* Kissing */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{WikiProject Languages}} 

Can you get me some help on this table?
[[User:FerKo|FerKo]] 09:26, 7 September 2005 (UTC)

== room  for joint project  ==

Are you still around? (cur) (last)  13:20, 30 August 2005 81.182.180.126 (→
[[User:FerKo|FerKo]] 10:09, 7 September 2005 (UTC)

I am!  I think a present tense lesson would be the way to go, but proper pronunciation via audio clips is a big priority too. --[[User:ErikG|ErikG]] 19:29, 7 September 2005 (UTC)


Now I recommend you go along with the grammar and I am going to supply the audio of your written illustrations (examples, Hungarian words as they pop up, etc.). I myself would like to present another line - to be tested for the first time here - working your way from simple words by expansion and by stimulus-response pairs.
For example:

The first two words to learn:

van and nincs

Statements and questions with van:
two word long
three word long
Answers to the same

References to explanations/charts and tables on the endings, rules of formation, etc.

I must go now, ll be back in the evening

== to be ellaborated ==

Van

The simplest sentence possible. Also, elliptical. See below.

Meaning and usage:

As a statement: there is.

Listen

As in a question: (is)

Listen

As an aswer to a question.

Listen

Example:

Van pénzed? (Have you got some money on you?)
Van. (Yes, I have.)

Pénz (money) ed posessive tag 

Produce more of this kind.

Use:

Lakás (flat), család (family), ház (house), autó (car) 

Have you got a flat?

Hol van? (Where is it/she/he?)
Itt van. Here it is. It is here.

Mi van? (What is up?)
Semmi. (Nothing)

Mi van ma?
Hétfő. (Monday)

See list of words: Days of the week, wh questionwords (mikor, hol, ki, mi, hogy, miért, merre, meddig, etc.)

participles: nyitva, zárva, kíírva, megadva,

== Pronunciation ==

I was looking at the pronunciation part of this lesson and I noticed that your imitated pronunciation system is quite approximate. For example: the &quot;u&quot; in 'dune' does not sound like the &quot;u&quot; in french (as it should be pronounced). Another example: When I hear the words 'fur' and 'feu' and compare them, they do not sound the same to me.

I recommend you look to your pronunciation table critically, so people can learn hungarian with a reasonable accent.
You could argue that the audio samples can help people do that, but I have experienced that people often cannot get their pronunciation right, even though they have heard hours of correct pronunciation.

: Comparing sounds in two different languages can't be more than approximation. But it's better than nothing. --[[User:Sourcerror|Sourcerror]] 18:10, 25 April 2007 (UTC)

==Reorganization==
I've moved a lot of stuff around. Stuff from the home page I've brought into this lesson. I also reorganised to have one table with the letters and sounds rather than 2 - thought it was more user-friendly. I've added a column for IPA pronunciation - that's the standard, definitive way to show pronunciation. I'll add in the symbols when I've got some more enthusiasm.

I've put my ideas for the overall project onto the home talk page.

I wouldn't teach subject pronouns at this early stage - they aren't even  required in Hungarian. But I didn't want to delete what someone else had done. [[User:Gailtb|Gailtb]] 00:49, 23 October 2005 (UTC)

: I disagree. Even if you don't say the pronouns, they're there a hidden way, and can come back anytime. For verb conjugation it's essential. My concern is that we shouldn't teach numbers in lesson2, only after verb conjugation and interrogatives. --[[User:Sourcerror|Sourcerror]] 20:46, 26 April 2007 (UTC)


I'm a native Hungarian speaker and my English is far from perfect, but isn't Hungarian 'dz' similar to 'z' in 'zigzag'?

== Easier access to audio files needed? ==

I am definately not a computer whiz, and as such, have a difficult time trying to play the audio files.  I have tried both direct &quot;left-clicking&quot; (IE says &quot;unknown file type&quot;) and right-clicking and saving it first.  Maybe some helpful hints on use would be necessary?

: Winamp can play it.  [[User:Sourcerror|Sourcerror]] 15:03, 23 April 2007 (UTC)

== Need audio? ==

If you think more audio would be good I could make some, but I don't know to who should I send them... (I'm Hungarian)
--[[User:gorilla|gorilla]] 20:44, 12 January 2006 (UTC)

== More (audio) Hungarian ==

When will the third lesson be added? And is anybody going to provide the book with corresponding audio files? Hungarian pronunciation is hard after all.

== Kissing ==

From the text:
&quot;Hungarians greet each other by kiss on each cheek...&quot;
No, that's not true in this form. And it can be misleading. Family member often do kiss each other on each cheek. But it's not a custom in every family. Often males don't kiss at all, don't kiss males even if they are relatives. Males never kiss males if they are not ralatives, unless they are very-very-very good friends and quite felxible in social roles. In many families males kiss females, and females kiss males and females. In many families children kiss everyone, and in no other relation kiss is given. Kiss on the cheek is frequent in some teenager subgruops, while in others it isn't. In formal adult relations it is very rare, practically you can never see it. In some very small rural subgroups even kiss on the lips is accepted amongst realtives. 

So I wouldn't say it so simply: &quot;Hungarians greet each other by kiss on each cheek...&quot; If you are not Hungarian and you come to Hungary it is quite all right if you never do it, unless someone offers it. If someone offers it, it is polite to accept it and return it at the same time. 

A Hungarian

---

Err... Hungarian males do kiss each other on the cheek, but it is less common these days. (Yes, I do mean straight males.) It's much rarer now but it is still socially acceptable. Of course,  you do need to know the other person.

Another Hungarian.

--[[Special:Contributions/195.38.126.26|195.38.126.26]] ([[User talk:195.38.126.26|discuss]]) 12:55, 28 October 2012 (UTC)

== cultural notes ==

Hi, I added some cultural notes and made some minor edits on the existing ones - in order to avoid any conflicts if you come here. The source for them is my being a native.[[User:Svenskafan|Svenskafan]] 20:57, 16 May 2006 (UTC)

== voice samples ==

Hi, I created some voice samples for you in .wav, which you can download here: http://www.angelfire.com/ct3/hobbylanc/
It's about the greetings. I reedited the site already at the greetings, so you just have to format the soundfiles into .ogg and upload it to the commons or wherever.
[[User:Svenskafan|Svenskafan]] 18:17, 17 May 2006 (UTC)


== Vowel harmony ==
I edited the vowel harmony section as 80.98.57.185, I just wasn't logged in. I'm not sure whether round/slit mouth-shaped vowels are the best translations of &quot;ajakréses&quot; and &quot;ajakkerekítéses&quot; .

Remélem, hogy a '''slit mouth'''-t senki sem sem '''pinaszájúnak''' fordítja :) 

Csak azt tudnám, hogy miért is beszélünk angolul ... hiszen ha valaki nem tud magyarul az ne szerkessze a cikket/könyvet ... na mindegy .......  megvan: hagyományból.

--[[User:Sourcerror|Sourcerror]] 17:22, 25 April 2007 (UTC)

== The combination of cz ==

How do you pronounce &quot;cz&quot;, as in the name of Sándor Ferenczi? Is it as if the name were &quot;Ferenci&quot;? Or maybe &quot;Ferencsi&quot;? Thanks in advance, [[User:Eldad|Eldad]] ([[User talk:Eldad|talk]]) 23:51, 20 February 2008 (UTC)

Hi, &quot;cz&quot; is pronounced as &quot;c&quot;. This combination occures in older names and is an older writing form. The pronunciacions of Ferenczi and Ferenci are the same. Best, A native [[Special:Contributions/88.66.41.90|88.66.41.90]] ([[User talk:88.66.41.90|talk]]) 22:49, 14 March 2008 (UTC)

== Miklos ==
Miklos is not Michael, it is Nicholas. Mihaly is for Michael [[User:Compactforever|Compactforever]] ([[User talk:Compactforever|talk]]) 09:18, 28 May 2009 (UTC)

== Rough Pronunciation Guide and Greetings ==
I think the Rough Pronunciation Guide in this lesson is a bit too rough, isn't it? I'm afraid that someone may pronounce [eː] like the Hungarian word ''éj'', not ''é'', as it should be. I might be a bit too cautious about this, but nevertheless, I think we should add to the guide that [eː] is not a diphthong, so that no one may get confused. Also, I think that the use of ''helló'' as in English (i. e. when you meet someone) is as common as the use of it when you want to say &quot;goodbye&quot;. So I think it's not important to say that helló is more frequently used as saying goodbye than as a word for greeting. - [[User:Vargamate|Vargamate]] ([[User talk:Vargamate|talk]]) 18:21, 26 November 2009 (UTC)</text>
      <sha1>8axo44i4iflct6s17fk5msxnnufliw6</sha1>
    </revision>
  </page>
  <page>
    <title>Visual Basic/Simple Arithmetic</title>
    <ns>0</ns>
    <id>40252</id>
    <revision>
      <id>1964139</id>
      <parentid>1805240</parentid>
      <timestamp>2010-11-02T17:16:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed headings; syntax highlighting</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Visual Basic has all of the common arithmetical functions.  It does not have complex numbers nor does it allow you to overload operators so manipulating complex numbers or matrices must be done by explicit function and subroutine calls.

==Arithmetic Operators==
The operators are infix and take two arguments: ''arg1 operator arg2'' except for unary plus and minus

===Numeric Operators===

{| class=&quot;wikitable&quot;
!Operator
!align=&quot;left&quot;|Comments
|-
|align=&quot;center&quot; valign=&quot;top&quot;|+
|Adds two numbers.  Also concatenates strings but avoid this use because Visual Basic will try to convert the string to a number first and the results might not be what you expect.
|-
|align=&quot;center&quot; valign=&quot;top&quot;|-
|Subtract the second number from the first.
|-
|align=&quot;center&quot; valign=&quot;top&quot;|- unary
|negate the operand.
|-
|align=&quot;center&quot; valign=&quot;top&quot;|*
|Multiply two numbers.  The result will be promoted to whatever data type is needed to represent the size of the number if one of the numbers is already that type (see note below about odd behavior).
|-
|align=&quot;center&quot; valign=&quot;top&quot;|/
|Normal division.  Treats both operands as real numbers and returns a real result.
|-
|align=&quot;center&quot; valign=&quot;top&quot;|\
|Integer division.  Be careful with this because the arguments are converted to integers before the division is performed so use this with integer operands unless you comment your code carefully.  
Also note that &quot;/&quot; and &quot;*&quot; are evaluated before &quot;\&quot;, so (1000 \ 13 * 3) is not equal to ( (1000 \ 13) * 3)
|-
|align=&quot;center&quot; valign=&quot;top&quot;|Mod
|Produces the remainder after integer division.  Be careful with this as the interpretation of the modulus operator in mathematics is ambiguous.  &lt;tt&gt;a Mod b&lt;/tt&gt; gives the same answer as this expression: &lt;tt&gt;a - (a \ b) * b&lt;/tt&gt;
|-
|align=&quot;center&quot; valign=&quot;top&quot;|^
|Raises the first operand to the power of the second.  In Visual Basic either or both operands may be negative.  If all you want is a square or cube it is faster to explcitly multiply the number by itself the appropriate number of times.
|}

For example:

&lt;source lang=&quot;vb&quot;&gt;Text2 = Text1 * 5&lt;/source&gt;

Will display the value in Text1, multiplied by 5, in Text2. E.g. if Text1 = 4 then Text2 will be equal to 20.

=== Order of operations ===
*Exponentiation (^)
*Multiplication and normal division (* and /)
*Integer division (\)
*Mod (Mod)
*Addition and subtraction (+,-)

General hint : If an expression uses more than (+,-,*) use all possible brackets to force the expression to be evaluated the way you are thinking it.

=== VB odd behavior note===

VB considers &quot;explicitly stated&quot; integral numbers to be of type ''Integer'' (which must be between -32768 and 32767) if they are within (-32768, +32767) and gives an error if the result of arithmetic with them is more than 32768.  This can be seen by trying 

&lt;source lang=&quot;vb&quot;&gt;Debug.Print (17000 + 17000)&lt;/source&gt;

or

&lt;source lang=&quot;vb&quot;&gt;Debug.Print (17000 * 3)&lt;/source&gt;

which both cause an error.  This can be solved (in a direct but ugly way) by enclosing numbers in ''CLng()'' (Convert to Long) so that 

&lt;source lang=&quot;vb&quot;&gt;Debug.Print (CLng(17000) + CLng(17000))&lt;/source&gt;

or by using the type-declaration character ''&amp;'' which specifies a Long constant:

&lt;source lang=&quot;vb&quot;&gt;Debug.Print (17000&amp; + 17000&amp;)&lt;/source&gt;

neither of which cause an error.  To avoid having to think about this, avoid using explicit numbers in code and instead use &quot;Long&quot; variables and constants such as :

&lt;source lang=&quot;vb&quot;&gt;
  Const TEST_NUM As Long = 17000&amp;
  Debug.Print (TEST_NUM + TEST_NUM)
  
  Dim TestNumVar As Long
  TestNumVar = 17000
  Debug.Print (TestNumVar + TestNumVar)
&lt;/source&gt;

===Boolean Arithmetic===
'''Boolean operators''' use Boolean variables or integer variables where each individual bit is treated as a Boolean.  There are six operators:

{| class=&quot;wikitable&quot;
!Operator:
!Meaning:
|-
|Not
|Negation
|-
|And
|Conjuncton
|-
|Or
|Disjunction (logical addition)
|-
|Xor
|Exclusive Or
|-
|Eqv
|Equivalence
|-
|Imp
|Implication
|-
|}

When you construct logical expressions with these operators you get the following results:

{| class=&quot;wikitable&quot;
!width=&quot;15&quot;|A
!width=&quot;15&quot;|B
!width=&quot;80&quot;|A And B
!width=&quot;80&quot;|A Or B
!width=&quot;80&quot;|A Xor B
!width=&quot;80&quot;|A Eqv B
!width=&quot;80&quot;|A Imp B
|-
| align=&quot;center&quot;|T
| align=&quot;center&quot;|T
| align=&quot;center&quot;|T
| align=&quot;center&quot;|T
| align=&quot;center&quot;|F
| align=&quot;center&quot;|T
| align=&quot;center&quot;|T
|-
| align=&quot;center&quot;|T
| align=&quot;center&quot;|F
| align=&quot;center&quot;|F
| align=&quot;center&quot;|T
| align=&quot;center&quot;|T
| align=&quot;center&quot;|F
| align=&quot;center&quot;|F
|-
| align=&quot;center&quot;|F
| align=&quot;center&quot;|T
| align=&quot;center&quot;|F
| align=&quot;center&quot;|T
| align=&quot;center&quot;|T
| align=&quot;center&quot;|F
| align=&quot;center&quot;|T
|-
| align=&quot;center&quot;|F
| align=&quot;center&quot;|F
| align=&quot;center&quot;|F
| align=&quot;center&quot;|F
| align=&quot;center&quot;|F
| align=&quot;center&quot;|T
| align=&quot;center&quot;|T
|}

==Comparison Operators==

These operators, composed of &lt;, &gt; and =, are use to decide whether one value  is smaller than, larger than, or equal to another.  

For example:

&lt;source lang=&quot;vb&quot;&gt;
  Dim i
  i = 50
  If i &lt; 0 Then
      MsgBox &quot;i is less than 0&quot; 
  ElseIf i &lt;= 100 And i &gt;= 0 Then
      MsgBox &quot;i is less than or equal to one hundred and greater than or equal to 0&quot;
  ElseIf i &gt; 100 And i &lt; 200 Then
      MsgBox &quot;i is greater than one hundred less than 200&quot;
  Else
      MsgBox &quot;i is greater than or equal to 200&quot;
  End if
&lt;/source&gt;

Caution! Due to the internal structure of floating-point numbers (Single and Double), do not use = or &lt;&gt; to compare them. Instead, use a small value (usually called Epsilon) as a &quot;maximum difference&quot;. For example:

&lt;source lang=&quot;vb&quot;&gt;
  ' This returns False :
  Debug.Print (Sqr(1.234) * Sqr(1.234)) = 1.234
  ' This returns True :
  E = 0.000001
  Debug.Print Abs((Sqr(1.234) * Sqr(1.234)) - 1.234) &lt; E
&lt;/source&gt;

{| class=&quot;wikitable&quot;
!Operator
!align=&quot;left&quot;|Meaning
|-
|=
|Equality
|-
|&lt;&gt;
|Inequality
|-
|&lt;
|Less than
|-
|&gt;
|Greater than
|-
|&gt;=
|Greater than or equal to.  Or put another way: ''not less than''
|-
|&lt;=
|Less than or equal to.  Or put another way: ''not greater than''
|}

==Built in Arithmetic Functions==
There are not many native mathematical functions in Visual basic but this doesn't mean that you can't do significant calculations with it.

;Abs(x):returns the absolute value of x, that is, it removes a minus sign if there is one. Examples: Abs(3)=3 ; Abs(-3)=3
;Exp(x):returns the value e&lt;sup&gt;x&lt;/sup&gt;.  e is Euler's constant, the base of natural logarithms.
;Log(x): the ''Neperian ('Natural', e base) logarithm'' of ''x''.  
;Randomize(x): not really a mathematical function because it is actually a subroutine.  This initializes the random number generator.
;Rnd(x):produces the next random number in the series.  Please read that sentence again! the random numbers aren't really random, they are instead pseudo-random.  If you initialize the random number generator with the same number each time you start a program then you will get the same series of values from ''Rnd()''
;Round(x,n):returns a real number rounded to ''n'' decimal places (uses Banker's rounding).
;Sgn(x):returns plus one if ''x'' is positive, minus one if it is negative, zero if ''x'' is identically zero. Sgn(-5)=-1 ; Sgn(5)=1 ; Sgn(0)=0
;Sqr(x):square root of ''x''. Example: Sqr(25)=5. ''x'' must be non-negative. Thus Sqr(-25) will generate an error

===Derived Functions===
If you want logarithms to some other base you can use this expression:
 
&lt;source lang=&quot;vb&quot;&gt;Log(x, base) = Log(x) / Log(base)&lt;/source&gt;

And to calculate the n&lt;sup&gt;th&lt;/sup&gt; root of a number (cube root, ...)

&lt;source lang=&quot;vb&quot;&gt;RootN(x, n) = x ^ (1.0 / n)&lt;/source&gt;

==Trigonometrical Functions==
Visual Basic has the usual simple trigonometric functions, sin, cos, tan, but if you want some of the more unusual ones or inverses you will need to write some simple functions.

Remember that the angles must be supplied as ''radians''

&lt;source lang=&quot;vb&quot;&gt;
  radians = degrees * &amp;pi; / 180

  ArcSin(x) = Atn(x / Sqr(-x * x + 1))

  ArcCos(x) = Atn(-x / Sqr(-x * x + 1)) + 2 * Atn(1)
&lt;/source&gt;

Notice that the range of applicability of these expressions is limited to the range -1&lt;=x&lt;=1.

Here are some more:
{| class=&quot;wikitable&quot;
|Secant||Sec(x) = 1 / Cos(x) 
|-
|Cosecant||Cosec(x) = 1 / Sin(x) 
|-
|Cotangent||Cotan(x) = 1 / Tan(x) 
|-
|Inverse Sine||Arcsin(x) = Atn(x / Sqr(-x * x + 1)) 
|-
|Inverse Cosine||Arccos(x) = Atn(-x / Sqr(-x * x + 1)) + 2 * Atn(1) 
|-
|Inverse Secant||Arcsec(x) = Atn(x / Sqr(x * x - 1)) + Sgn((x) - 1) * (2 * Atn(1)) 
|-
|Inverse Cosecant||Arccosec(x) = Atn(x / Sqr(x * x - 1)) + (Sgn(x) - 1) * (2 * Atn(1)) 
|-
|Inverse Cotangent||Arccotan(x) = -Atn(x) + 2 * Atn(1) 
|-
|Hyperbolic Sine||HSin(x) = (Exp(x) - Exp(-x)) / 2 
|-
|Hyperbolic Cosine||HCos(x) = (Exp(x) + Exp(-x)) / 2 
|-
|Hyperbolic Tangent||HTan(x) = (Exp(x) - Exp(-x)) / (Exp(x) + Exp(-x)) 
|-
|Hyperbolic Secant||HSec(x) = 2 / (Exp(x) + Exp(-x)) 
|-
|Hyperbolic Cosecant||HCosec(x) = 2 / (Exp(x) - Exp(-x)) 
|-
|Hyperbolic Cotangent||HCotan(x) = (Exp(x) + Exp(-x)) / (Exp(x) - Exp(-x)) 
|-
|Inverse Hyperbolic Sine||HArcsin(x) = Log(x + Sqr(x * x + 1)) 
|-
|Inverse Hyperbolic Cosine||HArccos(x) = Log(x + Sqr(x * x - 1)) 
|-
|Inverse Hyperbolic Tangent||HArctan(x) = Log((1 + x) / (1 - x)) / 2 
|-
|Inverse Hyperbolic Secant||HArcsec(x) = Log((Sqr(-x * x + 1) + 1) / x) 
|-
|Inverse Hyperbolic Cosecant||HArccosec(x) = Log((Sgn(x) * Sqr(x * x + 1) + 1) / x) 
|-
|Inverse Hyperbolic Cotangent||HArccotan(x) = Log((x + 1) / (x - 1)) / 2 
|}

The very useful atan2 function (calculate the angle in all four quadrants of a vector) can be simulated like this:

&lt;source lang=&quot;vb&quot;&gt;
 Public Const Pi As Double = 3.14159265358979
  
  Public Function Atan2(ByVal y As Double, ByVal x As Double) As Double
  
    If y &gt; 0 Then
      If x &gt;= y Then
        Atan2 = Atn(y / x)
      ElseIf x &lt;= -y Then
        Atan2 = Atn(y / x) + Pi
      Else
        Atan2 = Pi / 2 - Atn(x / y)
      End If
    Else
      If x &gt;= -y Then
        Atan2 = Atn(y / x)
      ElseIf x &lt;= y Then
        Atan2 = Atn(y / x) - Pi
      Else
        Atan2 = -Atn(x / y) - Pi / 2
      End If
    End If

  End Function
&lt;/source&gt;

Other functions:

&lt;source lang=&quot;vb&quot;&gt;
  ASin(x) = Atan2(x, Sqr(1 - x * x))
  ACos(x) = Atan2(Sqr(1 - x * x), x)
&lt;/source&gt;


{{VBClassicNav1|Getting Started|Branching}}</text>
      <sha1>8uss81o84wlevj3m61rkxd1j6gwe9wn</sha1>
    </revision>
  </page>
  <page>
    <title>Portuguese/Contents/Pluperfect tense regular verbs</title>
    <ns>0</ns>
    <id>40253</id>
    <revision>
      <id>871665</id>
      <parentid>661940</parentid>
      <timestamp>2007-05-20T11:11:45Z</timestamp>
      <contributor>
        <username>Tannersf</username>
        <id>39006</id>
      </contributor>
      <minor />
      <comment>[[Portuguese:Pluperfect tense regular verbs]] moved to [[Portuguese/Contents/Pluperfect tense regular verbs]]: naming</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The pluperfect tense is used to show temporal relationships in the past. It shows that one event happened before another, as in &quot;I had already eaten dinner before you called&quot;. All regular verbs follow the one pattern, except for an accent in the &quot;we&quot; and &quot;you&quot; (plural) forms of the verbs, which change depending on whether the verb is &quot;-ar&quot;, &quot;-er&quot; or &quot;-ir&quot;.

The regular pluperfect tense is formed as follows:

&lt;table style=&quot;width: 619px;&quot;
 border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;
 width=&quot;100&quot;&gt;
&lt;tr&gt;
&lt;td bgcolor=&quot;#edfded&quot;
width=&quot;131&quot;&gt;I had spoken&lt;br&gt;
&lt;/td&gt;
&lt;td align=&quot;right&quot;
bgcolor=&quot;#f6f9f7&quot; width=&quot;74&quot;&gt;Eu falar&lt;/td&gt;
&lt;td bgcolor=&quot;#dfe0e0&quot; width=&quot;71&quot;&gt;&lt;b&gt;a&lt;/b&gt;&lt;/td&gt;
&lt;td width=&quot;57&quot;&gt;&lt;/td&gt;
&lt;td width=&quot;127&quot;&gt;&lt;/td&gt;
&lt;td width=&quot;152&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
      &lt;td bgcolor=&quot;#edfded&quot;
 width=&quot;131&quot;&gt;You had spoken&lt;br&gt;
      &lt;/td&gt;
      &lt;td align=&quot;right&quot;
 bgcolor=&quot;#f6f9f7&quot; width=&quot;74&quot;&gt;Tu falar&lt;/td&gt;
      &lt;td bgcolor=&quot;#dfe0e0&quot; width=&quot;71&quot;&gt;&lt;b&gt;as&lt;/b&gt;&lt;/td&gt;
      &lt;td width=&quot;57&quot;&gt;&lt;/td&gt;
      &lt;td width=&quot;127&quot;&gt;&lt;/td&gt;
      &lt;td width=&quot;152&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td bgcolor=&quot;#edfded&quot;
 width=&quot;131&quot;&gt;He had spoken&lt;br&gt;
(&lt;i&gt;also ela, você)&lt;/i&gt;&lt;/td&gt;
      &lt;td align=&quot;right&quot;
 bgcolor=&quot;#f6f9f7&quot; width=&quot;74&quot;&gt;Ele falar&lt;/td&gt;
      &lt;td bgcolor=&quot;#dfe0e0&quot; width=&quot;71&quot;&gt;&lt;b&gt;a&lt;/b&gt;&lt;/td&gt;
      &lt;td width=&quot;57&quot;&gt;&lt;/td&gt;
      &lt;td width=&quot;127&quot;&gt;&lt;/td&gt;
      &lt;td width=&quot;152&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td bgcolor=&quot;#edfded&quot;
 width=&quot;131&quot;&gt;We had spoken&lt;br&gt;
      &lt;/td&gt;
      &lt;td align=&quot;right&quot;
 bgcolor=&quot;#f6f9f7&quot; width=&quot;74&quot;&gt;Nós '''falár'''&lt;br&gt;
      &lt;/td&gt;
      &lt;td bgcolor=&quot;#dfe0e0&quot; width=&quot;71&quot;&gt;
&lt;b&gt;amos&lt;/b&gt;
      &lt;/td&gt;
      &lt;td colspan=&quot;1&quot; rowspan=&quot;2&quot;
align=&quot;center&quot; bgcolor=&quot;#b1cdb1&quot; width=&quot;57&quot;&gt;BUT&lt;/td&gt;
&lt;td bgcolor=&quot;#deede5&quot;
width=&quot;127&quot;&gt;
Nós com&lt;b&gt;&lt;big&gt;ê&lt;/big&gt;ramos&lt;/b&gt;
&lt;/td&gt;
&lt;td bgcolor=&quot;#deede5&quot; width=&quot;152&quot;&gt;
Nós part&lt;b&gt;&lt;big&gt;í&lt;/big&gt;ramos&lt;/b&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td bgcolor=&quot;#edfded&quot; width=&quot;131&quot;&gt;You (p) had spoken&lt;/td&gt;
&lt;td align=&quot;right&quot; bgcolor=&quot;#f6f9f7&quot; width=&quot;74&quot;&gt;Vós '''falár'''&lt;br&gt;
&lt;/td&gt;
&lt;td bgcolor=&quot;#dfe0e0&quot; width=&quot;71&quot;&gt;
&lt;b&gt;eis&lt;/b&gt;
&lt;/td&gt;
&lt;td bgcolor=&quot;#dff6e0&quot;
 width=&quot;127&quot;&gt;
Vós com&lt;b&gt;&lt;big&gt;ê&lt;/big&gt;reis&lt;/b&gt;
&lt;/td&gt;
&lt;td bgcolor=&quot;#dff6e0&quot; width=&quot;152&quot;&gt;
Vós part&lt;b&gt;&lt;big&gt;í&lt;/big&gt;reis&lt;/b&gt;
&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td bgcolor=&quot;#edfded&quot;
 width=&quot;131&quot;&gt;They were speaking&lt;br&gt;
      &lt;i&gt;(also elas, &lt;/i&gt;&lt;i&gt;voc&amp;ecirc;s)&lt;/i&gt;&lt;/td&gt;
      &lt;td align=&quot;right&quot;
 bgcolor=&quot;#f6f9f7&quot; width=&quot;74&quot;&gt;Eles falar&lt;/td&gt;
      &lt;td bgcolor=&quot;#dfe0e0&quot; width=&quot;71&quot;&gt;&lt;b&gt;amos&lt;/b&gt;&lt;/td&gt;
      &lt;td width=&quot;57&quot;&gt;&lt;/td&gt;
      &lt;td width=&quot;127&quot;&gt;&lt;/td&gt;
      &lt;td width=&quot;152&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

[[Category:Portuguese]]</text>
      <sha1>qudrmsdjoyvjkhqbgu4allcxcr69p5w</sha1>
    </revision>
  </page>
  <page>
    <title>Cellular Automata/Information and Reversibility</title>
    <ns>0</ns>
    <id>40264</id>
    <revision>
      <id>495570</id>
      <parentid>291908</parentid>
      <timestamp>2006-06-21T22:40:59Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== References ==

Kenichi Morita, Reversible simulation

# [http://www.iec.hiroshima-u.ac.jp/~morita/ Kenichi Morita] and [http://www.dumbo.ai.kyutech.ac.jp/harao/eindex.html Masateru Harao], ''Computation universality of one-dimensional reversible (injective) cellular automata'', Trans. IEICE Japan, E72, 758-762, 1989. [http://www.ke.sys.hiroshima-u.ac.jp/~morita/1989/MH89.pdf PDF]
# [http://www.iec.hiroshima-u.ac.jp/~morita/ Kenichi Morita], ''Computation-universality of one-dimensional one-way reversible cellular automata'', Information Processing Letters, 42, 325-329, 1992.
# [http://www.iec.hiroshima-u.ac.jp/~morita/ Kenichi Morita], ''Reversible simulation of one-dimensional irreversible cellular automata'', Theoretical Computer Science, 148, 157-163, 1995 [http://www.ke.sys.hiroshima-u.ac.jp/~morita/1995/Mor95.ps PS]
# [http://pm1.bu.edu/~tt/ Tommaso Toffoli], &quot;Computation and construction universality of reversible cellular automata&quot;, Journal of Computer and System Sciences, 15 (1977), 213-231.
* [http://delta.cs.cinvestav.mx/~mcintosh/newweb/ra/ra.html Reversible Cellular Automata (Harold V. McIntosh)]
* [http://sjsu.rudyrucker.com/~kwanghyung.paek/paper/ Reversible Cellular Automata (NSK)]
* [http://www.mathpages.com/home/kmath439/kmath439.htm Global Reversibility of Cellular Automata (MathPages)]

[[Category:Cellular Automata]]</text>
      <sha1>cgv05hl3oyhwko6uw4416p75ac861uq</sha1>
    </revision>
  </page>
  <page>
    <title>Arabic/XisYandPronouns</title>
    <ns>0</ns>
    <id>40281</id>
    <revision>
      <id>1078449</id>
      <parentid>486957</parentid>
      <timestamp>2008-01-10T20:06:32Z</timestamp>
      <contributor>
        <ip>213.210.179.77</ip>
      </contributor>
      <comment>/* X is Y + pronouns */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==X is Y + pronouns==

We learned in the previous lesson how to say sentences such as the following in Arabic.
The boy is small.
The man is big.
But what if you want to say where something is. You need a preposition. Take this talk between two people for example:
Where is the hammer?
It is under the table.

In the second sentence a preposition was used. Whenever you are telling where something is you are using a preposition. Here are some examples of prepositions in English.

under, over, around, through, beside, on, from, inside, behind, etc.

So what if we wanted to say the boy is with the man.
We know the following:
&lt;br&gt;&lt;font size=&quot;+3&quot;&gt;
ولد &lt;/font&gt;(wa-lad) =boy&lt;br&gt;&lt;font size=&quot;+3&quot;&gt;
رجل &lt;/font&gt;(ra-jul) =man&lt;br&gt;
&lt;br&gt;
Remember we have to prefix &lt;font size=&quot;+3&quot;&gt;&quot;ال&quot; &lt;/font&gt;(al) to those words in order to make &quot;the man&quot; and &quot;the boy&quot;. But there is one word we haven't covered yet. We haven't covered the preposition &quot;with&quot;. That's all we need, there is no need to have a word for &quot;is&quot; in an Arabic sentence. &quot;is&quot; is understood when the first word has &quot;ال&quot; (al) and the second doesn't.
&lt;br&gt;&lt;font size=&quot;+3&quot;&gt;
مع  &lt;/font&gt;(ma-`a) with

&lt;br&gt;
Now try to construct the sentence.
&lt;br&gt;
Here's how it should look.
&lt;br&gt;&lt;font size=&quot;+3&quot;&gt;
الولد مع الرجل
&lt;/font&gt;&lt;br&gt;&lt;br&gt;(al_wa-lad--ma-`al-ra-jul)&lt;br&gt;
WordForWord Translation: the-boy with the-man&lt;br&gt;
The boy is with the man.&lt;br&gt;&lt;br&gt;

But what if we wanted to say &quot;The boy is with a man&quot;.&lt;br&gt;
&lt;font size=&quot;+3&quot;&gt;
الولد مع رجل
&lt;/font&gt;
&lt;br&gt;&lt;br&gt;(al_wa-lad--ma-`a-ra-jul)&lt;br&gt;
All we had to do was take away &lt;font size=&quot;+3&quot;&gt;&quot;ال&quot;&lt;/font&gt; (al)  (which means &quot;the&quot;) from &lt;font size=&quot;+3&quot;&gt;&quot;رجل&quot;&lt;/font&gt; (ra-jul) (which means &quot;a man&quot;). There is no word for &quot;a&quot; in Arabic.


&lt;br&gt;
Here are some prepositions we will use:
&lt;br&gt;
under = (tiH-ta)&lt;font size=&quot;+3&quot;&gt; تـحت

&lt;br&gt;&lt;/font&gt;on top of= (`a-la)&lt;font size=&quot;+3&quot;&gt; على

&lt;br&gt;&lt;/font&gt;in= (fii)&lt;font size=&quot;+3&quot;&gt;في

&lt;br&gt;&lt;/font&gt;over= (faw-qa)&lt;font size=&quot;+3&quot;&gt; فوق

&lt;br&gt;&lt;/font&gt;from= (min)&lt;font size=&quot;+3&quot;&gt; من
&lt;/font&gt;

[[Category:Arabic]]</text>
      <sha1>o8vq0s9r6wg8vwbaagovhofjy21b0l1</sha1>
    </revision>
  </page>
  <page>
    <title>Emulation/On PSP</title>
    <ns>0</ns>
    <id>40282</id>
    <revision>
      <id>2756835</id>
      <parentid>826371</parentid>
      <timestamp>2015-01-20T10:51:40Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">PSPE is the highest-rated PSP Emulator and the most functional at this time. It can run homebrew games, but not commercial games at present.

[[Category:Emulation]]</text>
      <sha1>0n5axcc1gsif30ysbr3mc005j0in5k1</sha1>
    </revision>
  </page>
  <page>
    <title>Arabic/XofYand</title>
    <ns>0</ns>
    <id>40284</id>
    <revision>
      <id>2174957</id>
      <parentid>2053819</parentid>
      <timestamp>2011-10-03T18:36:56Z</timestamp>
      <contributor>
        <username>HethrirBot</username>
        <id>475400</id>
      </contributor>
      <minor />
      <comment>Robot: Cosmetic changes</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">We are going to learn about X and Y structures, and we will learn about the Arabic word for &quot;and&quot;.

 and = (wa)&lt;font size=&quot;+3&quot;&gt;و &lt;/font&gt; 

This seems simple enough. There is one thing to remember though. و (wa) always is included in the word that follows it. It is not considered a separate word in Arabic. 
&lt;font size=&quot;+3&quot;&gt;&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;Correct: والولد
&lt;br /&gt;&lt;br /&gt;Incorrect: و الولد
&lt;/font&gt;&lt;br /&gt;&lt;br /&gt;
Both mean &quot;and the boy&quot;, but due to an Arabic spelling rule, that says one letter words must connect to following words what is 3 words in English, &quot;and the boy&quot; ,is one word in Arabic, &quot;andtheboy&quot;. 
&lt;br /&gt;
Here are examples of X of Y structures so you understand what you will learn.
&lt;br /&gt;
The cat of the neighbour. OR The neighbor's cat.
The dog of the man. OR The man's dog.
&lt;br /&gt;
Did you notice that the first sentence uses the &quot;the X of Y&quot; format, while the second uses apostrophe (an apostrophe is this sign: ' )and then an &quot;s&quot;. In Arabic There is no &quot; apostrophe s&quot; type of structure. Whenever you translate The neighbor's cat, the word &quot;cat&quot; will come first in Arabic and &quot;the neighbour&quot; will come right after it.
&lt;br /&gt;
Remember how Arabic doesn't use a word for &quot;is&quot; in sentences like &quot;The boy is big&quot;. Arabic also doesn't use a word for &quot;of&quot; in sentences like &quot;the cat of the neighbour&quot;.
&lt;br /&gt;
So now, you might be asking how do you say &quot;the cat of the neighbour&quot; if there is no word for &quot;of&quot;. It has to do with sentence structure.


In English it looks like this.
the ____1____ of ______2_____&lt;br /&gt;

=&lt;br /&gt; In Arabic it will look like this&lt;br /&gt;&lt;font size=&quot;+3&quot;&gt;
ــــــ1ــــــــ ال ــــــ2ـــــِ
&lt;/font&gt;
&lt;br /&gt;&lt;br /&gt;Note: &quot;1&quot; stands for the first word. &quot;2&quot; stands for the second word.

For example:&lt;br /&gt; the boy of the city.&lt;br /&gt;
&lt;font size=&quot;+3&quot;&gt;
ولد الـمدينة
&lt;/font&gt;
&lt;br /&gt;(wa-la-dul&lt;_ma-dii-na-ti)&lt;br /&gt;&lt;font size=&quot;+3&quot;&gt;
مدينة &lt;/font&gt;(ma-dii-na) means &quot;city&quot;.&lt;br /&gt;

Note that the last letter of &quot;&lt;font size=&quot;+3&quot;&gt; مدينة &lt;/font&gt;&quot;is a تاء مربوطة (taa'--mar-buu-Ta) meaning closed&lt;font size=&quot;+3&quot;&gt; ت &lt;/font&gt;(taa). This variant of&lt;font size=&quot;+3&quot;&gt; ت &lt;/font&gt;(taa) looks like a &lt;font size=&quot;+3&quot;&gt;ه &lt;/font&gt;(haa) with two dots on top. It is pronounced as &quot;h&quot; when you stop at that word (although the &quot;h&quot; sound is very faint) and at all other times it is pronounced as the normal &quot;t&quot; sound, as in &quot;talk&quot;.

The structure &quot;the boy of the city&quot; can be translated as one of the following. Each one means the same thing. The only difference is that each one has a different function in the sentence.
walad+u al-madiinati=(wa-la-dul_ma-dii-na-ti)&lt;br /&gt;
walad+a al-madiinati=(wa-la-dal_ma-dii-na-ti)&lt;br /&gt;
walad+i al-madiinati=(wa-la-dil_ma-dii-na-ti)&lt;br /&gt;

I'll write out an &quot;X&quot; where the three sentences differ.&lt;br /&gt;
(wa-la-dXl&lt;_ma-dii-na)&lt;br /&gt;

The difference is a vowel that attaches to the word for &quot;boy&quot;: (wa-lad). This vowel indicates something called grammatical case. This will be explained later, And we will use the &quot;u&quot; ending for all the following examples, because that is the default case.
&lt;br /&gt;
&lt;br /&gt;
The man's dog/ the dog of the man.&lt;br /&gt;&lt;font size=&quot;+3&quot;&gt;
كـَلـْبُ الرَّجُلِ
&lt;/font&gt;&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;kalb + u + al + rajul = (kal-bur&lt;_ra-jul)
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
The woman's dog/ the dog of the woman.&lt;br /&gt;&lt;font size=&quot;+3&quot;&gt;
كـَلـْبُ المَرْأةِ
&lt;/font&gt;&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;kalb + u + al + mar'a (kal-bul&lt;_mar-a)
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
Now let's use و (wa).&quot; و (wa)&quot; means &quot;and&quot; in Arabic.&lt;br /&gt;
&lt;font size=&quot;+3&quot;&gt;
كـَلـْبُ الرَّجُلِ وَكـَلـْبُ المَرْأةِ
&lt;/font&gt;&lt;br /&gt;&lt;br /&gt;kalb+u +al+rajul+i+ wa+kalb+u+al+mar'at
(kal-bur&lt;-ra-ju-li--wa_kal-bul&lt;-mar-a)&lt;br /&gt;
The man's dog, and the woman's dog.&lt;br /&gt;
&lt;br&lt;br /&gt;&lt;br /&gt;

[[Category:Arabic]]</text>
      <sha1>ctl6bo0pivh40p4xz1ulfpzf6xlierp</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:German/Grammar/Definite</title>
    <ns>1</ns>
    <id>40285</id>
    <revision>
      <id>1705614</id>
      <parentid>510010</parentid>
      <timestamp>2010-01-25T13:43:17Z</timestamp>
      <contributor>
        <username>Neet</username>
        <id>149173</id>
      </contributor>
      <minor />
      <comment>moved [[Talk:German Grammar/Definite]] to [[Talk:German/Grammar/Definite]]: It did not comply to the official structure of books.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I dislike the use of the word &quot;article.&quot;  It tends to be very ambiguous.  A better alternative is to use the descriptions &quot;der-word&quot; to denote der/die/das/etc., and &quot;ein-word&quot; to denote ein/einer and friends.  Together, they can be called &quot;ein-words and der-words.&quot;]
--[[User:WhirlWind|WhirlWind]] 17:29, 7 September 2005 (UTC)</text>
      <sha1>0eabri7rihoe97m4za2ueroggdejti9</sha1>
    </revision>
  </page>
  <page>
    <title>Electronics/Electro-Mechanical Analogies</title>
    <ns>0</ns>
    <id>40286</id>
    <revision>
      <id>2223879</id>
      <parentid>2157059</parentid>
      <timestamp>2011-11-29T22:27:12Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <minor />
      <comment>{{AltBookCat}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Introduction ==

The goal of electro-mechanical analogies is to integrate electrical and mechanical components in a simple graphical way that illustrates the behavior of the system.  Of course, one needs to be familiar with simple lumped electrical systems to appreciate the analogy.  This is warranted because these circuits and procedures are still used in the transducer industry to model shakers, speakers, dynamic microphones, and other systems.

The two analogies between electrical and mechanical systems are the impedance analogy and the mobility analogy.

                       Mechanical           Electrical Equivalent
 Impedance Analog
   potential            Force      &lt;math&gt;F(t)&lt;/math&gt;        Voltage    &lt;math&gt;V(t)&lt;/math&gt;
   flux                 Velocity   &lt;math&gt;u(t)&lt;/math&gt;        Current    &lt;math&gt;i(t)&lt;/math&gt;
 
 Mobility Analog
   potential            Velocity   &lt;math&gt;u(t)&lt;/math&gt;        Voltage    &lt;math&gt;V(t)&lt;/math&gt;
   flux                 Force      &lt;math&gt;F(t)&lt;/math&gt;        Current    &lt;math&gt;i(t)&lt;/math&gt;


The impedance analog is often easier for most acousical systems while the mobility analog more &quot;naturally&quot; represents mechanical systems.  It also may be easier to draw one analog or the other in some cases.

== Electro-mechanical Equivalent Components ==


1) The Equivalent Spring

2) The Equivalent Mass

3) The Equivalent Resistance

{{AltBookCat}}</text>
      <sha1>iiovcq34i1qw0qnqxwozvk7oaq2xdfq</sha1>
    </revision>
  </page>
  <page>
    <title>Neapolitan/bibliography</title>
    <ns>0</ns>
    <id>40287</id>
    <revision>
      <id>1066559</id>
      <parentid>520967</parentid>
      <timestamp>2007-12-22T18:17:56Z</timestamp>
      <contributor>
        <username>BimBot</username>
        <id>18211</id>
      </contributor>
      <minor />
      <comment>robot  Modifying: [[it:Napoletano/Bibliografia]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Neapolitan}}

== Bibliography ==
===Grammars===
:Iandolo, Carlo- '''A lengua 'e Pulecenella'', Sorrento, Di Mauro, 1994 (Italian);
===Dictionaries===
:Andreoli, Raffaele- ''Vocabolario Napoletano-Italiano'', Paravia, 1887 (and subsequent editions- 1966, 1998);
:D'Ascoli, Francesco- ''Dizionario Italiano-Napoletano'', Adriano Gallina, 1983;
===Literature===
:Basile, Giambattista- ''Lo cunto de li cunti'';
:De Filippo, Eduardo- ''Filumena Marturano'' (play);
:De Filippo, Eduardo- ''Il sindaco del Rione Sanità'' (play); 
:De Filippo, Eduardo- ''La tempesta'' (trans. of ''The Tempest'') (play);

[[Category:Neapolitan]]

[[it:Napoletano/Bibliografia]]</text>
      <sha1>mc4bnb93f72j347wybmkimnhhlwqjmz</sha1>
    </revision>
  </page>
  <page>
    <title>Introduction to Art/Painting I</title>
    <ns>0</ns>
    <id>40289</id>
    <revision>
      <id>963902</id>
      <parentid>513789</parentid>
      <timestamp>2007-09-11T00:15:26Z</timestamp>
      <contributor>
        <username>Whiteknight</username>
        <id>10714</id>
      </contributor>
      <minor />
      <comment>Removing book pages from subject category, placing in book category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Painting can be done in a variety of media.  For example, Oils, Watercolour, Acrylics, Gouache and Tempera.  

Paints are made from a pigment, and a binder. Binder is relatively cheap, while pigment is much more expensive. Pigments are a colored powder, made from organic or inorganic materials. (This is different than a colorant, which dyes or stains a color.)

All paints use the same basic pigments, but the binder changes.  The binder for acrylics dries quickly and the paint is more like a plastic than oils which have an oil based binder and dry slowly.  Oil Paints are often built up in layers or glazes.  The other paints---Watercolour, Acrylics, Gouache, and Tempera---are water-based, meaning the paint can be diluted with water and clean-up can be done with soap and water.  Oil paints, on the other hand, require paint thinner to clean brushes.  The number and variety of painting techniques is endless.

Besides quality of paint, factors affecting color quality include: paint opacity, glossiness of painting surface, lighting, transparency, and texture.

{{BookCat}}</text>
      <sha1>tguecd4h7tkrmgr66q0ka7dgcho6bql</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/Sarcoma/Chondrosarcoma</title>
    <ns>0</ns>
    <id>40291</id>
    <revision>
      <id>2473159</id>
      <parentid>2473140</parentid>
      <timestamp>2013-01-04T16:44:28Z</timestamp>
      <contributor>
        <username>Brim</username>
        <id>2387</id>
      </contributor>
      <comment>/* Radiotherapy */ PMH 1980</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Radiation_Oncology:TOC}}


==Epidemiology==
*Heterogenous group of tumors forming cartilagenous tumors
**If there is evidence of [[w:Osteoid|osteoid]] or bone production, the tumor is classified as an [[Radiation_Oncology/Sarcoma/Osteosarcoma|osteosarcoma]]
*Median age in 3rd to 4th decades; 50% in patients &gt;40
*Distribution:
**Pelvis (31%)
**Femur (21%)
**Shoulder girdle (13%)
**Diaphyseal portion of long bones
**Skull base - can be a clinical challenge, since frequently limited resectability
*Clinical presentation
**Pain is a sign of active growth, and is an ominous sign
**Otherwise symptoms depend on location
*Radiographic presentation
**Two distinct patterns
***Small, well-defined lytic lesion within a narrow zone of transition, with surrounding sclerosis
***No sclerotic border
**[http://radiology.rsna.org/content/214/2/539.figures-only Endosteal scalloping] is a key sign of malignancy

==Histologic Subtypes==
*Central (76%)
*Peripheral
*Mesenchymal: high rate of metastatic spread
*Dedifferentiated: may resemble a fibrosarcoma or osteosarcoma; highly aggressive
*Clear cell: slow growing, multiple local recurrences
*Most tend to be low grade

==Treatment Overview==
*Treatment is maximum surgical resection while minimizing functional disability.  Decompression of visual and other neural structures, blood vessels, and brain stem should be achieved.
*Adjuvant RT typically indicated in cases of incomplete resection
*No effective chemotherapy at this time 

==Radiotherapy==
*'''MDACC; 1982''' (1961-76) PMID 6806219 -- &quot;Fifteen year radiotherapy experience with chondrosarcoma of bone.&quot; (McNaney D, Int J Radiat Oncol Biol Phys. 1982 Feb;8(2):187-90.)
**Retrospective. 20 pts treated with curative intent (11, definitive RT; 3 post-op RT; 3 RT + chemo; 3 recurrent after surgery). RT doses 4000 - 7000 cGy (1000 / wk) using photons and/or neutrons. 
**Sites: 13 pelvis, 4 spine, 2 distal femur, 1 H&amp;N
**Subgroups:
***RT alone: 5 of 11 (45%) alive without progressive local disease (at median 30 months). OS 54% at 30 months. Median dose 6600 cGy. 4 pts treated with mixed photons + neutrons. The rest treated with photons alone.
***Post-op: 2 of 3 alive w/o progressive disease at 44 and 52 months. Dose range 4500-6000 cGy.
***RT+chemo w/o surgery: 2 of 3 alive w/o progressive disease at 15 and 29 months. Dose range 4000-6400 cGy.
***RT for recurrence: 2 of 3 alive w/o progressive disease at 19 and 77 months. Dose range 6200-7000 cGy.
**11 of 20 (55%) show no evidence of progressive local disease at median 30 months. Two additional patients surgically salvaged after RT failure; overall survival rate 65% (13/20). 
**Severe complications in 5 pts: 3 foot drop, 1 subcutaneous fibrosis, 1 eye enucleation.

*'''Princess Margaret; 1980''' (1958-76) PMID 7379008 -- &quot;Radiotherapy of chondrosarcoma of bone.&quot; (Harwood AR, Cancer. 1980 Jun 1;45(11):2769-77.)
**Retrospective. 31 pts (20 pts - definitive RT, 11 pts - palliative).
**Conclusion: &quot;Our experience shows quite clearly that chondrosarcoma of bone can no longer be classified as a radioresistant tumor.&quot;

==Proton Beam Radiotherapy==
*'''Orsay; 2008''' (France)(1996-2006) PMID 18440726 -- &quot;Proton therapy in pediatric skull base and cervical canal low-grade bone malignancies.&quot; (Habrand JL, Int J Radiat Oncol Biol Phys. 2008 Jul 1;71(3):672-5. Epub 2008 Apr 25.)
**Retrospective. 30 children with chordoma (n=26), chondrosarcoma (n=3), and chondroma (n=1). Location in skull base (n=13), skull base with extension to cervical canal (n=12), or cervical canal (n=1). Median age 13.5 years. Surgery followed by photon/proton therapy. Mean total dose 68.4 CGE (54.6-71); mean photon dose 37.4 Gy (30.6-45), mean proton dose 32.1 CGE (20-70.2). F/U 2.2 years
**Outcome: Local control chordoma 21/26 (81%), chondrosarcoma 3/3 (100%), chondroma 1/1 (100%). 5-year PFS chordoma 77%, chondrosarcoma 100%
**Toxicity: Grade 3 auditory toxicty 1 patient, Grade 2 pituitary failure 7 patients
**Conclusion: Well tolerated, excellent local control

*'''MGH, 1999''' - PMID 10555005 -- &quot;Chondrosarcoma of the base of the skull: a clinicopathologic study of 200 cases with emphasis on its distinction from chordoma.&quot; Rosenberg AE et al.  Am J Surg Pathol 1999 Nov;23(11):1370-8.
**200 pts w/ chondrosarcoma tx'd w/ proton/photon radiation as a portion of tx regimen.  Pts received 64.2-79.6 CGE (median 72 CGE).
**5 yr local control 99%, 10 yr local control 98%.
**5 and 10 yr dz specific survival rate both 99%.
**Conclusion:  excellent prognosis w/ aggressive management in contrast to chordoma which has substantially worse prognosis.

*'''Loma Linda, 1999''' (1992-98) - PMID 10470818 -- &quot;Proton radiation therapy for chordomas and chondrosarcomas of the skull base.&quot; Hug EB et al.  J Neurosurg. 1999 Sep;91(3):432-9.
**25 chondrosarcomas (and 33 chordoma) pts tx'd w/ proton beam irradiation after maximal surgery.  Dose range of 64.8-79.2 CGE.
**5yr OS for chondrosarcoma was 100%.  5yr local control for chondrosarcoma was 92%.
**Control rates were influenced by brainstem involvement and tumor volume.
**Chondrosarcoma with better outcomes than chordoma.

*'''Netherlands, 1998''' - PMID 9667567 -- &quot;Intracranial chondrosarcoma: review of the literature and report of 15 cases.&quot;  Korten AG et al.  J Neurol Neurosurg Psychiatry. 1998 Jul;65(1):88-92.
**Reviewed all cases of intracranial chondrosarcoma in the Netherlands and available data in the literature.  
**Found surgery alone to have a 53% local recurrence rate w/ average time to recurrence of 32 months.
**Adjuvant charged particle irradiation had local control of 78-91% at 5 yrs, and 5 yr OS of 83-94%.</text>
      <sha1>a2qxw0c1ltr4fc0o2mok8soja6s573c</sha1>
    </revision>
  </page>
  <page>
    <title>A-level Physics/Forces, Fields and Energy/Further dynamics</title>
    <ns>0</ns>
    <id>40292</id>
    <revision>
      <id>2735028</id>
      <parentid>2405490</parentid>
      <timestamp>2014-11-22T17:24:34Z</timestamp>
      <contributor>
        <username>Fimatic</username>
        <id>1902259</id>
      </contributor>
      <comment>{{A-level physics}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">From last year, you should remember kinematics and dynamics, the branch of physics that relates to the motion of objects. We will now expand on this and have a look at what happens when two objects collide, the concept of momentum, and we will take a closer look at Newton's three laws of motion.

==Momentum==

If you have seen collisions involving two objects, you may have noticed that the velocity of one object seems to be passed to the other object. You may also have noticed that heavier objects seem to pass more velocity on to smaller objects, whereas smaller objects seem to pass less velocity to more massive ones.

What is in fact happening is that '''momentum''' is being conserved. Momentum is the product of an objects mass and velocity, or &lt;math&gt;p=mv&lt;/math&gt;. This means that, after a collision, an object that is heavier will have a lower velocity than a lighter object in its place, and vice versa. Momentum is conserved for all collisions. The principle of the conservation of momentum states that:

&lt;center&gt;&lt;div style=&quot;border: solid 1px #0099ff; background: #ddeeff; padding: 0.5em; width: 75%;&quot;&gt;
Within a closed system, the total momentum in any specified direction remains constant.
&lt;/div&gt;&lt;/center&gt;

Momentum is a vector quantity and has the units &lt;math&gt;kg\,m\,s^{-1}&lt;/math&gt; or &lt;math&gt;Ns&lt;/math&gt; (Newton-seconds) in the SI system.

==Collisions==

Since momentum is conserved, the momentum before a collision is equal to the momentum after a collision. You can use this fact to solve problems involving collisions.

&lt;math&gt;
\begin{alignat}{2}
Before &amp; =After\\
m_1u_1+ m_2u_2 &amp; =m_1v_1 + m_2v_2\\
\end{alignat}
&lt;/math&gt;

For instance, a ball is moving at 3m/s with mass 3kg. It hits another ball with mass 1kg moving at 2m/s; the two balls collide and the second ball rebounds at 4m/s. Find the velocity at which ball 1 is moving:&lt;br /&gt;

&lt;math&gt;
\begin{alignat}{2}
Before &amp; = After \\
m_1u_1 + m_2u_2 &amp; =  m_1v_1 + m_2v_2 \\
3\times 3 + 2\times 1 &amp; =  3v  + 1\times 4 \\
11 &amp; =  3v  + 4 \\
11-4 &amp; =  3v \\
7 &amp; =  3v \\
v &amp; =  \frac{7}{3} \\
\end{alignat}&lt;/math&gt;


So the velocity at which ball 1 is moving after the collision is 2.3m/s (7/3)m/s
1

==Newton's laws of motion==

===Newton's first law of motion===

&lt;center&gt;&lt;div style=&quot;border: solid 1px #0099ff; background: #ddeeff; padding: 0.5em; width: 75%;&quot;&gt;
An object will remain at rest or in a state of uniform motion unless it is acted on by an external resultant force.
&lt;/div&gt;&lt;/center&gt;

===Newton's second law of motion===

Originally, you learnt this to be:

&lt;center&gt;&lt;div style=&quot;border: solid 1px #0099ff; background: #ddeeff; padding: 0.5em; width: 75%;&quot;&gt;
For an object with constant mass, its acceleration is proportional to the force producing the acceleration, and is in the direction of the force.
&lt;/div&gt;&lt;/center&gt;

However, since you now know that a force changes the rate of change of momentum of an object, we can use a more accurate interpretation of Newton's second law:

&lt;center&gt;&lt;div style=&quot;border: solid 1px #0099ff; background: #ddeeff; padding: 0.5em; width: 75%;&quot;&gt;
The rate of change in momentum of an object is proportional to the force that produces it, and takes place in the direction of the force.
&lt;/div&gt;&lt;/center&gt;


===Newton's third law of motion===

&lt;center&gt;&lt;div style=&quot;border: solid 1px #0099ff; background: #ddeeff; padding: 0.5em; width: 75%;&quot;&gt;
When two bodies interact, the forces they exert on each other are equal and opposite.
&lt;/div&gt;&lt;/center&gt;

{{A-level physics}}
[[Category:A-level Physics|Further dynamics]]</text>
      <sha1>el2fyg0xyexnwp47derc1eat4q6h1fj</sha1>
    </revision>
  </page>
  <page>
    <title>Statistics/Summary/Averages/Moving Average</title>
    <ns>0</ns>
    <id>40293</id>
    <revision>
      <id>2532964</id>
      <parentid>2309584</parentid>
      <timestamp>2013-06-05T06:15:26Z</timestamp>
      <contributor>
        <username>Icktoofay</username>
        <id>259258</id>
      </contributor>
      <minor />
      <comment>Add navigation.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;noinclude&gt;{{Statistics/Navigation}}&lt;/noinclude&gt;

=== Moving Average ===

A moving average is used when you want to get a general picture of the trends contained in a data set. The data set of concern is typically a so-called &quot;time series&quot;, i.e a set of observations ordered in time. Given such a data set '''X''', with individual data points &lt;math&gt;x_{i}&lt;/math&gt;, a 2n+1 point moving average is defined as &lt;math&gt;\bar{x_{i}}=\frac{1}{2n+1}\sum_{k=i-n}^{i+n}x_{k}&lt;/math&gt;, and is thus given by taking the average of the 2n points around &lt;math&gt;x_{i}&lt;/math&gt;. Doing this on all data points in the set (except the points too close to the edges) generates a new time series that is somewhat smoothed, revealing only the general tendencies of the first time series.

The moving average for many time-based observations is often lagged.  That is, we take the 10 -day moving average by looking at the average of the last 10 days.  We can make this more exciting (who knew statistics was exciting?) by considering different weights on the 10 days.  Perhaps the most recent day should be the most important in our estimate and the value from 10 days ago would be the least important.  As long as we have a set of weights that sums to 1, this is an acceptable moving-average.  Sometimes the weights are chosen along an exponential curve to make the exponential moving-average.

{{AltBookCat}}</text>
      <sha1>j1tlz78nfjmm6f6ax5j8zsjhrumhr2o</sha1>
    </revision>
  </page>
  <page>
    <title>Art Tutorials/General Ideas</title>
    <ns>0</ns>
    <id>40294</id>
    <revision>
      <id>2559644</id>
      <parentid>487067</parentid>
      <timestamp>2013-09-23T13:11:01Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This chapter covers a variety of topics that refer less to specific media or concepts, but rather offers questions and suggestions to think about while working. 



==The value of studies==
Not every work an artist creates has to be a finished work. 


==Returning to a work==
Often while creating a work, the artist sees the potential of the work rather than the actuality of the work.  This is most true when starting the work since the canvas is blank. However, even as the artist believes the work to be nearing completion, he or she may still be seeing a significant amount of potential. 

Similarly, regardless of how much of the work is completed, should the artist leave the work to continue it later, the potential of the work might be forgotten. When returning to the work, the artist might not be able to see the original idea he or she had. This is often the case with artists who work emphatically on a work until completion and then return to the work later only to find the work lacking in some area. 

This is a problem with many artists who do not address this issue. 

==Information Density==
Information density is the idea that a visual area has varying amounts of &quot;interesting&quot; information for your brain to process. For example, faces have more visual information for your brain to analyze than a leg. Even on a face, the lower portion containing the nose and mouth has more information than the upper portion containing just the forehead and hair. Since there is less information in some areas, your brain needs less time to process the information to &quot;get a good look&quot; at the subject. Because of this, artists often will also spend less time when drawing less information dense areas and typically make them too small. This is why a lot of lesser skilled artists make foreheads to short, hands too large, etc. 

Exercises to deal with this problem are typically some form of contour drawing.

{{BookCat}}</text>
      <sha1>hkvj4p1bfottt73dd3kned0rzxmgq8f</sha1>
    </revision>
  </page>
  <page>
    <title>Art Tutorials/How to Contribute</title>
    <ns>0</ns>
    <id>40295</id>
    <revision>
      <id>2684895</id>
      <parentid>2053896</parentid>
      <timestamp>2014-07-26T15:20:09Z</timestamp>
      <contributor>
        <username>JonathanHopeThisIsUnique</username>
        <id>1650185</id>
      </contributor>
      <comment>/* Naming Conventions and Language */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This section contains general guidelines to follow when contributing. If followed, these guidelines will allow for a much more consistent and informative wikibook.


==Portability==
* Each major section should be written such that it can be printed off and used as a standalone resource.
* External links and interlinking between major sections should be minimal.
* Sub-sections should be minimally nested in order to create as linear of a section as possible.
* External links should display the link URL in addition to the link text to be visible in printed formats. 


==Content==
* Please do not simply write encyclopedia style articles. Leave content like this for wikipedia and reference it. Please keep this wikibook a how-to guide. You can, however, give summaries of wikipedia content where appropriate and important to the content. 

==Images==
* Please try to only use images that are in the public domain or have the GPL license. This will allow this wikibook to be more distributable for other media (cd, print, etc.)

==Naming Conventions and Language==
* Please use the term &quot;artwork&quot; or &quot;work&quot; when describing art rather than &quot;piece&quot; or other terms.
* Please use the term &quot;media&quot; as the plural form of &quot;medium&quot; rather than &quot;mediums&quot;

It would probably be a good idea to specify whether to use American English or British English here.

==International Conventions==
* If you use SAE measurements, please also specify metric measurements.

==Supplies==
* When using the name of a supply in a sentence, link to the page for the supply. If the page for the supply does not exist, make one.
* Pages for supplies should include a picture if possible, description of use in the context of this book, and typical retail price and links to buy online if possible.

{{BookCat}}</text>
      <sha1>fauqhalygpemhpkofqlyfo8wln50odt</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/NSCLC/Overview</title>
    <ns>0</ns>
    <id>40296</id>
    <revision>
      <id>2530999</id>
      <parentid>2530992</parentid>
      <timestamp>2013-06-02T21:47:00Z</timestamp>
      <contributor>
        <username>A.june.walker</username>
        <id>974351</id>
      </contributor>
      <comment>/* Other Resources */ added a journal club</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/Lung/NSCLC:TOC}}

==Epidemiology==
164,100 cases/yr.  156,900 deaths.
&lt;br&gt;Risk of lung cancer is 20X in heavy smokers than nonsmokers.
&lt;br&gt;Carcinogens: absestos, coal tar fumes, nickel, chromium, arsenic, radioactive material.

'''''Lung cancer in non-smokers:'''''
*PMID 17290054, 2007 &amp;mdash; &quot;Lung Cancer Incidence in Never Smokers.&quot; Wakelee HA et al. Journal of Clinical Oncology, Vol 25, No 5 (February 10), 2007: pp. 472-478. 
**Large U.S.-based population database, ages 40-79, covering 1971-2003.
**Incidence 14.4-20.8 per 100,000 person-years in women, 4.8-13.7 in men. (By comparison, rates are 12-30 times higher in smokers). '''Adenocarcinoma higher in never smokers than in smokers.'''
**Conclusion: Lung cancer in never smokers is an important public health issue. '''Higher incidence in women'''.

==Presentation==

At diagnosis:
15% N0M0
30% N1-3M0
55% M1




==Symptoms==
Paraneoplastic syndromes:
*Gynecomastia - most commonly with large-cell
*Hypercalcemia - most commonly with squamous cell
*Hypertrophic pulmonary osteoarthropathy - presents as bilateral pain and tenderness in the legs, especially over the tibias. Bone scan positive. X-rays show elevated periosteum without cortical involvement. - most commonly with adenocarcinoma (secondary to PTHrp)
*Clubbing of digits

Syndromes according to tumor location:
*Pancoast syndrome (superior sulcus tumor) - '''lower brachial plexopathy, Horner's syndrome, shoulder/ulnar distribution of pain'''.
*Horner's syndrome - '''enophthalmos, ptosis, miosis, ipsilateral loss of sweating, hoarseness due to recurrent laryngeal nerve involvement'''

Second primary:
Patients treated for upper aerodigestive tract tumors (lung, H&amp;N, esophagus) have a 3%/year risk of developing a subsequent cancer.

==Pathology==
*'''Adenocarcinoma - 40% (more common in those that do not smoke)'''
**Adenocarcinomas have a worse prognosis stage-for-stage.
**Bronchoalveolar is a subtype of adenocarcinoma.
***'''Arises from type II pneumocytes, is least associated with smoking.'''
*Squamous cell carcinoma - 30% (more common in smokers)
*'''Large cell carcinoma - 15%'''
*Small cell carcinoma - 20% (see separate page)

==Workup==
*''Please also see [[Radiation_Oncology/Lung/NSCLC/Screening|Screening]] section''
Patients with potentially resectable disease should undergo staging evaluation prior to therapy.

'''CT scans''' of the chest and abdomen through the adrenals should be performed.  The sensitivity and specificity of CT scans for detecting involved mediastinal lymph nodes is only 60% and 77% with a PPV of 50% and NPV of 85% PMID 10551237.  Thus, an enlarged lymph node (defined as &gt;1cm) on CT contains cancer only 1/2 the time, and 15% of normal sized lymph nodes are cancerous.

'''PET''' has a sensitivity of 79%, specificity of 91%, PPV 90%, NPV 93% PMID 10551237. If both CT and PET are negative, the NPV is 97%.  Thus, PET scans can reliably rule out N2 disease but surgical staging is required to confirm it.  

'''Mediastinoscopy''' is used to detect N2 and N3 disease before surgical resection because if N3 disease is present, then surgery is not indicated, and if N2 disease is present, induction chemoradiation should be used prior to resection.  Not all lymph nodes are evaluable by mediastinoscopy, so sensitivity is around 72-89%.
*Mediastinoscopy can be used to sample level 2 L/R, 4 L/R, and 7 nodal stations. For level 5 (AP window) and 6 lymph nodes, VATS or Chamberlain procedure (anterior mediastinotomy) can be used.

'''Enhanced MRI''' of the brain is recommended in some asymptomatic patients for the detection of occult brain mets.  Brain metastases are present in 12-18% of all lung cancer patients, and there is a higher prevalence in nonsquamous histology and more advanced disease.  In patients without neurologic symptoms, brain mets were detected in 4% of Stage I and II patients and 11.4% of Stage III patients PMID 10084481.  It is also recommended that a brain MRI be repeated after induction chemotherapy and prior to thoracotomy to rule out disease progression.

'''Bone scan''' is not valuable unless there are focal symptoms or an elevated alkaline phosphatase. Furthermore, PET better for detection of bone metastases.

'''Pulmonary function tests''' if resection is being considered.

==Survival by stage==
{|align=&quot;center&quot; border=&quot;1&quot;
|+'''5-year survival data
|+from Mountain CF, ''Chest'' 89:225-233,1986.
|-
!Stage || TNM || Pathologic stage || Clinical stage
|-
|IA || T1,N0,M0 || 67% || 61%
|-
|IB || T2,N0,M0 || 57% || 38%
|-
|IIA||T1,N1,M0||55%||34%
|-
|IIB||T2,N1,M0||39%||24%
|-
|IIB||T3,N0,M0||38%||22%
|-
|IIIA||T3,N1,M0||25%||9%
|-
|IIIA||T1-3,N2,M0||23%||13%
|}
Note the decreased survival for those clinically staged compared to those with pathologic staging, reflecting understaged disease.


==Prognostic factors==

===Recursive partitioning analysis (RPA)===
*RTOG RPA, 1997 - PMID 9213303 &amp;mdash; &quot;Recursive partitioning analysis of 1592 patients on four Radiation Therapy Oncology Group studies in inoperable non-small cell lung cancer.&quot; Scott C et al. Lung Cancer. 1997 Jun;17 Suppl 1:S59-74.
**RTOG 83-11, 83-21, 84-03, 84-07.
**KPS was most important on multivariate analysis (&gt;80 median survival = 9.9 months vs &lt;=70 MS = 5.9 months)
**Poor prognostic factors: KPS &lt; =70 vs KPS = 80-100, wt loss &lt;= 5% vs &gt; 5%, age &gt; 60, pleural effusion, higher T/N stage (from RTOG studies)

*RTOG RPA, 2000 - PMID 11121651 &amp;mdash; &quot;Recursive partitioning analysis of 1999 Radiation Therapy Oncology Group (RTOG) patients with locally-advanced non-small-cell lung cancer (LA-NSCLC): identification of five groups with different survival.&quot; Werner-Wasik M et al. Int J Radiat Oncol Biol Phys. 2000 Dec 1;48(5):1475-82. 
**  I: KPS&gt;= 90% with chemotherapy - MS 16.2 months
** II: KPS&gt;= 90%, no chemo, no pleural effusion - MS 11.9 months
**III: KPS &lt; 90%, age &lt; 70, non-large cell histology - MS  9.6 months
** IV: KPS &gt;=90% with pleural effusion; KPS &lt;90, age &lt; 70, large cell; &gt;70 without PE - MS  5.6-6.4 months
**  V: Age &gt; 70 with pleural effusion - MS  2.9 months

==Lymph node drainage==
For primary tumor in a lobe, which lymph nodes does it drain to?
*Right upper lobe - ipsilateral mediastinum
*Left upper lobe - ipsilateral and contralateral mediastinum
*Right lower lobe - Subcarinal nodes -&gt; right superior mediastinum -&gt; right inferior mediastinum
*Left lower lobe - Subcarinal nodes -&gt; right or left superior mediastinum -&gt; right or left inferior mediastinum


==Natural history==
*''Also please see information in the [[Radiation_Oncology/Lung/NSCLC/Early_Stage_Inoperable|Early Stage Inoperable]] page


*'''Split; 1994''' (Croatia)(1980-1987) PMID 7988203 &amp;mdash; &quot;Survival analysis of untreated patients with non-small-cell lung cancer.&quot; (Vrdoljak E, Chest. 1994 Dec;106(6):1797-800.)
**Retrospective. 130 patients not treated with anti-cancer therapy
**Outcome: Median OS T2N0 17 months, T2N1 11 months, T2N2 10 months, other groups &lt;8 months. Overall median OS 9 months. No patient (including T2N0) survived &gt;3 years
**Subgroup analysis: Stage I (T2N0) better survival, all other stages comparable (worse) survival
**Conclusion: Lymph node involvement crucial factor in determining length of survival

==Economics==
'''''Cost-Effectiveness'''''
*'''US Oncology; 2010''' (2006-2007) No PMID [http://jop.ascopubs.org/cgi/content/abstract/6/1/12 JOP Abstract] -- &quot;Cost Effectiveness of Evidence-Based Treatment Guidelines for the Treatment of Non–Small-Cell Lung Cancer in the Community Setting&quot; (Neubauer MA, Journal Oncol Pract 2010 Jan 6(1):12-18)
**Retrospective. Patients with NSCLC receiving chemotherapy, classified whether treated on Level I Pathway guidelines or not. 8 practices within US Oncology network. 12-month cost of care and overall survival 
**Outcome: 12-month cost $18,042 vs. $27,737 (35% lower for on-Pathway patients). No difference in OS
**Conclusion: Treating patients according to evidence-based guidelines is a cost-effective strategy


'''''RT Utilization'''''
*'''Queen's University, 2001''' (Canada) PMID 11240238 -- &quot;Estimating the need for radiotherapy for lung cancer: an evidence-based, epidemiologic approach.&quot; (Tyldesley S, Int J Radiat Oncol Biol Phys. 2001 Mar 15;49(4):973-85.)
**Epidemiologic approach. Lit review to identify RT indications, then population estimates
**Overall: 61% have RT indication (45% initial, 16% progression)
**SCLC: 54% have RT indication (45% initial treatment, 8% progression)
**NSCLC: 64% have RT indication (46% initial treatment, 18% progression)
***Stage I: 41%
***Stage II: 55%
***Stage III: 84%
***Stage IV: 66%

==Patterns of failure==
*RTOG, 1987
**PMID 3032394 &amp;mdash; &quot;Long-term observations of the patterns of failure in patients with unresectable non-oat cell carcinoma of the lung treated with definitive radiotherapy.&quot; Perez CA et al. Cancer. 1987 Jun 1;59(11):1874-81.
**Based on two prospective studies:
***RTOG 73-01: T1-3N0-2; randomized pts to 40 Gy split course (20 Gy in 5 fx, 2 weeks rest, repeat) or 40, 50, 60 Gy continuous course.  
***RTOG 73-02: T4 or N3; randomized to 30 Gy in 10 fx, 40 Gy split course, or 40 Gy std fx. 
**'''Better control with 60 Gy. Adeno had better tumor control than squamous or large cell. Overall DM rate was the same, but for adenos DM appeared earlier and more likely to fail in the brain'''.

==Smoking==
:''See also:'' [[Radiation Oncology/Cancer epidemiology|Cancer epidemiology]]
*PMID 16189363, 2005 &amp;mdash; &quot;Effect of smoking reduction on lung cancer.&quot; Godtfredsen NS et al. JAMA. 2005 Sep 28;294(12):1505-10. 
**For those who smoke &gt;15 cigarettes/day, smoking reduction by 50% reduces the risk of lung cancer (RR=0.73). In comparison, HR for quitters is 0.50.


==Radiation Injury==
See [[Radiation Oncology/Normal tissue tolerance]]


==Other Resources==
*[https://www.astro.org/uploadedFiles/Affiliates/ARRO/Resident_Resources/Educational_Resources/Case_Vingettes/NSCLCIIIB.pdf ARRO Case - Locally Advanced NSCLC]
*[https://astro.webex.com/ec0606l/eventcenter/recording/recordAction.do?theAction=poprecord&amp;AT=pb&amp;renewticket=0&amp;isurlact=true&amp;recordID=21524707&amp;apiname=lsr.php&amp;rKey=5a8341c41b3193ee&amp;format=short&amp;needFilter=false&amp;&amp;SP=EC&amp;rID=21524707&amp;siteurl=astro&amp;actappname=ec0606l&amp;actname=%2Feventcenter%2Fframe%2Fg.do&amp;rnd=8433739874&amp;entappname=url0108l&amp;entactname=%2FnbrRecordingURL.do ASTRO/ARRO Journal Club Webinar 2012 - &quot;Excessive toxicity when treating central tumors in a phase II study of SBRT for medically inoperative early-stage lung cancer&quot; with Robert Timmerman, M.D]
*[https://astro.webex.com/ec0606l/eventcenter/recording/recordAction.do?theAction=poprecord&amp;AT=pb&amp;renewticket=0&amp;isurlact=true&amp;recordID=18992702&amp;apiname=lsr.php&amp;rKey=29e267d8086e52b5&amp;format=short&amp;needFilter=false&amp;&amp;SP=EC&amp;rID=18992702&amp;siteurl=astro&amp;actappname=ec0606l&amp;actname=%2Feventcenter%2Fframe%2Fg.do&amp;rnd=6641165571&amp;entappname=url0108l&amp;entactname=%2FnbrRecordingURL.do ASTRO/ARRO Journal Club Webinar 2011 - &quot;RTOG 9410: concurrent chemoradiation improves overall survival for inoperable stage III lung cancer&quot; with Jeffrey Bradley, M.D.]</text>
      <sha1>f8g47uyqhek6zyp1qh1fvggsb6hlagk</sha1>
    </revision>
  </page>
  <page>
    <title>Template:-</title>
    <ns>10</ns>
    <id>40298</id>
    <revision>
      <id>1869753</id>
      <parentid>1869704</parentid>
      <timestamp>2010-06-30T18:02:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>35 revisions from [[:w:Template:-]]: history merge</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;br style=&quot;clear:both;&quot; /&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</text>
      <sha1>na9lai3gcfrb6vhonby2kgdepx0ui5e</sha1>
    </revision>
  </page>
  <page>
    <title>Software Engineers Handbook/Language Dictionary/Functional/J</title>
    <ns>0</ns>
    <id>40299</id>
    <revision>
      <id>1524631</id>
      <parentid>1524627</parentid>
      <timestamp>2009-06-08T04:17:12Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==J==
J is not Java.  It is an ASCII decendant of APL.  Here is the [http://en.wikipedia.org/wiki/J_programming_language wikipedia entry.]

The software is free as of this writing, and available at the [http://Jsoftware.com J software page]
===Type===
J is an array oriented functional language.
===Execution Entry Point===
The concept of an entry point doesn't really apply in J.  The
program itself is the entry point.
===General Syntax===
Statements in J 

J statements are terminated by the newline character.  For example

 a=: b
===Comments===
J comments are introduced by the psuedo-token NB. and continue
until the end of line.  Block comments are not provided, but 
textual literals may be used in that role.  For example:

 noun define
  This is some desciptive text,
  which may go on for a number of lines,
  and which needn't follow J's syntactic rules.
 )

Note that a single right parenthesis on a line by itself ends a
multi-line definition.

===Variable Declarations===
Variables are declared by specifying their definition.  Literal 
numeric arrays may be introduced by placing spaces between
the numbers.  Literal character arrays may be introduced by
placing multiple characters between single quotes
  x=: 1
  plus=: +
  x plus 2 3 5 7
3 4 6 8
  'Hello world!'
Hello World!

===Method Declaration/Implementation===
There are two definition words in J.
 =:
implements a definition with global scope.
 =.
implements a definition with local scope.

However, note that in the context of classes and objects, global
scope really means class scope or object scope.  The general
term for &quot;a class or object&quot; in J is &quot;locale&quot; (note the slight
spelling difference from &quot;local&quot;).  Most methods are implemented
as J verbs, which have their arguments made available in implicitly
defined array named y. (the period is a part of the name).  This
can be unpacked into a sequence of local variables by using a
character array literal naming those variables as the left argument
of =.

 foo=: verb define
 'arg1 arg2 arg3'=. 3{.y.
 'the last line a method specifies the result'
 )

===Scope===
See [[Software Engineers Handbook:Language Dictionary:Procedural:J#Variable Declarations | Variable Declarations]]

===Conditional Statements===
Because J is an array oriented language, most J programmers
use data selection to implement conditional logic.  While
this is not a traditional feature of most languages, SQL
programmers quite often use similar techniques.

However, J also offers more traditional if. statements within
the body of defined verbs.
   if. 1 = x then. y=: y + 3 end.
These conditional words are not themselves part of the
statement syntax, and so may be spread across multiple lines.
   if.
      2 = y
   then.
      z=: bar 99
      a=: bagle * mayo
   else.
      b=: 1 2 3 4
   end.

===Looping Statements===
Because J is an array oriented language, every operation is capable
of looping over an arbitrarily dimensioned arrays.  Thus, looping
can happen implicitly within any expression.  
  x + y
will loop over all appropriate values, as long as the definitions
of x and y conform.
  2 3 4 + 10 100 1000
12 103 1004

This mechanism may be configured by specifying the rank of an
operation, and the double quote character is used in this role
(the double quote character does not delimit a string in J, and
in general double quotes are used singly, not in pairs).

However, within the body of defined verbs, more traditional
control words are available much in the fashion of conditional
statements
  while. 
     x &lt; 100
  do.
     x=: x+1
     blah, blah, blah
  end.

In most cases you should use J's implicit looping.  The exception
is when not all data is knowable at one time, for example while
servicing IO.  However, even there, it might be wise to use
J's event handling rather than an explicit loop.

===Output Statements===
For many purposes, no explicit output statements are needed.
J is usually used in a calculator mode where results are 
displayed implicitly.

However, file output is also possible, using the notation
1!:2  (This may be thought of as library 1, entry point 2).
Typically, this will be assigned a mnemonic name:
  fwrite=: 1!:2
J uses its own numbering system output descriptors, and standard
output is descriptor 2. (Likwise, file read is 1!:1 and standard
input is descriptor 1.)

In the general context of file io, newlines must be specified
explicitly, but with standard output always includes an
implicit newline at the end.  Under unix, write to /dev/tty
to avoid implicit newlines.
  'Hello world!' fwrite &lt;'/dev/tty'
  ('Hello world!',LF) fwrite &lt;'/dev/tty'
Note that the left caret does not represent redirection and
instead represents treating the entire array '/dev/tty' as a
single item rather than as a sequence of characters.

===Containers===
All J nouns (data) are arrays with some number of dimensions
(at least 0).  The left caret is used to encapsulate one
of these arrays.  This operation is called boxing, which 
reflects the way these results are displayed.
   &lt; i. 3 4
 +---------+
 |0 1  2  3|
 |4 5  6  7|
 |8 9 10 11|
 +---------+

===Algorithms===
Some rudimentary algorithms are posted at
[http://www.jsoftware.com/books/help/phrases/contents.htm http://www.jsoftware.com/books/help/phrases/contents.htm]

As a general rule, algorithms are what people implement
using this language (or, indeed, any language), so this
is an open-ended topic
===Garbage collection===
Garbage collection is automatic. 

===Physical Structure===
J programs typically use the .ijs extension.  Class definitions
usually use .ijc.  Dynamically linked libraries use whatever
the operating system uses.  Other extensions are possible.

===Tips===
*Start small, and try a few things out.  Don't study too much
without trying things out.  Don't try too many things without
spending some time studying.  Make sure you spend plenty of
time doing other things.
*Keep the list of operations with you as you start programming.

===Web References===
*The [http://jsoftware.com J software page]
*The [http://en.wikipedia.org/wiki/J_programming_language wikipedia entry] contains the list of operations.

===Books and Articles===
A number of books are available at the [http://jsoftware.com/publications_books.htm J software publications page].

These range in coverage from beginner through advanced.  Many are
free downloads.  Some must be purchased (for example, with a link
to the book at amazon.com).

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>2nvyk7v7pxp3uotvtep6g0wsw2d0ojf</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Software Engineers Handbook/Language Dictionary/Functional/J</title>
    <ns>1</ns>
    <id>40300</id>
    <revision>
      <id>1524629</id>
      <parentid>230354</parentid>
      <timestamp>2009-06-08T04:16:59Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Talk:Software Engineers Handbook:Language Dictionary:Functional:J]] to [[Talk:Software Engineers Handbook/Language Dictionary/Functional/J]]:&amp;#32;Subpage notation.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Thank you J forum!</text>
      <sha1>fv5vzunta3ydtmnoegzlti2xyp4t7r4</sha1>
    </revision>
  </page>
  <page>
    <title>User:Johann Wolfgang</title>
    <ns>2</ns>
    <id>40301</id>
    <revision>
      <id>277508</id>
      <parentid>277506</parentid>
      <timestamp>2005-11-10T04:19:39Z</timestamp>
      <contributor>
        <username>Johann Wolfgang</username>
        <id>10837</id>
      </contributor>
      <comment>table color</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;/span&gt;
&lt;span style=&quot;cellspacing=0 cellpadding=0 style=&quot;clear:left; margin-bottom: .5em; float: center; padding: .5em 0 .5em 0.5em;&quot;&gt;
{| style=&quot;float: center; margin-left: 0.5em; margin-bottom: 0.5em; width: 805px; border: #307D7E solid 1px; background: #87AFC7&quot;
|-
| style=&quot;text-align: center&quot; | 
&lt;/span&gt;
&lt;span style=&quot;cellspacing=0 cellpadding=0 style=&quot;clear:right; margin-bottom: .5em; float: center; padding: .5em 0 .8em 1.4em;&quot;&gt;
{| style=&quot;float: center; margin-left: 0.5em; margin-bottom: 0.5em; width: 810px; border: #307D7E solid 1px; background: #C3FDB8&quot;
|-
| style=&quot;text-align: center&quot; | '''''Welcome to my userpage'''''
|-
| 
|}
&lt;/span&gt;
&lt;span style=&quot;cellspacing=0 cellpadding=0 style=&quot;clear:right; margin-bottom: .5em; float: center; padding: .5em 0 .8em 1.4em;&quot;&gt;
{| style=&quot;float: center; margin-left: 0.5em; margin-bottom: 0.5em; width: 810px; border: #307D7E solid 1px; background: #AFDCEC&quot;
|-
| style=&quot;text-align: center&quot; | This is my userpage, it will be updated soon, for now you may view my Wikipedia userpage [http://www.en.wikipedia.org/wiki/User:Johann_Wolfgang here]. [[User:Johann Wolfgang|Johann Wolfgang]] 00:38, 2 November 2005 (UTC)
|-
| 
|}
&lt;/span&gt;
&lt;span style=&quot;cellspacing=0 cellpadding=0 style=&quot;clear:right; margin-bottom: .5em; float: center; padding: .5em 0 .8em 1.4em;&quot;&gt;
{| style=&quot;float: center; margin-left: 0.5em; margin-bottom: 0.5em; width: 810px; border: #307D7E solid 1px; background: #EDDA74&quot;
|-
| style=&quot;text-align: center&quot; | {{userpage}}
|-
| 
|}

|-
| 
|}</text>
      <sha1>qkge7d07m2fyoqjm30vrbp0q61z55a6</sha1>
    </revision>
  </page>
  <page>
    <title>Software Engineers Handbook:Language Dictionary:Procedural:J</title>
    <ns>0</ns>
    <id>40302</id>
    <redirect title="Software Engineers Handbook/Language Dictionary/Functional/J" />
    <revision>
      <id>1540213</id>
      <parentid>230353</parentid>
      <timestamp>2009-06-20T15:49:00Z</timestamp>
      <contributor>
        <username>Mike's bot account</username>
        <id>67847</id>
      </contributor>
      <minor />
      <comment>Robot: Fixing double redirect</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT [[Software Engineers Handbook/Language Dictionary/Functional/J]]</text>
      <sha1>mq44rte35flyldpu01e2n0t2djqb23l</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/Pronouns</title>
    <ns>0</ns>
    <id>40304</id>
    <revision>
      <id>3038018</id>
      <parentid>2603472</parentid>
      <timestamp>2016-01-15T20:29:27Z</timestamp>
      <contributor>
        <ip>78.179.130.132</ip>
      </contributor>
      <comment>/* Plural */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">=== Pronouns ===

==== Personal Pronouns ====

=====Nominative=====

====== Singular ======
'''ben:''' I&lt;br/&gt;
'''sen:''' you&lt;br/&gt;
'''o:''' he/she/it&lt;br/&gt;

Please note that, the pronouns he,she and it are the same in Turkish, which is &quot;O&quot;.

====== Plural ======
we    : biz&lt;br/&gt;
you   : siz&lt;br/&gt;
they  : onlar&lt;br/&gt;

===== Dative =====

====== Singular ======

'''bana:''' to me&lt;br/&gt;
'''sana:''' to you&lt;br/&gt;
'''ona:''' to him /to her /(to) it &lt;br/&gt;

====== Plural ======

'''bize:''' to us&lt;br/&gt;
'''size:''' to you&lt;br/&gt;
'''onlara:''' to them&lt;br/&gt;

===== Locative =====

====== Singular ======

bende&lt;br/&gt;
sende&lt;br/&gt;
onda&lt;br/&gt;

Not to be confused with &quot;ben de&quot;, or &quot;sen de&quot; which mean &quot;me too (also)&quot;, and &quot;you too (also)&quot; respectively. The pronounciations are identical, so pay attention to context.

====== Plural ======

bizde&lt;br/&gt;
sizde&lt;br/&gt;
onlarda&lt;br/&gt;

==== Demonstrative Pronouns ====

=====Nominative=====

====== Singular ======
'''bu:''' this (close to the speaker)&lt;br/&gt;
'''şu:''' that (close to the listener)&lt;br/&gt;
'''o:''' that (away from both of them)

====== Plural ======
'''bunlar:''' these (close to the speaker)&lt;br/&gt;
'''şunlar:''' those (close to the listener)&lt;br/&gt;
'''onlar:''' those (away from both of them)
The difference between &quot;şu&quot; and &quot;o&quot; can be hard to understand for the foreign people. Our suggestion is to use &quot;o&quot;. Native speakers use &quot;şu&quot; seldom. &quot;O&quot; can replace &quot;şu&quot; in every situation, bu do not try the reverse because &quot;şu&quot; cannot always replace &quot;o&quot;. 

Typically you can distinguish by distance. Items within an arms reach that you're not interacting with are &quot;şu&quot;, but items any farther away are &quot;o&quot;.

{{Turkish/TOC}}</text>
      <sha1>974enq8af9auq69qkudauawjvs3j28v</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/List of Phrases</title>
    <ns>0</ns>
    <id>40305</id>
    <revision>
      <id>2369946</id>
      <parentid>2369944</parentid>
      <timestamp>2012-06-28T13:21:43Z</timestamp>
      <contributor>
        <username>BetelgeuSeginus</username>
        <id>520870</id>
      </contributor>
      <comment>oh vandalism</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Some phrases==

How are you? =&gt; for singular &amp; informal: '''Nasılsın?''' , for plural &amp; for formal: '''Nasılsınız?'''&lt;br/&gt;
Thank you, I'm fine, and you? =&gt; '''Teşekkür ederim, iyiyim, ya siz?'''&lt;br/&gt;
I'm fine too, thank you,=&gt; '''Ben de iyiyim, teşekkür ederim.'''&lt;br/&gt;

How old are you? =&gt; '''Kaç yaşındasın?''' (informal)&lt;br/&gt;
I'm twenty-five. =&gt; '''Yirmi beş yaşındayım.'''&lt;br/&gt;

Are you married? =&gt; '''Evli misiniz?'''&lt;br/&gt;
No, I'm not married. =&gt; '''Hayır, evli değilim.'''&lt;br/&gt;
Yes, I'm married. =&gt; '''Evet, evliyim.'''&lt;br/&gt;

Do you have children? =&gt; '''Çocuğunuz var mı?'''&lt;br/&gt;
No, I do not have children. =&gt; '''Hayır, çocuğum yok.'''&lt;br/&gt;
Yes, I have children. =&gt; '''Evet, çocuğum var.'''&lt;br/&gt;

What are you doing? =&gt; '''Ne yapıyorsun?''' or colloquially (shorter) '''N'apıyorsun?''' &lt;br/&gt;
Note, however, that both these sentences are informal &lt;br/&gt;
What are you doing today / tonight? =&gt; '''Bugün / Bu gece ne yapıyorsun?'''&lt;br/&gt;
Shall we (Let's) go to the cinema? =&gt; '''Sinemaya gidelim mi?'''&lt;br/&gt;

What time is it? =&gt; '''Saat kaç?'''&lt;br/&gt; 
It's one o'clock. =&gt; '''Saat bir.''' or '''Bir.''' &lt;br/&gt;
It's two o'clock. =&gt; '''Saat iki.''' or '''İki.''' &lt;br/&gt;
It's three o'clock. =&gt; '''Saat üç.''' or '''Üç.'''&lt;br/&gt;
It's four o'clock. =&gt; '''Saat dört.''' or '''Dört.''' &lt;br/&gt;
It's five o'clock. =&gt; '''Saat beş.''' or '''Beş.''' &lt;br/&gt;
It's six o'clock. =&gt; '''Saat altı.''' or '''Altı.''' &lt;br/&gt;
It's seven o'clock. =&gt; '''Saat yedi.''' or '''Yedi.'''&lt;br/&gt;
It's eight o'clock. =&gt; '''Saat sekiz.''' or '''Sekiz.'''&lt;br/&gt;
It's nine o'clock. =&gt; '''Saat dokuz.''' or '''Dokuz.'''&lt;br/&gt;
It's ten o'clock. =&gt; '''Saat on.''' or '''On.'''&lt;br/&gt;
It's eleven o'clock. =&gt; '''Saat on bir.''' or '''On bir.'''&lt;br/&gt;
It's 12   o'clock. =&gt; '''Saat on iki.''' or '''On iki.''' &lt;br/&gt;

It's 12.30. =&gt; '''Saat yarım.''' or '''Yarım.''' &lt;br/&gt;
It's 1.30. =&gt; '''Bir buçuk.''' i.e half is '''buçuk''' &lt;br/&gt;
It's 2.30. =&gt; '''İki buçuk.''' &lt;br/&gt;
It's 3.30. =&gt; '''Üç buçuk.'''  &lt;br/&gt;
It's 4.30. =&gt; '''Dört buçuk.'''  &lt;br/&gt;
It's 5.30. =&gt; '''Beş buçuk.''' &lt;br/&gt;
It's 6.30. =&gt; '''Altı buçuk.''' &lt;br/&gt;
It's 7.30. =&gt; '''Yedi buçuk.''' &lt;br/&gt;
It's 8.30. =&gt; '''Sekiz buçuk.''' &lt;br/&gt;
It's 9.30. =&gt; '''Dokuz buçuk.''' &lt;br/&gt;
It's 10.30. =&gt; '''On buçuk.''' &lt;br/&gt;
It's 11.30. =&gt; '''On bir buçuk.'''  &lt;br/&gt;

It's 12.15. =&gt; '''On ikiyi çeyrek geçiyor.''' i.e. quarter passes = '''çeyrek geçiyor''' &lt;br/&gt;
It's 1.15. =&gt; '''Biri çeyrek geçiyor.'''  &lt;br/&gt;
It's 2.15. =&gt; '''İkiyi çeyrek geçiyor.''' &lt;br/&gt;
It's 3.15. =&gt; '''Üçü çeyrek geçiyor.'''  &lt;br/&gt;
It's 4.15. =&gt; '''Dördü çeyrek geçiyor.'''  &lt;br/&gt;
It's 5.15. =&gt; '''Beşi çeyrek geçiyor.''' &lt;br/&gt;
It's 6.15. =&gt; '''Altıyı çeyrek geçiyor.''' &lt;br/&gt;
It's 7.15. =&gt; '''Yediyi çeyrek geçiyor.''' &lt;br/&gt;
It's 8.15. =&gt; '''Sekizi çeyrek geçiyor.''' &lt;br/&gt;
It's 9.15. =&gt; '''Dokuzu çeyrek geçiyor.''' &lt;br/&gt;
It's 10.15. =&gt; '''Onu çeyrek geçiyor.''' &lt;br/&gt;
It's 11.15. =&gt; '''On biri çeyrek geçiyor.'''  &lt;br/&gt;

It's 11.45. =&gt; '''On ikiye çeyrek var.''' i.e. it's quarter to = '''çeyrek var''' &lt;br/&gt;
It's 12.45. =&gt; '''Bire çeyrek var.'''  &lt;br/&gt;
It's 13.45 (or 1.45). =&gt; '''İkiye çeyrek var.''' &lt;br/&gt;
It's 2.45. =&gt; '''Üçe çeyrek var.'''  &lt;br/&gt;
It's 3.45. =&gt; '''Dörde çeyrek var.'''  &lt;br/&gt;
It's 4.45. =&gt; '''Beşe çeyrek var.''' &lt;br/&gt;
It's 5.45. =&gt; '''Altıya çeyrek var.''' &lt;br/&gt;
It's 6.45. =&gt; '''Yediye çeyrek var.''' &lt;br/&gt;
It's 7.45. =&gt; '''Sekize çeyrek var.''' &lt;br/&gt;
It's 8.45. =&gt; '''Dokuza çeyrek var.''' &lt;br/&gt;
It's 9.45. =&gt; '''Ona çeyrek var.''' &lt;br/&gt;
It's 10.45. =&gt; '''On bire çeyrek var.'''  &lt;br/&gt;

It's 12.05. =&gt; '''On ikiyi beş geçiyor.''' &lt;br/&gt;
It's 1.10. =&gt; '''Biri on geçiyor.'''  &lt;br/&gt;
It's 2.20. =&gt; '''İkiyi yirmi geçiyor.''' &lt;br/&gt;
It's 3.25. =&gt; '''Üçü yirmi beş geçiyor.'''  &lt;br/&gt;
It's 4.05. =&gt; '''Dördü beş geçiyor.'''  &lt;br/&gt;
It's 5.10. =&gt; '''Beşi on geçiyor.''' &lt;br/&gt;
It's 6.20. =&gt; '''Altıyı yirmi geçiyor.''' &lt;br/&gt;
It's 7.25. =&gt; '''Yediyi yirmi beş geçiyor.''' &lt;br/&gt;

It's 11.35. =&gt; '''On ikiye yirmi beş var.''' &lt;br/&gt;
It's 12.40. =&gt; '''Bire yirmi var.'''  &lt;br/&gt;
It's 13.50. =&gt; '''İkiye on var.''' &lt;br/&gt;
It's 2.55. =&gt; '''Üçe beş var.'''  &lt;br/&gt;
It's 3.35. =&gt; '''Dörde yirmi beş var.'''  &lt;br/&gt;
It's 4.40. =&gt; '''Beşe yirmi var.''' &lt;br/&gt;
It's 5.50. =&gt; '''Altıya on var.''' &lt;br/&gt;
It's 6.55. =&gt; '''Yediye beş var.''' &lt;br/&gt;
It's 7.35. =&gt; '''Sekize yirmi beş var.''' &lt;br/&gt;
It's 8.40. =&gt; '''Dokuza yirmi var.''' &lt;br/&gt;
It's 9.50. =&gt; '''Ona on var.''' &lt;br/&gt;
It's 10.55. =&gt; '''On bire beş var.'''  &lt;br/&gt;


Where is the (train) station? =&gt; '''İstasyon nerede?'''&lt;br/&gt;
What time does the train to Ankara leave? =&gt; '''Ankara treni ne zaman kalkıyor?'''&lt;br/&gt;

What is the weather like? =&gt; '''Hava nasıl?'''&lt;br/&gt;
The weather is very good today =&gt; '''Bügün hava çok güzel.'''&lt;br/&gt;
It's rainy =&gt; '''Yağmurlu.'''
It's cloudy =&gt; '''Bulutlu.''' It's sunny =&gt; '''Güneşli.''' 

What did you learn? =&gt; '''Ne öğrendin?'''&lt;br/&gt;
Where did you learn Turkish? =&gt; '''Türkçeyi nerede öğrendin?'''&lt;br/&gt;
Your Turkish is very good. =&gt; '''Türkçen çok güzel.'''&lt;br/&gt;
I plan (intend) to take a Turkish course in Istanbul. =&gt; '''İstanbul'da Türkçe kursuna katılmak niyetindeyim.'''&lt;br/&gt;

I have to go now. =&gt; '''Şimdi gitmem lazım.'''&lt;br/&gt;
We have to go. =&gt; '''Gitmemiz lazım.'''&lt;br/&gt;
Where do you want to go? =&gt; '''Nereye gitmek istiyorsun?'''&lt;br/&gt;
I want to go home. =&gt; '''Eve gitmek istiyorum.'''&lt;br/&gt;

May I take this? =&gt; '''Bunu alabilir miyim?'''&lt;br/&gt;
Yes, of course. =&gt; '''Evet, tabii.'''&lt;br/&gt;

Where have you been on holiday? =&gt; '''Tatilde neredeydin?'''&lt;br/&gt;
I love Turkey very much. =&gt; '''Türkiye'yi çok seviyorum.'''&lt;br/&gt;
What did you see? =&gt; '''Ne gördün?'''&lt;br/&gt;

== More phrases ==
{| class=&quot;wikitable&quot;
|- bgcolor=&quot;#eeeeee&quot;
! align=left | Translation
! align=left | Phrase
! align=left | IPA
|- valign=&quot;top&quot;
| hello
| ''[[Media:Merhaba.ogg|merhaba]]''
| {{IPA|meɾhaba}}
|- valign=&quot;top&quot;
| welcome
| ''hoş geldiniz''
| {{IPA|hoʃ gʲeldiniz}}
|- valign=&quot;top&quot;
| good morning
| ''[[Media:Günaydın.ogg|günaydιn]]''
| {{IPA|gʲynajdɯn}}
|- valign=&quot;top&quot;
| good afternoon
| ''iyi günler''
| {{IPA|iː gʲynleɾ}}
|- valign=&quot;top&quot;
| good evening
| ''[[Media:İyi akşamlar.ogg|iyi akşamlar]]''
| {{IPA|iː akʃamlaɾ}}
|- valign=&quot;top&quot;
| good night
| ''[[Media:İyi geceler.ogg|iyi geceler]]''
| {{IPA|iː gʲedʒeleɾ}}
|- valign=&quot;top&quot;
| good bye
| ''hoşçakal/hoşçakalιn''
| {{IPA|hoʃtʃakal}}/{{IPA|hoʃtʃakalɯn}}
|- valign=&quot;top&quot;
| please
| ''lütfen''
| {{IPA|lytfen}}
|- valign=&quot;top&quot;
| thank you
| ''teşekkür ederim''
| {{IPA|teʃekʲyɾ edeɾim}}
|- valign=&quot;top&quot;
| thanks
| ''teşekkürler''
| {{IPA|teʃekʲyɾleɾ}}
|- valign=&quot;top&quot;
| how much
| ''ne kadar''
| {{IPA|ne kadaɾ}}
|- valign=&quot;top&quot;
| English
| ''İngilizce''
| {{IPA|iŋgilizdʒe}}
|- valign=&quot;top&quot;
| Turkish
| ''Türkçe''
| {{IPA|tyɾktʃe}}
|- valign=&quot;top&quot;
| yes
|'' evet''
| {{IPA|evet}}
|- valign=&quot;top&quot;
| no
| ''hayιr''
| {{IPA|hajɯɾ}}
|}


{{Turkish/TOC}}</text>
      <sha1>duhc1oyaslzjpypoh1fy4tjsnkaptja</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/Cases</title>
    <ns>0</ns>
    <id>40306</id>
    <revision>
      <id>3048626</id>
      <parentid>3048577</parentid>
      <timestamp>2016-02-18T12:20:01Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>Rejected the last text change (by [[Special:Contributions/2001:982:A4F6:1:DCBA:5CB1:CD93:D2BE|2001:982:A4F6:1:DCBA:5CB1:CD93:D2BE]]) and restored revision 3031874 by 141.211.62.240</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">====Cases====
Cases are familiar to some languages such as Latin, German, Polish or Finnish. However, if your native language is English, it may be difficult to learn cases immediately. But, if you use and/or study Turkish, you will understand the importance of case. In Turkish, prepositions like &quot;to&quot;, &quot;from&quot;, &quot;at&quot;,&quot;in&quot; etc. do not exist. Case suffixes are employed instead. 

Nevetheless, some &quot;postpositions&quot; that act very similar to &quot;prepositions&quot; do exist, e.g. &quot;üstünde&quot;(on), &quot;altında&quot; (under), &quot;içinde&quot; (in), &quot;ile&quot; (with / by) etc. These come after a noun - much like a preposition comes before a noun. For example &quot;masanın üstünde&quot; means &quot;on the table&quot;. Usually one will simply say &quot;Masada&quot; omitting the postposition altogether, unless he or she wants to stress the state of being specifically &quot;on&quot; the table but not inside etc. Similarly &quot;evin içinde&quot; (in the house) often becomes &quot;evde&quot;.  The case of &quot;ile&quot; (with or by) is a bit different. This postposition simply transforms into the &quot;instrumental case suffix&quot; by losing its first letter &quot;i&quot;. Examples : &quot;Uçak ile gideceğim.&quot; (I will go by plane.) becomes &quot;Uçakla gideceğim.&quot; or &quot;Arkadaşım ile buluştum.&quot; (I met with my friend.) becomes &quot;Arkadaşımla buluştum.&quot;. Finally it must be noted that not all English prepositions have equivalent postpositions. For example English prepositions &quot;to&quot;, &quot;from&quot; and &quot;at&quot; do not have any postposition equivalents and exist only as case suffixes.

Most standard Turkish grammar texts mention only 5 or 6 noun cases naming them simply with the suffix letters, i.e. &quot;yalın hal/simple case&quot;, &quot;i hali&quot;, &quot;e hali&quot;, &quot;de hali&quot; and &quot;den hali&quot; often even omitting the genitive &quot;in hali&quot;. The fact is Turkish noun declensions are much more numerous as can be seen below.

It should also be noted that in Turkish nouns may have more than one suffix or declension with each having a specific purpose. Often a noun may first be declensed for number and/or possession and then for other cases. Examples :

Okul-dan geldim. I came from the school.  Ablative case.

Okul-um-dan geldim.  I came from my school. Possessive ablative case.

Tüm kitap-lar-ım-ı sattım.  I sold all of my books. Plural- possessive - accusative case. 

Araba-sız-lık bir sorundu. Being without a car was a problem. Abessive - coverage case.



{| class=&quot;wikitable&quot;
|-
!  !! e, i !! ö, ü !! a, ı !! o, u !!  bahç&lt;u&gt;e&lt;/u&gt; &quot;garden&quot; !! arab&lt;u&gt;a&lt;/u&gt; &quot;car&quot;
|-
| Yalın Hal &quot;Nominative&quot; ||  ||  ||  || || bahç&lt;u&gt;e&lt;/u&gt; &quot;garden&quot; ||  arab&lt;u&gt;a&lt;/u&gt; &quot;(a) car&quot;
|-
| İlgi Hali &quot;Genitive&quot; || -(n)in || -(n)ün || -(n)ın || -(n)un || bahç&lt;u&gt;e&lt;/u&gt;nin &quot;garden's&quot; ||  arab&lt;u&gt;a&lt;/u&gt;nın &quot;car's&quot;
|-
| Belirtme Hali &quot;Accusative&quot; || -(y)i || -(y)ü || -(y)ı || -(y)u || bahç&lt;u&gt;e&lt;/u&gt;yi &quot;(the) garden (as an object)&quot; ||  arab&lt;u&gt;a&lt;/u&gt;yı &quot;(the) car (as an object)&quot;
|-
| Yönelme Hali &quot;Dative&quot; || -(y)e || -(y)e || -(y)a || -(y)a || bahç&lt;u&gt;e&lt;/u&gt;ye &quot;to garden&quot; || arab&lt;u&gt;a&lt;/u&gt;ya &quot;to car&quot;
|-
| Bulunma Hali &quot;Locative&quot; || -de || -de || -da || -da || bahç&lt;u&gt;e&lt;/u&gt;de &quot;in garden&quot; || arab&lt;u&gt;a&lt;/u&gt;da &quot;on car&quot;
|-
| Ayrılma Hali &quot;Ablative&quot; || -den || -den || -dan || -dan || bahç&lt;u&gt;e&lt;/u&gt;den &quot;from garden&quot; || arab&lt;u&gt;a&lt;/u&gt;dan &quot;from car&quot;
|-
| Eşitlik Hali &quot;Essive&quot; || -ce || -ce || -ca || -ca || bahç&lt;u&gt;e&lt;/u&gt;ce &quot;as a garden&quot; || arab&lt;u&gt;a&lt;/u&gt;ca &quot;as a car&quot;
|-
| Aracılık Hali &quot;Instrumental&quot; || -(y)le || -(y)le || -(y)la || -(y)la || bahç&lt;u&gt;e&lt;/u&gt;yle &quot;(dealing)with garden&quot; || arab&lt;u&gt;a&lt;/u&gt;yla &quot;with/by car&quot;
|-
| İlgililik Hali &quot;Inclusive&quot; || -li || -lü || -lı || -lu || bahç&lt;u&gt;e&lt;/u&gt;li &quot;with/having a garden&quot; || arab&lt;u&gt;a&lt;/u&gt;lı &quot;with/having a car&quot;
|-
| İlgisizlik Hali &quot;Abessive&quot; || -siz || -süz || -sız || -suz || bahç&lt;u&gt;e&lt;/u&gt;siz &quot;without garden&quot; || arab&lt;u&gt;a&lt;/u&gt;sız &quot;without car&quot; 
|-
| Andırım Hali &quot;Likeness&quot; || -(i)msi || -(ü)msü || -(ı)msı || -(u)msu || bahç&lt;u&gt;e&lt;/u&gt;msi &quot;gardenlike&quot; || arab&lt;u&gt;a&lt;/u&gt;msı &quot;carlike&quot; 
|-
| Kapsama Hali &quot;Coverage&quot; || -lik || -lük || -lık || -luk || bahç&lt;u&gt;e&lt;/u&gt;lik &quot;for/as garden&quot; || arab&lt;u&gt;a&lt;/u&gt;lık &quot;for/as car&quot; 
|-
| Özellik Hali &quot;Qualitative&quot; || -sel || -sel || -sal || -sal || bahç&lt;u&gt;e&lt;/u&gt;sel &quot;of a garden&quot; || arab&lt;u&gt;a&lt;/u&gt;sal &quot;of a car&quot; 
|-
| Koşulluk Hali &quot;Conditional&quot; || -(y)se || -(y)se || -(y)sa || -(y)sa || bahç&lt;u&gt;e&lt;/u&gt;yse &quot;in case of a garden&quot; || arab&lt;u&gt;a&lt;/u&gt;ysa &quot;in case of a car&quot; 
|-
| Sahiplik Hali &quot;Possesive&quot; (*) || -(i)m  || -(ü)m || -(ı)m || -(u)m || bahç&lt;u&gt;e&lt;/u&gt;m &quot;my garden&quot; || arab&lt;u&gt;a&lt;/u&gt;m &quot;my car&quot; 
|-
| Çoğul Hali &quot;Plural&quot; (*) || -ler  || -ler || -lar || -lar || bahç&lt;u&gt;e&lt;/u&gt;ler &quot;gardens&quot; || arab&lt;u&gt;a&lt;/u&gt;lar &quot;cars&quot; 
|-
|}

(*) Possessive case is given only for first person singular. The suffixes for all persons are as follows : 1st S : &quot;(i)m&quot;, 2nd S : &quot;(i)n&quot;, 3rd S : &quot;(s)i&quot;, 1st P : &quot;(i)miz, 2nd P : (i)niz, 3rd P : &quot;leri&quot;. These should be changed as needed in accordance with the rules of vowel harmony.

=== Example ===
Kitap yere düştü. &quot;'''The''' book fell on the floor.&quot; Nominative as definite subject of sentence.

Bir kitap yere düştü. &quot;'''A''' book fell on the floor.&quot; Nominative as indefinite subject of sentence.

Kitap okuyorum. &quot;I'm reading '''some''' book.&quot; Nominative as indefinite object.

Bir kitap okuyorum. &quot;I'm reading '''a''' book.&quot; Nominative as indefinite object.

Kitab'''ı''' okuyorum. &quot;I'm reading '''the''' book.&quot; Accusative as definite object.

Bir kitab'''ı''' okuyorum. &quot;I'm reading '''one specific''' book.&quot; Accusative as definite object.
 

Ev'''in''' kapısı. &quot;The door '''of''' the house.&quot; Genitive&lt;br /&gt; 

Ev'''e''' gidiyorum. &quot;I'm going '''to''' the house.&quot; Dative&lt;br /&gt;

Ev'''de''' bekliyorum.&quot;I'm waiting '''in''' the house&quot; Locative  &lt;br /&gt;

Ev'''den''' geldim. &quot;I came '''from''' the house.&quot; Ablative &lt;br /&gt;

Araba'''yla''' gidiceğiz. &quot;We will go '''by''' car.&quot; Instrumental &lt;br /&gt;

Araba'''sız''' gidemeyiz. &quot;We can't go '''without''' a car.&quot; Abasive&lt;br /&gt;

 
Suffixes attached to proper names (people, cities, countries) are preceded by an ''' ' '''.
'''Ali''' =&gt; '''Ali'ye''' (to Ali, male name)&lt;br/&gt;
'''Tarkan''' =&gt; '''Tarkan'a''' (to Tarkan, male name)&lt;br/&gt;
'''Ayşe''' =&gt; '''Ayşe'ye''' (to Ayşe, girl name)&lt;br/&gt;
'''Sibel''' =&gt; '''Sibel'e''' (to Sibel, girl name)&lt;br/&gt;

The dative (-a, -e) and accusative (ı, i, u, ü) case suffixes require a buffer consonant '''y''' in words ending with a vowel and become (-ya, -ye) and (yı, yi, yu, yü) respectively as in:&lt;br/&gt;
'''Ankara'ya''' (to Ankara); I am going to Ankara =&gt; '''Ankara'ya gidiyorum.'''&lt;br/&gt;
'''Türkiye'ye''' (to Turkey); I am going to Turkey =&gt; '''Türkiye'ye gidiyorum.'''&lt;br/&gt;
'''halıyı''' (the carpet); I am buying the carpet. =&gt; '''Halıyı alıyorum.'''&lt;br/&gt;

The genitive case requires an additional '''n''' in words ending with a vowel as in:&lt;br/&gt;
'''Ayşe'nin''' (Ayşe's) =&gt; '''Ayşe'nin babası''' (Ayşe's father)&lt;br/&gt;
'''Ali'nin''' (Ali's) =&gt; '''Ali'nin annesi''' (Ali's mother)&lt;br/&gt;
'''Atilla'nın''' (Atilla's) =&gt; '''Atilla'nın abisi''' (Atilla's [elder] brother)&lt;br/&gt;
'''Arto'nun''' (Arto's) =&gt; '''Arto'nun ninesi''' (Arto's grandmother)&lt;br/&gt;
'''Hüsnü'nün''' (Hüsnü's) =&gt; '''Hüsnü'nün evi''' (Hüsnü's house)&lt;br/&gt;


{{Turkish/TOC}}</text>
      <sha1>dn2f4kn4cwu3kfz860g2h5wyf5nlk9o</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/Word Order</title>
    <ns>0</ns>
    <id>40308</id>
    <revision>
      <id>2387608</id>
      <parentid>2387606</parentid>
      <timestamp>2012-08-06T01:06:05Z</timestamp>
      <contributor>
        <username>Otceliker</username>
        <id>520483</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">In Turkish, the verb usally goes at the end of the sentence. The basic word order is therefore SOV (subject-object-verb). For example the following sentence literally means ''the woman the book read'' (in the following examples, stressed element is shown in blue):
* {{Turkish/Tooltip|Kadın|The women}} {{Turkish/Tooltip|{{turkish/c|kitabı|b}}|the book+accusative suffix}} {{Turkish/Tooltip|okudu|past form of the verb 'to read': oku + di}}: The woman read the book.

This word order is not obligatory. ''You can alter the word order to emphasize a particular element.'' The most stressed element in a sentence is the element which is nearest to the verb. If you want to stress the verb, you put it at the beginning of the sentence. If you want to stress that it is ''the woman'' who read the book, you say:
* {{Turkish/Tooltip|Kitabı|the book+accusative suffix}} {{Turkish/Tooltip|{{turkish/c|kadın|b}}|The women}} {{Turkish/Tooltip|okudu|past form of the verb 'to read': oku + di}}: The '''woman''' read the book.
This would be a good response to the question &quot;Who read the book?&quot;.
Here are some other examples:
* {{Turkish/Tooltip|{{turkish/c|Kitabı|b}}|the book+accusative suffix}} {{Turkish/Tooltip|okudu|past form of the verb 'to read': oku + di}} {{Turkish/Tooltip|kadın|The women}}: The woman read '''the book'''. 
* {{Turkish/Tooltip|{{turkish/c|Okudu|b}}|past form of the verb 'to read': oku + du}} {{Turkish/Tooltip|kadın|The women}} {{Turkish/Tooltip|kitabı|the book+accusative suffix}}: The woman '''read''' the book. 
 
In written language, the verb usually goes at the end of the sentence. But in colloquial speech (and in poetry), its place in the sentence can vary.

You can replace the elements but an element can be composed of more than one words. You can't replace the words in the elements. For example:

* {{Turkish/Tooltip|Kadın|The woman}} {{Turkish/Tooltip|{{turkish/c|mavi kitabı|b}}|blue book+accusative suffix}} {{Turkish/Tooltip|okudu|past form of the verb 'to read': oku + di}}: The woman read the blue book. Elements of this sentence are: &quot;Kadın&quot;, &quot;mavi kitabı&quot;, &quot;okudu&quot;. You should consider &quot;mavi kitabı&quot; as a whole.

You can say:
* {{Turkish/Tooltip|Mavi kitabı|the blue book+accusative suffix}} {{Turkish/Tooltip|{{turkish/c|kadın|b}}|The women}} {{Turkish/Tooltip|okudu|past form of the verb 'to read': oku + di}}: '''The woman''' read the blue book.

But you can't say:
* {{Turkish/Tooltip|Kadın|The woman}} {{Turkish/Tooltip|kitabı|the book+accusative suffix}} {{Turkish/Tooltip|mavi}} {{Turkish/Tooltip|okudu|past form of the verb 'to read': oku + di}}

This is because the adjective always comes before the word it's acting on, as in English.

''I'm going home.'' = '''Eve gidiyorum.'''&lt;br/&gt;

'''ev''' = ''house, home''&lt;br/&gt;
'''eve''' = ''to the house''&lt;br/&gt;
'''gitmek''' = ''to go''&lt;br/&gt;
'''gidiyor''' = ''s/he is going''&lt;br/&gt;
'''gidiyorum''' = ''I am going''&lt;br/&gt;

''I want to go home'' = '''Eve gitmek istiyorum.'''&lt;br/&gt;

'''istemek''' = ''to want''&lt;br/&gt;
'''istiyorum''' = ''I want''&lt;br/&gt;

(Note that the verb '''istiyorum''' is in the present continuous tense, but it translates to the present tense in English. This verb is almost always used in this form in Turkish, and the present tense of this verb is reserved for some specific cases.) 

''How are you?'' = '''Nasılsınız?'''&lt;br/&gt;

'''nasıl''' = ''how''&lt;br/&gt;
'''-sınız''' = ''you are'' (plural ''you'' or respect form singular you as in French ''vous'', German ''Sie'')&lt;br/&gt;

'''İyiyim.''' = ''I'm well.''&lt;br/&gt;

'''iyi''' = ''good''&lt;br/&gt;
'''-yim''' = ''I am''&lt;br/&gt;

'''Bugün, iyi değilim.''' = ''I'm not well today.''&lt;br/&gt;

'''bugün''' = ''today''&lt;br/&gt;
'''değil''' = ''not''&lt;br/&gt;
'''-im''' = ''I am''&lt;br/&gt;
'''değilim''' = ''I am not''&lt;br/&gt;


{{Turkish/TOC}}</text>
      <sha1>8en1tl8x0jbsmq10froa03b68tqcmu6</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/Plural</title>
    <ns>0</ns>
    <id>40309</id>
    <revision>
      <id>2051070</id>
      <parentid>1963096</parentid>
      <timestamp>2011-02-19T19:59:00Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: jounalist → journalist</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">====Plural====
The plural suffixes are '''-lar''' and '''-ler'''.&lt;br/&gt;
'''-lar''' if the last vowel of the noun is a back vowel (a, ı, o, u)&lt;br/&gt;
'''-ler''' if the last vowel of the noun is a front vowel (e, i, ö, ü)&lt;br/&gt;
&lt;br/&gt;
'''araba''' =&gt; '''arabalar''' (car, cars)&lt;br/&gt;
'''insan''' =&gt; '''insanlar''' (man, people)&lt;br/&gt;
'''kitap''' =&gt; '''kitaplar''' (book, books)&lt;br/&gt;
'''yazar''' =&gt; '''yazarlar''' (writer, writers)&lt;br/&gt;
'''halı''' =&gt; '''halılar''' (carpet, carpets)&lt;br/&gt;
'''kız''' =&gt; '''kızlar''' (girl, girls)&lt;br/&gt;
'''yıldız''' =&gt; '''yıldızlar''' (star, stars)&lt;br/&gt;
'''şarkı''' =&gt; '''şarkılar''' (song, songs)&lt;br/&gt;
'''palto''' =&gt; '''paltolar''' (coat, coats)&lt;br/&gt;
'''çocuk''' =&gt; '''çocuklar''' (child, children)&lt;br/&gt;
'''memur''' =&gt; '''memurlar''' (officer, officers)&lt;br/&gt;
&lt;br/&gt;
'''meyve''' =&gt; '''meyveler''' (fruit, fruits)&lt;br/&gt;
'''kent''' =&gt; '''kentler''' (city, cities)&lt;br/&gt;
'''gazete''' =&gt; '''gazeteler''' (newspaper, newspapers)&lt;br/&gt;
'''resim''' =&gt; '''resimler''' (photo, photos)&lt;br/&gt;
'''mühendis''' =&gt; '''mühendisler''' (engineer, engineers)&lt;br/&gt;
'''gazeteci''' =&gt; '''gazeteciler''' (journalist, journalists)&lt;br/&gt;
'''göz''' =&gt; '''gözler''' (eye, eyes)&lt;br/&gt;
'''söz''' =&gt; '''sözler''' (word, words)&lt;br/&gt;
'''gün''' =&gt; '''günler''' (day, days)&lt;br/&gt;
'''gül''' =&gt; '''güller''' (rose, roses)&lt;br/&gt;
&lt;br/&gt;
When a number other than one(two, three, etc.) precedes a noun, the noun remains in singular.&lt;br/&gt;
&lt;br/&gt;
room, two rooms ==&gt; '''oda, iki oda'''&lt;br/&gt;
hour, three hours ==&gt; '''saat, üç saat'''&lt;br/&gt;
day, four days ==&gt; '''gün, dört gün'''&lt;br/&gt;


{{Turkish/TOC}}</text>
      <sha1>kk5gqxrzvdhrvo0wommvvkxwp5kyk0a</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/Verbs</title>
    <ns>0</ns>
    <id>40310</id>
    <revision>
      <id>2605064</id>
      <parentid>2559724</parentid>
      <timestamp>2014-01-29T20:38:03Z</timestamp>
      <contributor>
        <ip>95.250.191.27</ip>
      </contributor>
      <comment>/* Personal Endings */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">All infinitives end either in '''-mak''' or '''-mek''' according to the vowel harmony (last vowel of the verb stem).&lt;br/&gt;

'''almak''' (to take, to buy)&lt;br/&gt;
'''bulmak''' (to find)&lt;br/&gt;
'''vermek''' (to give)&lt;br/&gt;
'''gitmek''' (to go)&lt;br/&gt;
'''öğrenmek''' (to learn)&lt;br/&gt;
'''bilmek''' (to know)&lt;br/&gt;
'''söylemek''' (to say)&lt;br/&gt;
'''konuşmak''' (to talk)&lt;br/&gt;
'''dinlemek''' (to listen)&lt;br/&gt;
'''çalışmak''' (to study/to work)&lt;br/&gt;
'''sevmek''' (to love)&lt;br/&gt;
'''tanışmak''' (to get acquainted)&lt;br/&gt;
'''yazmak''' (to write)&lt;br/)
'''okumak''' (to read)&lt;br/&gt;
Turkish knows also the negative verb infinitives (not to do, not do learn, etc.). The stem contains the negative suffix '''-ma-''' or '''-me-'''. &quot;-'''me'''&quot; or &quot;-'''ma'''&quot; is used according to the vowel harmony (last vowel of the verb stem).
If the last vowel of the noun is a back vowel (a, ı, o, u), the negative suffix &quot;-ma&quot; is used. if the last vowel of the noun is a front vowel (e, i, ö,ü), the negative suffix ''-me'' is used.

'''almamak''' (not to take, not to buy)&lt;br/&gt;
'''bulmamak''' (not to find)&lt;br/&gt;
'''vermemek''' (not to give)&lt;br/&gt;
'''gitmemek''' (not to go)&lt;br/&gt;
'''öğrenmemek''' (not to learn)&lt;br/&gt;

The negative stem (alma-, bulma-, etc.) is used for building negative forms of most tenses (past tense, simple present, future, ...).

== Personal Endings ==
Turkish verbs indicate person as Spanish verbs do. Thus, personal pronouns are not generally used in sentences as the verb of the sentence already indicates it. Please note that vowels in the suffixes change according to the vowel harmony, i.e. -im can be -ım or -sin can be -sın. Different suffixes are added to the verb to indicate person (letters in brackets are used only when necessary):

{| class=wikitable
!Subject
!Personal Ending
|-
| Ben (I)
| -(i)m
|-
| Sen (You)
| -(s)(i)n
|-
| O (He/she/it)
| ''No suffix''
|-
| Biz (We)
| -k (only in [[Turkish/Past Tense|seen past tense]] and [[Turkish/Conditional|conditional]]) or -(y)iz (in other tenses and moods)
|-
| Siz (You)
| -(s)(i)niz
|-
| Onlar (They)
| -ler
|}
{{Turkish/TOC}}</text>
      <sha1>dx0pide56ld5kcgpt3wef3o91gyxwh7</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/Numbers</title>
    <ns>0</ns>
    <id>40311</id>
    <revision>
      <id>2956942</id>
      <parentid>2949133</parentid>
      <timestamp>2015-05-11T16:36:55Z</timestamp>
      <contributor>
        <username>Chazz</username>
        <id>32521</id>
      </contributor>
      <comment>Rejected the last text change (by [[Special:Contributions/73.203.252.95|73.203.252.95]]) and restored revision 2617650 by 93.210.19.100</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">===Numbers: non-negative integers===

'''Digits''':(Rakamlar)&lt;br&gt;
0 sıfır&lt;br&gt;
1 bir&lt;br&gt;
2 iki&lt;br&gt;
3 üç&lt;br&gt;
4 dört&lt;br&gt;
5 beş&lt;br&gt;
6 altı&lt;br&gt;
7 yedi&lt;br&gt;
8 sekiz&lt;br&gt;
9 dokuz&lt;br&gt;&lt;br&gt;
''' Ten and above''':&lt;br&gt;
10 on&lt;br&gt;
11 on bir (&quot;ten one&quot;), 12 on iki, 13 on üç, ...&lt;br&gt;
20 yirmi&lt;br&gt;
21 yirmi bir, 22 yirmi iki ,...&lt;br&gt;
30 otuz&lt;br&gt;
40 kırk&lt;br&gt;
50 elli&lt;br&gt;
60 altmış&lt;br&gt;
70 yetmiş&lt;br&gt;
80 seksen&lt;br&gt;
90 doksan&lt;br&gt;
100 yüz&lt;br&gt;
200 iki yüz, 300 üç yüz ,... &lt;br&gt;
1&amp;thinsp;000 bin&lt;br&gt;
2&amp;thinsp;000 iki bin, 3&amp;thinsp;000 üç bin ,... 10&amp;thinsp;000 on bin, 20&amp;thinsp;000 yirmi bin, 30&amp;thinsp;000 otuz bin ,... &lt;br&gt;&lt;br&gt;
1&amp;thinsp;000&amp;thinsp;000  bir milyon&lt;br&gt;
1&amp;thinsp;000&amp;thinsp;000&amp;thinsp;000  bir milyar&lt;br&gt;
1&amp;thinsp;000&amp;thinsp;000&amp;thinsp;000&amp;thinsp;000 bir trilyon, 1&amp;thinsp;000&amp;thinsp;000&amp;thinsp;000&amp;thinsp;000&amp;thinsp;000 bir katrilyon

'''Use spaces:''' 123&amp;thinsp;456&amp;thinsp;789 (which is read: yüz yirmi üç milyon  dört yüz elli altı bin  yedi yüz seksen dokuz) should be written with spaces for easier reading. 
But (of course) not if you are writing down some amount of money on a check or something alike.

===Decimal fractions===
0.2 (engl.) = 0,2 (tr.) sıfır virgül iki &lt;br&gt;
0.01 = 0,01  sıfır virgül sıfır bir &lt;br&gt;
3.14159 = 3,14159  üç virgül bir dört bir beş dokuz &lt;br&gt;
 
===Saymak  : To count ===

sum : toplamak (toplamak also means to tidy up, or put things together,or to collect)&lt;br&gt;
subtract : çıkarmak (The verb çıkarmak also means to take something out of something(eg. Cebinden para çıkardı-He has taken out money from his pocket) ))&lt;br&gt;
multiply : çarpmak (the verb çarpmak also means to collide)&lt;br&gt;
divide : bölmek&lt;br&gt; 

'''+'''    artı&lt;br&gt;
'''-'''    eksi&lt;br&gt;
'''x'''    çarpı/kere&lt;br&gt;
'''/'''    bölü&lt;br&gt;
3+3=6 -&gt; üç artı üç eşittir altı
===Fractions===
One way of expressing fractions is to use the expression &quot;bölü&quot; (divided by):&lt;br&gt;

4/5 = four divided by five = dört bölü beş &lt;br&gt;

2/7 = iki bölü yedi

13/97 = on üç bölü doksan yedi 
  
===Examples/Training===

a) Word to numeral
&lt;br&gt;
&lt;br&gt;
doksan dokuz
&lt;br&gt;
yetmiş yedi
&lt;br&gt;
seksen sekiz
&lt;br&gt;
altmış altı
&lt;br&gt;
elli beş
&lt;br&gt;
otuz üç
&lt;br&gt;
kırk dört
&lt;br&gt;
on bir
&lt;br&gt;
yirmi iki
&lt;br&gt;
&lt;br&gt;
b) Numeral to word
&lt;br&gt;  
77 
&lt;br&gt;
44 
&lt;br&gt;
99
&lt;br&gt;
11
&lt;br&gt;
12
&lt;br&gt;
15
&lt;br&gt;
25
&lt;br&gt;
111
&lt;br&gt;
222
&lt;br&gt;
&lt;br&gt;
          
[[de:Türkisch: Zahlen]]
[[nl:Turks/Getallen]]
{{Turkish/TOC}}</text>
      <sha1>6pu1eywxy0loksv0otdsfgulckuvtkg</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/To be or not to be</title>
    <ns>0</ns>
    <id>40312</id>
    <revision>
      <id>1963105</id>
      <parentid>1963053</parentid>
      <timestamp>2010-11-01T16:35:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Turkish/Contents/To be or not to be]] to [[Turkish/To be or not to be]]: Easier navigation.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">===to be or not to be===
====front-unrounded vowels====
*'''Vocabulary'''
**güz'''e'''l : beautiful
**çirk'''i'''n : ugly
*'''Personal endings'''
Learn these as quickly as possible,
since they will be used in almost every sentence.
** Singular
# -im
# -sin
# -  (none)
** Plural
# -iz
# -siniz
# -ler
*Add these suffixes to an adjective and you have your first Turkish sentence.
:For adjective ''güzel''
** Singular
# güzel + im = Güzelim. : I am beautiful. 
# güzel + sin = Güzelsin. : You are beautiful. 
# güzel + (none)= Güzel. : (She/He/It) is beautiful.
** Plural
# güzel + iz = Güzeliz. : We are beautiful.
# güzel + siniz = Güzelsiniz. : You are beautiful.
# güzel + ler = Güzeller. : They are beautiful.
&lt;b&gt;&lt;i&gt;REMARK&lt;/i&gt; :Like Spanish and Latin, personal pronouns usually omitted
when personal endings are enough.&lt;/b&gt;
&lt;blockquote style=&quot;background:#cdffcd; border: 1px solid black; padding: 1em;&quot;&gt;
;&lt;u&gt;Say these sentences in Turkish:&lt;/u&gt;
:# I am ugly. 
:# You(singular) are ugly. 
:# She's ugly.
:# He's ugly.
:# We are ugly.
:# You(plural) are ugly.
:# They're ugly.
&lt;/blockquote&gt;

====back-unrounded vowels====
*'''Vocabulary'''
**zay'''ı'''f : thin (person or animal)
**şişm'''a'''n : fat
*'''Personal endings'''
Compare these endings with those given above.
Notice that vowels of the suffixes given below are back vowels
whereas those above were front vowels.
This is due to [[wikipedia:Vowel harmony#Turkish|vowel harmony]].
** Singular
# -ım
# -sın
# -  (none)
** Plural
# -ız
# -sınız
# -lar
*Add these suffixes to adjectives given above.
:For adjective ''zayıf''
** Singular
# zayıf + ım = Zayıfım. : I am thin. 
# zayıf + sın = Zayıfsın. : You are thin. 
# zayıf + (none)= Zayıf. : (She/He/It) is thin.
** Plural
# zayıf + ız = Zayıfız. : We are thin.
# zayıf + sınız = Zayıfsınız. : You are thin.
# zayıf + lar = Zayıflar. : They are thin.
&lt;blockquote style=&quot;background:#cdffcd; border: 1px solid black; padding: 1em;&quot;&gt;
;&lt;u&gt;Conjugate the word ''şişman'' similarly&lt;/u&gt;
&lt;/blockquote&gt;

&lt;TODO&gt;
*Eklerin yuvarlaklaşmasını ince yuvarlak sesliyle biten bir 
sıfata şahıs eklerini ekleyerek göstermek.
örnek.
*Eklerin yuvarlaklaşıp kalınlaşmasını kalın yuvarlak sesliyle biten bir 
sıfata şahıs eklerini ekleyerek göstermek.
*Kaynaştırma harfi. Sesliyle biten örnek sıfatlar.

*İsim cümlesi. Bazı meslekler; &quot; Öğretmenim, mühendisim &quot; gibi.
*Neden 'Bir Ameleyim' değil de 'Ameleyim'. Anlam farkları.
&lt;/TODO&gt;

{{Turkish/TOC}}</text>
      <sha1>9iv96aas4mhldxvyap8m0h2penmgu0k</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/Present Tense</title>
    <ns>0</ns>
    <id>40313</id>
    <revision>
      <id>2258022</id>
      <parentid>1963097</parentid>
      <timestamp>2012-01-28T21:57:44Z</timestamp>
      <contributor>
        <ip>78.183.146.211</ip>
      </contributor>
      <comment>/* Present tense */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Present tense==

{| class=&quot;wikitable&quot;
|-
!  !! e, i !! ö, ü !! a, ı !! o, u !! 
|-
| Ben || -('''i''')yorum  || -('''ü''')yorum || -('''ı''')yorum || -('''u''')yorum || -yorum
|-
| Sen || -('''i''')yorsun  || -('''ü''')yorsun || -('''ı''')yorsun || -('''u''')yorsun || -yorsun
|-
| O || -('''i''')yor  || -('''ü''')yor || -('''ı''')yor || -('''u''')yor || -yor
|-
| Biz || -('''i''')yoruz  || -('''ü''')yoruz || -('''ı''')yoruz || -('''u''')yoruz || -yoruz
|-
| Siz || -('''i''')yorsunuz  || -('''ü''')yorsunuz || -('''ı''')yorsunuz || -('''u''')yorsunuz || -yorsunuz
|-
| Onlar || -('''i''')yorlar  || -('''ü''')yorlar || -('''ı''')yorlar || -('''u''')yorlar || -yorlar
|- 
!  !! s&lt;u&gt;e&lt;/u&gt;vmek &quot;to love&quot; !! b&lt;u&gt;ö&lt;/u&gt;lmek &quot;to allot&quot; !! y&lt;u&gt;a&lt;/u&gt;pmak &quot;to do&quot; !! k&lt;u&gt;o&lt;/u&gt;rkmak &quot;to fear&quot; !! okumak &quot;to read&quot;
|-
| Ben || s&lt;u&gt;e&lt;/u&gt;v'''i'''yorum &quot;I love&quot; || b&lt;u&gt;ö&lt;/u&gt;l'''ü'''yorum || y&lt;u&gt;a&lt;/u&gt;p'''ı'''yorum || k&lt;u&gt;o&lt;/u&gt;rk'''u'''yorum || okuyorum
|-
| Sen || s&lt;u&gt;e&lt;/u&gt;v'''i'''yorsun &quot;You love&quot; || b&lt;u&gt;ö&lt;/u&gt;l'''ü'''yorsun || y&lt;u&gt;a&lt;/u&gt;p'''ı'''yorsun || k&lt;u&gt;o&lt;/u&gt;rk'''u'''yorsun || okuyorsun
|-
| O || s&lt;u&gt;e&lt;/u&gt;v'''i'''yor &quot;[S]he loves&quot; || b&lt;u&gt;ö&lt;/u&gt;l'''ü'''yor || y&lt;u&gt;a&lt;/u&gt;p'''ı'''yor || k&lt;u&gt;o&lt;/u&gt;rk'''u'''yor || okuyor
|-
| Biz || s&lt;u&gt;e&lt;/u&gt;v'''i'''yoruz &quot;We love&quot; || b&lt;u&gt;ö&lt;/u&gt;l'''ü'''yoruz || y&lt;u&gt;a&lt;/u&gt;p'''ı'''yoruz || k&lt;u&gt;o&lt;/u&gt;rk'''u'''yoruz || okuyoruz
|-
| Siz || s&lt;u&gt;e&lt;/u&gt;v'''i'''yorsunuz &quot;You love&quot; || b&lt;u&gt;ö&lt;/u&gt;l'''ü'''yorsunuz || y&lt;u&gt;a&lt;/u&gt;p'''ı'''yorsunuz || k&lt;u&gt;o&lt;/u&gt;rk'''u'''yorsunuz || okuyorsunuz
|-
| Onlar || s&lt;u&gt;e&lt;/u&gt;v'''i'''yorlar &quot;They love&quot; || b&lt;u&gt;ö&lt;/u&gt;l'''ü'''yorlar || y&lt;u&gt;a&lt;/u&gt;p'''ı'''yorlar || k&lt;u&gt;o&lt;/u&gt;rk'''u'''yorlar || okuyorlar
|- 
!  !! b&lt;u&gt;i&lt;/u&gt;lmek &quot;to know&quot; !! g&lt;u&gt;ü&lt;/u&gt;lmek &quot;to laugh&quot; !! al&lt;u&gt;ı&lt;/u&gt;nmak &quot;to fall&quot; !! d&lt;u&gt;u&lt;/u&gt;ymak &quot;to hear&quot; !! uyumak &quot;to sleep&quot;
|-
| Ben || b&lt;u&gt;i&lt;/u&gt;l'''i'''yorum || g&lt;u&gt;ü&lt;/u&gt;l'''ü'''yorum || al&lt;u&gt;ı&lt;/u&gt;n'''ı'''yorum || d&lt;u&gt;u&lt;/u&gt;y'''u'''yorum || uyuyorum
|-
| Sen || b&lt;u&gt;i&lt;/u&gt;l'''i'''yorsun  || g&lt;u&gt;ü&lt;/u&gt;l'''ü'''yorsun || al&lt;u&gt;ı&lt;/u&gt;n'''ı'''yorsun || d&lt;u&gt;u&lt;/u&gt;y'''u'''yorsun || uyuyorsun
|-
| O || b&lt;u&gt;i&lt;/u&gt;l'''i'''yor || g&lt;u&gt;ü&lt;/u&gt;l'''ü'''yor || al&lt;u&gt;ı&lt;/u&gt;n'''ı'''yor || d&lt;u&gt;u&lt;/u&gt;y'''u'''yor || uyuyor
|-
| Biz || b&lt;u&gt;i&lt;/u&gt;l'''i'''yoruz || g&lt;u&gt;ü&lt;/u&gt;l'''ü'''yoruz || al&lt;u&gt;ı&lt;/u&gt;n'''ı'''yoruz || d&lt;u&gt;u&lt;/u&gt;y'''u'''yoruz || uyuyoruz
|-
| Siz || b&lt;u&gt;i&lt;/u&gt;l'''i'''yorsunuz || g&lt;u&gt;ü&lt;/u&gt;l'''ü'''yorsunuz || al&lt;u&gt;ı&lt;/u&gt;n'''ı'''yorsunuz || d&lt;u&gt;u&lt;/u&gt;y'''u'''yorsunuz || uyuyorsunuz
|-
| Onlar || b&lt;u&gt;i&lt;/u&gt;l'''i'''yorlar || g&lt;u&gt;ü&lt;/u&gt;l'''ü'''yorlar || al&lt;u&gt;ı&lt;/u&gt;n'''ı'''yorlar || d&lt;u&gt;u&lt;/u&gt;y'''u'''yorlar || uyuyorlar
|}

=== Irregular Verbs in Present Tense === 

{| class=&quot;wikitable&quot;
|-
!  !! gitmek &quot;to go&quot; !! oynamak &quot;to play&quot;
|-
| Ben || gid'''i'''yorum || oyn'''u'''yorum
|-
| Sen || gid'''i'''yorsun || oyn'''u'''yorsun
|-
| O || gid'''i'''yor || oyn'''u'''yor
|-
| Biz || gid'''i'''yoruz || oyn'''u'''yoruz
|-
| Siz || gid'''i'''yorsunuz || oyn'''u'''yorsunuz
|-
| Onlar || gid'''i'''yorlar || oyn'''u'''yorlar
|}

There are two present tenses, continuous and simple, which are used similar as in English. &lt;br/&gt;

'''Present continuous''' (its usage resembles the English &quot;-ing&quot; tense)&lt;br/&gt;
It describes an action which is going on at the moment of speaking.&lt;br/&gt;

'''almak''' (to take, to buy)&lt;br/&gt;
'''alıyorum''' (I take, buy)&lt;br/&gt;
'''alıyorsun''' (you take, buy)&lt;br/&gt;
'''alıyor''' (he, she, it takes, buys)&lt;br/&gt;
'''alıyoruz''' (we take, buy)&lt;br/&gt;
'''alıyorsunuz''' (you take, buy)&lt;br/&gt;
'''alıyorlar''' (they take, buy)&lt;br/&gt;

'''Bunu alıyorum.''' (I take this. ''or'' I buy this.)&lt;br/&gt;

'''anlamak''' (to understand), '''anlıyorum''' (I understand), '''anlıyorsun''' (you understand), etc.&lt;br/&gt;
'''bulmak''' (to find), '''buluyorum''' (I find), '''buluyorsun''' (you find), etc.&lt;br/&gt;
'''vermek''' (to give), '''veriyorum''' (I give), '''veriyorsun''' (you give), etc.&lt;br/&gt;
'''gitmek''' (to go), '''gidiyorum''' (I go), '''gidiyorsun''' (you go), etc.&lt;br/&gt;
'''gelmek''' (to come,)'''geliyorum'''(I come), '''geliyorsun''' (you come), etc.&lt;br/&gt;
'''göndermek''' (to send): '''gönderiyorum, gönderiyorsun,''' etc.&lt;br/&gt;
'''söz vermek''' (to promise): '''söz veriyorum, söz veriyorsun,''' etc.&lt;br/&gt;


{{Turkish/TOC}}</text>
      <sha1>tqrrk2lt1yrzhl34am6qo6i67u587a2</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/Negative - Present Continuous Tense</title>
    <ns>0</ns>
    <id>40314</id>
    <revision>
      <id>1963089</id>
      <parentid>1963012</parentid>
      <timestamp>2010-11-01T16:35:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Turkish/Contents/Negative - Present Continuous Tense]] to [[Turkish/Negative - Present Continuous Tense]]: Easier navigation.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">====Negative Forms of Present Continous Tense====
The negative verb stem melts to the '''-ıyor''' (-iyor, uyor, üyor) suffix and retains its reduced form '''-m-''' of the negative verb suffix ('''-ma-''', '''-me-''').&lt;br/&gt;

'''anlamamak''' (not to understand)&lt;br/&gt;
'''anlamıyorum''' (I don't understand)&lt;br/&gt;
'''anlamıyorsun''' (you don't understand)&lt;br/&gt;
'''anlamıyor''' (he, she, it doesn't understand)&lt;br/&gt;
'''anlamıyoruz''' (we don't understand)&lt;br/&gt;
'''anlamıyorsunuz''' (you don't understand)&lt;br/&gt;
'''anlamıyorlar''' (they don't understand)&lt;br/&gt;

'''gitmemek''' (not to go) &lt;br/&gt;
'''gitmiyorum''' (I don't go)&lt;br/&gt;
'''gitmiyorsun''' (you don't go)&lt;br/&gt;
'''gitmiyor''' (he, she, it doesn't go)&lt;br/&gt;
'''gitmiyoruz''' (we don't go)&lt;br/&gt;
'''gitmiyorsunuz''' (you don't go)&lt;br/&gt;
'''gitmiyorlar''' (they don't go)&lt;br/&gt;

*for comparison 
'''giderler''' (they go) &lt;br/&gt;
'''gidiyorlar''' (they're going) &lt;br/&gt;


{{Turkish/TOC}}</text>
      <sha1>994dfkj0kvrqk2zbb4ipgy58ir1zf7l</sha1>
    </revision>
  </page>
  <page>
    <title>Turkish/Interrogative - Present Continuous Tense</title>
    <ns>0</ns>
    <id>40316</id>
    <revision>
      <id>1963071</id>
      <parentid>1962987</parentid>
      <timestamp>2010-11-01T16:35:14Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Turkish/Contents/Interrogative - Present Continuous Tense]] to [[Turkish/Interrogative - Present Continuous Tense]]: Easier navigation.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">====Question Forms of Present Continuous Tense====
The question tag '''mi''' (or '''mı, mu, mü''') and the personal suffix follow the tense form (3rd person singular). Note the buffer consonant '''y''' and the 3rd pers. pl. (they-form).&lt;br/&gt;
&lt;br/&gt;
'''anlıyor muyum''' (do I understand?)&lt;br/&gt;
'''anlıyor musun''' (do you understand?)&lt;br/&gt;
'''anlıyor mu''' (does he, she, it understand?)&lt;br/&gt;
'''anlıyor muyuz''' (do we understand?)&lt;br/&gt;
'''anlıyor musunuz''' (do you understand?)&lt;br/&gt;
'''anlıyorlar mı''' (do they understand?)&lt;br/&gt;
&lt;br/&gt;
'''gidiyor muyum''' (do I go?, am I going?)&lt;br/&gt;
'''gidiyor musun''' (do you go?, are you going?)&lt;br/&gt;
'''gidiyor mu''' (does he, she, it go?, is he, she, it going?)&lt;br/&gt;
'''gidiyor muyuz''' (do we go?, are we going?)&lt;br/&gt;
'''gidiyor musunuz''' (do you go, are you going?)&lt;br/&gt;
'''gidiyorlar mı''' (do they go, are they going?)&lt;br/&gt;


{{Turkish/TOC}}</text>
      <sha1>14m86c6p4oiqfvvd5qfqqj3lyicpcin</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Jayson Virissimo~enwikibooks</title>
    <ns>3</ns>
    <id>40320</id>
    <revision>
      <id>2916686</id>
      <parentid>2863515</parentid>
      <timestamp>2015-04-19T05:04:25Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{{1|Welcome, {{PAGENAME}}!}}}
{| style=&quot;background:white; border:1px solid #abd5f5;; padding:0px; border-spacing:0px;&quot;
 ! style=&quot;background:#d0e5f5;&quot; | [[Wikibooks:Welcome, newcomers|Getting started]] with Wikibooks
 |-
 | style=&quot;padding:5px;&quot; |
* Wikibooks is a collection of open-source textbooks. Find out [[WB:WIW|what this means]].
* To sign your name (on talk pages), use four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; 
* For help in using the wiki, see the [[Help:Editing|editing guide]].
* Explore, [[Wikibooks:Be bold|be bold]], and have fun!
 |}

Come introduce yourself at the [[WB:SLN|new users]] page.  If you have any questions, you can ask there or contact me personally. [[User:Geocachernemesis|Geo.]]&lt;sup&gt;[[User_talk:Geocachernemesis|T]]&lt;/sup&gt; 01:23, 8 September 2005 (UTC)

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called Jayson Virissimo. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name Jayson Virissimo~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 23:16, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 05:04, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>k2xjnxzqnbx131l1j06ovlmscdlln4p</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Tkaliforniaa</title>
    <ns>3</ns>
    <id>40321</id>
    <revision>
      <id>992523</id>
      <parentid>230422</parentid>
      <timestamp>2007-10-04T15:41:22Z</timestamp>
      <contributor>
        <username>Mike's bot account</username>
        <id>67847</id>
      </contributor>
      <minor />
      <comment>substituting templates</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{{1|Welcome, {{PAGENAME}}!}}}
{| style=&quot;background:white; border:1px solid #abd5f5;; padding:0px; border-spacing:0px;&quot;
 ! style=&quot;background:#d0e5f5;&quot; | [[Wikibooks:Welcome, newcomers|Getting started]] with Wikibooks
 |-
 | style=&quot;padding:5px;&quot; |
* Wikibooks is a collection of open-source textbooks. Find out [[WB:WIW|what this means]].
* To sign your name (on talk pages), use four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; 
* For help in using the wiki, see the [[Help:Editing|editing guide]].
* Explore, [[Wikibooks:Be bold|be bold]], and have fun!
 |}

Come introduce yourself at the [[WB:SLN|new users]] page.  If you have any questions, you can ask there or contact me personally. [[User:Geocachernemesis|Geo.]]&lt;sup&gt;[[User_talk:Geocachernemesis|T]]&lt;/sup&gt; 01:24, 8 September 2005 (UTC)</text>
      <sha1>1ajliarbd3sd5d2az8w4k03g3qcw4k2</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Lord storm~enwikibooks</title>
    <ns>3</ns>
    <id>40322</id>
    <revision>
      <id>2922274</id>
      <parentid>2869355</parentid>
      <timestamp>2015-04-19T05:12:35Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{{1|Welcome, {{PAGENAME}}!}}}
{| style=&quot;background:white; border:1px solid #abd5f5;; padding:0px; border-spacing:0px;&quot;
 ! style=&quot;background:#d0e5f5;&quot; | [[Wikibooks:Welcome, newcomers|Getting started]] with Wikibooks
 |-
 | style=&quot;padding:5px;&quot; |
* Wikibooks is a collection of open-source textbooks. Find out [[WB:WIW|what this means]].
* To sign your name (on talk pages), use four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; 
* For help in using the wiki, see the [[Help:Editing|editing guide]].
* Explore, [[Wikibooks:Be bold|be bold]], and have fun!
 |}

Come introduce yourself at the [[WB:SLN|new users]] page.  If you have any questions, you can ask there or contact me personally. [[User:Geocachernemesis|Geo.]]&lt;sup&gt;[[User_talk:Geocachernemesis|T]]&lt;/sup&gt; 01:24, 8 September 2005 (UTC)

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called Lord storm. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name Lord storm~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 23:23, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 05:12, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>erv6qq1cdun8mahmib596ge9k28zre8</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Shovel8mo</title>
    <ns>3</ns>
    <id>40323</id>
    <revision>
      <id>992525</id>
      <parentid>230424</parentid>
      <timestamp>2007-10-04T15:41:32Z</timestamp>
      <contributor>
        <username>Mike's bot account</username>
        <id>67847</id>
      </contributor>
      <minor />
      <comment>substituting templates</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{{1|Welcome, {{PAGENAME}}!}}}
{| style=&quot;background:white; border:1px solid #abd5f5;; padding:0px; border-spacing:0px;&quot;
 ! style=&quot;background:#d0e5f5;&quot; | [[Wikibooks:Welcome, newcomers|Getting started]] with Wikibooks
 |-
 | style=&quot;padding:5px;&quot; |
* Wikibooks is a collection of open-source textbooks. Find out [[WB:WIW|what this means]].
* To sign your name (on talk pages), use four tildes, like this: &amp;#126;&amp;#126;&amp;#126;&amp;#126; 
* For help in using the wiki, see the [[Help:Editing|editing guide]].
* Explore, [[Wikibooks:Be bold|be bold]], and have fun!
 |}

Come introduce yourself at the [[WB:SLN|new users]] page.  If you have any questions, you can ask there or contact me personally. [[User:Geocachernemesis|Geo.]]&lt;sup&gt;[[User_talk:Geocachernemesis|T]]&lt;/sup&gt; 01:25, 8 September 2005 (UTC)</text>
      <sha1>90xgm4rq5i9yqfs4e7igar4pc20vwjv</sha1>
    </revision>
  </page>
  <page>
    <title>Creative Writing</title>
    <ns>0</ns>
    <id>40324</id>
    <revision>
      <id>1972144</id>
      <parentid>1914770</parentid>
      <timestamp>2010-11-15T13:44:40Z</timestamp>
      <contributor>
        <username>Neojacob</username>
        <id>363908</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Creative writing is a massive and inexact field. Creative writing, be it poetry, a short story, or a novel, can be a complex, intimidating, and extremely difficult undertaking. However, it can also be enormously rewarding and enjoyable. This Wikibook attempts to explain some of the principles of 'good writing', offer tips on how to write, and hopefully provide a forum for peer review.

== Basics ==
* [[/Introduction/]]
* [[/Peer Review/]]
* [[/Fiction technique/]]
* [[/Publication/]]

== Specific writing types ==
* [[/Free-Verse Poetry/]]
* [[/Short Stories/]]
* [[/Sonnets/]]
* [[/Novellas/]]
* [[/Novels/]]
* [[/Plays for the theater/]]
* [[/Comics/]]
* [[/Screenplays/]] (Screenwriting)
* [[/Autobiographies/]]
* [[/Mini Sagas/]] (Flash Fiction)

== See also ==
{{Wikipedia}}
* [[Conworld]]
* [[Cooperative Comedy]]
__NOTOC__ __NOEDITSECTION__
{{alphabetical|C}}
{{Subjects|Written communication}}
{{status|25%}}</text>
      <sha1>3acus7x7a0qp8wlywkymlfu10uyhewd</sha1>
    </revision>
  </page>
  <page>
    <title>User:Stephen Tennant</title>
    <ns>2</ns>
    <id>40328</id>
    <revision>
      <id>230498</id>
      <parentid>230497</parentid>
      <timestamp>2005-09-08T04:10:03Z</timestamp>
      <contributor>
        <username>Stephen Tennant</username>
        <id>11275</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I stay in bed all day, darling.

I registered to vote in the vfd for Manual of Crime, because it's useless and stupid (i go into detail on the vfd page). I will, however, further contribute to wikibooks, as I've just started really looking at this site, and the Manual of Crime just happened to catch my eye. 

Now, to find a ''worthy'' project...</text>
      <sha1>te69ojoryq6ggdsp7snnwp6ihvapkkh</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Mshonle/Policy</title>
    <ns>3</ns>
    <id>40329</id>
    <revision>
      <id>230516</id>
      <parentid>230511</parentid>
      <timestamp>2005-09-08T05:34:42Z</timestamp>
      <contributor>
        <username>Serge</username>
        <id>5070</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Well, I'm quite prepared to support this policy as it currently stands. It seems to enunciate everything clearly and I agree with all the exclusions and inclusions. [[User:Serge|Serge]] 05:18, September 8, 2005 (UTC)
:Thank you. I'm sure there are a couple of goofs still in there (I am not a lawyer). Just a minute ago I posted it in [[Wikibooks:Policy/Vote]] and I would greatly appreciate your public demonstration of support! [[User:Mshonle|MShonle]] 05:23, 8 September 2005 (UTC)
No worries. I have actually been quite anxious about some of the rather vague language in some of the proposed policy documents. I breathed a sigh of relief when I read something that was clear and detailed and if your policy becomes enforced, I'm sure I'll have some idea of what Wikibooks is about. Well done, and good luck. [[User:Serge|Serge]] 05:34, September 8, 2005 (UTC)</text>
      <sha1>9sjatl2ncazfxhz03fg2abtl2mqumyx</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Jargon</title>
    <ns>0</ns>
    <id>40330</id>
    <revision>
      <id>3033547</id>
      <parentid>1517733</parentid>
      <timestamp>2016-01-04T10:05:41Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <minor />
      <comment>Ladislav moved page [[REBOL Programming/Jargon]] to [[Rebol programming/Jargon]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">REBOL uses a number of terms that can be confusing to those new to computer languages.  We shall attempt to explain a number here.

=== Protocols ===

A protocol is an agreed way of performing a task.  In the real world, tribal affairs are bound by protocol - who can speak, and who can reply, and the same type of restrictions apply when we interface with something outside of REBOL.

When we retrieve email using POP3, we use the POP3 protocol in formatting our messages, and reading replies.  POP3 is a line oriented protocol which means that commands are sent one line at a time, and terminated with a '''newline''' character.

=== Schemes ===

REBOL's POP3 implementation is called the POP3 scheme.  The scheme refers to the code that implements the POP3 protocol.

You can see which schemes are installed as follows:

 &gt;&gt; probe next first system/schemes
 [default Finger Whois Daytime SMTP ESMTP POP IMAP HTTP FTP NNTP]
 == [default Finger Whois Daytime SMTP ESMTP POP IMAP HTTP FTP NNTP]

The list omits the low level schemes such as TCP and UDP.

You can install your own or third party schemes such as the mysql scheme from Nenad Rakocevic ( alias DocKimbel ).

=== Handlers ===

The scheme code creates what is called a '''handler''' at run time.  The '''handler''' code is a code object that is in general is based upon a default handler that manages the common requirements when dealing with network connections.  It thus has the code for opening, closing, reading and writing to a network connection.  Different schemes will build further upon the default handler to create a specific handler.

You can examine the source code for the whois handler with

 probe get in system/schemes 'whois

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>piwirrh0ed2asi9617gonn6iahno3md</sha1>
    </revision>
  </page>
  <page>
    <title>User:Serge/French</title>
    <ns>2</ns>
    <id>40331</id>
    <revision>
      <id>231382</id>
      <parentid>230524</parentid>
      <timestamp>2005-09-09T08:58:34Z</timestamp>
      <contributor>
        <username>Serge</username>
        <id>5070</id>
      </contributor>
      <comment>added examples, link to voting site</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Proposed new lesson structure for French Wikibook course==

 '''Level One'''                                           
 Lesson 1 - Je me presente-                       greetings, introductions, verb etre
 Lesson 2 - J'aime...                             verb aimer, infinitives -         ''j'aime nager''
 Lesson 3 - Qu'est-ce que tu vas faire?           verb aller, futur proche -        ''je vais manger''
 Lesson 4 - Quelle heure est-il?                  numbers, time, date,
 Lesson 5-  En voyage                             nationalies, simple directions -   ''ou est...? A gauche, a droit.''
 Lesson 6 - Ma Famille                            verb avoir, simple 'add an s' plural. how to give age, more adjectives.
 Lesson 7 - Le temps                              verb faire, the seasons            ''il fait beau''
 Lesson 8 - Recreation                            regular 'er' verbs -               ''je nage, vous mangez''
 Lesson 9  - L'ecole                              negation -          ''elle n'est pas notre prof, elle n'enseigne pas la science''
 Lesson 10 - Taches Menageres                     regular 'ir' and 're' verbs -      ''je tonds la pelouse''

 '''Level Two'''
 Lesson 11 - La nourriture                        du/de la/des, verb vouloir -       ''je veux du pain''
 Lesson 12 - La nourriture encore                 verbs boire and manger, au/a la/aux - ''donne l'eau au pere de Jean''
 Lesson 13 - Faisons des courses!                 verbs payer, acheter
 Lesson 14 - Petit(e)s Ami(e)s                    direct object pronouns -          ''je l'aime beaucoup. moi, je la deteste!''
 Lesson 15 - L'anniversaire                       verb envoyer, indirect object pronouns - ''il ma envoyer un cadeau, je vais lui envoyer qqch''
 Lesson 16 - Le Weekend                           passe compose -                      ''j'ai fait beaucoup de choses...''
 Lesson 17 - La Telephone                         passe compose with object pronouns - ''je lui ai telephone''
 Lesson 18 - La Television                        negatives other than ne...pas -      ''personne n'aime cette emission.''
 Lesson 19 - La marche                            y and en -                       ''j'en veux, monsieur. j'y vais, madame''
 Lesson 20 - Les Vacances                         imperfect tense                 ''nous regardions a la tele, je nagais''

&lt;big&gt; All material that doesn't (and there's not much) fit into this structure should become grammar references.

'''Notes:'''

I've used all current material that is topic relevant into this course structure. I've deliberately proposed to move all the grammar lessons like &quot;Grammaire de base&quot; and &quot;Le passe&quot; to seperate, grammar appendices.

Deliberately left conjugation until later because all school courses I know do it like that. Tried to space out grammar and provide grammar relevant to topic.

Each lesson should contain:

1. One or two dialogues, containing some new vocabulary, only the grammar to be covered plus re-enforcement of grammar and   vocabulary already learned.

2. Grammar details, with plenty of examples. 

3. Cultural points on French or francophone countries relevant to topic.

4. Exercises, which must be varied and not all of the &quot;translate into french/english&quot; type.

5. If possible, materials in French that relate to topic


&lt;big&gt; Why change? Well, because the current set-up is full of well-written stuff thats been hapharzedly placed in spots without any really overarching plan. We need to teach this language with an indepth focus, in a course structure, with an equally well written (largely already existing) grammar reference. &lt;/big&gt;


'''Qu'en pensez-vous, mes amis? Vous pouvez voter ou discuter sur la [[Talk:French_Table_of_Contents|page de discussion]]'''</text>
      <sha1>c9klikberk4g4sw3sga1hd4w05hwv9q</sha1>
    </revision>
  </page>
  <page>
    <title>File:Ifile01.jpg</title>
    <ns>6</ns>
    <id>40333</id>
    <revision>
      <id>658793</id>
      <parentid>230532</parentid>
      <timestamp>2006-11-22T17:11:17Z</timestamp>
      <contributor>
        <username>Suchenwi</username>
        <id>11126</id>
      </contributor>
      <minor />
      <comment>+ PD-self license</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Screenshot of BWidget items on an iPaq screen {{PD-self}}</text>
      <sha1>e616nl5nkbhpxiya96l3x06cerw8v8b</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Algorithms/Chapter 6</title>
    <ns>0</ns>
    <id>40334</id>
    <revision>
      <id>1928525</id>
      <parentid>1928523</parentid>
      <timestamp>2010-09-05T19:30:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>/* Fibonacci numbers */ fixed link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;noinclude&gt;{{Ada/Navigation|Algorithms|Chapter 6}}
__TOC__&lt;/noinclude&gt;

== Chapter 6: Dynamic Programming ==

=== Fibonacci numbers ===

The following codes are implementations of the [[Algorithms/Dynamic Programming#Fibonacci_Numbers|Fibonacci-Numbers examples]].

==== Simple Implementation ====

{{Ada/Sourceforge|fibonacci_1.adb}}

 ...

To calculate Fibonacci numbers negative values are not needed so we define an integer type which starts at 0. With the integer type defined you can calculate up until &lt;code&gt;Fib (87)&lt;/code&gt;. &lt;code&gt;Fib (88)&lt;/code&gt; will result in an &lt;code&gt;Constraint_Error&lt;/code&gt;.

   {{Ada/kw|type}} Integer_Type {{Ada/kw|is}} {{Ada/kw|range}} 0 .. 999_999_999_999_999_999;

You might notice that there is not equivalence for the &lt;code&gt;assert (n &gt;= 0)&lt;/code&gt; from the original example. Ada will test the correctness of the parameter ''before'' the function is called.

   {{Ada/kw|function}} Fib (n : Integer_Type) {{Ada/kw|return}} Integer_Type {{Ada/kw|is}}
   {{Ada/kw|begin}}
      {{Ada/kw|if}} n = 0 {{Ada/kw|then}}
         {{Ada/kw|return}} 0;
      {{Ada/kw|elsif}} n = 1 {{Ada/kw|then}}
         {{Ada/kw|return}} 1;
      {{Ada/kw|else}}
         {{Ada/kw|return}} Fib (n - 1) + Fib (n - 2);
      {{Ada/kw|end}} {{Ada/kw|if}};
   {{Ada/kw|end}} Fib;
 
 ...

==== Cached Implementation ====

{{Ada/Sourceforge|fibonacci_2.adb}}
 ...

For this implementation we need a special cache type can also store a -1 as &quot;not calculated&quot; marker

   {{Ada/kw|type}} Cache_Type {{Ada/kw|is}} {{Ada/kw|range}} -1 .. 999_999_999_999_999_999;

The actual type for calculating the fibonacci numbers continues to start at 0. As it is a {{Ada/kw|subtype}} of the cache type Ada will automatically convert between the two. &lt;small&gt;(the conversion is - of course - checked for validity)&lt;/small&gt;

   {{Ada/kw|subtype}} Integer_Type {{Ada/kw|is}} Cache_Type {{Ada/kw|range}}
      0 .. Cache_Type'{{Ada/attribute|Last}};

In order to know how large the cache need to be we first read the actual value from the command line.

   Value : {{Ada/kw|constant}} Integer_Type :=
      Integer_Type'Value (Ada.Command_Line.Argument (1));

The Cache array starts with element 2 since Fib (0) and Fib (1) are constants and ends with the value we want to calculate. 

   {{Ada/kw|type}} Cache_Array {{Ada/kw|is}}
      {{Ada/kw|array}} (Integer_Type {{Ada/kw|range}} 2 .. Value) {{Ada/kw|of}} Cache_Type;

The Cache is initialized to the first valid value of the cache type &amp;mdash; this is &lt;code&gt;-1&lt;/code&gt;.

   F : Cache_Array := ({{Ada/kw|others}} =&gt; Cache_Type'First);

What follows is the actual algorithm.

   {{Ada/kw|function}} Fib (N : Integer_Type) {{Ada/kw|return}} Integer_Type {{Ada/kw|is}}
   {{Ada/kw|begin}}
      {{Ada/kw|if}} N = 0 {{Ada/kw|or}} {{Ada/kw|else}} N = 1 {{Ada/kw|then}}
         {{Ada/kw|return}} N;
      {{Ada/kw|elsif}} F (N) /= Cache_Type'First {{Ada/kw|then}}
         {{Ada/kw|return}} F (N);
      {{Ada/kw|else}}
         F (N) := Fib (N - 1) + Fib (N - 2);
         {{Ada/kw|return}} F (N);
      {{Ada/kw|end}} {{Ada/kw|if}};
   {{Ada/kw|end}} Fib;
 
 ...

This implementation is faithful to the original from the [[Algorithms]] book. However, in Ada you would normally do it a little different:

{{Ada/Sourceforge|fibonacci_3.adb}}

when you use a slightly larger array which also stores the elements 0 and 1 and initializes them to the correct values

   {{Ada/kw|type}} Cache_Array {{Ada/kw|is}}
      {{Ada/kw|array}} (Integer_Type {{Ada/kw|range}} 0 .. Value) {{Ada/kw|of}} Cache_Type;
 
   F : Cache_Array :=
      (0      =&gt; 0,
       1      =&gt; 1,
       {{Ada/kw|others}} =&gt; Cache_Type'First);

and then you can remove the first {{Ada/kw|if}} path. 

 &lt;strike&gt;     {{Ada/kw|if}} N = 0 {{Ada/kw|or}} {{Ada/kw|else}} N = 1 {{Ada/kw|then}}
         {{Ada/kw|return}} N;
      els&lt;/strike&gt;{{Ada/kw|if}} F (N) /= Cache_Type'First {{Ada/kw|then}}

This will save about 45% of the execution-time &lt;small&gt;(measured on Linux i686)&lt;/small&gt; while needing only two more elements in the cache array.

==== Memory Optimized Implementation ====

This version looks just like the original in WikiCode.

{{Ada/Sourceforge|fibonacci_4.adb}}

   {{Ada/kw|type}} Integer_Type {{Ada/kw|is}} {{Ada/kw|range}} 0 .. 999_999_999_999_999_999;
 
   {{Ada/kw|function}} Fib (N : Integer_Type) {{Ada/kw|return}} Integer_Type {{Ada/kw|is}}
      U : Integer_Type := 0;
      V : Integer_Type := 1;
   {{Ada/kw|begin}}
      {{Ada/kw|for}} I {{Ada/kw|in}}  2 .. N {{Ada/kw|loop}}
         Calculate_Next : {{Ada/kw|declare}}
            T : {{Ada/kw|constant}} Integer_Type := U + V;
         {{Ada/kw|begin}}
            U := V;
            V := T;
         {{Ada/kw|end}} Calculate_Next;
      {{Ada/kw|end}} {{Ada/kw|loop}};
      {{Ada/kw|return}} V;
   {{Ada/kw|end}} Fib;

==== No 64 bit integers ====

Your Ada compiler does not support 64 bit integer numbers? Then you could try to use [[Ada Programming/Types/delta|decimal numbers]] instead. Using decimal numbers results in a slower program &lt;small&gt;(takes about three times as long)&lt;/small&gt; but the result will be the same.

The following example shows you how to define a suitable decimal type. Do experiment with the {{Ada/kw|digits}} and {{Ada/kw|range}} parameters until you get the optimum out of your Ada compiler.

 {{Ada/Sourceforge|fibonacci_5.adb}}

   {{Ada/kw|type}} Integer_Type {{Ada/kw|is}} {{Ada/kw|delta}} 1.0 {{Ada/kw|digits}} 18 {{Ada/kw|range}}
      0.0 .. 999_999_999_999_999_999.0;

You should know that floating point numbers are unsuitable for the calculation of fibonacci numbers. They will not report an error condition when the number calculated becomes too large &amp;mdash; instead they will lose in precision which makes the result meaningless.

&lt;noinclude&gt;
[[Category:Ada Programming|Chapter 1]]
&lt;/noinclude&gt;</text>
      <sha1>b6z0wlukqet6qfd62mgb3v6bl6g4qqr</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Algorithms</title>
    <ns>0</ns>
    <id>40339</id>
    <revision>
      <id>1928517</id>
      <parentid>1373194</parentid>
      <timestamp>2010-09-05T19:15:01Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>remove outdated navigation</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;noinclude&gt;__TOC__&lt;/noinclude&gt;

{{:Ada Programming/Algorithms/Intro}}
{{:Ada Programming/Algorithms/Chapter 1}}
{{:Ada Programming/Algorithms/Chapter 6}}

&lt;noinclude&gt;
[[Category:Ada Programming|Algorithms]]
&lt;/noinclude&gt;</text>
      <sha1>m34ta643o1api28klamayba7wvwzde1</sha1>
    </revision>
  </page>
  <page>
    <title>Neapolitan/adjectives</title>
    <ns>0</ns>
    <id>40341</id>
    <revision>
      <id>3040078</id>
      <parentid>1805242</parentid>
      <timestamp>2016-01-22T22:09:53Z</timestamp>
      <contributor>
        <ip>93.150.220.84</ip>
      </contributor>
      <comment>/* Adjectives in Neapolitan */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Neapolitan}}

==Adjectives in Neapolitan==
As with other Romance languages, adjective endings in Neapolitan change depending upon what the gender and number of the item they modify are.
{| class=&quot;wikitable&quot;
|style=&quot;width:100px&quot;, bgcolor=&quot;#e9e3c5&quot;| '''gender'''
|style=&quot;width:100px&quot;, bgcolor=&quot;#e9e3c5&quot;|'''singular'''
|style=&quot;width:100px&quot;, bgcolor=&quot;#e9e3c5&quot;| '''plural'''
|-
|align=&quot;left&quot;|masculine
|align=&quot;left&quot;, bgcolor=&quot;#c9c8a9&quot;|'''o'''
|align=&quot;left&quot;, bgcolor=&quot;#c9c8e9&quot;|'''e'''
|-
|align=&quot;left&quot;|feminine
|align=&quot;left&quot;, bgcolor=&quot;#c9c8a9&quot;|'''a'''
|align=&quot;left&quot;, bgcolor=&quot;#c9c8e9&quot;|'''e'''
|-
|align=&quot;left&quot;|neuter
|align=&quot;left&quot;, bgcolor=&quot;#c9c8a9&quot;|'''o'''
|align=&quot;left&quot;, bgcolor=&quot;#c9c8e9&quot;|'''e'''
|}

For the most part, adjectives follow the object they describe, for example-- ''''''a scìgna janca''''', the white monkey, though literally it reads &quot;the monkey white&quot;.



===Possessive Adjectives===
{| class=&quot;wikitable&quot;
|bgcolor=#e9e3c5 align=&quot;left&quot; style=&quot;width:60px&quot;|'''English'''
|bgcolor=#e9e3c5 align=&quot;left&quot; style=&quot;width:60px&quot;|'''Neap. masc.'''
|bgcolor=#e9e3c5 align=&quot;left&quot; style=&quot;width:60px&quot;|'''Neap. fem.'''

|-
|align=&quot;left&quot;|mine
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|mio
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|mia
|-
|align=&quot;left&quot;|yours
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|tujo
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|toja
|-
|align=&quot;left&quot;|his
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|sujo
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|soja
|-
|align=&quot;left&quot; |ours
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|nuosto
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|nuosta
|-
|align=&quot;left&quot;|yours
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|vuosto
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|vuosta
|-
|align=&quot;left&quot;|theirs
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|(l)loro
|align=&quot;left&quot; bgcolor=&quot;#c9c8e9&quot;|(l)loro
|-
|}

In Neapolitan, as with other Southern Italian vernaculars, there can be a fusion of the possessive adjective with the noun it refers to.  For example:  '''mammema''' for ''my mother''; '''fratemo''' for ''my brother''; '''sòcrema''' for ''my mother-in-law''; '''sòreta''' for ''your sister'' (the  '''e''' within these words are a muted schwa sound). This applies only to words that indicate relationships with a family and probably stems from Greek ('''agapèmo''' for ''my love'', for example).

== References ==
Carlo Iandolo: '''A lengua 'e Pulecenella - Grammatica napoletana'', chapter ''Aggettivi'' (p. 173 et seq.)

[[es:Napolitano/Adjetivos]]
[[it:Napoletano/Aggettivi]]</text>
      <sha1>czrt9aze69me7yud8frvscqidfyr0zy</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Algorithms/Sample</title>
    <ns>10</ns>
    <id>40342</id>
    <revision>
      <id>1618160</id>
      <parentid>1618156</parentid>
      <timestamp>2009-08-28T16:46:18Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed catgory</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;div id=&quot;toc&quot;&gt;&lt;small&gt;This code sample is also available in {{{1}}}.&lt;/small&gt;&lt;/div&gt;&lt;noinclude&gt;{{BookCat}}&lt;/noinclude&gt;</text>
      <sha1>ifpzbcu3vslmxwyyogohpzyxozo1tjq</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:FerKo~enwikibooks</title>
    <ns>3</ns>
    <id>40349</id>
    <revision>
      <id>2910877</id>
      <parentid>2857409</parentid>
      <timestamp>2015-04-19T04:59:09Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I am a native Hungarian speaker currently staying in England.
Interested in teaching Hungarian and/or English, have experience and aids.
Prepared to develop a course here in conjunction with other wiki authors/editors.
[[User:FerKo|FerKo]] 10:11, 8 September 2005 (UTC)

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called FerKo. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name FerKo~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 23:09, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 04:59, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>232h9c99lg453e8ngg20bns020ylls0</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Pjmt~enwikibooks</title>
    <ns>3</ns>
    <id>40365</id>
    <revision>
      <id>2931134</id>
      <parentid>2878649</parentid>
      <timestamp>2015-04-19T05:22:52Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Greetings Congin. just as an FYI, we did some more work on the EQ wikibook - http://en.wikibooks.org/wiki/EverQuest . Would be nice if you'd have a look some stage and see, if you can help expanding? thank you /bow --[[User:Kajolus|Kajolus]] 11:25, September 8, 2005 (UTC)&lt;br&gt;
I've stopped Everquest for the time being, and have moved back to Everquest II --[[User:Pjmt|Congin]] 13:52, 17 October 2005 (UTC)

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called Pjmt. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name Pjmt~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 23:35, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 05:22, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>0tin1clg9lctrkp467eewhwmj6hubqa</sha1>
    </revision>
  </page>
  <page>
    <title>Blender 3D: Noob to Pro/Particle Systems</title>
    <ns>0</ns>
    <id>40367</id>
    <revision>
      <id>3053812</id>
      <parentid>3053810</parentid>
      <timestamp>2016-03-02T17:20:34Z</timestamp>
      <contributor>
        <username>Chekruizinga2</username>
        <id>2566302</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{B3D:N2P/NAV
|next=Making Fire
|previous=Using the sequencer to compile frames into an animation
}}
{{B3D:N2P/ForVersion|2.66}}

==Introduction==
Particle systems are used to simulate large amounts of small moving objects, creating phenomena of higher order like fire, dust, clouds, smoke, or fur, grass and other strand based objects. You may also use other objects as a visualization of particles.

Before you start with the tutorials, you should at least take a brief overview about the very extensive [http://www.blender.org/manual/physics/particles/index.html documentation pages] of the particle system. You will find every single parameter explained in the manual if you have the desire to delve deeper ...

Don't forget: particles alone don't do any magic. They are only a placeholder for something nice to view. You have to take care of the visualization also, and that is usually the harder part than to create the particle system. 

== The very first particle system ==
=== Creating a particle system ===
[[File:Blender266ParticlePropsEmpty.png|framed|'''Image 1a:''' Where to create a new particle system]]
[[File:Blender266ParticlePropsInitial.png|framed|right|'''Image 1b:''' The very first particle system]]
To create a particle system:
* Create a mesh object to be the “parent” (source) of the particles (only mesh objects can emit particles). Let’s use a simple plane to start with.
* select the object
* change to the Particles [[File:Blender255ParticlesContextButton.png]] tab in the Object Properties window
* click on the “+” button ('''Image.&amp;nbsp;1a''')

Voila, your first particle system ('''Image.&amp;nbsp;1b''')! It doesn't do anything useful now, but we're going to change that on the following pages. 

* To see the particles, you must start the animation running by pressing {{B3D:N2P/Do|Alt|A}}. You will see particles appear and fall from the plane. Press {{B3D:N2P/Do|Esc}} to stop the animation; you return to frame 1. The particle movement is cached (stored), so if you play your animation again it will go faster (well, you won't notice any difference in this simple case).
* If you want to stop the animation in the current frame, press {{B3D:N2P/Do|Alt|A}} while it is running instead of {{B3D:N2P/Do|Esc}}.
* The shortcut for returning to the first frame is {{B3D:N2P/Do|Shift|←}}) 
* To see the particles even better change to wireframe mode ({{B3D:N2P/Do|Z}}),  
If you change anything in your particle system you always have to return to frame 1, to recalculate the system from the start.

Use the ''timeline'' window along the bottom of the screen to change easily between frames.

{{B3D:N2P/Note|'''Ultra Physics Coolness:''' 

While the animation is running, you can move the objects in the 3D window and the particle system is updated in realtime. The system is not cached then.
}}

=== Changing properties of the system ===
[[File:Blender266ParticlesFalling.png|framed|'''Image 2a:''' Particles emitted in the direction of the face normal of the plane]]
Some important settings, from the “Emission” panel:
* ''Number:'' the total number of particles; increase this to 5000
* ''Start:'' and ''End:'' the start and end frame of the emission
* ''Lifetime:'' the lifetime in frames of the particles
And in the “Velocity” panel are settings that combine to determine the initial velocity of the particles:
* ''Normal:'' a velocity component in the direction of the face normal (if emitted from faces)
* ''Tangent:'' a velocity component parallel to the face
* ''Rotation:'' controls the direction of the tangent velocity component
* ''Emitter Object X/Y/Z'': a velocity component oriented in the object’s coordinate system
* ''Object:'' a multiplier that imparts some proportion of the object velocity to the particles (try moving the object around with a nonzero value for this field to see its effect)
* ''Random:'' a random contribution to the object velocity

Initially, the plane has its face normal oriented upwards. However, it probably looks like the particles are emitted downwards. This is because the initial normal velocity of 1.0 is quite small compared to the force of gravity (which is on by default). Try increasing it to something like 10.0, and when you rerun the animation, you should see the particles rise quite high above the plane before falling down again.

If you render a frame with particles showing, you will see the particles appear as white blobs. This is the default ''Halo'' rendering of the particles.
{{clr}}

=== Changing the material of the particles ===
[[File:Blender266FirstParticlesMaterial.png|framed|right|'''Image 3a:''' The first simple ''Halo'' material.]]
* Switch the Properties window to the Materials [[File:Blender255MaterialContextButton.png]] tab and create a new material for the plane. 
* Change the material type to ''Halo''. (see also the [http://wiki.blender.org/index.php/Doc:2.6/Manual/Materials/Special_Effects/Halos Manual on Halos]). Halos are a post rendering effect, that is applied after the scene is finished. So halos can't shed any lights on other objects, they are not rendered behind ''RayTransp'' materials (like glass). 

[[File:Blender3D TheVeryFirstParticleSystem Render-2.49.jpg|framed|'''Image 3b:''' Our first particle system rendered in frame 68]]
* Set the color to deep blue (RGB: 0/0/1)
* ''Size:'' 0.05 so each halo is quite small.
* ''Hardness:'' 127 so that each halo has the maximum sharp edge
* ''Add:'' 0.5 so that the brightness increases where several halos overlap

Set the world color to black and render ('''Img.&amp;nbsp;3b'''). Nothing special till now, but that will change soon. So proceed to the next page, where we're going to make some fire.

{{clr}}
{{B3D:N2P/NAV
|next=Making Fire
|previous=Using the sequencer to compile frames into an animation
}}</text>
      <sha1>97paxzquss3z1oh5zdpef1t2p3a3opz</sha1>
    </revision>
  </page>
  <page>
    <title>User:MartinMai</title>
    <ns>2</ns>
    <id>40368</id>
    <revision>
      <id>230683</id>
      <timestamp>2005-09-08T11:51:58Z</timestamp>
      <contributor>
        <username>MartinMai</username>
        <id>11252</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">http://commons.wikimedia.org/wiki/User:MartinMai</text>
      <sha1>6moh5eim5he4fkgxucrjyzvi2sc3lf5</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Ant</title>
    <ns>0</ns>
    <id>40369</id>
    <revision>
      <id>2537702</id>
      <parentid>2532945</parentid>
      <timestamp>2013-06-20T13:12:21Z</timestamp>
      <contributor>
        <username>Dmccreary</username>
        <id>11286</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;u&gt;''''''Apache Ant'''''' (&lt;/u&gt;or simply Ant) is an [[XML]]-based build scripting language used heavily by the Open Source community.  Ant automates tasks such as compiling source code, building deployment packages and automatically checking dependencies of what items need to be updated in a build set.

== Background ==
This wikibook was based on a presentation created by [[Dan McCreary]] for the Minnesota [http://josug.org/ Java Open Source User Group].  Dan felt strongly that a gentle introduction to Ant was necessary for new people to easily learn Ant.  The existing Ant documentation, although useful for advanced Ant users, did not meet the needs of most beginners.  For example in the Apache documentation, advanced concepts such as token filters were placed directly in the introduction for beginners.  The introductory material also did not contain full examples with complete sample build files and expected output.  Something else was needed.  At the same time the introductory material assumed that the reader was familiar with XML.  This material covers some of the material you need to know about XML to build Ant scripts.

This Wikibook is also designed to work with other XML-related programming wikibooks such as [[XML Schema]] and [[XForms]].

== Book Structure ==

This document has an introduction page for people just getting started.  Mostly hello world information to get a flavor for what Ant is and how it is used.  At the end there are six sections:

=== Introduction ===
## [[/Background/]] - History and motivation for Apache Ant {{stage short|100%|Sept 6th, 2006}}
## [[/Adoption/]] - How and why organizations should adopt Apache Ant {{stage short|100%|Sept 6th, 2006}}
## [[/XML Summary/]] - A short review of XML syntax for people that are not familiar with XML.  This section can easily be skipped by users that already know about XML file structure. {{stage short|100%|Sept 6th, 2006}}

=== [[/Getting Started/]] ===
## [[/Getting Started/Installation/|Installation]] How to download and install Apache Ant {{stage short|100%|Sept 6th, 2006}}
## [[/Getting Started/Testing/|Testing]] How to test Apache Ant {{stage short|100%|Sept 6th, 2006}}
## [[/Getting Started/Hello World/|Hello World]] How to run a small ant program that prints &quot;Hello World!&quot; {{stage short|100%|Sept 6th, 2006}}
# '''[[/Core Concepts/|Core Concepts]]''' - Core Terms and Concepts useful to Ant developers
## [[/Core Concepts/Terminology/|Terminology]] - Terminology (projects, targets and tasks) {{stage short|100%|Sept 6th, 2006}}
## [[/Build File Structure/]]- The structure of a build file {{stage short|75%|Sept 6th, 2006}}
## [[/Property/]] Using Properties {{stage short|100%|Sept 6th, 2006}}
## [[/Depends/]] Setting up Dependencies {{stage short|100%|Sept 6th, 2006}}
## [[/Fileset/]] Using Fileset {{stage short|100%|Sept 6th, 2006}}

=== Best Practices ===
# '''[[/Best Practices/|Ant Best Practices]]''' - Best practices such as how to set up an Ant file {{stage short|100%|Sept 6th, 2006}}
## [[/Best Practices/Standard Targets/|Standard Targets]] - A list of standard targets such as init and clean {{stage short|100%|Sept 6th, 2006}}
## [[/Best Practices/Local Property Files/|Local Property Files]] - how to use a local property file {{stage short|100%|Sept 6th, 2006}}
## [[/Best Practices/Local File Systems/|Local File Systems]] - removing local file system dependencies

=== Examples ===
# '''Ant Cookbook''' - A set of small complete working example programs that demonstrate examples of how to use Apache Ant
## [[/Depends/]] - shows how to use the targets depends attribute {{stage short|100%|Sept 6th, 2006}}
## [[/Property/]] - shows how to use an Ant property {{stage short|100%|Sept 6th, 2006}}
## [[/Fileset/]] - shows how to use an Ant fileset {{stage short|100%|Sept 6th, 2006}}

=== Ant Tasks that Manipulate XML ===
[[/XML/]] - how Ant can be used to process XML documents {{stage short|100%|Sept 6th, 2006}}
# [[/XMLwellformed/]] - how to use Apache ant to check an XML file for well formedness {{stage short|100%|Sept 6th, 2006}}
# [[/XMLvalidate/]] - how to use Apache ant to validate an XML file agains an XML Schema {{stage short|100%|Sept 6th, 2006}}
# [[/XSLT/]] - how to use Apache ant to run an XML transform {{stage short|100%|Sept 6th, 2006}}
# [[/Running Saxon/]] - how to use Apache ant to run Saxon {{stage short|100%|March 26th, 2010}}
# [[/Passing Parameters to XSLT/]] - How to pass parameters to an XSLT transform from Apache Ant {{stage short|50%|Sept 6th, 2007}}
# [[/XQuery/]] - Using XQuery to transform XML documents {{stage short|25%|Feb 26th, 2010}}
# [[/Converting Excel to XML/]] - We use the Apache tika library to convert MS-Excel to XML {{stage short|50%|March 4th, 2013}}
# [[/Cleaning up HTML/]] - Use the Apache tika library to clean up HTML {{stage short|50%|June 20th, 2013}}
# [[/Converting PDF to XML/]] - We use the Apache tika library to convert PDF to XML {{stage short|25%|March 4th, 2013}}

=== Ant Tasks that Manipulate eXist ===
# [[/Store XML data/]] - an ant task that will store collection into eXist
# [[/Reindex a Collection /]] - an ant task that can reindex an eXist collection
# [[/Execute an XQuery/]] - a sample ant task to execute an XQuery
# [[/Creating a .xar file/]] - a sample ant task to create an XML archive file for packing modules or apps {{stage short|25%|Nov 11th, 2012}}
=== References ===
# [[/References/]] - where to get more information on Apache Ant {{stage short|25%|Sept 6th, 2006}}

== See Also ==
* [[XForms]] - how to use XForms to create and update XML files to create web form &quot;front-ends&quot; to your Ant scripts
* [[XQuery]] - how to use XQuery to generate and update your Ant build files

{{Subjects|Scripting languages}}
{{alphabetical|A}}
{{status|100%}} __NOTOC__ __NOEDITSECTION__

[[es:Apache Ant]]</text>
      <sha1>hoz1uisvwe89yod333yf7ehdk6cco21</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:X86 Disassembly/Disassemblers and Decompilers</title>
    <ns>1</ns>
    <id>40372</id>
    <revision>
      <id>2951519</id>
      <parentid>2312675</parentid>
      <timestamp>2015-05-01T00:17:15Z</timestamp>
      <contributor>
        <username>Andy80586</username>
        <id>1612490</id>
      </contributor>
      <comment>/* DCC updates */ new section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== disassemblers for a variety of platforms and processor architectures ==

'''NEEDED:''' we need to prepare a list of ''good'' disassemblers for each platform. also, we should probably get disassemblers for different processor architectures too, because x86 isnt the only assembly language in the world (although it will be the major one that we consider in this wikibook) --[[User:Whiteknight|Whiteknight]] 13:28, 8 September 2005 (UTC)

: I see that a bunch of non-x86 disassemblers have recently been been added. Thank you, anonymous users and [[User:Adrignola]].
: It seems a bit awkward to have non-x86 stuff in a book with the title &quot;x86 Disassembly&quot;.
: So I expect that list to be moved to some other wikibook -- someday.
: Until that day, [[X86 Disassembly/Disassemblers and Decompilers]] seems to be the best place at Wikibooks for that list of disassemblers.
: --[[User:DavidCary|DavidCary]] ([[User talk:DavidCary|discuss]] • [[Special:Contributions/DavidCary|contribs]]) 05:09, 2 February 2011 (UTC)

== The Question ==

I don't think it's reasonable to compare the original C code to the disassembled assembly code, because obviously, C is not assembly. Also, as mentioned in this page, disassembled assembly is very messy. --[[User:Wj32|Wj32]] 10:15, 8 January 2007 (UTC)

== Radare ==

Radare[http://radare.org/new/?doc] should be added. It supports numerous architectures and operating systems, so it doesn't really fit in with any of these categories..
: {{done}}. Thank you. --[[User:DavidCary|DavidCary]] ([[User talk:DavidCary|discuss]] • [[Special:Contributions/DavidCary|contribs]]) 05:09, 2 February 2011 (UTC)

== Udis86 == 
I think udis86 deserves some mention (http://udis86.sourceforge.net/) as it is an x86 disassembler library with a CLI interface written for Linux.
: {{done}}. Thank you. --[[User:DavidCary|DavidCary]] ([[User talk:DavidCary|discuss]] • [[Special:Contributions/DavidCary|contribs]]) 05:09, 2 February 2011 (UTC)

== Disassembly of 8/32 bit CPUs. ==

These statements need changing:

  &quot;Most CPUs are 8-bit CPUs.&quot;

  &quot;Most 32-bit CPUs use the ARM instruction set.&quot;

The first was true 20 years ago, not now. Perhaps &quot;Most OLD CPUs are 8-bit&quot;. Or possibly something like &quot;Most embedded processors in use today are 8-bit&quot;.

As for the second statement, this can only be true in an embedded context. Surely 32-bit x86 code dominates the landscape of programs that might want to be decompiled.

[[Special:Contributions/124.189.213.129|124.189.213.129]] ([[User talk:124.189.213.129|discuss]]) 22:53, 12 August 2011 (UTC)

: You may be right -- freshly-manufactured 32-bit CPUs may have out-sold freshly-manufactured 8-bit CPUs last year (2010).
: But before I change those statements, as suggested, let me ask:
: May I ask how you can be so confident?
: Do you (or anyone else) have any [[wikipedia:wp:verifiability|source]] that is more persuasive than an IP-address anonymous comment?
: Do you have any idea how many 8-bit CPUs Microchip sold in 2002 or any more recent year?
: Do you have any idea how many 32-bit CPUs ARM licensed in 2002 or any more recent year?
: How can you know whether or not 8-bit CPUs outsold 32-bit CPUs in 2010, or (more or less equivalently) whether or not more 8-bit CPUs were manufactured in 2010 than 32-bit CPUs?

: I have one 2002 reference that indicates that 4-bit CPUs outsold 32-bit CPUs in 2002, and 8-bit CPUs outsold 4-bit CPUs. (That includes *all* CPUs, both general-purpose and embedded).[http://electronics.stackexchange.com/questions/12979/do-4-bit-cpus-still-outsell-32-bit-cpus-in-unit-volume][http://www.eetimes.com/discussion/other/4024488/The-Two-Percent-Solution].
: I have a more recent reference for (32-bit) ARM CPUs sold in 2005 -- about 1.6 billion.[http://news.cnet.com/ARMed-for-the-living-room/2100-1006_3-6056729.html]
: I would like a comparable [[Wikibooks:Original_research#Verifiable_information | verifiable]] reference for 8-bit processors -- or, preferably, even more recent references for both.
: However, if neither you or I or anyone else can find comparable information more recent than 2002, then I guess we are stuck with that 2002 reference. --[[User:DavidCary|DavidCary]] ([[User talk:DavidCary|discuss]] • [[Special:Contributions/DavidCary|contribs]]) 23:37, 25 August 2011 (UTC)

I made the same (perhaps incorrect) assumption as 124.189.213.129 and removed the &quot;Most CPUs are 8-bit CPUs&quot; sentence, but replaced it after reading this discussion. I've since changed both occurrences of &quot;most&quot; to &quot;many&quot;, which I think conveys the same large numbers of the CPUs in question, but avoids the conflict of which one is ''actually'' more common. [[User:Jfmantis|Jfmantis]] ([[User talk:Jfmantis|discuss]] • [[Special:Contributions/Jfmantis|contribs]]) 03:03, 29 November 2011 (UTC)

Thank you, Jfmantis. --[[User:DavidCary|DavidCary]] ([[User talk:DavidCary|discuss]] • [[Special:Contributions/DavidCary|contribs]]) 16:47, 25 April 2012 (UTC)

== PE Explorer is buggy ==

PE Explorer (1.99 V6) tends to crash while scrolling through some CRT parts of GCC-built executables. I don't know what exactly is causing the problem, just that it happens. --[[Special:Contributions/87.251.51.88|87.251.51.88]] ([[User talk:87.251.51.88|discuss]]) 13:29, 12 December 2011 (UTC)

== DCC updates ==

Apparently DCC is not dead despite its age, its Github page has had quite a few commits. The main developer appears to be a Boomerang contributor as well - I wonder if a merger of the two projects is somewhere on the (likely hella distant) horizon.
[[User:Andy80586|Andy80586]] ([[User talk:Andy80586|discuss]] • [[Special:Contributions/Andy80586|contribs]]) 00:17, 1 May 2015 (UTC)</text>
      <sha1>8dzwy57md0uxblcjd69lzlptq8xoh5t</sha1>
    </revision>
  </page>
  <page>
    <title>User:Dmccreary</title>
    <ns>2</ns>
    <id>40373</id>
    <revision>
      <id>2631487</id>
      <parentid>1616247</parentid>
      <timestamp>2014-04-18T17:37:54Z</timestamp>
      <contributor>
        <username>Dmccreary</username>
        <id>11286</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Dan McCreary is an author and data architect from Minnesota.  He is co-author of the book [http://manning.com/mccreary Making Sense of NoSQL].  He is working on four wikibooks:
# [[XRX]]
# [[XQuery]]
# [[XForms]]
# [[Apache Ant]]

His personal web site is:

[http://www.danmccreary.com http://www.danmccreary.com]

He is interested in the [http://en.wikipedia.org/wiki/Semantic_web semantic web] and [http://en.wikipedia.org/wiki/Metadata_publishing metadata publishing].

{{User css-2}}
{{programming language|c|3}}
{{programming language|objective-c|3}}
{{programming language|sql|3}}
{{programming language|XQuery|4}}
{{programming language|XForms|4}}
{{programming language|pascal|2}}</text>
      <sha1>08vbpza24h5rgnk8h4a1epcsdwg5g4g</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Ant/Depends</title>
    <ns>0</ns>
    <id>40374</id>
    <revision>
      <id>1235987</id>
      <parentid>1232812</parentid>
      <timestamp>2008-07-22T17:49:23Z</timestamp>
      <contributor>
        <username>Zerted</username>
        <id>97690</id>
      </contributor>
      <minor />
      <comment>Added next cookbook chapter link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The &lt;code&gt;depends&lt;/code&gt; attribute can be included in the &lt;code&gt;target&lt;/code&gt; tag to specify that this target requires another target to be executed prior to being executed itself. Multiple targets can be specified and separated with commas.

&lt;code&gt;&lt;target name=&quot;one&quot; depends=&quot;two, three&quot;&gt;&lt;/code&gt;

Here, target &quot;one&quot; will not be executed until the targets named &quot;two&quot; and &quot;three&quot; are, first.

==Example of using the &lt;code&gt;depends&lt;/code&gt; attribute==
Here is an example of a build file that executes three targets in order, first, middle and last.  Note that the order the targets appear in the build file is unimportant:

   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
   &lt;!-- demonstration of dependency ordering --&gt;
   &lt;project default=&quot;three&quot;&gt;
      &lt;target name=&quot;one&quot;&gt;
         &lt;echo&gt;Running One&lt;/echo&gt;
      &lt;/target&gt;
   
      &lt;target name=&quot;two&quot; depends=&quot;one&quot;&gt;
         &lt;echo&gt;Running Two&lt;/echo&gt;
      &lt;/target&gt;
   
      &lt;target name=&quot;three&quot; depends=&quot;two&quot;&gt;
         &lt;echo&gt;Running Three&lt;/echo&gt;
      &lt;/target&gt;
   &lt;/project&gt;

'''Sample Output:'''
   Buildfile: build.xml
   
   one:
      [echo] Running One
   
   two:
      [echo] Running Two
   
   three:
      [echo] Running Three
   
   BUILD SUCCESSFUL
   Total time: 0 seconds

==Redundant dependency==

Ant keeps track of what targets have already run and will skip over targets that have not changed since they were run elsewhere in the file, for example:

   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
   &lt;!-- demonstration of redundant targets --&gt;
   &lt;project default=&quot;three&quot;&gt;
      &lt;target name=&quot;one&quot;&gt;
         &lt;echo&gt;Running One&lt;/echo&gt;
      &lt;/target&gt;
   
      &lt;target name=&quot;two&quot; depends=&quot;one&quot;&gt;
         &lt;echo&gt;Running Two&lt;/echo&gt;
      &lt;/target&gt;
   
      &lt;target name=&quot;three&quot; depends=&quot;one, two&quot;&gt;
         &lt;echo&gt;Running Three&lt;/echo&gt;
      &lt;/target&gt;
   &lt;/project&gt;

will produce the same output as above - the target &quot;one&quot; will '''not''' be executed twice, even though both &quot;two&quot; and &quot;three&quot; targets are run and each specifies a dependency on one.

==Circular dependency==

Similarly, ant guards against circular dependencies - one target depending on another which, directly or indirectly, depends on the first. So the build file:

   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
   &lt;!-- demonstration of circular dependency --&gt;
   &lt;project default=&quot;one&quot;&gt;
      &lt;target name=&quot;one&quot; depends=&quot;two&quot;&gt;
         &lt;echo&gt;Running One&lt;/echo&gt;
      &lt;/target&gt;
   
      &lt;target name=&quot;two&quot; depends=&quot;one&quot;&gt;
         &lt;echo&gt;Running Two&lt;/echo&gt;
      &lt;/target&gt;
   &lt;/project&gt;

Will yield an error:

   Buildfile: build.xml
   
   BUILD FAILED
   Circular dependency: one &lt;- two &lt;- one
   
   Total time: 1 second

[[../Fileset/|Next Chapter]], [[../Property/|Next Cookbook Chapter]]

[[Category:Apache Ant]]</text>
      <sha1>60e4j6sh273cu60o41djnox3o0qj1d0</sha1>
    </revision>
  </page>
  <page>
    <title>Apache Ant/Property</title>
    <ns>0</ns>
    <id>40377</id>
    <revision>
      <id>2594995</id>
      <parentid>2083841</parentid>
      <timestamp>2013-12-21T11:48:40Z</timestamp>
      <contributor>
        <ip>79.120.160.168</ip>
      </contributor>
      <comment>updated URLof getProperties</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Ant does not have variables like in most standard programming languages.  Ant has a structure called '''properties'''.  Understanding how properties work is critical to understanding how (and why) Ant works so well.

Here is a simple demonstration of how to set and use properties 
&lt;source lang=&quot;xml&quot;&gt;
  &lt;project name=&quot;My Project&quot; default=&quot;MyTarget&quot;&gt;
      &lt;!-- set global properties --&gt;
      &lt;property name=&quot;SrcDir&quot; value=&quot;src&quot;/&gt;
      &lt;property name=&quot;BuildDir&quot; value=&quot;build&quot;/&gt;
      &lt;target name=&quot;MyTarget&quot;&gt;
         &lt;echo message = &quot;Source directory is = ${SrcDir}&quot;/&gt;
         &lt;echo message = &quot;Build directory is ${BuildDir}&quot;/&gt;
      &lt;/target&gt;
   &lt;/project&gt;
&lt;/source&gt;

Note that to use a property you have to put a dollar sign and left curly brace before it and a right curly brace after it.  Don't get these confused with parens.

When you run this you should get the following:

   Buildfile: C:\AntClass\PropertiesLab\build.xml
   MyTarget:
        [echo] Source directory is = src
        [echo] Build directory is build
   BUILD SUCCESSFUL
   Total time: 204 milliseconds

Ant properties are '''immutable''' meaning that once they are set they cannot be changed within a build process!  This may seem somewhat odd at first, but it is one of the core reasons that once targets are written they tend to run consistently without side effects.  This is because targets only run if they have to and you cannot predict the order a target will run.

Properties do not have to be used only inside a target.  They can be set anywhere in a build file (or an external property file) and  referenced anywhere in a build file after they are set.

Here is a small Ant project that demonstrates the immutability of a property:

&lt;source lang=&quot;xml&quot;&gt;
   &lt;project name=&quot;My Project&quot; default=&quot;MyTarget&quot;&gt;
      &lt;target name=&quot;MyTarget&quot;&gt;
         &lt;property name=&quot;MyProperty&quot; value=&quot;One&quot;/&gt;
         &lt;!-- check to see that the property gets set --&gt;
         &lt;echo&gt;MyProperty = ${MyProperty}&lt;/echo&gt;
         &lt;!-- now try to change it to a new value --&gt;
         &lt;property name=&quot;MyProperty&quot; value=&quot;Two&quot;/&gt;
         &lt;echo&gt;MyProperty = ${MyProperty}&lt;/echo&gt;
      &lt;/target&gt;
   &lt;/project&gt;
&lt;/source&gt;

When you run this, you should get the following output:

   Buildfile: C:\AntClass\PropertiesLab\build.xml
   MyTarget:
        [echo] MyProperty = One
        [echo] MyProperty = One
   BUILD SUCCESSFUL
   Total time: 343 milliseconds

Note that despite trying to change MyProperty to be &quot;Two&quot;, the value of MyProperty does '''not''' change.  Ant will '''not''' warn you of this.

For newcomers this might seem strange, but this is ideally suited for building up complex trees of values that are set once and used over and over again.  It makes your build scripts easy to maintain and reliable.

Ant also has a nice set of &quot;built in&quot; properties that you can use:

This demonstrates how to read system properties

&lt;source lang=&quot;xml&quot;&gt;
   &lt;project name=&quot;MyProject&quot; default=&quot;Display-Builtins&quot;&gt;
      &lt;target name=&quot;Display-Builtins&quot; description=&quot;Display Builtin Properties&quot;&gt;
         &lt;!-- the absolute path to the location of the buildfile --&gt;
         &lt;echo&gt;${basedir}&lt;/echo&gt;
         &lt;!-- the absolute path of the buildfile --&gt;
         &lt;echo&gt;${ant.file}&lt;/echo&gt;
         &lt;!-- ant.version - the version of Ant that you are running --&gt;
         &lt;echo&gt;${ant.version}&lt;/echo&gt;
         &lt;!-- ant.project.name - the name of the project that is currently executing; it is set in the name attribute of &lt;project&gt;. --&gt;
         &lt;echo&gt;${ant.project.name}&lt;/echo&gt;
         &lt;!-- ant.java.version - the JVM version Ant detected; currently it can hold the values &quot;1.1&quot;, &quot;1.2&quot;, &quot;1.3&quot;, &quot;1.4&quot; and &quot;1.5&quot;. --&gt;
         &lt;echo&gt;${ant.java.version}&lt;/echo&gt;
      &lt;/target&gt;
   &lt;/project&gt;
&lt;/source&gt;

When you run this program you should get an output similar to the following:

   Buildfile: C:\eclipse\workspace\Ant Examples\build.xml
   Display-Builtins:
     [echo] C:\AntClass\PropertiesLab
     [echo] C:\AntClass\PropertiesLab\build.xml
     [echo] Apache Ant version 1.6.2 compiled on July 16 2004
     [echo] MyProject
     [echo] 1.5
   BUILD SUCCESSFUL
   Total time: 188 milliseconds

See the ant reference manual for a full list of built-in ant and Java properties or you can try the following link for the Java properties:
[http://docs.oracle.com/javase/7/docs/api/java/lang/System.html#getProperties() getProperties]

[[../Depends/|Next Chapter]], [[../Fileset/|Next Cookbook Chapter]]

[[Category:Apache Ant]]</text>
      <sha1>7j8zu0oh8g8rmb8d974mykn8pvawl6i</sha1>
    </revision>
  </page>
  <page>
    <title>Template talk:Algorithms/Sample</title>
    <ns>11</ns>
    <id>40378</id>
    <revision>
      <id>1618158</id>
      <parentid>230792</parentid>
      <timestamp>2009-08-28T16:46:03Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Template talk:Computer Science:Algorithms:Sample]] to [[Template talk:Algorithms/Sample]]: Naming convention.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Nice! ==

Great little template! I have a question, can it be used such that, when there are multiple samples, it would read, e.g.:

:This code sample is also available in Ada, C, Java, Python, Scheme
Where each is a link?

:&lt;nowiki&gt;{{Computer Science:Algorithms:Sample|[[...|Ada]], [[...|C]] and [[...|Python]]}}&lt;/nowiki&gt; should do the trick. An alternative would be to have a Computer Science:Algorithms:Sample_2, Computer Science:Algorithms:Sample_3 template.
 
Also, would you consider making your Ada implementation Appendix B and putting it in a Computer_Science:Algorithms:Appendix_B: space? [[User:Mshonle|MShonle]] 14:41, 8 September 2005 (UTC)

: Yes - that was the plan from the beginning (using transclusion so the text fits perfectly into both book). Of corse it nags me a bit that [[Computer Science:Algorithms:Appendix A]] is a year old and there is not a single line of code in it. In fact all the text there should be moved to the talk page See [[Talk:Computer Science:Algorithms:Appendix A]].  --[[User:Krischik|Krischik]] 15:10, 8 September 2005 (UTC)</text>
      <sha1>dmq3y55r7aq3968g31pqtke79eoss5p</sha1>
    </revision>
  </page>
  <page>
    <title>Game Maker Programming/Variables</title>
    <ns>0</ns>
    <id>40380</id>
    <revision>
      <id>2525229</id>
      <parentid>2525228</parentid>
      <timestamp>2013-05-11T21:01:35Z</timestamp>
      <contributor>
        <ip>200.61.225.111</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Variables hold information. These bits of information are given names so they can be identified, and changed more easily. For example, if '''a''' = '''4''', and '''b''' = '''7''', '''a'''+'''b''' would equal '''11'''. 

In Game Maker, variable names can only have the following kinds of characters:
*Letters
**Lowercase and Uppercase
**Variables are case-sensitive, for instance: PenColor is NOT the same as pencolor
*Digits
**A variable name cannot start with a digit.
*The underscore symbol &quot;_&quot;

In Game Maker, variables are defined by the name of the variable, an equals sign, and the value of this variable. For example:

  Percent=(Health/MaxHealth)*100;
  PenColor=c_black;
  if (Percent&gt;66)
    brush_color=c_green;
  else if (Percent&gt;33) 
    brush_color=c_yellow;
  else 
    brush_color=c_red;
  draw_rectangle(x+((sprite_width/2)-25),y-5,x+((sprite_width/2)-25)+(50*(Percent/100)),y-1);
  draw_sprite(sprite_index,-1,x,y);
  score=Percent;

A variable can also be declared by using var, for example, '''var''' variable1. Using '''var''' to declare a variable '''only makes that variables available during that piece of code''' - it is removed from memory after use. This makes your game use less memory, and can be very efficient. However, it is not required.

By default, Game Maker reports an error if you try to use an undefined variable before assigning to it.  If you receive the error, you should initialize it in the create section with the default value.  An option in Global Game Settings allows you to treat uninitialized values as 0, as well as to disable the display of error messages; however, caution should be used when using these two options since it will make bugs more obscure. 

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>ji8lp9nozidczpucy387varijtnwvsh</sha1>
    </revision>
  </page>
  <page>
    <title>Game Maker Programming/Functions</title>
    <ns>0</ns>
    <id>40381</id>
    <revision>
      <id>1500173</id>
      <parentid>1151680</parentid>
      <timestamp>2009-05-15T00:53:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">MCI_command

abs

action_another_room

action_bounce

action_change_object

action_color

action_create_object

action_current_room

action_draw_background


action_draw_ellipse

action_draw_font

action_draw_health

action_draw_highscore

action_draw_life

action_draw_life_images

action_draw_line

action_draw_rectangle

action_draw_score

action_draw_sprite

action_draw_text

action_draw_variable

action_end_game

action_end_sound

action_execute_script

action_fill_color

action_fullscreen

action_highscore

action_highscore_add

action_highscore_show

action_if

action_if_aligned

action_if_collision

action_if_dice

action_if_empty

action_if_health

action_if_life

action_if_mouse

action_if_next_room

action_if_number

action_if_object

action_if_previous_room

action_if_question

action_if_score

action_if_sound

action_if_variable

action_inherited

action_kill_object

action_kill_position

action_line_color

action_linear_step

action_load_game

action_message

action_move

action_move_contact

action_move_point

action_move_random

action_move_start

action_move_to

action_next_room

action_path

action_path_position

action_path_speed

action_potential_step

action_previous_room

action_restart_game

action_reverse_xdir

action_reverse_ydir

action_save_game

action_set_alarm

action_set_caption

action_set_cursor

action_set_friction

action_set_gravity

action_set_health

action_set_hspeed

action_set_life

action_set_motion

action_set_score

action_set_sprite

action_set_vspeed

action_show_info

action_sleep

action_snap

action_sound

arccos

arcsin

arctan

arctan2

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>izr5c5lmp5jgp0gb7gu5sk08pny8bgp</sha1>
    </revision>
  </page>
  <page>
    <title>Engineering Acoustics/Electro-Mechanical Analogies</title>
    <ns>0</ns>
    <id>40382</id>
    <revision>
      <id>2688502</id>
      <parentid>2574725</parentid>
      <timestamp>2014-08-04T08:04:04Z</timestamp>
      <contributor>
        <ip>195.63.60.90</ip>
      </contributor>
      <comment>Changed the subscript for the dashpot impedance</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Engineering Acoustics}}

==Why Circuit Analogs?==

Acoustic devices are often combinations of mechanical and electrical elements. A common example of this would be a loudspeaker connected to a power source. It is useful in engineering applications to model the entire system with one method. This is the reason for using a circuit analogy in a vibrating mechanical system.
The same analytic method can be applied to [[Engineering_Acoustics/Electro-acoustic analogies|Electro-Acoustic Analogies]].

==How Electro-Mechanical Analogies Work==

An electrical circuit is described in terms of its potential (voltage) and flux (current). To construct a circuit analog of a mechanical system we define flux and potential for the system. This leads to two separate analog systems. The Impedance Analog denotes the force acting on an element as the potential and the velocity of the element as the flux. The Mobility Analog equates flux with the force and velocity with potential.

{| class=&quot;wikitable&quot;
! 
! Mechanical
! Electrical Equivalent
|- 
| '''Impedance Analog'''
|
|-
| Potential:
| Force
| Voltage
|-
| Flux:
| Velocity
| Current
|-
| '''Mobility Analog'''
| 
|-
| Potential:
| Velocity
| Voltage
|-
| Flux:
| Force
| Current
|-
|}

For many, the mobility analog is considered easier for a mechanical system. It is more intuitive for force to flow as a current and for objects oscillating the same frequency to be wired in parallel. However, either method will yield equivalent results and can also be translated using the dual (dot) method.

==The Basic Elements of an Oscillating Mechanical System==

'''The Mechanical Spring:'''

: [[File:resistor11.jpg]]

The ideal spring is considered to be operating within its elastic limit, so the behavior can be modeled with [[Strength_of_Materials/Introductory_Concepts#Hooke.27s_Law|Hooke's Law]]. It is also assumed to be massless and have no damping effects.

:&lt;math&gt; F=-cx, \ &lt;/math&gt;


'''The Mechanical Mass'''

In a vibrating system, a mass element opposes acceleration. From Newton's Second Law:

:&lt;math&gt;F=mx^{\prime\prime}=ma=m\frac{du}{dt}&lt;/math&gt;
:&lt;math&gt;F=K\int\,u dt&lt;/math&gt;


'''The Mechanical Resistance'''

: [[File:Dashpot.png]]

The dashpot is an ideal viscous damper which opposes velocity.

:&lt;math&gt;F=R u\displaystyle&lt;/math&gt;


'''Ideal Generators'''

The two ideal generators which can drive any system are an ideal velocity and ideal force generator. The ideal velocity generator can be denoted by a drawing of a crank or simply by declaring &lt;math&gt;u(t)=f(t)&lt;/math&gt;, and the ideal force generator can be drawn with an arrow or by declaring &lt;math&gt;F(t)=f(t)&lt;/math&gt;


'''Simple Damped Mechanical Oscillators'''

: [[File:Forced_Oscillator.PNG‎]]

In the following sections we will consider this simple mechanical system as a mobility and impedance analog. It can be driven either by an ideal force or an ideal velocity generator, and we will consider simple harmonic motion. The m in the subscript denotes a mechanical system, which is currently redundant, but can be useful when combining mechanical and acoustic systems.

==The Impedance Analog==

'''The Mechanical Spring'''

In a spring, force is related to the displacement from equilibrium. By Hooke's Law,

:&lt;math&gt;F(t)=c_m \Delta x = c_m \int_{0}^{t} u( \tau )d \tau &lt;/math&gt;

The equivalent behaviour in a circuit is a capacitor:

:&lt;math&gt;V(t)=\frac{1}{C}\int_{0}^{t} \,i(\tau) d\tau &lt;/math&gt;

'''The Mechanical Mass'''

The force on a mass is related to the acceleration (change in velocity). The behaviour, by Newton's Second Law, is:

:&lt;math&gt;F(t)=m_ma=m_m\frac{d}{dt}u(t)&lt;/math&gt;

The equivalent behaviour in a circuit is an inductor:

:&lt;math&gt;V(t)=L\frac{d}{dt}i(t)&lt;/math&gt;

'''The Mechanical Resistance'''

For a viscous damper, the force is directly related to the velocity

:&lt;math&gt;F=R_m u\displaystyle&lt;/math&gt;

The equivalent is a simple resistor of value &lt;math&gt;R_m\displaystyle&lt;/math&gt;

:&lt;math&gt;V=R i\displaystyle&lt;/math&gt;

'''Example:'''

Thus the simple mechanical oscillator in the previous section becomes a series RCL Circuit:

[[File:RLC series circuit v1.svg]]

The current through all three elements is equal (they are at the same velocity) and that the sum of the potential drops across each element will equal the potential at the generator (the driving force). The ideal voltage generator depicted here would be equivalent to an ideal force generator.

'''IMPORTANT NOTE''': The velocity measured for the spring and dashpot is the relative velocity ( velocity of one end minus the velocity of the other end). The velocity of the mass, however, is the absolute velocity.

'''Impedances:'''
{| class=&quot;wikitable&quot;
! Element
!
! Impedance
|- 
| Spring
| Capacitor 
| &lt;math&gt;Z_c = \frac{V_c}{I_c} = \frac{c_m}{j \omega } &lt;/math&gt;
|-
| Mass
| Inductor
| &lt;math&gt;Z_m = \frac{V_m}{I_m} = j \omega m_m&lt;/math&gt;
|-
| Dashpot
| Resistor
| &lt;math&gt;Z_d = \frac{V_m}{I_m} = R_m&lt;/math&gt;
|}

==The Mobility Analog==

Like the Impedance Analog above, the equivalent elements can be found by comparing their fundamental equations with the equations of circuit elements. However, since circuit equations usually define voltage in terms of current, in this case the analogy would be an expression of velocity in terms of force, which is the opposite of convention. However, this can be solved with simple algebraic manipulation. 

'''The Mechanical Spring'''

:&lt;math&gt;F(t)= c_m \int u(t)d t&lt;/math&gt;

The equivalent behavior for this circuit is the behavior of an inductor. 

:&lt;math&gt;\int V dt=\int L \frac{d}{dt} i(t) dt&lt;/math&gt;
:&lt;math&gt;i=\frac{1}{L}\int\,V dt&lt;/math&gt;

'''The Mechanical Mass'''

:&lt;math&gt;F=m_ma=m_m\frac{d}{dt}u(t)&lt;/math&gt;

Similar to the spring element, if we take the general equation for a capacitor and differentiate, 

:&lt;math&gt;\frac{d}{dt}V(t)=\frac{d}{dt}\frac{1}{C}\int \,i(t) dt &lt;/math&gt;
:&lt;math&gt;i(t)=C\frac{d}{dt}V(t)&lt;/math&gt;

'''The Mechanical Resistance'''

Since the relation between force and velocity is proportionate, the only difference is that the mechanical resistance becomes inverted:

:&lt;math&gt;F=\frac{1}{r_m} u=R_m u&lt;/math&gt;
:&lt;math&gt;i=\frac{1}{R}V&lt;/math&gt;

'''Example:'''

The simple mechanical oscillator drawn above would become a parallel RLC Circuit. The potential across each element is the same because they are each operating at the same velocity. This is often the more intuitive of the two analogy methods to use, because you can visualize force &quot;flowing&quot; like a flux through your system. The ideal voltage generator in this drawing would correspond to an ideal velocity generator.

[[File:RLC_parallel_circuit.png‎]]

'''IMPORTANT NOTE:''' Since the measure of the velocity of a mass is absolute, a capacitor in this analogy must always have one terminal grounded. A capacitor with both terminals at a potential other than ground may be realized physically as an inverter, which completes all elements of this analogy.

'''Impedances:'''
{| class=&quot;wikitable&quot;
! Element
!
! Impedance
|- 
| Spring
| Inductor
| &lt;math&gt;Z_c = \frac{V_m}{I_m} = \frac{j \omega}{c_m}&lt;/math&gt;
|-
| Mass
| Capacitor 
| &lt;math&gt;Z_m = \frac{V_c}{I_c} = \frac{1}{j \omega m_m} &lt;/math&gt;
|-
| Dashpot
| Resistor
| &lt;math&gt;Z_d = \frac{V_m}{I_m} = r_m = \frac{1}{R_m}&lt;/math&gt;
|}

[[Engineering Acoustics|Back to Main page]]</text>
      <sha1>0t7a6jnsw3d3pbwn4bj44fbwbojzjo5</sha1>
    </revision>
  </page>
  <page>
    <title>User:Whiteknight</title>
    <ns>2</ns>
    <id>40383</id>
    <revision>
      <id>1663336</id>
      <parentid>1662977</parentid>
      <timestamp>2009-11-23T12:41:34Z</timestamp>
      <contributor>
        <username>Whiteknight</username>
        <id>10714</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;includeonly&gt;{| class=&quot;WKBackground&quot; style=&quot;text-align: center;&quot;
|-
|&lt;imagemap&gt;
  Image:Chess.svg|center|64px
  rect 0 0 128 128 [[User:Whiteknight]]
  desc none
&lt;/imagemap&gt;
|-
|[[User:Whiteknight|Whiteknight]]
|}&lt;/includeonly&gt;&lt;noinclude&gt;__NOTOC__{{User:Whiteknight/Nav}}&lt;div style=&quot;width: 100%;&quot; id=&quot;WK_Status_Span&quot;&gt;{{User:Whiteknight/Message|{{User:Whiteknight/Stat}}|WK_Status_Span_2}}
{{User:Whiteknight/Weekend}}&lt;/div&gt;
{| class=&quot;PrettyTextBox&quot; style=&quot;float: right; width: 252px; margin: 3px; padding: 4px;&quot;
|-
| {{User language|en|N}}
|-
| {{User CVU2-en}}
|-
| {{User:Whiteknight/Future}}
|}
&lt;!--{User:Whiteknight/About}--&gt;
I am no longer able to be an active member of the Wikibooks project. This is not the result of any ill feelings that I have towards this project: I always have and always will love and support Wikibooks. However, I find myself drawn in other directions and am not able to maintain the level of energy, the amount of available time or the required level of motivation to remain an active editor, author, or administrator here.

I receive updates to my talk page via an RSS feed which I check every day. I'm also still a subscriber to the textbook-l mailing list and am frequently present on the #wikibooks IRC channel.
{{-}}
{| class=&quot;WKBackground&quot; style=&quot;width: 99%;&quot;
|-
| style=&quot;vertical-align: top; width: 33%;&quot; |

== My Pages ==

*{{User:Whiteknight/Page2|Book Foundry}}
*{{User:Whiteknight/Page2|New Book Guide}}
*{{User:Whiteknight/Page2|Images}}
*{{User:Whiteknight/Page2|Thoughts}}
*{{User:Whiteknight/Page2|Sandbox}}
*{{User:Whiteknight/Page2|Catalog}}
*{{User:Whiteknight/Page2|Bot}}
*{{User:Whiteknight/Page2|Templates|All Templates}}
*{{User:Whiteknight/Page2|Friends}}
*{{User:Whiteknight/Page2|Publication Guide}}

== Resources ==

*{{User:Whiteknight/Ext2|Meta|Press_kit/Wikibooks/en|Wikibooks Press Kit}}
*{{User:Whiteknight/Ext|http://en.wikipedia.org/wikistats/wikibooks/EN/TablesWikipediaEN.htm|Wikibooks statistics}}
*{{User:Whiteknight/Ext|http://wikistics.falsikon.de/latest/wikibooks/en/|Wikibooks Hitcounts}}

== Other ==

*{{User:Whiteknight/Ext2|Meta|Wikibooks/logo}}
*{{User:Whiteknight/Ext2|Meta|Wikijunior/Logo}}
*{{User:Whiteknight/Ext|1=http://wikimediafoundation.org/wiki/Wikimedia_visual_identity_guidelines|2=Logo Guidelines}}
*{{User:Whiteknight/Ext|1=http://pa.us.wikimedia.org|2=Wikimedia Pennsylvania}}
*{{User:Whiteknight/Ext2|Bugzilla|10092}}
*{{User:Whiteknight/Ext2|Bugzilla|15071}}
*{{User:Whiteknight/Ext|1=http://www.writersua.com/ohc/track1.htm|2=WritersUA}}

| style=&quot;vertical-align: top; width: 34%;&quot; |

== About Me ==

*{{User:Whiteknight/Page|User:Andrew Whitworth|My Self}}
*{{User:Whiteknight/Page|User:Wknight8111|My Puppet}}
*{{User:Whiteknight/Ext|1= http://tools.wikimedia.de/~interiot/cgi-bin/count_edits?user=Whiteknight&amp;dbname=enwikibooks_p |2=My Stats}}
*{{User:Whiteknight/Ext|1= http://tools.wikimedia.de/~river/cgi-bin/count_edits?user=Whiteknight&amp;dbname=enwikibooks_p |2=My Stats(2)}}
*{{User:Whiteknight/Ext|1=http://wikibooks.blogspot.com/|2=My Blog}}

== Tools and Themes ==

*{{User:Whiteknight/Page2|Book Creator}}
*{{User:Whiteknight/Page2|Count Ticker}}
*{{User:Whiteknight/Page2|Stylesheets}}
*{{User:Whiteknight/Page2|Javascripts}}
*{{User:Whiteknight/Page2|Per Page}}
*{{User:Whiteknight/Page2|Book Tracker}}
*{{User:Whiteknight/Page2|Collections}}
*{{User:Whiteknight/Page2|IssueTracker}}

== Admin Tools ==

*{{User:Whiteknight/Page|MediaWiki:Sitenotice}}
*{{User:Whiteknight/Page|MediaWiki:Watchdetails}}
*{{User:Whiteknight/Page|MediaWiki:Sidebar}}
*{{User:Whiteknight/Page|Special:Allmessages}}
*{{User:Whiteknight/Ext|1=http://en.wikibooks.org/w/index.php?title=Special:Userlogin&amp;type=signup| 2=Create Account}}

|}
&lt;/noinclude&gt;</text>
      <sha1>pgcfzcxqkfhqceaye892ig8anop8jk0</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Wikijunior Solar System/Proofreading template</title>
    <ns>1</ns>
    <id>40384</id>
    <revision>
      <id>269426</id>
      <parentid>269419</parentid>
      <timestamp>2005-10-31T18:18:24Z</timestamp>
      <contributor>
        <username>SV Resolution</username>
        <id>10168</id>
      </contributor>
      <comment>Asking editors not to undo other editors' work.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">

We are using a collaborative [[Talk:Wikijunior_Solar_System/Proofreading|proofreading process]].
Please sign up for one of these tasks by &quot;signing&quot; your name.  When you are done with it, &lt;s&gt;cross it off&lt;/s&gt;

If you have any questions about the assignments or the work being done on any of the assignments, please
* Post a note on one of the Talk pages for this module
* Contact the person signed up for the assigment
* Or contact any of the active contributors to this book if you cannot get a response from the person signed up for the assigment.

If you wish to take on one of the assignments, please log in so that others may contact you easily to ask or answer questions about this book.

We all have our areas of expertise, and can make this book a great one by contributing what we know best.

Thanks for your help

* Please follow [[Talk:Wikijunior_Solar_System/Proofreading|the proofreading process]].
* When fact-checking, please add references as discussed in[[Talk:Wikijunior_Solar_System/Fact_Checking_and_Citation|Fact Checking]].
* Whenever you work on a section, please be careful not to undo work already completed in previous phases.

==Phase 1. '''Reorganize'''==
* '''Reorganize this module'''.  

==Phase 2. '''Fact-Check'''==
Please sign up to fact-check one of these sections. [[Talk:Wikijunior_Solar_System/Fact_Checking_and_Citation|Please follow these instructions]].
Please put all of your references at the bottom of your section.
We can collect them in &quot;References&quot; later.  This will help avoid us stepping on each others' toes.
===Fact-Check sections===
*'''Top of Page (before first section)'''
*''' '''
*''' '''
*etc.
===Collect references=== 
*'''References''' (after above sections are completed)

==Phase 3. '''Grade Level'''==
Use tools in WORD or at http://www.usingenglish.com/resources/text-statistics.php
*'''Top of Page (before first section)'''
*''' '''
*''' '''
*etc.

==Phase 4. '''Correct Spelling, Grammar, and Punctuation'''==
*'''Top of Page (before first section)'''
*''' '''
*''' '''
*etc.
*'''References'''</text>
      <sha1>lr1okgutjrgsmte1m7hfs5exzjaj37r</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Algorithms/Ada Implementation</title>
    <ns>1</ns>
    <id>40387</id>
    <revision>
      <id>519812</id>
      <parentid>442842</parentid>
      <timestamp>2006-07-12T23:53:37Z</timestamp>
      <contributor>
        <username>Hagindaz</username>
        <id>19723</id>
      </contributor>
      <minor />
      <comment>[[Talk:Algorithms/Appendix A]] moved to [[Talk:Algorithms/Ada Implementation]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== A or B thats here the question. ==

Right now I want to start an Appendix for Ada implementations. I have allready got some text and working demos ready [[Ada Programming/Algorithms]] which I only have to move in here. Of course replacing the header and footer to fit the layout used here.

Since this page is only a ''&quot;substub&quot;'' and does not actualy have any real text in it &lt;small&gt;(just instructions on what to put here)&lt;/small&gt; I consider replacing it &lt;small&gt;(moving the instructions to the talk page)&lt;/small&gt; so the reader has some real text to read - Python programmers can allways start a new Appendix when they are ready and have some demos to put here.

Objections?

:Go ahead. A for Ada sounds nicer anyway. When I suggested B I guess I figured there was more of a shell for the Python part. But since it's so empty, it makes more sense that A actually has something.

== Guideline ==

implementations should be runnable (have a &quot;main&quot;), complete with some small test cases that demonstrate the use and correctness of the implementation, as well as show how it handles boundary cases. Output of the program should be included

== Note 1 ==

For all implementations, note when a library alternative exists. In these cases, show the correctness of the implementation by creating test cases that compare the results to the library answer.

== Note 2 ==

Note: The main text should includes links to these specific implementations.

== TODO ==

Translate every program fragment in the text. There are sure to be bugs!</text>
      <sha1>cjlz2lu35icjweejinc6hryycgm0zwg</sha1>
    </revision>
  </page>
  <page>
    <title>X86 Disassembly/Analysis Tools</title>
    <ns>0</ns>
    <id>40400</id>
    <revision>
      <id>3044928</id>
      <parentid>3044927</parentid>
      <timestamp>2016-02-08T11:39:09Z</timestamp>
      <contributor>
        <ip>88.219.148.170</ip>
      </contributor>
      <comment>/* Hex Editors */ Beta hex editor</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{x86 Disassembly/Page}}

== Debuggers ==
{{Wikipedia|debugger}}
'''Debuggers''' are programs that allow the user to execute a compiled program one step at a time. You can see what instructions are executed in which order, and which sections of the program are treated as code and which are treated as data. Debuggers allow you to analyze the program while it is running, to help you get a better picture of what it is doing.

Advanced debuggers often contain at least a rudimentary disassembler, often times hex editing and reassembly features. Debuggers often allow the user to set ''breakpoints'' on instructions, function calls, and even memory locations.

A breakpoint is an instruction to the debugger that allows program execution to be halted when a certain condition is met. For instance, when a program accesses a certain variable, or calls a certain API function, the debugger can pause program execution.

=== Windows Debuggers ===

{{Wikipedia|SoftICE}}
;SoftICE : A ''de facto'' standard for Windows debugging. SoftICE can be used for ''local kernel debugging'', which is a feature that is very rare, and very valuable. SoftICE was taken off the market in April 2006.

{{Wikipedia|WinDbg}}
;WinDbg : WinDbg is a free piece of software from Microsoft that can be used for local user-mode debugging, or even remote kernel-mode debugging. WinDbg is not the same as the better-known Visual Studio Debugger, but comes with a nifty GUI nonetheless. Available in 32 and 64-bit versions.
:http://www.microsoft.com/whdc/devtools/debugging/installx86.mspx

;IDA Pro : The multi-processor, multi-OS, interactive disassembler by DataRescue.
:http://www.hex-rays.com/idapro/

;OllyDbg : OllyDbg is a free and powerful Windows debugger with a built-in disassembly and assembly engine. Very useful for patching, disassembling, and debugging.
:http://www.ollydbg.de/

;Immunity Debugger : Immunity Debugger is a branch of OllyDbg v1.10, with built-in support for Python scripting and much more.
:http://immunityinc.com/products/debugger/index.html

=== Linux Debuggers ===
Many of the open source debuggers on Linux, again, are cross-platform. They may be available on some other Unix(-like) systems, or even Windows.
Some of the debuggers may give you better experience than the old and native ones on your system.

;gdb : The GNU debugger, comes with any normal Linux install. It is quite powerful and even somewhat programmable, though the raw user interface is harsh.

;lldb: LLVM's debugger.

;emacs : The GNU editor, can be used as a front-end to gdb. This provides a powerful hex editor and allows full scripting in a LISP-like language.

;ddd : The Data Display Debugger. It's another front-end to gdb. This provides graphical representations of data structures. For example, a linked list will look just like a textbook illustration.

;strace, ltrace, and xtrace : Lets you run a program while watching the actions it performs. With strace, you get a log of all the system calls being made. With ltrace, you get a log of all the library calls being made. With xtrace, you get a log of some of the funtion calls being made.

;valgrind : Executes a program under emulation, performing analysis according to one of the many plug-in modules as desired. You can write your own plug-in module as desired. Newer versions of valgrind also support OS X.

;NLKD : A kernel debugger.
:http://forge.novell.com/modules/xfmod/project/?nlkd

;edb : A fully featured plugin-based debugger inspired by the famous [http://ollydbg.de OllyDbg]. [http://www.codef00.com/projects.php#Debugger Project page]

;KDbg : A gdb front-end for KDE. http://kdbg.org

;RR0D : A Ring-0 Debugger for Linux. [http://rr0d.droids-corp.org/ RR0D Project Page]

;Winedbg: [[w:Wine|Wine]]'s debugger. Debugs Windows executables using wine.

=== Debuggers for Other Systems ===

;dbx : The standard Unix debugger on systems derived from AT&amp;T Unix.  It is often part of an optional development toolkit package which comes at an extra price.  It uses an interactive command line interface.

;ladebug : An enhanced debugger on Tru64 Unix systems from HP (originally Digital Equipment Corporation) that handles advanced functionality like threads better than dbx.

;DTrace : An advanced tool on Solaris that provides functions like profiling and many others on the entire system, including the kernel.

;mdb : The Modular Debugger (MDB) is a new general purpose debugging tool for the Solaris Operating Environment. Its primary feature is its extensibility. The Solaris Modular Debugger Guide describes how to use MDB to debug complex software systems, with a particular emphasis on the facilities available for debugging the Solaris kernel and associated device drivers and modules. It also includes a complete reference for and discussion of the MDB language syntax, debugger features, and MDB Module Programming API.

=== Debugger Techniques ===

==== Setting Breakpoints ====

As previously mentioned in the section on disassemblers, a 6-line C program doing something as simple as outputting &quot;Hello, World!&quot; turns into massive amounts of assembly code. Most people don't want to sift through the entire mess to find out the information they want. It can be time consuming just to find the information one desires by just looking through the code. As an alternative, one can choose to set breakpoints to halt the program once it has reached a given point within the program's code.

For instance, let's say that in your program you consistantly experience crashes after one particular event: immediately after closing a message box. You set breakpoints on all calls to ''MessageBoxA''. You run your program with the breakpoints set, and it stops, ready to call ''MessageBoxA''. Executing each line one-by-one thereafter (referred to as ''stepping'') through the code, and watching the program stack, you see that a buffer overflow occurs soon after the call.

== Hex Editors ==
{{Wikipedia|hex editor}}
'''Hex editors''' are able to directly view and edit the binary of a source file, and are very useful for investigating the structure of proprietary closed-format data files. There are many hex editors in existence. This section will attempt to list some of the best, some of the most popular, or some of the most powerful.

;HxD (Freeware): For Windows. A fast and powerful free hex, disk and RAM editor
:http://mh-nexus.de/hxd/

;Freeware Hex Editor XVI32 : For Windows. A freeware hex editor.
:http://www.chmaas.handshake.de/delphi/freeware/xvi32/xvi32.htm

;wxHexEditor (Beta, For Windows and Linux, Free &amp; Open Source): A fast hex editor specially for HUGE files and disk devices, allows up to hexabyte, allow size changes (inject and deletes) without creating temp file, could view files with multiple panes, has built-in disassembler, supports tags for (reverse) engineering big binaries or file systems, could view files thrug XOR encryption. 
:http://wxhexeditor.sourceforge.net/

;HHD Software Hex Editor Neo : For Windows. A fast file, disk, and memory editor with built-in disassembler and file structure viewer.
:http://www.hhdsoftware.com/Family/hex-editor.html

;Catch22 HexEdit : For Windows. his is a powerful hex editor with a slew of features. Has an excellent data structure viewer.
:http://www.catch22.net/software/hexedit.asp

;BreakPoint Hex Workshop : For Windows. An excellent and powerful hex-editor, its usefulness is restricted by the fact that it is not free like some of the other options.
:http://www.bpsoft.com/

;Tiny Hexer : Free and does statistics. For Windows.
:http://www.mirkes.de/files/

;frhed - free hex editor : For Windows. Free and opensource.
:http://www.kibria.de/frhed.html

;Cygnus Hex Editor: For Windows. A very fast and easy-to-use hex editor, available in a 'Free Edition'.
:http://www.softcircuits.com/cygnus/fe/

;Hexprobe Hex Editor : For Windows. A professional hex editor designed to include all the power to deal with hex data, particularly helpful in the areas of hex-byte editing and byte-pattern analysis.
:http://www.hexprobe.com/hexprobe/index.htm

;UltraEdit32 : For Windows. A hex editor/text editor, won &quot;Application of the Year&quot; at 2005 Shareware Industry Awards Conference.
:http://www.ultraedit.com/

;Hexinator (For Windows and Linux): lets you edit files of unlimited size (overwrite, insert, delete), displays text with dozens of text encodings, shows variables in little and big endian byte order. 
:https://hexinator.com

;ICY Hexplorer : For Windows. A lightweight free and open source hex file editor with some nifty features, such as pixel view, structures, and disassembling.
:http://hexplorer.sourceforge.net/

;WinHex : For Windows. A powerful hex file and disk editor with advanced abilities for computer forensics and data recovery (used by governments and military).
:http://www.x-ways.net/index-m.html

;010 Editor : For Windows. A very powerful and fast hex editor with extensive support for data structures and scripting. Can be used to edit drives and processes.
:http://www.sweetscape.com/010editor/

[[Image:1Fh 01.png|thumb|250px|A view of a small binary file in a 1Fh hex editor.]]

;1Fh : For Windows. A free binary/hex editor which is very fast, even while working with large files. It's the only Windows hex editor that allows you to view files in byte code (all 256-characters).
:http://www.4neurons.com/1Fh/

;HexEdit : For Windows (Open source) and shareware versions. Powerful and easy to use binary file and disk editor.  
:http://www.hexedit.com/

;HexToolkit : For Windows. A free hex viewer specifically designed for reverse engineering file formats. Allows data to be viewed in various formats and includes an expression evaluator as well as a binary file comparison tool.
:http://www.binaryearth.net/HexToolkit

;FlexHex : For Windows. It Provides full support for NTFS files which are based on a more complex model than FAT32 files. Specifically, FlexHex supports [[Sparse file]]s and [[Fork (filesystem)|Alternate data streams]] of files on any [[NTFS]] volume. Can be used to edit OLE compound files, flash cards, and other types of physical drives.
:http://www.heaventools.com/flexhex-hex-editor.htm

;HT Editor :  For Windows. A file editor/viewer/analyzer for executables. Its goal is to combine the low-level functionality of a debugger and the usability of IDEs.
:http://hte.sourceforge.net/

;HexEdit : For MacOS. A simple but reliable hex editor wher you to change highlight colours. There is also a port for Apple Classic users.
:http://hexedit.sourceforge.net/

;Hex Fiend : For MacOS. A very simple hex editor, but incredibly powerful nonetheless. It's only 346 KB to download and takes files as big as 116 GB.
:http://ridiculousfish.com/hexfiend/


=== Linux Hex Editors only ===

;bvi: A typical three-pane hex editor, with a vi-like interface.

;emacs : Along with everything else, emacs also includes a hex editor.

;joe : Joe's own editor now also supports hex editing.

;bless : A very capable gtk based hex editor.

;xxd and any text editor : Produce a hex dump with xxd, freely edit it in your favorite text editor, and then convert it back to a binary file with your changes included.

;GHex : Hex editor for GNOME.
:http://directory.fsf.org/All_Packages_in_Directory/ghex.html

;Okteta : The well-integrated hexeditor from KDE since 4.1. Offers the traditional two-columns layout, one with numeric values (binary, octal, decicmal, hexdecimal) and one with characters (lots of charsets supported). Editing can be done in both columns, with unlimited undo/redo. Small set of tools (searching/replacing, strings, binary filter, and more).
: http://utils.kde.org/projects/okteta

;BEYE : A viewer of binary files with built-in editor in binary, hexadecimal and disassembler modes. It uses native Intel syntax for disassembly. Highlight AVR/Java/Athlon64/Pentium 4/K7-Athlon disassembler, Russian codepages converter, full preview of formats - MZ, NE, PE, NLM, coff32, elf partial - a.out, LE, LX, PharLap; code navigator and more over. (
: http://beye.sourceforge.net/en/beye.html

;BIEW : A viewer of binary files with built-in editor in binary, hexadecimal and disassembler modes. It uses native Intel syntax for disassembly. Highlight AVR/Java/Athlon64/Pentium 4/K7-Athlon disassembler, Russian codepages converter, full preview of formats - MZ, NE, PE, NLM, coff32, elf partial - a.out, LE, LX, PharLap; code navigator and more over. (PROJECT RENAMED, see BEYE)
:http://biew.sourceforge.net/en/biew.html

;hview : A curses based hex editor designed to work with large (600+MB) files with as quickly, and with little overhead, as possible.
:http://web.archive.org/web/20010306001713/http://tdistortion.esmartdesign.com/Zips/hview.tgz

;HexCurse : An ncurses-based hex editor written in C that currently supports hex and decimal address output, jumping to specified file locations, searching, ASCII and EBCDIC output, bolded modifications, an undo command, quick keyboard shortcuts, etc.
:http://www.jewfish.net/description.php?title=HexCurse

;hexedit : View and edit files in hexadecimal or in ASCII.
:http://rigaux.org/hexedit.html

;Data Workshop : An editor to view and modify binary data; provides different views which can be used to edit, analyze and export the binary data.
:http://www.dataworkshop.de/

;VCHE: A hex editor which lets you see all 256 characters as found in video ROM, even control and extended ASCII, it uses the /dev/vcsa* devices to do it. It also could edit non-regular files, like hard disks, floppies, CDROMs, ZIPs, RAM, and almost any device. It comes with a ncurses and a raw version for people who work under X or remotely.
:http://www.grigna.com/diego/linux/vche/

;DHEX: DHEX is just another Hexeditor with a Diff-mode for ncurses. It makes heavy use of colors and is themeable.
:http://www.dettus.net/dhex/

{{-}}

== Other Tools for Windows ==

=== Resource Monitors ===

;SysInternals Freeware : This page has a large number of excellent utilities, many of which are very useful to security experts, network administrators, and (most importantly to us) reversers. Specifically, check out '''Process Monitor''', '''FileMon''', '''RegMon''', '''TCPView''', and '''Process Explorer'''.
:http://technet.microsoft.com/sysinternals/default.aspx

=== API Monitors ===

;SpyStudio Freeware : The Spy Studio software is a tool to hook into windows processes, log windows API call to DLLs, insert breakpoints and change parameters.
:http://www.nektra.com/products/spystudio/

; rohitab.com API Monitor : API Monitor is a free software that lets you monitor and control API calls made by applications and services. Features include detailed parameter information, structures, unions, enumerated/flag data types, call stack, call tree, breakpoints, custom DLL's, memory editor, call filtering, COM monitoring, 64-bit. Includes definitions for over 13,000 API's and 1,300+ COM interfaces.
:http://www.rohitab.com/apimonitor

=== PE File Header dumpers ===

;Dumpbin : Dumpbin is a program that previously used to be shipped with MS Visual Studio, but recently the functionality of Dumpbin has been incorporated into the Microsoft Linker, link.exe. to access dumpbin, pass /dump as the first parameter to link.exe:

 link.exe /dump [options]

:It is frequently useful to simply create a batch file that handles this conversion:

 ::dumpbin.bat
 link.exe /dump %*

'''All examples in this wikibook that use dumpbin will call it in this manner. '''
:Here is a list of useful features of dumpbin [http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vccore/html/_core_dumpbin_options.asp]:

 dumpbin /EXPORTS         displays a list of functions exported from a library
 dumpbin /IMPORTS         displays a list of functions imported from other libraries
 dumpbin /HEADERS         displays PE header information for the executable

:http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vccore/html/_core_dumpbin_reference.asp

;Depends : Dependency Walker is a GUI tool which will allow you to see exports and imports of binaries.  It ships with many Microsoft tools including MS Visual Studio.

== GNU Tools ==

The GNU packages have been ported to many platforms including Windows.

;GNU BinUtils : The GNU BinUtils package contains several small utilities that are very useful in dealing with binary files. The most important programs in the list are the GNU objdump, readelf, GAS assembler, and the GNU linker, although the reverser might find more use in addr2line, c++filt, nm, and readelf. 
:http://www.gnu.org/software/binutils/

;objdump : Dumps out information about an executable including symbols and assembly. It comes standard. It can be made to support non-native binary formats.

 objdump -p               displays a list of functions imported from other libraries, exported to and miscellaneous file header information

It's useful to check dll dependencies from command line

;readelf : Like ''objdump'' but more specialized for ELF executables.

;size : Lists the sizes of the segments.

;nm : Lists the symbols in an ELF file.

;strings : Prints the strings from a file.

;file : Tells you what type of file it is.

;fold : Folds the results of ''strings'' into something pageable.

;kill : Can be used to halt a program with the sig_stop signal.

;strace : Trace system calls and signals.

== Other Tools for Linux ==

;oprofile : Can be used the find out what functions and data segments are used

;subterfugue : A tool for playing odd tricks on an executable as it runs. The tool is scriptable in python. The user can write scripts to take action on events that occur, such as changing the arguments to system calls.
:http://subterfugue.org/

;lizard : Lets you run a program ''backwards''.
:http://lizard.sourceforge.net/

;dprobes : Lets you work with both kernel and user code.

;biew : Both a hex editor and a disassembler.

;ltrace : Displays runtime library call information for dynamically linked executables.

;asmDIFF : Searches for functions, instructions and memory pointers in different versions of same binary by using code metrics. Supports x86, x86_64 code in PE and ELF files. 
:http://duschkumpane.org/index.php/asmdiff

== XCode Tools ==
[[w:XCode|XCode]] contains some extra tools to be used under OS X with the Mach-O format. You can see more of them under &lt;code&gt;/Applications/Xcode.app/Contents/Developer/usr/bin/&lt;/code&gt;.

;lipo: Manages fat binaries with multiple architectures.

;otool: ''Object file displaying tool'', works somehow like objdump and readelf.

XCode also packs a lot of Unix tools, with many of them sharing the names (and functions) of the GNU tools. Other tools like nasm/ndisasm, lldb and GNU as can also be found.</text>
      <sha1>hb4mr6fm2crjli0f5wn7pz1thxboify</sha1>
    </revision>
  </page>
  <page>
    <title>X86 Disassembly/Microsoft Windows</title>
    <ns>0</ns>
    <id>40405</id>
    <revision>
      <id>3022511</id>
      <parentid>2838197</parentid>
      <timestamp>2015-12-05T16:10:56Z</timestamp>
      <contributor>
        <username>Gary600playsmc</username>
        <id>2039281</id>
      </contributor>
      <minor />
      <comment>Added NT versions for Win8-10</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{x86 Disassembly/Page}}

== Microsoft Windows ==

{{Wikipedia|Windows}}

The '''Windows operating system''' is a popular reverse engineering target for one simple reason: the OS itself (market share, known weaknesses), and most applications for it, are not Open Source or free. Most software on a Windows machine doesn't come bundled with its source code, and most pieces have inadequate, or non-existent documentation. Occasionally, the only way to know precisely what a piece of software does (or for that matter, to determine whether a given piece of software is malicious or legitimate) is to reverse it, and examine the results.

== Windows Versions ==

Windows operating systems can be easily divided into 2 categories: Win9x, and WinNT. 

=== Windows 9x ===

The Win9x kernel was originally written to span the 16bit - 32bit divide. Operating Systems based on the 9x kernel are: Windows 95, Windows 98, and Windows ME. Win9x Series operating systems are known to be prone to bugs and system instability. The actual OS itself was a 32 bit extension of MS-DOS, its predecessor. An important issue with the 9x line is that they were all based around using the ASCII format for storing strings, rather than Unicode.

Development on the Win9x kernel ended with the release of Windows ME.

=== Windows NT ===

The WinNT kernel series was originally written as enterprise-level server and network software. WinNT stresses stability and security far more than Win9x kernels did (although it can be debated whether that stress was good enough). It also handles all string operations internally in Unicode, giving more flexibility when using different languages. Operating Systems based on the WinNT kernel are: Windows NT (versions 3.1, 3.5, 3.51 and 4.0), Windows 2000 (NT 5.0), Windows XP (NT 5.1), Windows Server 2003 (NT 5.2), Windows Vista (NT 6.0), Windows 7 (NT 6.1), Windows 8 (NT 6.2), Windows 8.1 (NT 6.3), and Windows 10 (NT 10.0).

The Microsoft XBOX and and XBOX 360 also run a variant of NT, forked from Windows 2000. Most future Microsoft operating system products are based on NT in some shape or form.

== Virtual Memory ==

32 bit WinNT allows for a maximum of 4Gb of virtual memory space, divided into &quot;pages&quot; that are 4096 bytes by default. Pages not in current use by the system or any of the applications may be written to a special section on the harddisk known as the &quot;paging file.&quot; Use of the paging file may increase performance on some systems, although high latency for I/O to the HDD can actually reduce performance in some instances.

== System Architecture ==

The Windows architecture is heavily layered. Function calls that a programmer makes may be redirected 3 times or more before any action is actually performed. There is an unignorable penalty for calling Win32 functions from a user-mode application. However, the upside is equally unignorable: code written in higher levels of the windows system is much easier to write. Complex operations that involve initializing multiple data structures and calling multiple sub-functions can be performed by calling only a single higher-level function.

The Win32 API comprises 3 modules: KERNEL, USER, and GDI. KERNEL is layered on top of NTDLL, and most calls to KERNEL functions are simply redirected into NTDLL function calls. USER and GDI are both based on WIN32K (a kernel-mode module, responsible for the Windows &quot;look and feel&quot;), although USER also makes many calls to the more-primitive functions in GDI. This and NTDLL both provide an interface to the Windows NT kernel, NTOSKRNL (see further below).

NTOSKRNL is also partially layered on HAL (Hardware Abstraction Layer), but this interaction will not be considered much in this book. The purpose of this layering is to allow processor variant issues (such as location of resources) to be made separate from the actual kernel itself. A slightly different system configuration thus requires just a different HAL module, rather than a completely different kernel module.

== System calls and interrupts ==

After filtering through different layers of subroutines, most API calls require interaction with part of the operating system. Services are provided via 'software interrupts', traditionally through the &quot;int 0x2e&quot; instruction. This switches control of execution to the NT executive / kernel, where the request is handled. It should be pointed out here that the stack used in kernel mode is different from the user mode stack. This provides an added layer of protection between kernel and user. Once the function completes, control is returned back to the user application.

Both Intel and AMD provide an extra set of instructions to allow faster system calls, the &quot;SYSENTER&quot; instruction from Intel and the SYSCALL instruction from AMD.

== Win32 API ==

Both WinNT and Win9x systems utilize the Win32 API. However, the WinNT version of the API has more functionality and security constructs, as well as Unicode support. Most of the Win32 API can be broken down into 3 separate components, each performing a separate task.

=== kernel32.dll ===

Kernel32.dll, home of the KERNEL subsystem, is where non-graphical functions are implemented. Some of the APIs located in KERNEL are: The Heap API, the Virtual Memory API, File I/O API, the Thread API, the System Object Manager, and other similar system services. Most of the functionality of kernel32.dll is implemented in ntdll.dll, but in undocumented functions. Microsoft prefers to publish documentation for kernel32 and guarantee that these APIs will remain unchanged, and then put most of the work in other libraries, which are then not documented.

=== gdi32.dll ===

gdi32.dll is the library that implements the GDI subsystem, where primitive graphical operations are performed. GDI diverts most of its calls into WIN32K, but it does contain a manager for GDI objects, such as pens, brushes and device contexts. The GDI object manager and the KERNEL object manager are completely separate.

=== user32.dll ===

The USER subsystem is located in the user32.dll library file. This subsystem controls the creation and manipulation of USER objects, which are common screen items such as windows, menus, cursors, etc... USER will set up the objects to be drawn, but will perform the actual drawing by calling on GDI (which in turn will make many calls to WIN32K) or sometimes even calling WIN32K directly. USER utilizes the GDI Object Manager.

== Native API ==

The native API, hereby referred to as the NTDLL subsystem, is a series of undocumented API function calls that handle most of the work performed by KERNEL. Microsoft also does not guarantee that the native API will remain the same between different versions, as Windows developers modify the software. This gives the risk of native API calls being removed or changed without warning, breaking software that utilizes it.

=== ntdll.dll ===

The NTDLL subsystem is located in ntdll.dll. This library contains many API function calls, that all follow a particular naming scheme. Each function has a prefix: Ldr, Nt, Zw, Csr, Dbg, etc... and all the functions that have a particular prefix all follow particular rules.

The &quot;official&quot; native API is usually limited only to functions whose prefix is  Nt or Zw. These calls are in fact the same in user-mode: the relevant [[../Windows Executable Files#Exports|Export entries]] map to the same address in memory. However, in kernel-mode, the Zw* system call stubs set the ''previous mode'' to kernel-mode, ensuring that certain parameter validation routines are ''not'' performed. The origin of the prefix &quot;Zw&quot; is unknown; it is rumored that this prefix was chosen due to its having no significance at all.

In actual implementation, the system call stubs merely load two registers with values required to describe a native API call, and then execute a software interrupt (or the &lt;code&gt;sysenter&lt;/code&gt; instruction).

Most of the other prefixes are obscure, but the known ones are:
* Rtl stands for &quot;Run Time Library&quot;, calls which help functionality at runtime (such as RtlAllocateHeap)
* Csr is for &quot;Client Server Runtime&quot;, which represents the interface to the win32 subsystem located in csrss.exe
* Dbg functions are present to enable debugging routines and operations
* Ldr provides the ability to load, manipulate and retrieve data from DLLs and other module resources

=== User Mode Versus Kernel Mode ===

Many functions, especially Run-time Library routines, are shared between ntdll.dll and ntoskrnl.exe. Most Native API functions, as well as other kernel-mode only functions exported from the kernel are useful for driver writers. As such, Microsoft provides documentation on many of the native API functions with the Microsoft Server 2003 Platform DDK. The DDK (Driver Development Kit) is available as a free download.

== ntoskrnl.exe ==

This module is the Windows NT &quot;'Executive'&quot;, providing all the functionality required by the native API, as well as the kernel itself, which is responsible for maintaining the machine state. By default, all interrupts and kernel calls are channeled through ntoskrnl in some way, making it the single most important program in Windows itself. Many of its functions are exported (all of which with various prefixes, a la NTDLL) for use by device drivers.

== Win32K.sys ==

This module is the &quot;Win32 Kernel&quot; that sits on top of the lower-level, more primitive NTOSKRNL. WIN32K is responsible for the &quot;look and feel&quot; of windows, and many portions of this code have remained largely unchanged since the Win9x versions. This module provides many of the specific instructions that cause USER and GDI to act the way they do. It's responsible for translating the API calls from the USER and GDI libraries into the pictures you see on the monitor.

== Win64 API ==

With the advent of 64-bit processors, 64-bit software is a necessity. As a result, the Win64 API was created to utilize the new hardware. It is important to note that the format of many of the function calls are identical in Win32 and Win64, except for the size of pointers, and other data types that are specific to 64-bit address space.

=== Differences ===

== Windows Vista ==

Microsoft has released a new version of its Windows operation system, named &quot;Windows Vista.&quot; Windows Vista may be better known by its development code-name &quot;Longhorn.&quot; Microsoft claims that Vista has been written largely from the ground up, and therefore it can be assumed that there are fundamental differences between the Vista API and system architecture, and the APIs and architectures of previous Windows versions. Windows Vista was released January 30th, 2007.

== Windows CE/Mobile, and other versions ==

Windows CE is the Microsoft offering on small devices. It largely uses the same Win32 API as the desktop systems, although it has a slightly different architecture. Some examples in this book may consider WinCE.

== &quot;Non-Executable Memory&quot; ==

Recent windows service packs have attempted to implement a system known as &quot;Non-executable memory&quot; where certain pages can be marked as being &quot;non-executable&quot;. The purpose of this system is to prevent some of the most common security holes by not allowing control to pass to code inserted into a memory buffer by an attacker. For instance, a shellcode loaded into an overflowed text buffer cannot be executed, stopping the attack in its tracks. The effectiveness of this mechanism is yet to be seen, however.

== COM and Related Technologies ==

COM, and a whole slew of technologies that are either related to COM or are actually COM with a fancy name, is another factor to consider when reversing Windows binaries. COM, DCOM, COM+, ActiveX, OLE, MTS, and Windows DNA are all names for the same subject, or subjects, so similar that they may all be considered under the same heading. In short, COM is a method to export Object-Oriented Classes in a uniform, ''cross-platform'' and ''cross-language'' manner. In essence, COM is .NET, version 0 beta. Using COM, components written in many languages can export, import, instantiate, modify, and destroy objects defined in another file, most often a DLL.  Although COM provides cross-platform (to some extent) and cross-language facilities, each COM object is compiled to a native binary, rather than an intermediate format such as Java or .NET.  As a result, COM does not require a virtual machine to execute such objects.

This book will attempt to show some examples of COM files, and the reversing challenges associated with them, although the subject is very broad, and may elude the scope of this book (or at least the early sections of it). The discussion may be part of an &quot;Advanced Topic&quot; found in the later sections of this book.

Due to the way that COM works, a lot of the methods and data structures exported by a COM component are difficult to perceive by simply inspecting the executable file. Matters are made worse if the creating programmer has used a library such as [http://en.wikipedia.org/wiki/Active_Template_Library ATL] to simplify their programming experience. Unfortunately for a reverse engineer, this reduces the contents of an executable into a &quot;Sea of bits&quot;, with pointers and data structures everywhere.

== Remote Procedure Calls (RPC) ==

RPC is a generic term referring to techniques that allow a program running on one machine to make calls that actually execute on another machine. Typically, this is done by ''marshalling'' all of the data needed for the procedure including any state information stored on the first machine, and building it into a single data structure, which is then transmitted over some communications method to a second machine. This second machine then performs the requested action, and returns a data packet containing any results and potentially changed state information to the originating machine.

In Windows NT, RPC is typically handled by having two libraries that are similarly named, one which generates RPC requests and accepts RPC returns, as requested by a user-mode program, and one which responds to RPC requests and returns results via RPC. A classic example is the print spooler, which consists of two pieces: the RPC stub spoolss.dll, and the spooler proper and RPC service provider, spoolsv.exe. In most machines, which are stand-alone, it would seem that the use of two modules communicating by means of RPC is overkill; why not simply roll them into a single routine? In networked printing, though, this makes sense, as the RPC service provider can be resident physically on a distant machine, with the remote printer, and the local machine can control the printer on the remote machine in exactly the same way that it controls printers on the local machine.</text>
      <sha1>bqn8kjjnns89s6v81rrzsghwk7pxdc1</sha1>
    </revision>
  </page>
  <page>
    <title>X86 Disassembly/Linux</title>
    <ns>0</ns>
    <id>40407</id>
    <revision>
      <id>2027237</id>
      <parentid>1942307</parentid>
      <timestamp>2011-02-07T18:26:49Z</timestamp>
      <contributor>
        <username>Swatnio~enwikibooks</username>
        <id>427596</id>
      </contributor>
      <comment>/*There is no system but GNU, and Linux is one of it's kernels - RMS*/</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{x86 Disassembly/Page}}
{{x86 Disassembly/Stub}}
== Linux == 

The '''GNU/Linux operating system''' is open source, but at the same time there is so much that constitutes &quot;GNU/Linux&quot; that it can be difficult to stay on top of all aspects of the system. 
Here we will attempt to boil down some of the most important concepts of the GNU/Linux Operating System, especially from a reverser's standpoint

== System Architecture ==

{{wikipedia|Linux}}

The concept of &quot;GNU/Linux&quot; is mostly a collection of a large number of software components that are based off the GNU tools and the Linux kernel. GNU/Linux is itself broken into a number of variants called &quot;distros&quot; which share some similarities, but may also have distinct peculiarities. In a general sense, all GNU/Linux distros are based on a variant of the Linux kernel. However, since each user may edit and recompile their own kernel at will, and since some distros may make certain edits to their kernels, it is hard to proclaim any one version of any one kernel as &quot;the standard&quot;. Linux kernels are generally based off the philosophy that system configuration details should be stored in aptly-named, human-readable (and therefore human-editable) configuration files. 

The Linux kernel implements much of the core API, but certainly not all of it. Much API code is stored in external modules (although users have the option of compiling all these modules together into a &quot;Monolithic Kernel&quot;).

On top of the kernel generally runs one or more '''shells'''. Bash is one of the more popular shells, but many users prefer other shells, especially for different tasks. 

Beyond the shell, Linux distros frequently offer a GUI (although many distros do not have a GUI at all, usually for performance reasons). 

Since each GUI often supplies its own underlying framework and API, certain graphical applications may run on only one GUI. Some applications may need to be recompiled (and a few completely rewritten) to run on another GUI.

== Configuration Files ==

== Shells ==

Here are some popular shells:

;Bash : An acronym for &quot;Bourne Again SHell.&quot;

;Bourne : A precursor to Bash.

;Csh : C Shell

;Ksh : Korn Shell

;TCsh : A Terminal oriented Csh.

;Zsh : Z Shell

== GUIs ==

Some of the more-popular GUIs:

;KDE : K Desktop Environment

;GNOME : GNU Network Object Modeling Environment

== Debuggers ==

;gdb : The [[GNU]] [[Debugger]]. It comes pre-installed on most Linux distributions and is primarily used to debug [[ELF]] executables. [http://www.die.net/doc/linux/man/man1/gdb.1.html manpage]

;winedbg : A debugger for [[Wine]], used to debug Win32 executables under Linux. [http://www.die.net/doc/linux/man/man1/winedbg.1.html manpage]

;edb : A fully featured plugin-based debugger inspired by the famous [http://ollydbg.de OllyDbg]. [http://www.codef00.com/projects.php#Debugger Project page]

== File Analyzers == 

;strings : Finds printable strings in a file. When, for example, a password is stored in the binary itself (defined statically in the source), the string can then be extracted from the binary without ever needing to execute it. [http://www.doc.ic.ac.uk/lab/labman/lookup-man.cgi?strings(1) manpage]

;file : Determines a file type, useful for determining whether an executable has been stripped and whether it's been dynamically (or statically) linked. [http://www.doc.ic.ac.uk/lab/labman/lookup-man.cgi?file(1) manpage]

;objdump : Disassembles object files, executables and libraries. Can list internal file structure and disassemble specific sections. Supports both Intel and AT&amp;T syntax

;nm : Lists symbols from executable files. Doesn't work on stripped binaries. Used mostly on debugging version of executables.</text>
      <sha1>n1obvk20uryfrzkuuv1xvp0dgeg5kyl</sha1>
    </revision>
  </page>
  <page>
    <title>X86 Disassembly/Windows Executable Files</title>
    <ns>0</ns>
    <id>40410</id>
    <revision>
      <id>3032106</id>
      <parentid>3025854</parentid>
      <timestamp>2015-12-29T18:50:26Z</timestamp>
      <contributor>
        <ip>192.55.55.41</ip>
      </contributor>
      <comment>/* COFF Header */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{x86 Disassembly/Page}}

== MS-DOS COM Files ==

COM files are loaded into RAM exactly as they appear; no change is made at all from the harddisk image to RAM. This is possible due to the segmented memory model of the early x86 line. Two 16-bit registers determine the actual address used for a memory access, a “segment” register specifying a 64K byte window into the 1M+64K byte space (in 16-byte increments) and an “offset” specifying an offset into that window. The segment register would be set by DOS and the COM file would be expected to respect this setting and not ever change the segment registers. The offset registers, however, were fair game and served (for COM files) the same purpose as a modern 32-bit register. The downside was that the offset registers were only 16-bit and, therefore, since COM files could not change the segment registers, COM files were limited to using 64K of RAM. The good thing about this approach, however, was that no extra work was needed by DOS to load and run a COM file: just load the file, set the segment register, and jump to it. (The programs could perform 'near' jumps by just giving an offset to jump to.)

COM files are loaded into RAM at offset $100. The space before that would be used for passing data to and from DOS (for example, the contents of the command line used to invoke the program).

Note that COM files, by definition, cannot be 32-bit. Windows provides support for COM files via a special CPU mode.

{{info|Notice that MS-DOS COM files (short for &quot;command&quot; files) are not the same as ''Component-Object Model'' files, which are an object-oriented library technology.}}

== MS-DOS EXE Files ==

One way MS-DOS compilers got around the 64K memory limitation was with the introduction of '''memory models'''. The basic concept is to cleverly set different segment registers in the x86 CPU (CS, DS, ES, SS) to point to the same or different segments, thus allowing varying degrees of access to memory.
Typical memory models were:
; tiny: All memory accesses are 16-bit (segment registers unchanged). Produces a .COM file instead of an .EXE file.
; small: All memory accesses are 16-bit (segment registers unchanged).
; compact: Data addresses include both segment and offset, reloading the DS or ES registers on access and allowing up to 1M of data. Code accesses don't change the CS register, allowing 64K of code.
; medium: Code addresses include the segment address, reloading CS on access and allowing up to 1M of code. Data accesses don't change the DS and ES registers, allowing 64K of data.
; large: Both code and data addresses are (segment, offset) pairs, always reloading the segment addresses. The whole 1M byte memory space is available for both code and data.
; huge: Same as the large model, with additional arithmetic being generated by the compiler to allow access to arrays larger than 64K.

When looking at an EXE file, one has to decide which memory model was used to build that file.

== PE Files ==

A '''Portable Executable''' ('''PE''') file is the standard binary file format for an Executable or DLL under Windows NT, Windows 95, and Win32. The Win32 SDK contains a file, ''winnt.h'', which declares various structs and variables used in the PE files. Some functions for manipulating PE files are also included in ''imagehlp.dll''. PE files are broken down into various sections which can be examined.

== Relative Virtual Addressing (RVA) ==

In a Windows environment, executable modules can be loaded at any point in memory, and are expected to run without problem. To allow multiple programs to be loaded at seemingly random locations in memory, PE files have adopted a tool called RVA: Relative Virtual Addresses. RVA's assume that the &quot;base address&quot; of where a module is loaded into memory is not known at compile time. So, PE files describe the location of data in memory as an ''offset from the base address'', wherever that may be in memory.

Some processor instructions require the code itself to directly identify where in memory some data is. This is not possible when the location of the module in memory is not known at compile time. The solution to this problem is described in the section on &quot;Relocations&quot;.

It is important to remember that the addresses obtained from a disassembly of a module will not always match up to the addresses seen in a debugger as the program is running.

== File Format == 

The PE portable executable file format includes a number of informational headers, and is arranged in the following format:

&lt;center&gt;
[[Image:RevEngPEFile.JPG]]

'''The basic format of a Microsoft PE file'''
&lt;/center&gt;

=== MS-DOS header ===

Open any Win32 binary executable in a hex editor, and note what you see: The first 2 letters are '''always''' the letters &quot;MZ&quot;. To some people, the first few bytes in a file that determine the type of file are called the &quot;magic number,&quot; although this book will not use that term, because there is no rule that states that the &quot;magic number&quot; needs to be a single number. Instead, we will use the term &quot;File ID Tag&quot;, or simply, File ID. Sometimes this is also known as File Signature. 

After the File ID, the hex editor will show several bytes of either random-looking symbols, or whitespace, before the human-readable string &quot;This program cannot be run in DOS mode&quot;.

What is this?

&lt;center&gt;
[[Image:RevEngDosHead.JPG]]

'''Hex Listing of an MS-DOS file header'''
&lt;/center&gt;

What you are looking at is the MS-DOS header of the Win32 PE file. To ensure either a) backwards compatibility, or b) graceful decline of new file types, Microsoft has engineered a series of DOS instructions into the head of each PE file. When a 32-bit Windows file is run in a 16-bit DOS environment, the program will terminate immediately with the error message: &quot;This program cannot be run in DOS mode&quot;.

The DOS header is also known by some as the EXE header. Here is the DOS header presented as a C data structure:

&lt;source lang=&quot;C&quot;&gt; struct DOS_Header 
 {
     char signature[2] = &quot;MZ&quot;;
     short lastsize;
     short nblocks;
     short nreloc;
     short hdrsize;
     short minalloc;
     short maxalloc;
     void *ss;
     void *sp;
     short checksum;
     void *ip;
     void *cs;
     short relocpos;
     short noverlay;
     short reserved1[4];
     short oem_id;
     short oem_info;
     short reserved2[10];
     long  e_lfanew;
 }&lt;/source&gt;

Immediately following the DOS Header will be the classic error message &quot;This program cannot be run in DOS mode&quot;.

=== PE Header ===

At offset 60 (0x3C) from the beginning of the DOS header is a pointer to the Portable Executable (PE) File header (e_lfanew in MZ structure). DOS will print the error message and terminate, but Windows will follow this pointer to the next batch of information. 

&lt;center&gt;
[[Image:RevEngPeSig.JPG]]

'''Hex Listing of a PE signature, and the pointer to it'''
&lt;/center&gt;

The PE header consists only of a File ID signature, with the value &quot;PE\0\0&quot; where each '\0' character is an ASCII NUL character. This signature shows that a) this file is a legitimate PE file, and b) the byte order of the file. Byte order will not be considered in this chapter, and all PE files are assumed to be in &quot;little endian&quot; format.

The first big chunk of information lies in the COFF header, directly after the PE signature.

=== COFF Header ===

The COFF header is present in both COFF object files (before they are linked) and in PE files where it is known as the &quot;File header&quot;. The COFF header has some information that is useful to an executable, and some information that is more useful to an object file.

Here is the COFF header, presented as a C data structure:

&lt;source lang=&quot;C&quot;&gt;
 struct COFFHeader
 {
    short Machine;
    short NumberOfSections;
    long TimeDateStamp;
    long PointerToSymbolTable;
    long NumberOfSymbols;
    short SizeOfOptionalHeader;
    short Characteristics;
 }
&lt;/source&gt;

;Machine : This field determines what machine the file was compiled for. A hex value of 0x14C (332 in decimal) is the code for an Intel 80386.
Here's a list of possible values it can have.
{|  
| code
| value
|- 
| 0x14c
| Intel 386
|- 
| 0x8664
| x64
|- 
| 0x14d
| Intel i860 
|- 
| 0x162
| MIPS R3000 
|- 
| 0x166
| MIPS little endian (R4000) 
|- 
| 0x168
| MIPS R10000 
|- 
| 0x169
| MIPS little endian WCI v2 
|- 
| 0x183
| old Alpha AXP 
|- 
| 0x184
| Alpha AXP 
|- 
| 0x1a2
| Hitachi SH3 
|- 
| 0x1a3
| Hitachi SH3 DSP 
|- 
| 0x1a6
| Hitachi SH4 
|- 
| 0x1a8
| Hitachi SH5 
|- 
| 0x1c0
| ARM little endian 
|- 
| 0x1c2
| Thumb 
|- 
| 0x1d3
| Matsushita AM33 
|- 
| 0x1f0
| PowerPC little endian 
|- 
| 0x1f1
| PowerPC with floating point support 
|- 
| 0x200
| Intel IA64 
|- 
| 0x266
| MIPS16 
|- 
| 0x268
| Motorola 68000 series 
|- 
| 0x284
| Alpha AXP 64-bit 
|- 
| 0x366
| MIPS with FPU 
|- 
| 0x466
| MIPS16 with FPU 
|- 
| 0xebc
| EFI Byte Code 
|- 
| 0x8664
| AMD AMD64 
|- 
| 0x9041
| Mitsubishi M32R little endian 
|- 
| 0xc0ee
| clr pure MSIL	
|}
;NumberOfSections : The number of sections that are described at the end of the PE headers.
;TimeDateStamp : 32 bit time at which this header was generated: is used in the process of &quot;Binding&quot;, see below.
;SizeOfOptionalHeader : this field shows how long the &quot;PE Optional Header&quot; is that follows the COFF header.
;Characteristics : This is a field of bit flags, that show some characteristics of the file.
* 0x02 = Executable file
* 0x200 = file is non-relocatable (addresses are absolute, not RVA).
* 0x2000 = File is a DLL Library, not an EXE.

=== PE Optional Header ===

The &quot;PE Optional Header&quot; is not &quot;optional&quot; per se, because it is required in Executable files, but not in COFF object files. The Optional header includes lots and lots of information that can be used to pick apart the file structure, and obtain some useful information about it.

The PE Optional Header occurs directly after the COFF header, and some sources even show the two headers as being part of the same structure. This wikibook separates them out for convenience.

Here is the PE Optional Header presented as a C data structure:

&lt;source lang=&quot;C&quot;&gt;
 struct PEOptHeader
 {
    short signature; //decimal number 267 for 32 bit, and 523 for 64 bit.
    char MajorLinkerVersion; 
    char MinorLinkerVersion;
    long SizeOfCode;
    long SizeOfInitializedData;
    long SizeOfUninitializedData;
    long AddressOfEntryPoint;  //The RVA of the code entry point
    long BaseOfCode;
    long BaseOfData;
    long ImageBase;
    long SectionAlignment;
    long FileAlignment;
    short MajorOSVersion;
    short MinorOSVersion;
    short MajorImageVersion;
    short MinorImageVersion;
    short MajorSubsystemVersion;
    short MinorSubsystemVersion;
    long Reserved;
    long SizeOfImage;
    long SizeOfHeaders;
    long Checksum;
    short Subsystem;
    short DLLCharacteristics;
    long SizeOfStackReserve;
    long SizeOfStackCommit;
    long SizeOfHeapReserve;
    long SizeOfHeapCommit;
    long LoaderFlags;
    long NumberOfRvaAndSizes;
    data_directory DataDirectory[16];     //Can have any number of elements, matching the number in NumberOfRvaAndSizes.
 }                                        //However, it is always 16 in PE files.
&lt;/source&gt;
 
&lt;source lang=&quot;C&quot;&gt;
 struct data_directory
 { 
    long VirtualAddress;
    long Size;
 }
&lt;/source&gt;

Some of the important pieces of information:
;MajorLinkerVersion, MinorLinkerVersion : The version, in x.y format of the linker used to create the PE.
;AddressOfEntryPoint : The RVA of the entry point to the executable. Very important to know.
;SizeOfCode : Size of the .text (.code) section
;SizeOfInitializedData : Size of .data section
;BaseOfCode : RVA of the .text section
;BaseOfData : RVA of .data section
;ImageBase : Preferred location in memory for the module to be based at
;Checksum : Checksum of the file, only used to verify validity of modules being loaded into kernel space. The formula used to calculate PE file checksums is proprietary, although Microsoft provides API calls that can calculate the checksum for you.
;Subsystem : the Windows subsystem that will be invoked to run the executable
*1 = native
*2 = Windows/GUI
*3 = Windows non-GUI
*5 = OS/2
*7 = POSIX
;DataDirectory : Possibly the most interesting member of this structure. Provides RVAs and sizes which locate various data structures, which are used for setting up the execution environment of a module. The details of what these structures do exist in other sections of this page, but the most interesting entries in DataDirectory are below:
*IMAGE_DIRECTORY_ENTRY_EXPORT (0) : Location of the export directory
*IMAGE_DIRECTORY_ENTRY_IMPORT (1) : Location of the import directory
*IMAGE_DIRECTORY_ENTRY_RESOURCE (2) : Location of the resource directory
*IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT (11) : Location of alternate import-binding directory

== Code Sections ==

The PE Header defines the number of sections in the executable file. Each section definition is 40 bytes in length.  Below is an example hex from a program I am writing:

 2E746578_74000000_00100000_00100000_A8050000 .text
 00040000_00000000_00000000_00000000_20000000
 2E646174_61000000_00100000_00200000_86050000 .data
 000A0000_00000000_00000000_00000000_40000000
 2E627373_00000000_00200000_00300000_00000000 .bss
 00000000_00000000_00000000_00000000_80000000

The structure of the section descriptor is as follows:

 Offset Length   Purpose
 ------ -------  ------------------------------------------------------------------
  0x00   8 bytes Section Name - in the above example the names are .text .data .bss
  0x08   4 bytes Size of the section once it is loaded to memory
  0x0C   4 bytes RVA (location) of section once it is loaded to memory
  0x10   4 bytes Physical size of section on disk
  0x14   4 bytes Physical location of section on disk (from start of disk image)
  0x18  12 bytes Reserved (usually zero) (used in object formats)
  0x24   4 bytes Section flags

A PE loader will place the sections of the executable image at the locations specified by these section descriptors (relative to the base address) and usually the alignment is 0x1000, which matches the size of pages on the x86.

Common sections are:
#.text/.code/CODE/TEXT   - Contains executable code (machine instructions)
#.testbss/TEXTBSS        - Present if Incremental Linking is enabled
#.data/.idata/DATA/IDATA - Contains initialised data
#.bss/BSS                - Contains uninitialised data

=== Section Flags ===

The section flags is a 32-bit bit field (each bit in the value represents a certain thing).
Here are the constants defined in the WINNT.H file for the meaning of the flags:

&lt;source lang=&quot;C&quot;&gt;
#define IMAGE_SCN_TYPE_NO_PAD                0x00000008  // Reserved.
#define IMAGE_SCN_CNT_CODE                   0x00000020  // Section contains code.
#define IMAGE_SCN_CNT_INITIALIZED_DATA       0x00000040  // Section contains initialized data.
#define IMAGE_SCN_CNT_UNINITIALIZED_DATA     0x00000080  // Section contains uninitialized data.
#define IMAGE_SCN_LNK_OTHER                  0x00000100  // Reserved.
#define IMAGE_SCN_LNK_INFO                   0x00000200  // Section contains comments or some  other type of information.
#define IMAGE_SCN_LNK_REMOVE                 0x00000800  // Section contents will not become part of image.
#define IMAGE_SCN_LNK_COMDAT                 0x00001000  // Section contents comdat.
#define IMAGE_SCN_NO_DEFER_SPEC_EXC          0x00004000  // Reset speculative exceptions handling bits in the TLB entries for this section.
#define IMAGE_SCN_GPREL                      0x00008000  // Section content can be accessed relative to GP
#define IMAGE_SCN_MEM_FARDATA                0x00008000
#define IMAGE_SCN_MEM_PURGEABLE              0x00020000
#define IMAGE_SCN_MEM_16BIT                  0x00020000
#define IMAGE_SCN_MEM_LOCKED                 0x00040000
#define IMAGE_SCN_MEM_PRELOAD                0x00080000
#define IMAGE_SCN_ALIGN_1BYTES               0x00100000  //
#define IMAGE_SCN_ALIGN_2BYTES               0x00200000  //
#define IMAGE_SCN_ALIGN_4BYTES               0x00300000  //
#define IMAGE_SCN_ALIGN_8BYTES               0x00400000  //
#define IMAGE_SCN_ALIGN_16BYTES              0x00500000  // Default alignment if no others are specified.
#define IMAGE_SCN_ALIGN_32BYTES              0x00600000  //
#define IMAGE_SCN_ALIGN_64BYTES              0x00700000  //
#define IMAGE_SCN_ALIGN_128BYTES             0x00800000  //
#define IMAGE_SCN_ALIGN_256BYTES             0x00900000  //
#define IMAGE_SCN_ALIGN_512BYTES             0x00A00000  //
#define IMAGE_SCN_ALIGN_1024BYTES            0x00B00000  //
#define IMAGE_SCN_ALIGN_2048BYTES            0x00C00000  //
#define IMAGE_SCN_ALIGN_4096BYTES            0x00D00000  //
#define IMAGE_SCN_ALIGN_8192BYTES            0x00E00000  //
#define IMAGE_SCN_ALIGN_MASK                 0x00F00000
#define IMAGE_SCN_LNK_NRELOC_OVFL            0x01000000  // Section contains extended relocations.
#define IMAGE_SCN_MEM_DISCARDABLE            0x02000000  // Section can be discarded.
#define IMAGE_SCN_MEM_NOT_CACHED             0x04000000  // Section is not cachable.
#define IMAGE_SCN_MEM_NOT_PAGED              0x08000000  // Section is not pageable.
#define IMAGE_SCN_MEM_SHARED                 0x10000000  // Section is shareable.
#define IMAGE_SCN_MEM_EXECUTE                0x20000000  // Section is executable.
#define IMAGE_SCN_MEM_READ                   0x40000000  // Section is readable.
#define IMAGE_SCN_MEM_WRITE                  0x80000000  // Section is writeable.
&lt;/source&gt;

== Imports and Exports - Linking to other modules==

=== What is linking? ===

Whenever a developer writes a program, there are a number of subroutines and functions which are expected to be implemented already, saving the writer the hassle of having to write out more code or work with complex data structures. Instead, the coder need only declare one call to the subroutine, and the linker will decide what happens next.

There are two types of linking that can be used: static and dynamic. Static uses a library of precompiled functions. This precompiled code can be inserted into the final executable to implement a function, saving the programmer a lot of time. In contrast, dynamic linking allows subroutine code to reside in a different file (or ''module''), which is loaded at runtime by the operating system. This is also known as a &quot;Dynamically linked library&quot;, or DLL. A ''library'' is a module containing a series of functions or values that can be ''exported''. This is different from the term ''executable'', which ''imports'' things from libraries to do what it wants. From here on, &quot;module&quot; means any file of PE format, and a &quot;Library&quot; is any module which exports and imports functions and values.

Dynamically linking has the following benefits:
* It saves disk space, if more than one executable links to the library module
* Allows instant updating of routines, without providing new executables for all applications
* Can save space in memory by mapping the code of a library into more than one process
* Increases abstraction of implementation. The method by which an action is achieved can be modified without the need for reprogramming of applications. This is extremely useful for backward compatibility with operating systems.
This section discusses how this is achieved using the PE file format. An important point to note at this point is that ''anything'' can be imported or exported between modules, including variables as well as subroutines.

=== Loading ===

The downside of dynamically linking modules together is that, at runtime, the software which is initialising an executable must link these modules together. For various reasons, you cannot declare that &quot;The function in this dynamic library will always exist in memory ''here''&quot;. If that memory address is unavailable or the library is updated, the function will no longer exist there, and the application trying to use it will break. Instead, each module (library or executable) must declare what functions or values it ''exports'' to other modules, and also what it wishes to ''import'' from other modules.

As said above, a module cannot declare where in memory it expects a function or value to be. Instead, it declares where ''in its own memory'' it expects to find a '''pointer''' to the value it wishes to import. This permits the module to address any imported value, wherever it turns up in memory.

== Exports ==

''Exports'' are functions and values in one module that have been declared to be shared with other modules. This is done through the use of the &quot;Export Directory&quot;, which is used to translate between the name of an export (or &quot;Ordinal&quot;, see below), and a location in memory where the code or data can be found. The start of the export directory is identified by the IMAGE_DIRECTORY_ENTRY_EXPORT entry of the resource directory. All export data must exist in the same section. The directory is headed by the following structure:
&lt;source lang=&quot;C&quot;&gt;
struct IMAGE_EXPORT_DIRECTORY {
	long Characteristics;
	long TimeDateStamp;
	short MajorVersion;
	short MinorVersion;
	long Name;
	long Base;
	long NumberOfFunctions;
	long NumberOfNames;
	long *AddressOfFunctions;
	long *AddressOfNames;
	long *AddressOfNameOrdinals;
}
&lt;/source&gt;
The &quot;Characteristics&quot; value is generally unused, TimeDateStamp describes the time the export directory was generated, MajorVersion and MinorVersion should describe the version details of the directory, but their nature is undefined. These values have little or no impact on the actual exports themselves. The &quot;Name&quot; value is an RVA to a zero terminated ASCII string, the name of this library name, or module.

==== Names and Ordinals ====

Each exported value has both a name and an &quot;ordinal&quot; (a kind of index). The actual exports themselves are described through AddressOfFunctions, which is an RVA to an array of RVA's, each pointing to a different function or value to be exported. The size of this array is in the value NumberOfFunctions. Each of these functions has an ordinal. The &quot;Base&quot; value is used as the ordinal of the first export, and the next RVA in the array is Base+1, and so forth.

Each entry in the AddressOfFunctions array is identified by a name, found through the RVA AddressOfNames. The data where AddressOfNames points to is an array of RVA's, of the size NumberOfNames. Each RVA points to a zero terminated ASCII string, each being the name of an export. There is also a second array, pointed to by the RVA in AddressOfNameOrdinals. This is also of size NumberOfNames, but each value is a 16 bit word, each value being an ordinal. These two arrays are parallel and are used to get an export value from AddressOfFunctions. To find an export by name, search the AddressOfNames array for the correct string and then take the corresponding ordinal from the AddressOfNameOrdinals array. This ordinal is then used to get an index to a value in AddressOfFunctions.

==== Forwarding ====

As well as being able to export functions and values in a module, the export directory can ''forward'' an export to another library. This allows more flexibility when re-organising libraries: perhaps some functionality has branched into another module. If so, an export can be forwarded to that library, instead of messy reorganising inside the original module.

Forwarding is achieved by making an RVA in the AddressOfFunctions array point into the section which contains the export directory, something that normal exports should not do. At that location, there should be a zero terminated ASCII string of format &quot;LibraryName.ExportName&quot; for the appropriate place to forward this export to.

== Imports ==

The other half of dynamic linking is importing functions and values into an executable or other module. Before runtime, compilers and linkers do not know where in memory a value that needs to be imported could exist. The import table solves this by creating an array of pointers at runtime, each one pointing to the memory location of an imported value. This array of pointers exists inside of the module at a defined RVA location. In this way, the linker can use addresses inside of the module to access values outside of it.

=== The Import directory ===

The start of the import directory is pointed to by both the IMAGE_DIRECTORY_ENTRY_IAT and IMAGE_DIRECTORY_ENTRY_IMPORT entries of the resource directory (the reason for this is uncertain). At that location, there is an array of IMAGE_IMPORT_DESCRIPTORS structures. Each of these identify a library or module that has a value we need to import. The array continues until an entry where all the values are zero. The structure is as follows:
&lt;source lang=&quot;C&quot;&gt;
struct IMAGE_IMPORT_DESCRIPTOR {
	long *OriginalFirstThunk;
	long TimeDateStamp;
	long ForwarderChain;
	long Name;
	long *FirstThunk;
}
&lt;/source&gt;
The TimeDateStamp is relevant to the act of &quot;Binding&quot;, see below. The Name value is an RVA to an ASCII string, naming the library to import. ForwarderChain will be explained later. The only thing of interest at this point, are the RVA's OriginalFirstThunk and FirstThunk. Both these values point to arrays of RVA's, each of which point to a IMAGE_IMPORT_BY_NAMES struct. The arrays are terminated with an entry that is equal to zero. These two arrays are parallel and point to the same structure, in the same order. The reason for this will become apparent shortly.

Each of these IMAGE_IMPORT_BY_NAMES structs has the following form:
&lt;source lang=&quot;C&quot;&gt;
struct IMAGE_IMPORT_BY_NAME {
	short Hint;
	char Name[1];
}
&lt;/source&gt;
&quot;Name&quot; is an ASCII string of any size that names the value to be imported. This is used when looking up a value in the export directory (see above) through the AddressOfNames array. The &quot;Hint&quot; value is an index into the AddressOfNames array; &lt;!--These two simple sentences belong in the same sentence, but the strong interruption requires a strong punctuation mark (http://www.wsu.edu/~brians/errors/colons.html).--&gt; to save searching for a string, the loader first checks the AddressOfNames entry corresponding to &quot;Hint&quot;.


To summarise: The import table consists of a large array of IMAGE_IMPORT_DESCRIPTOR's, terminated by an all-zero entry. These descriptors identify a library to import things from. There are then two parallel RVA arrays, each pointing at IMAGE_IMPORT_BY_NAME structures, which identify a specific value to be imported.

=== Imports at runtime ===

Using the above import directory at runtime, the loader finds the appropriate modules, loads them into memory, and seeks the correct export. However, to be able to use the export, a pointer to it must be stored somewhere in the importing module's memory. This is why there are two parallel arrays, OriginalFirstThunk and FirstThunk, identifying IMAGE_IMPORT_BY_NAME structures. Once an imported value has been resolved, the pointer to it is stored in the FirstThunk array. It can then be used at runtime to address imported values.

=== Bound imports ===

The PE file format also supports a peculiar feature known as &quot;binding&quot;. The process of loading and resolving import addresses can be time consuming, and in some situations this is to be avoided. If a developer is fairly certain that a library is not going to be updated or changed, then the addresses in memory of imported values will not change each time the application is loaded. So, the import address can be precomputed and stored in the FirstThunk array ''before'' runtime, allowing the loader to skip resolving the imports - the imports are &quot;bound&quot; to a particular memory location. However, if the versions numbers between modules do not match, or the imported library needs to be relocated, the loader will assume the bound addresses are invalid, and resolve the imports anyway.

The &quot;TimeDateStamp&quot; member of the import directory entry for a module controls binding; if it is set to zero, then the import directory is not bound. If it is non-zero, then it is bound to another module. However, the TimeDateStamp in the import table must match the TimeDateStamp in the bound module's FileHeader, otherwise the bound values will be discarded by the loader.

==== Forwarding and binding ====

Binding can of course be a problem if the bound library / module forwards its exports to another module. In these cases, the non-forwarded imports can be bound, but the values which get forwarded must be identified so the loader can resolve them. This is done through the ForwarderChain member of the import descriptor. The value of &quot;ForwarderChain&quot; is an index into the FirstThunk and OriginalFirstThunk arrays. The OriginalFirstThunk for that index identifies the IMAGE_IMPORT_BY_NAME structure for a import that needs to be resolved, and the FirstThunk for that index is the index of another entry that needs to be resolved. This continues until the FirstThunk value is -1, indicating no more forwarded values to import.

== Resources ==

=== Resource structures ===

Resources are data items in modules which are difficult to be stored or described using the chosen programming language. This requires a separate compiler or resource builder, allowing insertion of dialog boxes, icons, menus, images, and other types of resources, including arbitrary binary data. A number of API calls can then be used to retrieve resources from the module. The base of resource data is pointed to by the IMAGE_DIRECTORY_ENTRY_RESOURCE entry of the data directory, and at that location there is an IMAGE_RESOURCE_DIRECTORY structure:
&lt;source lang=&quot;C&quot;&gt;
struct IMAGE_RESOURCE_DIRECTORY
{
	long Characteristics;
	long TimeDateStamp;
	short MajorVersion;
	short MinorVersion;
	short NumberOfNamedEntries;
	short NumberOfIdEntries;
}
&lt;/source&gt;
Characteristics is unused, and TimeDateStamp is normally the time of creation, although it doesn't matter if it's set or not. MajorVersion and MinorVersion relate to the versioning info of the resources: the fields have no defined values. Immediately following the IMAGE_RESOURCE_DIRECTORY structure is a series of IMAGE_RESOURCE_DIRECTORY_ENTRY's, the number of which are defined by the total of NumberOfNamedEntries and NumberOfIdEntries. The first portion of these entries are for named resources, the latter for ID resources, depending on the values in the IMAGE_RESOURCE_DIRECTORY struct. The actual shape of the resource entry structure is as follows:
&lt;source lang=&quot;C&quot;&gt;
struct IMAGE_RESOURCE_DIRECTORY_ENTRY
{
	long NameId;
	long *Data;
}
&lt;/source&gt;
The NameId value has dual purpose: if the most significant bit (or sign bit) is clear, then the lower 16 bits are an ID number of the resource. Alternatly, if the top bit is set, then the lower 31 bits make up an offset from the start of the resource data to the name string of this particular resource. The Data value also has a dual purpose: if the most significant bit is set, the remaining 31 bits form an offset from the start of the resource data to another IMAGE_RESOURCE_DIRECTORY (i.e. this entry is an interior node of the resource tree). Otherwise, this is a leaf node, and Data contains the offset from the start of the resource data to a structure which describes the specifics of the resource data itself (which can be considered to be an ordered stream of bytes):
&lt;source lang=&quot;C&quot;&gt;
struct IMAGE_RESOURCE_DATA_ENTRY
{
        long *Data;
        long Size;
        long CodePage;
        long Reserved;
}
&lt;/source&gt;
The Data value contains an RVA to the actual resource data, Size is self-explanatory, and CodePage contains the Unicode codepage to be used for decoding Unicode-encoded strings in the resource (if any). Reserved should be set to 0.

=== Layout ===
&lt;!-- A diagram of this would be LOVELY!&gt;&lt;/!--&gt;
The above system of resource directory and entries allows simple storage of resources, by name or ID number. However, this can get very complicated very quickly. Different types of resources, the resources themselves, and instances of resources in other languages can become muddled in just one directory of resources. For this reason, the resource directory has been given a structure to work by, allowing separation of the different resources.

For this purpose, the &quot;Data&quot; value of resource entries points at another IMAGE_RESOURCE_DIRECTORY structure, forming a tree-diagram like organisation of resources. The first level of resource entries identifies the ''type'' of the resource: cursors, bitmaps, icons and similar. They use the ID method of identifying the resource entries, of which there are twelve defined values in total. More user defined resource types can be added. Each of these resource entries points at a resource directory, naming the actual resources themselves. These can be of any name or value. These point at yet another resource directory, which uses ID numbers to distinguish languages, allowing different specific resources for systems using a different language. Finally, the entries in the language directory actually provide the offset to the resource data itself, the format of which is not defined by the PE specification and can be treated as an arbitrary stream of bytes.

== Relocations ==

== Alternate Bound Import Structure ==

== Windows DLL Files ==

Windows DLL files are a brand of PE file with a few key differences: 

*A .DLL file extension
*A &lt;code&gt;DllMain()&lt;/code&gt; entry point, instead of a WinMain() or main().
*The DLL flag set in the PE header.

DLLs may be loaded in one of two ways, a) at load-time, or b) by calling the LoadModule() Win32 API function. 

=== Function Exports ===

Functions are exported from a DLL file by using the following syntax:

&lt;source lang=&quot;C&quot;&gt;
 __declspec(dllexport) void MyFunction() ...
&lt;/source&gt;

The &quot;__declspec&quot; keyword here is not a C language standard, but is implemented by many compilers to set extendable, compiler-specific options for functions and variables. Microsoft C Compiler and GCC versions that run on windows allow for the __declspec keyword, and the dllexport property. 

Functions may also be exported from regular .exe files, and .exe files with exported functions may be called dynamically in a similar manner to .dll files. This is a rare occurrence, however.

=== Identifying DLL Exports ===

There are several ways to determine which functions are exported by a DLL. The method that this book will use (often implicitly) is to use '''dumpbin''' in the following manner:

 dumpbin /EXPORTS &lt;dll file&gt;

This will post a list of the function exports, along with their ordinal and RVA to the console.

=== Function Imports ===

In a similar manner to function exports, a program may import a function from an external DLL file. The dll file will load into the process memory when the program is started, and the function will be used like a local function. DLL imports need to be prototyped in the following manner, for the compiler and linker to recognize that the function is coming from an external library:

&lt;source lang=&quot;C&quot;&gt;
 __declspec(dllimport) void MyFunction();
&lt;/source&gt;

=== Identifying DLL Imports ===

If is often useful to determine which functions are imported from external libraries when examining a program. To list import files to the console, use '''dumpbin''' in the following manner:

 dumpbin /IMPORTS &lt;dll file&gt;

You can also use depends.exe to list imported and exported functions. Depends is a a GUI tool and comes with Microsoft Platform SDK.</text>
      <sha1>tlt4mw4a2uub8t0o7rims2h7n20p14y</sha1>
    </revision>
  </page>
  <page>
    <title>X86 Disassembly/Calling Conventions</title>
    <ns>0</ns>
    <id>40412</id>
    <revision>
      <id>3043292</id>
      <parentid>2949433</parentid>
      <timestamp>2016-02-03T14:02:01Z</timestamp>
      <contributor>
        <ip>82.207.120.144</ip>
      </contributor>
      <comment>Correcting of function name</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{x86 Disassembly/Page}}

== Calling Conventions ==
{{Wikipedia|Calling convention}}
'''Calling conventions''' are a standardized method for functions to be implemented and called by the machine. A calling convention specifies the method that a compiler sets up to access a subroutine. In theory, code from any compiler can be interfaced together, so long as the functions all have the same calling conventions. In practice however, this is not always the case.

Calling conventions specify how arguments are passed to a function, how return values are passed back out of a function, how the function is called, and how the function manages the stack and its stack frame. In short, the calling convention specifies how a function call in C or C++ is converted into assembly language. Needless to say, there are many ways for this translation to occur, which is why it's so important to specify certain standard methods. If these standard conventions did not exist, it would be nearly impossible for programs created using different compilers to communicate and interact with one another. 

There are three major calling conventions that are used with the C language: STDCALL, CDECL, and FASTCALL. In addition, there is another calling convention typically used with C++: THISCALL. There are other calling conventions as well, including PASCAL and FORTRAN conventions, among others. We will not consider those conventions in this book.

== Notes on Terminology ==

There are a few terms that we are going to be using in this chapter, which are mostly common sense, but which are worthy of stating directly:

;Passing arguments : &quot;passing arguments&quot; is a way of saying that the calling function is writing data in the place where the called function will look for them. Arguments are passed before the ''call'' instruction is executed.

;Right-to-Left and Left-to-Right : These describe the manner that arguments are passed to the subroutine, in terms of the High-level code. For instance, the following C function call:

&lt;source lang=&quot;C&quot;&gt;
MyFunction1(a, b);
&lt;/source&gt;

will generate the following code if passed Left-to-Right:

&lt;source lang=&quot;asm&quot;&gt;
push a
push b
call _MyFunction
&lt;/source&gt;

and will generate the following code if passed Right-to-Left:

&lt;source lang=&quot;asm&quot;&gt;
push b
push a
call _MyFunction
&lt;/source&gt;

;Return value : Some functions return a value, and that value must be received reliably by the function's caller. The called function places its return value in a place where the calling function can get it when execution returns. The called function stores the return value before executing the ''ret'' instruction.

;Cleaning the stack : When arguments are pushed onto the stack, eventually they must be popped back off again. Whichever function, the caller or the callee, is responsible for cleaning the stack must reset the stack pointer to eliminate the passed arguments.

;Calling function (the caller): The &quot;parent&quot; function that calls the subroutine. Execution resumes in the calling function directly after the subroutine call, unless the program terminates inside the subroutine.

;Called function (the callee): The &quot;child&quot; function that gets called by the &quot;parent.&quot;

;Name Decoration : When C code is translated to assembly code, the compiler will often &quot;decorate&quot; the function name by adding extra information that the linker will use to find and link to the correct functions. For most calling conventions, the decoration is very simple (often only an extra symbol or two to denote the calling convention), but in some extreme cases (notably C++ &quot;thiscall&quot; convention), the names are &quot;mangled&quot; severely.

;Entry sequence (the function prologue): a few instructions at the beginning of a function, which prepare the stack and registers for use within the function.

;Exit sequence (the function epilogue): a few instructions at the end of a function, which restore the stack and registers to the state expected by the caller, and return to the caller. Some calling conventions clean the stack in the exit sequence.

;Call sequence: a few instructions in the middle of a function (the caller) which pass the arguments and call the called function. After the called function has returned, some calling conventions have one more instruction in the call sequence to clean the stack.

== Standard C Calling Conventions ==

The C language, by default, uses the CDECL calling convention, but most compilers allow the programmer to specify another convention via a specifier keyword. These keywords '''are not''' part of the ISO-ANSI C standard, so you should always check with your compiler documentation about implementation specifics.

If a calling convention other than CDECL is to be used, or if CDECL is not the default for your compiler, and you want to manually use it, you must specify the calling convention keyword in the function declaration itself, and in any prototypes for the function. This is important because both the calling function and the called function need to know the calling convention.

=== CDECL ===

In the CDECL calling convention the following holds:
*Arguments are passed on the stack in Right-to-Left order, and return values are passed in eax.
*The ''calling'' function cleans the stack. This allows CDECL functions to have ''variable-length argument lists'' (aka variadic functions). For this reason the number of arguments is not appended to the name of the function by the compiler, and the assembler and the linker are therefore unable to determine if an incorrect number of arguments is used.

{{Wikipedia|Variadic_function}}
Variadic functions usually have special entry code, generated by the va_start(), va_arg() C pseudo-functions.

Consider the following C instructions:

&lt;source lang=&quot;C&quot;&gt;
_cdecl int MyFunction1(int a, int b)
{
  return a + b;
}
&lt;/source&gt;

and the following function call:

&lt;source lang=&quot;C&quot;&gt;
 x = MyFunction1(2, 3);
&lt;/source&gt;

These would produce the following assembly listings, respectively:

&lt;source lang=&quot;asm&quot;&gt;
_MyFunction1:
push ebp
mov ebp, esp
mov eax, [ebp + 8]
mov edx, [ebp + 12]
add eax, edx
pop ebp
ret
&lt;/source&gt;

and

&lt;source lang=&quot;asm&quot;&gt;
push 3
push 2
call _MyFunction1
add esp, 8
&lt;/source&gt;

When translated to assembly code, CDECL functions are almost always prepended with an underscore (that's why all previous examples have used &quot;_&quot; in the assembly code).

=== STDCALL ===

STDCALL, also known as &quot;WINAPI&quot; (and a few other names, depending on where you are reading it) is used almost exclusively by Microsoft as the standard calling convention for the Win32 API. Since STDCALL is strictly defined by Microsoft, all compilers that implement it do it the same way.

*STDCALL passes arguments right-to-left, and returns the value in eax. (The Microsoft documentation erroneously claimed that arguments are passed left-to-right, but this is not the case.)
*The called function cleans the stack, unlike CDECL. This means that STDCALL doesn't allow variable-length argument lists. 

Consider the following C function:

&lt;source lang=&quot;C&quot;&gt;
_stdcall int MyFunction2(int a, int b)
{
   return a + b;
}
&lt;/source&gt;

and the calling instruction:

&lt;source lang=&quot;C&quot;&gt;
 x = MyFunction2(2, 3);
&lt;/source&gt;

These will produce the following respective assembly code fragments:

&lt;source lang=&quot;asm&quot;&gt;
:_MyFunction2@8
push ebp
mov ebp, esp
mov eax, [ebp + 8]
mov edx, [ebp + 12]
add eax, edx
pop ebp
ret 8
&lt;/source&gt;

and

&lt;source lang=&quot;asm&quot;&gt;
push 3
push 2
call _MyFunction2@8
&lt;/source&gt;

There are a few important points to note here:

#In the function body, the ''ret'' instruction has an (optional) argument that indicates how many bytes to pop off the stack when the function returns.
#STDCALL functions are name-decorated with a leading underscore, followed by an @, and then the number (in bytes) of arguments passed on the stack. This number will always be a multiple of 4, on a 32-bit aligned machine.

=== FASTCALL ===

The FASTCALL calling convention is not completely standard across all compilers, so it should be used with caution. In FASTCALL, the first 2 or 3 32-bit (or smaller) arguments are passed in registers, with the most commonly used registers being edx, eax, and ecx. Additional arguments, or arguments larger than 4-bytes are passed on the stack, often in Right-to-Left order (similar to CDECL). The calling function most frequently is responsible for cleaning the stack, if needed. 

Because of the ambiguities, it is recommended that FASTCALL be used only in situations with 1, 2, or 3 32-bit arguments, where speed is essential.

The following C function:

&lt;source lang=&quot;C&quot;&gt;
_fastcall int MyFunction3(int a, int b)
{
   return a + b;
}
&lt;/source&gt;

and the following C function call:

&lt;source lang=&quot;C&quot;&gt;
x = MyFunction3(2, 3);
&lt;/source&gt;

Will produce the following assembly code fragments for the called, and the calling functions, respectively:

&lt;source lang=&quot;asm&quot;&gt;
:@MyFunction3@8
push ebp
mov ebp, esp ;many compilers create a stack frame even if it isn't used
add eax, edx ;a is in eax, b is in edx
pop ebp
ret
&lt;/source&gt;

and

&lt;source lang=&quot;asm&quot;&gt;
;the calling function
mov eax, 2
mov edx, 3
call @MyFunction3@8
&lt;/source&gt;
The name decoration for FASTCALL prepends an @ to the function name, and follows the function name with @x, where x is the number (in bytes) of arguments passed to the function. 

Many compilers still produce a stack frame for FASTCALL functions, especially in situations where the FASTCALL function itself calls another subroutine. However, if a FASTCALL function doesn't need a stack frame, optimizing compilers are free to omit it.

== C++ Calling Convention ==

C++ requires that non-static methods of a class be called by an instance of the class. Therefore it uses its own standard calling convention to ensure that pointers to the object are passed to the function: '''THISCALL'''.

=== THISCALL ===

In THISCALL, the pointer to the class object is passed in ecx, the arguments are passed Right-to-Left on the stack, and the return value is passed in eax.

For instance, the following C++ instruction:

&lt;source lang=&quot;Cpp&quot;&gt;
 MyObj.MyMethod(a, b, c);
&lt;/source&gt;

Would form the following asm code:

&lt;source lang=&quot;asm&quot;&gt;
mov ecx, MyObj
push c
push b
push a
call _MyMethod
&lt;/source&gt;

At least, it ''would'' look like the assembly code above if it weren't for '''name mangling'''.

=== Name Mangling ===


{{Wikipedia|Name mangling}}
Because of the complexities inherent in function overloading, C++ functions are heavily name-decorated to the point that people often refer to the process as &quot;Name Mangling.&quot;
Unfortunately C++ compilers are free to do the name-mangling differently since the standard does not enforce a convention. Additionally, other issues such as exception handling are also not standardized.

Since every compiler does the name-mangling differently, this book will not spend too much time discussing the specifics of the algorithm. Notice that in many cases, it's possible to determine which compiler created the executable by examining the specifics of the name-mangling format. We will not cover this topic in this much depth in this book, however. 

Here are a few general remarks about THISCALL name-mangled functions:

*They are recognizable on sight because of their complexity when compared to CDECL, FASTCALL, and STDCALL function name decorations
*They sometimes include the name of that function's class.
*They almost always include the number and type of the arguments, so that overloaded functions can be differentiated by the arguments passed to it.

Here is an example of a C++ class and function declaration:

&lt;source lang=&quot;Cpp&quot;&gt;
 class MyClass {
  MyFunction(int a);
 }
 
 MyClass::MyFunction(2) { }
&lt;/source&gt;

And here is the resultant mangled name:

 ?MyFunction@MyClass@@QAEHH@Z

=== Extern &quot;C&quot; ===

In a C++ source file, functions placed in an &lt;code&gt;extern &quot;C&quot;&lt;/code&gt; block are guaranteed not to be mangled. This is done frequently when libraries are written in C++, and the functions need to be exported without being mangled. Even though the program is written in C++ and compiled with a C++ compiler, some of the functions might therefore not be mangled and will use one of the ordinary C calling conventions (typically CDECL).

== Note on Name Decorations ==

We've been discussing name decorations in this chapter, but the fact is that in pure disassembled code there typically are no names whatsoever, especially not names with fancy decorations. The assembly stage removes all these readable identifiers, and replaces them with the binary locations instead. Function names really only appear in two places:

#Listing files produced during compilation
#In export tables, if functions are exported

When disassembling raw machine code, there will be no function names and no name decorations to examine. For this reason, you will need to pay more attention to the way parameters are passed, the way the stack is cleaned, and other similar details. 

While we haven't covered optimizations yet, suffice it to say that optimizing compilers can even make a mess out of these details. Functions which are not exported do not necessarily need to maintain standard interfaces, and if it is determined that a particular function does not need to follow a standard convention, some of the details will be optimized away. In these cases, it can be difficult to determine what calling conventions were used (if any), and it is even difficult to determine where a function begins and ends. This book cannot account for all possibilities, so we try to show as much information as possible, with the knowledge that much of the information provided here will not be available in a true disassembly situation.

== Further reading ==
{{Wikipedia|x86 calling conventions}}
{{Wikipedia|function prologue}}

* [[x86 Disassembly/Calling Convention Examples]]
* [[Embedded Systems/Mixed C and Assembly Programming]] describes calling conventions on other CPUs.</text>
      <sha1>f7y9gyzdkxrp5sw1aig5f2rqb5rdt5x</sha1>
    </revision>
  </page>
  <page>
    <title>User:Danny~enwikibooks</title>
    <ns>2</ns>
    <id>40413</id>
    <revision>
      <id>2852811</id>
      <parentid>230868</parentid>
      <timestamp>2015-04-17T22:18:51Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Danny]] to [[User:Danny~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Danny|Danny]]&quot; to &quot;[[Special:CentralAuth/Danny~enwikibooks|Danny~enwikibooks]]&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">[[Image:Press1520.png|right|100px|manual printing press circa 1520]]
Danny is hereby awarded this printing press for pressing so hard to get [[Wikijunior Solar System]] to print.</text>
      <sha1>1006q1dfzf7n6lcul0zd776rt2c8q8d</sha1>
    </revision>
  </page>
  <page>
    <title>X86 Disassembly/Functions and Stack Frames</title>
    <ns>0</ns>
    <id>40414</id>
    <revision>
      <id>2986670</id>
      <parentid>2749425</parentid>
      <timestamp>2015-08-23T20:40:06Z</timestamp>
      <contributor>
        <ip>81.155.246.143</ip>
      </contributor>
      <comment>Just adding a wee note about the ESP in the Stack Diagram. It seems to be missing from the &quot;crude representation&quot; of &quot;the stack&quot;. What's a stack without a stack pointer? I hope it's acceptable.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{x86 Disassembly/Page}}

== Functions and Stack Frames == 

To allow for many unknowns in the execution environment, functions are frequently set up with a &quot;'''stack frame'''&quot; to allow access to both function parameters, and automatic function variables. The idea behind a stack frame is that each subroutine can act independently of its location on the stack, and each subroutine can act as if it is the top of the stack.

When a function is called, a new stack frame is created at the current '''esp''' location. A stack frame acts like a partition on the stack. All items from previous functions are higher up on the stack, and should not be modified. Each current function has access to the remainder of the stack, from the stack frame until the end of the stack page. The current function always has access to the &quot;top&quot; of the stack, and so functions do not need to take account of the memory usage of other functions or programs.

== Standard Entry Sequence ==
{{x86 Disassembly/Syntax|MASM}}
For many compilers, the standard function entry sequence is the following piece of code (''X'' is the total size, in bytes, of all ''automatic'' variables used in the function):

{{clear}}

&lt;source lang=&quot;asm&quot;&gt;
push ebp
mov ebp, esp
sub esp, X
&lt;/source&gt;

For example, here is a C function code fragment and the resulting assembly instructions:

&lt;source lang=&quot;C&quot;&gt;
void MyFunction()
{
  int a, b, c;
  ...
&lt;/source&gt;

&lt;source lang=&quot;asm&quot;&gt;
_MyFunction:
  push ebp     ; save the value of ebp
  mov ebp, esp ; ebp now points to the top of the stack
  sub esp, 12  ; space allocated on the stack for the local variables
&lt;/source&gt;

This means local variables can be accessed by referencing ebp.
Consider the following C code fragment and corresponding assembly code:

&lt;source lang=&quot;C&quot;&gt;
a = 10;
b = 5;
c = 2;
&lt;/source&gt;

&lt;source lang=&quot;asm&quot;&gt;
mov [ebp -  4], 10  ; location of variable a
mov [ebp -  8], 5   ; location of b
mov [ebp - 12], 2   ; location of c
&lt;/source&gt;

This all seems well and good, but what is the purpose of '''ebp''' in this setup?
Why save the old value of ebp and then point ebp to the top of the stack, only to change the value of esp with the next instruction? The answer is ''function parameters''.

Consider the following C function declaration:

&lt;source lang=&quot;C&quot;&gt;
void MyFunction2(int x, int y, int z)
{
  ...
}
&lt;/source&gt;

It produces the following assembly code:

&lt;source lang=&quot;asm&quot;&gt;
_MyFunction2:
  push ebp 
  mov ebp, esp
  sub esp, 0     ; no local variables, most compilers will omit this line
&lt;/source&gt;

Which is exactly as one would expect.
So, what exactly does '''ebp''' do, and where are the function parameters stored? The answer is found when we call the function.

Consider the following C function call:

&lt;source lang=&quot;C&quot;&gt;
MyFunction2(10, 5, 2);
&lt;/source&gt;

This will create the following assembly code (using a Right-to-Left calling convention called CDECL, explained later):

&lt;source lang=&quot;asm&quot;&gt;
push 2
push 5
push 10
call _MyFunction2
&lt;/source&gt;

'''Note:''' Remember that the '''call''' x86 instruction is basically equivalent to

&lt;source lang=&quot;asm&quot;&gt;
push eip + 2 ; return address is current address + size of two instructions
jmp _MyFunction2
&lt;/source&gt;

It turns out that the function arguments are all passed on the stack! Therefore, when we move the current value of the stack pointer ('''esp''') into '''ebp''', we are pointing ebp directly at the function arguments. As the function code pushes and pops values, ebp is not affected by esp. 
Remember that pushing basically does this:

&lt;source lang=&quot;asm&quot;&gt;
sub esp, 4   ; &quot;allocate&quot; space for the new stack item
mov [esp], X ; put new stack item value X in
&lt;/source&gt;

This means that first the return address and then the old value of '''ebp''' are put on the stack. Therefore [ebp] points to the location of the old value of ebp, [ebp + 4] points to the return address, and [ebp + 8] points to the first function argument. Here is a (crude) representation of the stack at this point:

 :    : 
 |  2 | [ebp + 16] (3rd function argument)
 |  5 | [ebp + 12] (2nd argument)
 | 10 | [ebp + 8]  (1st argument)
 | RA | [ebp + 4]  (return address)
 | FP | [ebp]      (old ebp value)
 |    | [ebp - 4]  (1st local variable)
 :    :
 :    :
 |    | [ebp - X]  (esp - the current stack pointer. The use of push / pop is valid now)

The stack pointer value may change during the execution of the current function. In particular this happens when:
* parameters are passed to another function;
* the pseudo-function &quot;alloca()&quot; is used.

[FIXME: When parameters are passed into another function the esp changing is not an issue. When that function returns the esp will be back to its old value. So why does ebp help there. This needs better explanation. (The real explanation is here, ESP is not really needed: http://blogs.msdn.com/larryosterman/archive/2007/03/12/fpo.aspx)]
This means that the value of '''esp''' cannot be reliably used to determine (using the appropriate offset) the memory location of a specific local variable.
To solve this problem, many compilers access local variables using negative offsets from the '''ebp''' registers. This allows us to assume that the same offset is always used to access the same variable (or parameter). For this reason, the ebp register is called the '''frame pointer''', or FP.

== Standard Exit Sequence ==

The Standard Exit Sequence must undo the things that the Standard Entry Sequence does. To this effect, the Standard Exit Sequence must perform the following tasks, in the following order:

#Remove space for local variables, by reverting '''esp''' to its old value.
#Restore the old value of '''ebp''' to its old value, which is on top of the stack.
#Return to the calling function with a ''ret'' command.

As an example, the following C code:

&lt;source lang=&quot;C&quot;&gt;
void MyFunction3(int x, int y, int z)
{
  int a, int b, int c;
  ...
  return;
}
&lt;/source&gt;

Will create the following assembly code:

&lt;source lang=&quot;asm&quot;&gt;
_MyFunction3:
  push ebp
  mov ebp, esp
  sub esp, 12 ; sizeof(a) + sizeof(b) + sizeof(c)
  ;x = [ebp + 8], y = [ebp + 12], z = [ebp + 16]
  ;a = [ebp - 4] = [esp + 8], b = [ebp - 8] = [esp + 4], c = [ebp - 12] = [esp]
  mov esp, ebp
  pop ebp
  ret 12 ; sizeof(x) + sizeof(y) + sizeof(z)
&lt;/source&gt;

== Non-Standard Stack Frames ==

Frequently, reversers will come across a subroutine that doesn't set up a standard stack frame. Here are some things to consider when looking at a subroutine that does not start with a standard sequence:

=== Using Uninitialized Registers ===

When a subroutine starts using data in an ''uninitialized'' register, that means that the subroutine expects external functions to put data into that register before it gets called. Some calling conventions pass arguments in registers, but sometimes a compiler will not use a standard calling convention.

=== &quot;static&quot; Functions ===

In C, functions may optionally be declared with the '''static''' keyword, as such:

&lt;source lang=&quot;C&quot;&gt;
static void MyFunction4();
&lt;/source&gt;

The '''static''' keyword causes a function to have only local scope, meaning it may not be accessed by any external functions (it is strictly internal to the given code file). When an optimizing compiler sees a static function that is only referenced by calls (no references through function pointers), it &quot;knows&quot; that external functions cannot possibly interface with the static function (the compiler controls all access to the function), so the compiler doesn't bother making it standard.

=== Hot Patch Prologue ===
Some Windows functions set up a regular stack frame as explained above, but start out with the apparently non-sensical line
&lt;source lang=&quot;asm&quot;&gt;
mov edi, edi;
&lt;/source&gt;
This instruction is assembled into 2 bytes which serve as a placeholder for future function patches. Taken as a whole such a function might look like this:
&lt;source lang=&quot;asm&quot;&gt;
nop               ; each nop is 1 byte long
nop
nop
nop
nop

FUNCTION:         ; &lt;-- This is the function entry point as used by call instructions 
mov edi, edi      ; mov edi,edi is 2 bytes long
push ebp          ; regular stack frame setup
mov ebp, esp      
&lt;/source&gt;
If such a function needs to be replaced without reloading the application (or restarting the machine in case of kernel patches) it can be achieved by inserting a jump to the replacement function. A short jump instruction (which can jump +/- 127 bytes) requires 2 bytes of storage space - just the amount that the &quot;mov edi,edi&quot; placeholder provides. A jump to any memory location, in this case to our replacement function, requires 5 bytes. These are provided by the 5 no-operation bytes just preceding the function. If a function thus patched gets called it will first jump back by 5 bytes and then do a long jump to the replacement function. After the patch the memory might look like this
&lt;source lang=&quot;asm&quot;&gt;
LABEL:
jmp REPLACEMENT_FUNCTION ; &lt;-- 5 NOPs replaced by jmp

FUNCTION:
jmp short LABEL          ; &lt;-- mov edi has been replaced by short jump backwards
push ebp          
mov ebp, esp             ; &lt;-- regular stack frame setup as before
&lt;/source&gt;
The reason for using a 2-byte mov instruction at the beginning instead of putting 5 nops there directly, is to prevent corruption during the patching process. There would be a risk with replacing 5 individual instructions if the instruction pointer is currently pointing at any one of them. Using a single mov instruction as placeholder on the other hand guarantees that the patching can be completed as an atomic transaction.

== Local Static Variables ==

Local static variables cannot be created on the stack, since the value of the variable is preserved across function calls. We'll discuss local static variables and other types of variables in a later chapter.</text>
      <sha1>lmj7idoh1xq6ro4ou61qd6mjxtmd43k</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Quantum Mechanics/Operators and Commutators</title>
    <ns>1</ns>
    <id>40416</id>
    <revision>
      <id>865565</id>
      <parentid>255376</parentid>
      <timestamp>2007-05-15T13:03:18Z</timestamp>
      <contributor>
        <username>Whiteknight</username>
        <id>10714</id>
      </contributor>
      <minor />
      <comment>[[Talk:Modern Physics:Operators and Commutators]] moved to [[Talk:Quantum Mechanics/Operators and Commutators]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Schroedinger mistake ==

Hi,
There's a mistake in SE, SE is a '''second''' order PDE and your hamiltonian operator has only first order differential... to cut a long story short. You have:
&lt;/br&gt;
&lt;math&gt;
i \hbar \frac{\partial}{\partial t}\Psi = - \frac{\hbar^2}{2m} \frac{\partial}{\partial x} \Psi + V(x)\Psi
&lt;/math&gt;
&lt;/br&gt;
should be:
&lt;math&gt;
i \hbar \frac{\partial}{\partial t}\Psi = - \frac{\hbar^2}{2m} \frac{{\partial}^2}{{\partial x}^2} \Psi + V(x)\Psi
&lt;/math&gt;
This error persists over the entire page. 
[[User:Dkronst|Dkronst]] 17:19, 8 September 2005 (UTC)

* I think I got them all</text>
      <sha1>b9a66ajrpn84yk2hs13p4wrqbvccr5f</sha1>
    </revision>
  </page>
  <page>
    <title>User:Fastfission~enwikibooks</title>
    <ns>2</ns>
    <id>40417</id>
    <revision>
      <id>2857211</id>
      <parentid>716966</parentid>
      <timestamp>2015-04-17T22:24:04Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Fastfission]] to [[User:Fastfission~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Fastfission|Fastfission]]&quot; to &quot;[[Special:CentralAuth/Fastfission~...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I am a user of the English Wikipedia. Please see [http://en.wikipedia.org/wiki/User:Fastfission my page there] if you want to leave me a message or ask any questions. Thanks.

==Worklist==
*[[The Descent of Man]]
*[[How to write a research paper in History]]

==To write someday==
* [[Fair use in U.S. copyright law]]
* [[Copyleft licensing]]
* [[Drawing simple scientific diagrams with Inkscape]]</text>
      <sha1>khmskl5kwaqdomrcu18d6j3mkunx0tt</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Fastfission~enwikibooks</title>
    <ns>3</ns>
    <id>40418</id>
    <revision>
      <id>2910717</id>
      <parentid>2857213</parentid>
      <timestamp>2015-04-19T04:59:01Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I am a user of the English Wikipedia. Please see [http://en.wikipedia.org/wiki/User:Fastfission my page there] if you want to leave me a message or ask any questions. Thanks.

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called Fastfission. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name Fastfission~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 23:09, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 04:59, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>jafs298zms8kqhb8rkvimun8ijkkzz1</sha1>
    </revision>
  </page>
  <page>
    <title>How to Write a Research Paper in History</title>
    <ns>0</ns>
    <id>40419</id>
    <revision>
      <id>2508217</id>
      <parentid>2508195</parentid>
      <timestamp>2013-04-03T07:16:31Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>root pages use Subjects, not categories</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Many people who have not written a research paper in the genre of [[w:History|History]] often have difficulty with understanding where to start. This Wikibook is an attempt to outline some of the basics for writing a research paper in History, ideally at the collegiate or graduate level. 

==Table of contents==
*[[/Picking a topic/]]
*[[/Finding sources/]] 
*[[/Doing research/]] 
*[[/Organizing your work/]] 
*[[/Thinking on your own/]]
*[[/Writing the paper/]]  
*[[/Citing your sources/]] 
*[[/Additional resources/]]

{{Subjects|Written communication}}
{{Alphabetical|H}}
{{status|50%}}</text>
      <sha1>83xwp3nd65f7aojn4n8h8d4cghljxq7</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:RobKohr</title>
    <ns>3</ns>
    <id>40420</id>
    <revision>
      <id>2166368</id>
      <parentid>2164099</parentid>
      <timestamp>2011-09-09T17:00:06Z</timestamp>
      <contributor>
        <username>Ace10000</username>
        <id>469005</id>
      </contributor>
      <comment>/* hallelujah i've found ya look i need your help */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==NASA text -- public domain?==
I see that you [[Wikijunior_Solar_System#Useful_links|put a note]] that NASA text is public domain.
How did you find out the terms under which NASA permits use of its text?
I have not been able to find this information.
Like -- can we grab a page or paragraph and edit it up any way we like it?
Are there certain invariant parts?  How are we supposed to credit NASA?

Thanks for the information. --[[User:SV Resolution|SV Resolution]] 18:00, 8 September 2005 (UTC)


The definitive reference should probably be the NASA copyright template at [[commons:PD-USGov-NASA|Wikimedia Commons]]. Probably the best detailed explanation is at http://www.jsc.nasa.gov/policies.html#Guidelines. In short, '''NASA material is not protected by copyright unless noted''':

NASA generally has no objection to the reproduction and use of NASA material (e.g., audio transmissions and recordings; video transmission or recordings including NASA TV; still or motion picture photography; or World Wide Web pages), for educational or informational purposes, including photo collections, textbooks, public exhibits and Internet Web pages, subject to the following conditions:

*You should acknowledge NASA as the source of the material.
*You may '''not''' use a NASA logo or seal
*You may '''not''' state or imply NASA's endorsement of a commercial product, service, or activity. 
*You may '''not''' claim copyright or other rights in NASA material.
*NASA material is not protected by copyright '''unless noted'''. If not copyrighted, it can be used without further permission from NASA.
**If copyrighted, permission should be obtained from the copyright owner prior to use. 
**If a NASA image includes an identifiable person, using the image for commercial purposes may infringe that person's right of privacy or publicity, and permission should be obtained from the person.
**Use of a portion or segment of audio or video, such as talent, narration or music, may infringe a right of publicity or copyright and permission should be obtained from the source.
('''NOT''' a lawyer) [[User:EHartwell|EHartwell]] 17:53, 27 March 2006 (UTC)

== [[Emulation]] Wikibook ==

This is just a heads up about this Wikibook and a contribution that you made there.  I posted a [[VfD]] discussion about aquiring ROMs for different game consoles, and the overwhelming concensus was to delete this content from Wikibooks.  I want to thank you for your contributions, but I hope you understand that we can't condone illegal activity here on Wikibooks, even indirectly.  The unauthorized distribution of copyrighted content is illegal and could potentially shut this whole project down if we didn't act swiftly on things of this nature.  I hope you understand and don't take this as a personal insult.  --[[User:Robert Horning|Rob Horning]] 17:44, 29 October 2005 (UTC)

In reply to this:

::Thats too bad, but I understand your decision. I don't really think emulation is illegal, just the same as it is perfectly legal to rip cds and into mp3s play them on your computer. There are plenty of legal ways to buy roms today and run them on your platform of choice. I more wanted a single good source here for information on how to play those roms on whatever platform you liked. --[[User:RobKohr|Rob Kohr]] 24 December 2005

I want you to know that I agree completely that it is legal to do emulation, and I for one am completely opposed politically to software patents on stuff like mp3s and other so-called intellectual property B.S. that unfortunately many people in the computer industry are involved with.  The problem here is not that you showed how to make a ROM, but that it was largely a list of rom sources with absolutely no attribution or listing of where you got permission to redistribute those copyrighted images.  As both an author (dead tree plain english) as well as a software engineer, I take it seriously that the content I have written is protected under copyright laws, and seek to protect the works of other authors as well.  I seriously doubt that you had permission for the lists of ROMs that were displayed earlier in that Emulation Wikibook.  Prove me wrong, please.  As for a simple how-to duplicate ROMs or import them into emulation software, I don't have any problems with that... as long as you advocate the legal and legitimate aquisition of those ROMs.

BTW, the reason you can legally rip mp3s and DVDs (even over the supposed objections of the MPAA) is because of the &quot;first sale&quot; doctrine, that doesn't prohibit how you transfer the content from one media to another as long as you own the first copy legally.  You are however prohibited from distributing that content, generally to another household (which also has a legal definition).  On the other hand, if you have content that is under a copyleft license, you don't have to be so worried about this first sale doctrine and can send copies to your friends as well.  There is plenty of software available, even for older ROM-based game architechtures, that you don't need to be paranoid about copyright.  Unfortunately, many of those older game consoles had stuff written for them by companies that are no longer in business and it is hard to trace copyright permissions down.  --[[User:Robert Horning|Rob Horning]] 15:14, 26 December 2005 (UTC)

== hallelujah i've found ya look i need your help ==

you know your website editthis.com well i'm using it and i'm having some problems with it:how do you upload images?, how do you make templates?, how do you change user status and could you edit my site as i'm not having much luck with it and I can't upload images here it is:[http://editthis.info/ultipedia/Main_Page ultipedia] --[[User:Ace10000|Ace10000]] ([[User talk:Ace10000|discuss]] • [[Special:Contributions/Ace10000|contribs]]) 11:24, 4 September 2011 (UTC)</text>
      <sha1>a92wviwl2o00pyca43u880kwfjcron0</sha1>
    </revision>
  </page>
  <page>
    <title>How to Write a Research Paper in History/Picking a topic</title>
    <ns>0</ns>
    <id>40421</id>
    <revision>
      <id>3021735</id>
      <parentid>3021284</parentid>
      <timestamp>2015-12-03T11:37:02Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/107.0.92.74|107.0.92.74]] ([[User talk:107.0.92.74|talk]]) to last version by Adrignola</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The most difficult part of any research paper is picking a topic. There is no sure-fire way to do it, and there is no systematic way to approach it. This section will outline some of the basic considerations in thinking about how to pose a historical question which will stimulate your own interest as well as provide a workable approach to a research paper.

==What is a historical question?==
Every discipline has its own sorts of questions which it tries to answer. A question in astronomy, for example, might be &quot;Why does the sun sometimes have [[w:sun spot|spots]] on it?&quot; This is a question which stimulated a number of different research programs, using entirely different methods and assumptions, for hundreds of years. It is a question which can be answered using the tools of the discipline and the methodological approaches. A non-astronomical question might be &quot;Is the sun morally good?&quot; It might be a question answerable to a theologian or a philosopher, but an astronomer, using astronomer's tools (be they telescopes or mathematical formulae), would have no way to even begin answering the question.

Similarly, there are questions which fit within the study of history and many which do not. &quot;Was [[w:Richard Nixon|Richard Nixon]] a good man?&quot; would not be a historical question, and neither would &quot;Was the bombing of Hiroshima and Nagasaki evil?&quot; These questions, while quite valid questions to ask in general, are not generally thought answerable by the historian using only the tools of history. 

Many good historical questions are about ''causes'' and ''changes''. &quot;Why did the United States bomb Hiroshima and Nagasaki?&quot; is a perfectly good historical question, one on which many books have been written. &quot;Why did the Roman Empire fall?&quot; is another such question. &quot;How did the experience of African Americans change after the Civil Rights movement?&quot; would be another. &quot;How did the [[w:SAT|SAT]] become the standard test for American students?&quot; is another. The question need not be stated explicitly in the work itself, but it should be underlying the overall investigation. 

There are also many questions which can be quite broader, along the lines of, &quot;What were the experiences of slaves in the Southern United States?&quot; These questions, without specific temporal delimiters, are likely ''too large'' to be answered in one research paper &amp;mdash; entire books could be written on just this issue. However large questions can be made smaller by the use of temporal or thematic demarcation. For example, by changing our original question to &quot;What were the experiences of slaves in the Southern United States ''in the years just before the Civil War''?&quot; puts a &quot;cap&quot; on how comprehensive our approach must be, and allows us to easily compartmentalize the past in a way suitable to writing a paper.

Historical questions can be very broad or very narrow in scope and it does not necessarily affect how important or interesting the topic may be. What ''is'' usually important about whether a topic will be historically &quot;interesting&quot; is whether it &quot;speaks&quot; to a particular larger question or issue.

==Searching the literature==
Starting without any topic at all can be difficult, even for the seasoned student. The first step towards finding an area of research is to narrow down the basic range of topics to an existing body of literature. For example, if you were wanting to write a paper related in some way to the discovery of the Americas by Europeans, a good way to start searching for topics would be to find a survey book which would give an overview of the entire historical framework of the time period and topics. A reference librarian should be able to help you find such a thing, as should any expert in the field (do not be afraid to e-mail him if his addresses are posted online). 

One easy way to find out which books are currently considered &quot;required reading&quot; for a given topic is to find an academic book or article which is reasonably similar in its own topic, and to look at its first three or so footnotes. Introductions to academic works usually contain one large footnote early on which gives a brief listing of all of the books which any general reader of the paper is expected to be familiar with.

When reading over a survey, keep an eye out for interesting issues or questions you might have. Looking at the footnotes in such works will also give you an idea of the sorts of sources which are available for these sorts of works (there will be more on sources in the next section).

==Don't fret==
Your topic might change half way into your research, or even while writing up the final paper &amp;mdash; this is a natural occurrence and reflects the fact that you have been thinking it over for a longer period of time. Even if you aren't completely sure what your final &quot;question&quot; will be, don't be afraid to start doing the background secondary source research once you have a general idea of what you want your work to be about. History is not an exact science, and many important and interesting things will surface out of sheer serendipity as your work continues


&lt;font size=&quot;+1&quot;&gt;'''Next section:''' [[../Finding sources/]]&lt;/font&gt;

{{BookCat}}</text>
      <sha1>bopb4fgecu477q9gq4wwlqcsfd50kxi</sha1>
    </revision>
  </page>
  <page>
    <title>Wikibooks talk:Bookshelves</title>
    <ns>5</ns>
    <id>40423</id>
    <revision>
      <id>1147240</id>
      <parentid>1147239</parentid>
      <timestamp>2008-03-26T02:13:49Z</timestamp>
      <contributor>
        <username>Mike.lifeguard</username>
        <id>55262</id>
      </contributor>
      <minor />
      <comment>/* Obsolete? */ sp</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Categorization of bookshelves ==

In my opinion, it's important that every page is categorized, and this includes bookshelves. I propose to put every bookshelve inside the category &quot;'''Wikibooks bookshelves'''&quot;, as well as inside its specific category as the main entry (changing the sortkey to the value &quot; *''Name of the page''&quot;). For example, [[Wikibooks:Information technology bookshelf|Information technology bookshelf]] will be inside category [[:Category:Wikibooks bookshelves]] and [[:Category:Information Technology]]. I think that [[Wikibooks:All bookshelves]] should be only inside the [[:Category:Wikibooks bookshelves]], but as the main entry. --[[User:Suruena|surueña]] 18:23, September 8, 2005 (UTC)

== [[Wikibooks:Bookshelf requests]] ==

The page did not exist before, but I created it and boot a request there. My request concerns the six computer-related bookshelves and a slight change in policy. See [[Wikibooks:Bookshelf requests]] for details. --[[User:Kernigh|Kernigh]] 01:47, 24 October 2005 (UTC)

== Embedded Systems ==

:[[Embedded Systems: Theory, Design and Implementation]] has been merged into [[Embedded Systems]]. --[[User:Whiteknight|Whiteknight]] &lt;sub&gt;[[User talk:Whiteknight|T]]&lt;/sub&gt;&lt;small&gt;[[Special:Contributions/Whiteknight|C]]&lt;/small&gt;&lt;sup&gt;[[Special:Emailuser/Whiteknight|E]]&lt;/sup&gt; 16:33, 11 November 2005 (UTC)

== Obsolete? ==

Is this obsolete (or heading in that direction) now that we're starting to implement the Subject: namespace? We're getting to the point where the bookshelves are (in practice) being superseded by the Subject: pages, I think. Should we therefore start thinking about making this obsolete and/or making a new policy/guideline/useful page regarding that new system? &amp;nbsp;'''&amp;ndash;&amp;nbsp;[[User:Mike.lifeguard|&lt;font color=&quot;Indigo&quot;&gt;Mike.lifeguard&lt;/font&gt;]]'''&amp;nbsp;&amp;#124;&amp;nbsp;&lt;sup&gt;[[User talk:Mike.lifeguard|&lt;font color=&quot;Indigo&quot;&gt;talk&lt;/font&gt;]]&lt;/sup&gt; 02:13, 26 March 2008 (UTC)</text>
      <sha1>11lhfmq0lb8xp3gkobj2hewnrdm4gg2</sha1>
    </revision>
  </page>
  <page>
    <title>Microsoft Office/Create and Edit a Document</title>
    <ns>0</ns>
    <id>40425</id>
    <revision>
      <id>3055498</id>
      <parentid>3054827</parentid>
      <timestamp>2016-03-04T22:12:06Z</timestamp>
      <contributor>
        <username>JackPotte</username>
        <id>99248</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/27.107.228.20|27.107.228.20]] ([[User talk:27.107.228.20|talk]]) to last version by Eurodyne</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Starting Microsoft Word==
To open Microsoft Word: First click on your &quot;Start&quot; button. Next click on All Programs.  You will probably need to scroll to find the Microsoft Office program menu.  When you do click on Microsoft Word this will start the program. (Note:  Microsoft Word 2010 is the most recent version released. (Feb. 19, 2012)

Alternatively, look on your Desktop for an icon shortcut to Word, click this (or if this doesn't work, double-click).

==Basic Rules for formatting text==
To change the formatting of text, highlight the text you wish to change and then choose your formatting options.  
You may want to increase the font size, change the font color, change the font design.  


To change the formatting, including the font size, font, color, and many other properties.
* right click on the selection and choose what you'd like to change
* use the toolbar (1997 - 2003 versions) or
* Select the options on the Format Menu to change

Word 2010 uses tabs and ribbons to interface (interact) with users.  
To change text formats, be sure you have clicked the Home tab and are using the options found in the Font grouping.  

If you change the formatting options without any text being selected, then these options will apply to any further text entered after that point in the document.

==Parts of Word Screen==

{| class=&quot;wikitable&quot;
|+Parts of the Word Screen
|-
!Parts	
!Function
|-
|Title Bar	
|Displays the program name, and the name of current document displayed or being edited.
|-
|Menu Bar	
|Contains the names of the command menus currently available.
|-
|Standard Toolbar	
|Contain buttons that provide shortcuts for the most commonly used Word Features, such as opening and printing document.
|-
|Formatting Toolbar	
|Contains buttons and drop-down lists that you use to modify the appearance of selected text.
|-
|Ruler	
|It shows the width of your text, as well as any indents or tabs.
|-
|Document Window	
|Displays the documents you create and edit.
|-
|Insertion Point	
|It is blinking vertical line at the upper left corner of a new document.
|-
|Endmark	
|It indicates the end of the document.
|-
|Scroll Bars	
|It is one of the main ways to navigate through a document. Appear along the right side and bottom edges of the document window. Each scroll bar contains two scroll arrows and scroll box, which you can use to move vertically and horizontally through a document.
|-
|Status Bar	
|Displays the necessary information about the active document such as page.
|-
|Minimize Button	
|It is used to temporary hide word (to shrink it to an icon on the taskbar).
|-
|Maximize Button	
|It is used to enlarge MS-Word to full screen.
|-
|Close Button	
|It is used to exit or quit MS-Word.
|}

==Entering Text==
	When you start MS-Word for Windows, you see a blank area. (This blank area is called a Normal Template). To work effectively with Word, you must understand that every Word Document is based on template. 

# The Blinking Vertical Line that marks the insertion point, the location where text you type    will be inserted into the document and where certain editing actions will occur.
# The horizontal line is the end-of-document marker.

There are a number of different views available for working on the text, available on the View menu. The simplest is the 'Normal' view, while the most complex view, but the best for working on heavily formatted pages is the 'Print layout' view.

==Menu Structure==
When you work with MS-Word for Windows, you give it commands to instruct the program to carry out the desired tasks. Commands are usually entered by means of menus. MS-Word for Windows has three types of menus:
# The Main Menu is displayed in the menu bar, on the second line of the screen.
# A Pull-down Menu is a list of commands associated with each choice on the main menu. When you choose a command on the main menu, its pull-down menu is displayed.
# A Context Sensitive Menu is pop-up screen when you right-click the mouse. Wherein it shows a list of commands to work with.

==Dialog Boxes==
When MS-Word for Windows needs additional information to carry out a command, it displays a dialog box. Dialog boxes contain a number of components, but mainly contain only some of these components.

===Components of Dialog Box===
# A dotted outline or highlight bar indicate the current dialog box item.
# The title bar gives the name of the dialog box, which is the command used to display the dialog box.
# A text box is used to enter and edit text information.
# A list box displays a list of items from which you can choose. If the list is too big to display at one time, a vertical scroll bar lets you scroll up or down the list.
# The command buttons to either confirm or cancel the dialog box.

==Working With A Document==
MS-Word is used by people with widely varying levels of skill and experience, and there are often several different ways to do some tasks. Most commands are available through the Menu and sub menus. For frequently used commands, there are often iconic shortcut buttons on the Tool bars that can be selected with the mouse. For people with better keyboard skills or experience, there are keyboard shortcuts, often using the Control (CTRL), Shift (SHFT) or Alternate (ALT) keys on the PC and Command or Option keys of the Macintosh. 

===Create a New Document===
* Choose File ➪ New from the menu bar.
** This may ask you to select which document template to use for the new document.
* Click the New Blank Document button of the tool bar.
* Press CTRL + N on the keyboard. (Depress and hold CTRL, Press and release 'N')

===Open an Existing Document===
* Choose File ➪ Open from the menu bar.
* Click the Open button on the toolbar.
* Press CTRL + O on the keyboard.

NOTE: Each method will show the Open dialog box. Select the drive the file was saved on, choose the file, and click the Open button.

===Save a Document===
* Select File ➪ Save from the menu bar.
* Click the Save button on the toolbar.
* Press CTRL + S on the keyboard.

Navigate to the location where you would like to save the document. Make a note of the drive where the document is saved for future reference.  To save an existing open document under a different name, select 'File ➪ Save As'.

===Renaming a Document===
To rename an existing, but not open, Word document while using the program, 
* Select File ➪ Open (or press CTRL + O on the keyboard) and find the file you want to rename. 
* Right-click on the document name with the mouse and select Rename form the shortcut menu. 
* Type the new name for the file and press the ENTER key.

===Working with Multiple Documents===
Several documents can be opened simultaneously if you are typing or editing multiple documents at once. All open documents are listed under the Windows menu. The current document has checkmark beside the filename. Select another name to view another open document or click the button on the Windows taskbar at the bottom of the screen.

===Closing a Document===
* Selecting File ➪ Close from the menu bar
* Click the close window icon if it’s visible on the menu bar
* Press CTRL + W or CTRL + F4 on the keyboard.

===Exiting Word===
* Choose the File ➪ Exit on the menu bar.
* Click the Close button align with the title bar.
* Press ALT + F4 on the Keyboard.

{{BookCat}}</text>
      <sha1>bh8h96fqhpmfet2ff359odmrxbid6qr</sha1>
    </revision>
  </page>
  <page>
    <title>User:Shanel</title>
    <ns>2</ns>
    <id>40426</id>
    <revision>
      <id>2054605</id>
      <parentid>342580</parentid>
      <timestamp>2011-02-23T04:30:50Z</timestamp>
      <contributor>
        <username>Pathoschild</username>
        <id>13563</id>
      </contributor>
      <minor />
      <comment>global user pages ([[m:User:Pathoschild/Scripts/Synchbot|requested by user]])♥</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Hello! My name is Shanel Kalicharan. My edits on this wiki are mostly part of my [[m:steward|steward work]]. If you have any comments or questions, please let me know on [[m:User talk:Shanel|my global talk page]]!</text>
      <sha1>539e2stnb09ajwpzc24v9hl0lll9mz2</sha1>
    </revision>
  </page>
  <page>
    <title>Portuguese/Contents/Slang (Brazil)</title>
    <ns>0</ns>
    <id>40428</id>
    <revision>
      <id>3012970</id>
      <parentid>2737935</parentid>
      <timestamp>2015-11-04T14:04:17Z</timestamp>
      <contributor>
        <ip>198.134.52.71</ip>
      </contributor>
      <comment>/* Rio de Janeiro */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''
== General Slang ==
'''

;Bagulho (bah-GOO-lyo)
:Ugly women, drug (very rude)
;Beleza? (beh-LEH-zah)
:Wassup? (Positive way.)
;Cê (between SEH and SAY)
:Short for &quot;você&quot; (you)
;Chapado (shah-PAH-do)
:Drunk, stoned
;Gata, gatinha (GAH-tah - gah-CHEEN-yah)
:Babe, hot girl
;Gato, gatinho (GAH-to - gat-CHEEN-yo)
:Babe, hot boy
;Grana (GRAHN-nah)
:Money
;Gringo (GREEN-go)
:Foreigner
;Legal (leh-GOW [&quot;OW&quot; sounds like &quot;OW&quot; in &quot;NOW&quot;])
:Cool
;Mana (MAHN-nah)
:Sister
;Mano (MAHN-no)
:Brother
;Massa (MAH-sah)
:Same as &quot;legal&quot;: cool
;Muito louco (MOO-een-to LOE-co)
:Cool (or funny)
;Nossa (NOH-sah)
:Exclamation like Wow
;Os homi (OOZ OHM-mee)
:The cops
;Parceira (par-SAY-rah)
:sis, mate, buddy (female)
;Parceiro (par-SAY-ro)
:Bro, mate, dude, buddy (male)
;Perua (pee-ROO-ah)
:Rich Women (Negative), Station wagon  car
;Playba, playboy (PLAY-bah - play-BOY)
:Playboy, rake
;Puxa, puxa vida) (POO-shah - POO-shah VEE-dah)
:Whoa, Geez, gosh
;Qualé? (kwal-EH)
:Wassup?
;X-9 (SHEES NOH-vee)
:Snitch


The above list of expressions can be understood all over the country, but it doesn't mean you'll hear people speaking this all around. 'Legal', for instance, is far less used in the Northeast region. There, 'massa' is much more used.


'''

== Northeast region (Alagoas, Bahia, Ceará, Paraíba, Pernambuco, Rio Grande do Norte, Sergipe) ==
'''
;Cabra (CAH-brah)
:Same as &quot;meu&quot; from São Paulo, but, like &quot;cara&quot;, it is used only when you're talking to a male person
;Eita, eita pega (AY-tah - AY-tah PAY-gah)
:Gosh, as in &quot;Gosh! what have done!&quot;
;Oxe, oxente (OSH - osh-EHN-tee)
:Why, as in &quot;why! that's strange&quot;
;Vixe, vixe Maria (VEESH - VEESH mah-REE-ah)
:Holy mother! (comes from Virgem Maria -- the Virgin Mary)
;Vôti (VOE-tee)
:Same as &quot;eita&quot; or &quot;vixe&quot;


'''

== Rio de Janeiro ==
'''

;Sangue bom (SAHN-ghee BOHM)
:&quot;Nice man&quot;, someone trustable, means &quot;Good blood&quot;. You can also say only &quot;Sangue&quot;

;Mermao (MEH-MOUN)
:Brother, brodah

;Caraca (cah-RAH-cah)
:Exclamation, like &quot;Holy&quot; Or &quot;What the...&quot;
'''

== Rio Grande do Sul ==
'''

;Tri (TREE)
:Cool (in many contexts)
;Tri-legal (TREE leh-GOW)
:Very cool


'''

== São Paulo ==

Note: If you talk in slangs with the young ones, be careful because they are divided in &quot;tribos&quot;(meaning: groups)
like skaters, surfers, etc. The slang spoken by a certain group may sound senseless to another one.

'''
;Mano (MAHN-no)
:Boy, dude, guy
;Mina (MEEN-nah)
:Girl
;Rolé (hol-EH)
:&quot;A ride.&quot; (e.g. Vamos dar um rolé. - Let´s go for a ride.)
;Sampa (SAHM-pah)
:São Paulo
;Truta (TROO-tah)
:Friend
;Brother, brodi, brou (same pronoun as in english)
:Friend, dude
;Cara (CAH-rah)
:Dude
;Meu (MEH-o)
:Dude

'''

== Minas Gerais ==
'''
;Trem (TREIN)
:Stuff
;Sô (between SOH and SOE)
:Emphasis per se, it´s an early alitheration for SENHOR(Sir). E.g. O quê que é isso, sô? - What is this *sô* !!;Trem (TREHM-eem)
:Used as a substitute for &quot;this&quot; (e.g.: &quot;Que TREM que é esse?&quot; - What is this? )
;Uai (like the letter &quot;Y&quot;)
:Doubt Exclamation (Used also as an emphasis.)

== Goiás ==

;Vish (VEESH)
:Used for surprise, like &quot;Wow&quot;. (abreviation for &quot;virgem Maria&quot; (virgin Mary))

;Nem (NAIM)
:Demonstration of disapproval (something like &quot;no way&quot;).

;Anem (ah-NAIM)
:Demonstration of disapproval (same as &quot;nem&quot;), or pity (like &quot;oh no, I can't belive&quot;).

;Moço (MOLSS)
:dude

;Moço do céu (MOLLS-doo-cell)
:vocative used to start a tragic story or to indicate surprise. (translates literally as &quot;heaven's man&quot;)

;Véi de Deus (VAIGH-dee-deaous)
:alternative &quot;moço do céu&quot; (other alternation is &quot;véu do céu&quot; or &quot;moço de Deus&quot; - translates literally as &quot;god's old man&quot;)

;Cê pira? (say-PEE-rah?)
:&quot;Do you belive?&quot; or used to begin unlikely stories: &quot;do you belive (that) ______ ?&quot;. &quot;Cê pira?&quot; literally means &quot;you go crazy?&quot;.

;Desgreta (jees-GRAY-tah)
:shit

;Esparrado (espa-RAH-doh)
:suspicious

== Brasilia (DF) ==
'''

;Vei (vaigh)
:dude

;Sinistro (SEE-NIS-Through)
:sometimes cool, sometimes awesome, sometimes unbelievable (depends on context)

;Pega leve (Pague a lav)
:take it easy

;Vaza (vah zah)
:go away

;Carai, Vei! (Car i, vaigh)
:whadda fuck, dude!

;Pô (Pow)
:Oh, what? OR Fuck!

;Sacanagem (SAH-CAH-NAH-jin)
:(lots of meanings - also bad word) could be prank, mean


[[Category:Portuguese]]</text>
      <sha1>879e3jfmobeqvooy4g22mzjh9e0t4xu</sha1>
    </revision>
  </page>
  <page>
    <title>Wikibooks talk:Book of the month/October 2005 voting</title>
    <ns>5</ns>
    <id>40429</id>
    <revision>
      <id>230987</id>
      <timestamp>2005-09-08T21:46:21Z</timestamp>
      <contributor>
        <username>Mshonle</username>
        <id>1957</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Moved [[Programming:C -/- -/-]] from the page==
(Automatically nominated with 4 votes in August.)

Votes:

# [[User:Dirtyliberal|Dirtyliberal]] 08:20, 1 September 2005 (UTC)
#[[User:Klingoncowboy4|Klingoncowboy4]] 23:51, 2 September 2005 (UTC)

Opposing votes:

# [[User:Krischik|Krischik]] 06:45, 1 September 2005 (UTC)
#* In violation of [[Wikibooks:Forking policy]] &lt;small&gt;(forked with no good reason apart from a flawed &quot;one page&quot; layout - from which even the contributors have stepped back by now)&lt;/small&gt;.
#* In violation of [[Wikibooks:Naming policy]] &lt;small&gt;(the fork was done after &lt;nowiki&gt;[[Bookshelve:Book]]&lt;/nowiki&gt; conventions was made obsolete)&lt;/small&gt;
#* Has been automatically nominated the 4th time in a row.
#* Supporters and Contributors have nevers said anything to the defense of there book.
# [[User:Mshonle|MShonle]] 06:11, 6 September 2005 (UTC) -- This book isn't ready yet to be a book of the month, and it should be merged with the C++ book, transcluding can give you both a chapter by chapter and whole book view.

Comments:

* Just to clarify: I would not oppose nomination of any other [[Programming]] - including [[Programming:C plus plus]] - and I would consider them books not chapters. I oppose only the the flawed und unecessary fork of [[Programming:C -/- -/-]]. --[[User:Krischik|Krischik]] 06:38, 2 September 2005 (UTC)

Thanks Krischik for bringing this policy violation to our attention; I have finally looked into it. Given that this book will be deleted by September 21st, it doesn't make much sense to vote on it for being a book of the month in October. [[User:Mshonle|MShonle]] 21:33, 8 September 2005 (UTC)</text>
      <sha1>sma6fydk3mun8p8a564dcqkhwsxzm4m</sha1>
    </revision>
  </page>
  <page>
    <title>How to Write a Research Paper in History/Finding sources</title>
    <ns>0</ns>
    <id>40433</id>
    <revision>
      <id>2257268</id>
      <parentid>2091832</parentid>
      <timestamp>2012-01-26T23:03:51Z</timestamp>
      <contributor>
        <username>Thereen</username>
        <id>44896</id>
      </contributor>
      <minor />
      <comment>/* Finding secondary sources */ m.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">As a knowledge-creating discipline, history is driven primarily by its '''sources'''. This section is designed to help the student think about finding sources, types of sources, and the difficulties inherent in sources. 

==What is a source?==
&quot;Sources&quot; is a catch-all term for any information used by the historian to generate ''narratives'' (a story about what happened in the past) and ''interpretations'' (conclusions drawn about the meaning of this story). Sources are to the historian what measurements are to the scientist, in a very real sense. Just like the scientist who wants to measure the sun, one must first think very carefully about ''what'' one is trying to measure and ''how'' one is trying to measure it. What sources are available can very well shape the questions asked, for trying to answer questions for which there are no sources is not the work of the historian.

Sources used by the historian can be broadly divided into two categories: primary sources and secondary sources. The former, as you probably know, consists of any source which is to be taken as a &quot;document of its time&quot; &amp;mdash; something to be read and analyzed as a bit of information. A secondary source is a work which was derived from primary sources. The line between these can be somewhat blurred &amp;mdash; things generally considered secondary sources can also be taken as &quot;documents of their time&quot; in many circumstances (a paper about historical education in the United States, for example, would likely use many textbooks, usually considered secondary sources, as primary sources).

==Using secondary sources==
Though it may seem an odd notion at first, historians cannot usually effectively work with primary sources if they have not first read over many secondary sources. The reason for this is that any historical question will involve immersing one's self in a massive amount of historical contingency. Every historical event is embedded in a larger historical framework, and no historian can re-invent the wheel each time he wants to write a paper. Reading the work of other historians related to your topic will allow you to see the entire historical landscape that you are entering in, and give you the ability to interpret the primary sources you will look at. Other historians are not always ''correct'', of course, and one should always maintain a free mindset when doing one's own research. But knowledge of secondary sources is essential, especially for beginners, if only for the reason that anybody reading your work will ''expect'' that you are familiar with the more prominent works done by other historians.

Secondary sources can also be useful for their own citations and references, which can alert you as to what sorts of primary sources exist for your topic. Paying attention to how other historians construct and craft their narratives will also give you a more clear idea of how you will do it yourself when you come to writing.

==Using primary sources==
Primary sources, while the mainstay of the historical diet, are problematic little beasts. They are only as reliable as the person or people who created them. Their veracity and applicability must be weighed against the sum of all other information about the subject. They cannot be simply taken at face value, and must be weighed within the context of their creation.

The types of primary sources available depends very heavily on the topic. A medievalist uses very different types of sources than someone working on the history of the Cold War, both in terms of what sorts of media the sources consist of (e.g., parchment vs. typewritten letters) as well as the ''reason'' for creating such a source (e.g., showing the divinity of a ruler vs. attempting to work within a large democratic bureaucracy). Assessing what ''types'' of sources are available for any given topic can be most easily done by reading through secondary literature. Looking for ''new'' sources is of course always encouraged and can lead to real and new breakthroughs, but in general one is usually stuck with known sources.

==Limitations of sources==
Sources can only &quot;say&quot; so much about the past. For example, a newspaper article about a historical event might seem like a great way to learn about the event, but how much can an article say about the past? Journalism is often called the &quot;first draft&quot; of history, but like most &quot;first drafts&quot; there is much editing to be done &amp;mdash; a newspaper article will often lack historical consciousness, much less a good deal of less-obvious facts about a given event, orientated around a goal of selling newspapers. This doesn't invalidate a newspaper article as a source, but it does place limitations on what you can ''use'' it for. A newspaper article could provide ''some'' factual information about an event itself, but it must always be interpretted through the lens of a historian aware of its limitations; such a source would be perhaps best used (and thought about) as evidence of how an event was ''reported'', rather than how an event actually ''occurred''. This when some take place sudden or unexpexted.

This consideration of epistemology (the philosophy of knowledge itself) is neccesary for ''any'' source used. Diaries, letters, parchment, official histories, newspaper articles, telegrams, manuscripts, interviews, and even photography have their own separate limitations which need to be considered before a final conclusion is drawn. 

Though historical methodology in regards to sources urges much caution, the historian is also lucky in that almost ''any'' form of recorded information can be a source: the records of governments or businesses, the correspondence of individuals, early drafts of manuscripts or articles, interviews and oral histories (previously made or conducted yourself), published works, telegrams, etc. Most of these sorts of primary sources will be found in research libraries and archives, though their exact locations can be difficult to track down.

==Finding secondary sources==
Finding worthwhile secondary sources will save you a lot of time and effort later, and allow you to have a more comprehensive view of your primary sources. Below are general suggestions towards this end.
# '''Talk to a reference librarian.''' Reference librarians will, at the very least, be able to point out to you where in the library you should be looking. They may be able to give you a whole host of things to look at.
# '''Browse the shelves.''' Once you've found a single book which looks certainly related, look at the books physically near it on the shelves as well. Most library filing systems are thematically based, so you will often find very similar books nearby, sometimes ones you may not have noticed otherwise. Of course, any given book may be in a number of categories, so you can't rely on this as a comprehensive approach.
# '''Look at the sources used by articles on related subjects.''' Most articles, usually in the first three footnotes, will have a long footnote of all of the relevant &quot;standard&quot; secondary source literature for the topic, used as a way of signalling to the reader what they ought to read if they are having difficulty with the basic premise of the paper. You should have a passing acquaintance with these as well, at the very least.
# '''Don't be afraid to skim.''' You usually will not need to read every word of all of your secondary sources. Use the table of contents and index to good effect, find the most relevant sections. Reading the introduction carefully is definitely recommended &amp;mdash; along with telling you the approach the author is bringing to the topic, they will often, in academic histories, give you a short summary of the book as a whole, with explanations of what each chapter will cover. This can save you a lot of time. In an ideal world, we'd all have enough time to read every printed word on a subject. But this is not an ideal world.
# '''Use online databases to their fullest extent.''' There are many online databases available which can help you in this aim. If you have access to [[w:JSTOR|JSTOR]], it will be a great help for you, both in locating full historical articles on any number of topics, but also allowing you to search book reviews to see how any given historical work was received. Inquire with your reference librarian about what sorts of online resources are available and how to use them. Your library's website may have an excellent online search function, with access to various journals, databases and reviews. Many colleges and universities buy memberships to sites like JSTOR, so accessing articles through your library's website may be free.

==Finding primary sources==
The following is a general approach to finding primary sources, but again, there is no sure-fire way to do it &amp;mdash; there is always a bit of luck involved. 
# '''Look at the sources used in relevant secondary literature.''' The first step, and the easiest, is to simply look at what ''other'' historians have already been looking at. Pay attention especially to references to archives &amp;mdash; they may contain additional records not surveyed by that particular historian. Don't be afraid to look at sources which have already been heavily used by historians &amp;mdash; there are often things missed and new people bring new interpretations to old things.
# '''Contact archives and research libraries''' which may plausibly have records related to your topic. Geographical proximity often (but not always!) is helpful in this respect (check with archives ''near'' wherever the creator of the records may have been). Most archives and libraries have librarians who know their collections very well and can be quite helpful in tracking down sources. When possible, try to get finding aids for larger collections, as they will help you figure out how useful the collection may be (and save you a lot of time).
# '''Contact other researchers in the field.''' Don't be afraid to e-mail or call other researchers in the same field. Tell them a little about yourself, tell them the topic of the paper you are working on, and ask if they have any suggestions towards working on it. A flattering note about how their own work has so far been useful to you, and how you believe that if anyone would know about this, they would, always helps. Even if the particular researcher you e-mail does not know about the topic, they may know someone better to contact &amp;mdash; most historians belong to professional societies, read trade journals, and keep in touch with the general layout of the discipline, and can point you in the right direction even if they have no knowledge about the topic itself.


&lt;font size=&quot;+1&quot;&gt;'''Next section:''' [[../Doing research/]]&lt;/font&gt;

{{BookCat}}</text>
      <sha1>i1x5dehzg5qxsgd52k1bbqgdiaxx2jr</sha1>
    </revision>
  </page>
  <page>
    <title>X86 Disassembly/Code Optimization</title>
    <ns>0</ns>
    <id>40434</id>
    <revision>
      <id>3030158</id>
      <parentid>1554141</parentid>
      <timestamp>2015-12-18T21:53:59Z</timestamp>
      <contributor>
        <username>Luis150902</username>
        <id>2628908</id>
      </contributor>
      <comment>/* Code Generation Optimizations */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{x86 Disassembly/Page}}

== Code Optimization == 

An '''optimizing compiler''' is perhaps one of the most complicated, most powerful, and most interesting programs in existence. This chapter will talk about optimizations, although this chapter will not include a table of common optimizations. 

== Stages of Optimizations ==

There are two times when a compiler can perform optimizations: first, in the intermediate representation, and second, during the code generation.

=== Intermediate Representation Optimizations ===

While in the intermediate representation, a compiler can perform various optimizations, often based on dataflow analysis techniques. For example, consider the following code fragment:

&lt;source lang=&quot;C&quot;&gt;
 x = 5;
 if(x != 5)
 {
   //loop body
 }
&lt;/source&gt;

An optimizing compiler might notice that at the point of &quot;if (x != 5)&quot;, the value of x is always the constant &quot;5&quot;.  This allows substituting &quot;5&quot; for x resulting in &quot;5 != 5&quot;.  Then the compiler notices that the resulting expression operates entirely on constants, so the value can be calculated now instead of at run time, resulting in optimizing the conditional to &quot;if (false)&quot;.  Finally the compiler sees that this means the body of the if conditional will never be executed, so it can omit the entire body of the if conditional altogether.

Consider the reverse case:

&lt;source lang=&quot;C&quot;&gt;
 x = 5;
 if(x == 5)
 { 
    //loop body
 }
&lt;/source&gt;

In this case, the optimizing compiler would notice that the IF conditional will always be true, and it won't even bother writing code to test x.

=== Control Flow Optimizations ===

Another set of optimization which can be performed either at the intermediate or at the code generation level are control flow optimizations.
Most of these optimizations deal with the elimination of useless branches. Consider the following code:

&lt;source lang=&quot;C&quot;&gt;
 if(A)
 {
    if(B)
    {
       C;
    }
    else
    {
       D;
    }
    end_B:
 }
 else
 {
    E;
 }
 end_A:
&lt;/source&gt;

In this code, a simplistic compiler would generate a jump from the C block to end_B, and then another jump from end_B to end_A (to get around the E statements).
Clearly jumping to a jump is inefficient, so optimizing compilers will generate a direct jump from block C to end_A.

This unfortunately will make the code more confused and will prevent a nice recovery of the original code. For complex functions, it's possible that one will have to consider the code made of only if()-goto; sequences, without being able to identify higher level statements like if-else or loops.

The process of identifying high level statement hierarchies is called &quot;code structuring&quot;.

=== Code Generation Optimizations ===

Once the compiler has sifted through all the logical inefficiencies in your code, the code generator takes over. Often the code generator will replace certain slow machine instructions with faster machine instructions.

For instance, the instruction:

&lt;source lang=&quot;asm&quot;&gt;
 beginning:
 ...
 loopnz beginning
&lt;/source&gt;

operates ''much'' slower than the equivalent instruction set:

&lt;source lang=&quot;asm&quot;&gt;
 beginning:
 ...
 dec ecx
 jne beginning
&lt;/source&gt;

So then why would a compiler ever use a loopxx instruction? The answer is that most optimizing compilers never use a loopxx instruction, and therefore as a reverser, you will probably never see one used in real code.

What about the instruction:

&lt;source lang=&quot;asm&quot;&gt;  
 mov eax, 0
&lt;/source&gt;

The mov instruction is relatively quick, but a faster part of the processor is the arithmetic unit. Therefore, it makes more sense to use the following instruction:

&lt;source lang=&quot;asm&quot;&gt;
 xor eax, eax
&lt;/source&gt;

because xor operates in very few processor cycles (and saves three bytes at the same time), and is therefore faster than a &quot;mov eax, 0&quot;.
The only drawback of a xor instruction is that it changes the processor flags, so it cannot be used between a comparison instruction and the corresponding conditional jump.

== Loop Unwinding ==

When a loop needs to run for a small, but definite number of iterations, it is often better to '''unwind the loop''' in order to reduce the number of jump instructions performed, and in many cases prevent the processor's branch predictor from failing. Consider the following C loop, which calls the function &lt;code&gt;MyFunction()&lt;/code&gt; 5 times:

&lt;source lang=&quot;C&quot;&gt;
for(x = 0; x &lt; 5; x++) 
{
  MyFunction();
}
&lt;/source&gt;

Converting to assembly, we see that this becomes, roughly:

&lt;source lang=&quot;asm&quot;&gt;
mov eax, 0
loop_top:
cmp eax, 5
jge loop_end
call _MyFunction
inc eax
jmp loop_top
&lt;/source&gt;

Each loop iteration requires the following operations to be performed:
#Compare the value in eax (the variable &quot;x&quot;) to 5, and jump to the end if greater then or equal
#Increment eax
#Jump back to the top of the loop.

Notice that we remove all these instructions if we manually repeat our call to &lt;code&gt;MyFunction()&lt;/code&gt;:

&lt;source lang=&quot;asm&quot;&gt;
call _MyFunction
call _MyFunction
call _MyFunction
call _MyFunction
call _MyFunction
&lt;/source&gt;

This new version not only takes up less disk space because it uses fewer instructions, but also runs faster because fewer instructions are executed. This process is called '''Loop Unwinding'''.

== Inline Functions ==

The C and C++ languages allow the definition of an &lt;code&gt;inline&lt;/code&gt; type of function. Inline functions are functions which are treated similarly to macros. During compilation, calls to an inline function are replaced with the body of that function, instead of performing a &lt;code&gt;call&lt;/code&gt; instruction. In addition to using the &lt;code&gt;inline&lt;/code&gt; keyword to declare an inline function, optimizing compilers may decide to make other functions inline as well. 

Function inlining works similarly to loop unwinding for increasing code performance. A non-inline function requires a call instruction, several instructions to create a stack frame, and then several more instructions to destroy the stack frame and return from the function. By copying the body of the function instead of making a call, the size of the machine code increases, but the execution time ''decreases''. 

It is not necessarily possible to determine whether identical portions of code were created originally as macros, inline functions, or were simply copy and pasted. However, when disassembling it can make your work easier to separate these blocks out into separate inline functions, to help keep the code straight.</text>
      <sha1>6fwooiyk17ew3jpcnca8tw38vog9872</sha1>
    </revision>
  </page>
  <page>
    <title>Programming:C -/- -/-</title>
    <ns>0</ns>
    <id>40437</id>
    <redirect title="C++ Programming" />
    <revision>
      <id>589597</id>
      <parentid>231094</parentid>
      <timestamp>2006-09-21T04:30:23Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>fix redirect to point to C++ Programming wikibook.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[C++ Programming]]</text>
      <sha1>hrfb9k4mk80bhlax1oevlh4jq25aju7</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Programming:C -/- -/-</title>
    <ns>1</ns>
    <id>40438</id>
    <revision>
      <id>333093</id>
      <parentid>333092</parentid>
      <timestamp>2006-01-10T01:48:06Z</timestamp>
      <contributor>
        <ip>71.112.65.25</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">lets add some diagrams and pictures to spiff up this entry.
Even text diagrams would help, you must know some people who are visual learners...</text>
      <sha1>51wsljmtzl9tns03l3unf2h32himod4</sha1>
    </revision>
  </page>
  <page>
    <title>HSC Biology</title>
    <ns>0</ns>
    <id>40441</id>
    <revision>
      <id>1928422</id>
      <parentid>1902103</parentid>
      <timestamp>2010-09-05T16:12:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>cleanup, status=0%</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Course Requirements  ==

=== Preliminary ===

The preliminary HSC Biology course consists of four core modules that make up 120 indicative hours in total. 


'''The modules studied are:'''

* A Local Ecosystem (20 indicative hours);
* Patterns in Nature (40 indicative hours);
* Life on Mars (30 indicative hours);
* Evolution of Australian Biota (30 indicative hours).


All four core modules must be completed in order to complete the preliminary biology course. The preliminary biology course is a prerequisite to the HSC biology course.

=== HSC ===

The HSC Biology course consists of three core modules that make up 90 indicative hours in total, and ONE option that makes up 30 indicative hours. 


'''The core modules studied are:'''

* Maintaining a Balance (30 indicative hours);
* Blueprint of Life (30 indicative hours);
* The Search for Better Health (30 indicative hours).


'''The options available are:'''

* Communication;
* Biotechnology;
* Genetics: The Code Broken?;
* The Human Story;
* Biochemistry;
* Earth's Formation.

== Maintaining a Balance ==
'''Module Outline'''

Multicellular organisms have specialised organ systems that are adapted for the uptake and transportof essential nutrients from the environment, the utilisation or production of energy and the removal of waste products arising from cellular activities.

The basis of healthy body-functioning in all organisms is the health of their cells. The physical and chemical factors of the environment surrounding these cells must remain within narrow limits for cells to survive. These narrow limits need to be maintained and any deviation from these limits must be quickly corrected. A breakdown in the maintenance of this balance causes problems for the organism.

The nervous and endocrine systems in animals and the hormone system in plants bring about the
coordinated functioning of these organ systems. They are able to monitor and provide the feedback necessary to maintain a constant internal environment. Enzyme action is a prime example of the need for this balance. Enzymes control all of the chemical reactions that constitute the body’s metabolism. As enzymes normally function only within a narrow temperature range, even a small rise in body temperature can result in the failure of many of the reactions of metabolism that are essential to life.

This module increases students’ understanding of the applications and uses of biology, implications for society and the environment and current issues, research and developments in biology. [http://www.boardofstudies.nsw.edu.au/syllabus_hsc/pdf_doc/biology_stg6_syl_03.pdf Biology Stage 6 Syllabus]

=== Temperature Range ===
'''Most organisms are active in a limited temperature range'''

* '''identify the role of enzymes in metabolism, describe their chemical composition and use a simple model to describe their specificity on substrates'''

{{Subjects|Biology study guides}}
[[Category:Higher School Certificate|Biology]]
{{alphabetical|H}}
{{status|0%}}</text>
      <sha1>eo4zxz4n6r19fl4144z4in5ldik5s5l</sha1>
    </revision>
  </page>
  <page>
    <title>Subject:Higher School Certificate</title>
    <ns>112</ns>
    <id>40446</id>
    <revision>
      <id>2221566</id>
      <parentid>1759032</parentid>
      <timestamp>2011-11-28T00:52:05Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>noinclude</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{subject page
 |parent=Oceanic curricula
 |description=Books in this subject area deal with the '''[[w:Higher School Certificate|Higher School Certificate]]''': the credential awarded to secondary school students who successfully complete senior high school level studies (years 11 and 12 or equivalent) in New South Wales, Australia.
}}&lt;noinclude&gt;
&lt;!-- CATEGORIES AND INTERWIKIS HERE --&gt;

&lt;/noinclude&gt;</text>
      <sha1>nnrs0lz42gdm341p6qt95fn89v8xy3e</sha1>
    </revision>
  </page>
  <page>
    <title>C++ Programming/Programming Languages</title>
    <ns>0</ns>
    <id>40448</id>
    <revision>
      <id>2747787</id>
      <parentid>2747785</parentid>
      <timestamp>2014-12-15T09:16:51Z</timestamp>
      <contributor>
        <username>Grabbityx</username>
        <id>2021285</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{TOC right}}
== What is a programming language? ==
In the most basic terms, a &quot;[[w:Programming language|programming language]]&quot; is a means of communication between a human being (programmer) and a computer. A programmer uses this means of communication in order to give the computer instructions.  These instructions are called &quot;programs&quot;.

Like the many natural languages we use to communicate with each other, there are many languages that a programmer can use to communicate with a computer.  Each programming language has its own set of words and rules, called the syntax of that language.  If you're going to write a program, you have to follow the syntax of the language you're using, otherwise you won't be understood.

Programming languages can generally be divided in two categories:  [[w:Low-level programming languages|Low-Level]] and [[w:High-level programming languages|High-level]], both concepts we will introduce to you and their relevance to C++.

=== Low-level   ===
[[Image:TaxonomyofProgrammingLanguages.png|thumb|right|Image shows most programming languages and their relations from the mid-1800s up to 2003 ([[Media:TaxonomyofProgrammingLanguages.png|click here for full size]]).]] 
The lower level in computer &quot;languages&quot; are: 

'''Machine code''' (also called binary) is the lowest form of a low-level language. Machine code consists of a string of 0s and 1s, which combine to form meaningful instructions that computers can take action on. If you look at a page of binary it becomes apparent why binary is never a practical choice for writing programs; what kind of person would actually be able to remember what a bunch of strings of 1 and 0 mean? 

'''Assembly language''' (also called ASM), is just above machine code on the scale from low level to high level. It is a human-readable translation of the machine language instructions the computer executes.  For example, instead of referring to processor instructions by their binary representation (0s and 1s), the programmer refers to those instructions using a more memorable (mnemonic) form. These mnemonics are usually short collections of letters that symbolize the action of the respective instruction, such as &quot;ADD&quot; for addition, and &quot;MOV&quot; for moving values from one place to another.

{{NOTE|Assembly language is ''processor specific''. This means that a program written in assembly language will not work on computers with different processor architectures.&lt;br&gt;
Using ASM to optimize certain tasks is common for C++ programmers, but will require special considerations, because ASM is not as portable.}}

You do not have to understand assembly language to program in C++, but it does help to have an idea of what's going on &quot;behind-the-scenes&quot;. Learning about assembly language will also allow you to have more control as a programmer and help you in debugging and understanding code.

The advantages of writing in a high-level language format far outweigh any drawbacks, due to the size and complexity of most programming tasks, those advantages include:

* Advanced program structure: loops, functions, and objects all have limited usability in low-level languages, as their existence is already considered a &quot;high&quot; level feature; that is, each structure element must be further translated into low-level language.
* Portability: high-level programs can run on different kinds of computers with few or no modifications. Low-level programs often use specialized functions available on only certain processors, and have to be rewritten to run on another computer.
* Ease of use: many tasks that would take many lines of code in assembly can be simplified to several function calls from libraries in high-level programming languages. For example, Java, a high-level programming language, is capable of painting a functional window with about five lines of code, while the equivalent assembly language would take at least four times that amount.

=== High-level ===
High-level languages do more with less code, although there is sometimes a loss in performance and less freedom for the programmer. They also attempt to use English language words in a form which can be read and generally interpreted by the average person with little to no programming experience. A program written in one of these languages is sometimes referred to as &quot;human-readable code&quot;.  In general, abstraction makes learning a programming language easier. 

No programming language is written in what one might call &quot;plain English&quot; though, (although BASIC and COBOL come close). Because of this, the text of a program is sometimes referred to as &quot;code&quot; or more specifically as &quot;source code.&quot;  This is discussed in more detail in the [[C++ Programming/Programming Languages/C++/Code|The Code Section]] of the book.

Higher-level languages partially solve the problem of abstraction to the hardware (CPU, co-processors, number of registers etc...) by supporting portability of code.

Keep in mind that this classification scheme is evolving. C++ is still considered a high-level language, but with the appearance of newer languages (Java, C#, Ruby etc...), C++ is beginning to be grouped with lower level languages like C.

=== Translating programming languages ===
Since a computer is only capable of understanding machine code, human-readable code must be either interpreted or translated into machine code.

An '''[[w:Interpreter (computing)|Interpreter]]''' is a program (often written in a lower level language) that interprets the instructions of a program one instruction at a time into commands that are to be carried out by the interpreter as it happens. Typically each instruction consists of one line of text or provides some other clear means of telling each instruction apart and the program must be reinterpreted again each time the program is run.

A '''[[w:Compiler|Compiler]]''' is a program used to translate the source code, one instruction at a time, into machine code. The translation into machine code may involve splitting one instruction understood by the compiler into multiple machine instructions. The instructions are only translated once and after that the machine can understand and follow the instructions directly whenever it is instructed to do so. A complete examination of the C++ compiler is given in the [[C++ Programming/Programming Languages/C++/Code/Compiler|Compiler Section]] of the book.

The tools with which to instruct a computer may differ, however no matter which statements are used, just about every programming language will support constructs that accomplish the following:

;''Input'': Input is the act of getting information from a device such as a keyboard or mouse, or sometimes another program.

;''Output'': Output is the opposite of input; it gives information to the computer monitor or another display device or program. 

;''Math''/''Algorithm'': All computer processors (the brain of the computer), have the ability to perform basic mathematical computation, and every programming language has some way of telling it to do so. 

;''Testing'': Testing involves telling the computer to check for a certain condition and to do something when that condition is true or false. Conditionals are one of the most important concepts in programming, and all languages have some method of testing conditions. 

;''Repetition'': Perform some action repeatedly, usually with some variation.

Further examination and analysis of C++ language constructs is provided on the [[C++ Programming/Programming Languages/C++/Code/Statements|Statements Section]] of the book. 

Believe it or not, that's pretty much all there is to it. Every program you have ever used, no matter how simple or complex, is made up of functions that function more or less like these. Therefore, one way to describe computer programming is the process of breaking a large, complex task up into smaller and smaller sub-tasks until eventually each sub-task is simplified enough to be performed with one of these functions.

C++ is mostly ''compiled'' rather than ''interpreted'' (there are some C++ interpreters), and then &quot;executed&quot; later. As complicated as this may seem, further on you will see how easy it can be.

So as we have seen in the [[C++ Programming/Programming Languages/C++|Introducing C++ Section]], C++ evolved from C by adding some levels of abstraction (so we can correctly state that C++ is of a higher level than C). We will learn the particulars of those differences in the [[C++ Programming/Programming Languages/Paradigms|Programming Paradigms Section]] of the book and for some of you that already know some other languages should look into [[C++ Programming/Programming Languages/Comparisons|Programming Languages Comparisons Section]]. 

{{BookCat}}
&lt;noinclude&gt;{{displaytitle|title=C++ Programming: Programming languages, an introduction}}&lt;/noinclude&gt;</text>
      <sha1>o3nrlzjg5j6zrnc4ulzr8cxzw42lyhe</sha1>
    </revision>
  </page>
  <page>
    <title>Behringer FCB1010 MIDI Pedal</title>
    <ns>0</ns>
    <id>40482</id>
    <revision>
      <id>2546908</id>
      <parentid>2473351</parentid>
      <timestamp>2013-08-01T16:38:19Z</timestamp>
      <contributor>
        <ip>132.159.146.129</ip>
      </contributor>
      <comment>Added GR-55 to Roland guitar synthesizers listing</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Subpages}}
'''Behringer FCB1010 MIDI Pedal'''


{{npov}}
Well it occurs to me that other than using this pedal, I don’t know enough about its background. Perhaps another writer will fill in the original ship date. Suffice it to say that it has been on the market for at least a couple of years, and that it is priced at the bottom of the pack. However, its features and durability place it more toward the upper middle of the pack, if you are willing to put up with a few quirks. There are more capable MIDI pedals on the market, but they are easily twice to six times the price. It is no wonder that this pedal has become very popular – so popular that the FCB1010 group on yahoogroups has nearly 12,000 members, as of March 2009. 

The first version of the pedal essentially worked, but there were a few minor bugs in the firmware, most notably having to do with the Expression pedal functionality. Behringer responded by releasing new firmware that attempted to rid it of bugs, and add some new features. Unfortunately this took several releases to get right, and the pedal was in shipping during this experimentation. Thus, a new pedal could have Version 1.0, through 2.5 in about six different steps. To keep costs down, Behringer left out a way to reprogram the firmware in the board, so replacing the firmware must be done by replacing the EPROM. The units, as built in China, have copious quantities of hot glue all around and on the original EPROM, so it may be a minor challenge getting the old one out. The good news is that Behringer have been forthcoming with EPROMs for those who have had their pedals for less than a year, and for a very minor fee for the rest of us. In addition, a number of folks who can program EPROMs offer the service for a minor charge. 

Most users discover that the pedal is shipped with the Expression Pedals needing calibration. Calibration is a software-controlled setting of the expression pedal’s range. In addition, some units are shipped with a mis-aligned LED that operates the expression pedals. Those users have had to open the unit and tweak the position of the LED to restore normal function of the expression pedals. These procedures are detailed below. 

One of the other irritants has been the display and LEDs. The way the pedal works, the LED that is on is above the last pedal pressed. But since you can program a button to send only Control Change data, you can use them to turn effects on and off. Thus you can choose a preset, then turn on an effect, and not have a visual cue as to which preset is enabled. The display is not programmable, and in fact only displays which bank you are currently working with. 

Despite the obvious quirks and minor irritations, the pedal has a reputation as being one of the best on the market. This is due to a very capable MIDI implementation (although it is difficult to understand for the MIDI newbie), and a very reliable physical build. The pedal can send info to up to five separate devices. It can send Program Changes, Control Changes, and Note messages. It can store up to 100 presets. It supports the full 128 Program Change messages. It can send up to five different Program Change messages, two Control Change messages, and Note messages at one time. In addition, both expression pedals can send Control Change data for each preset.

== Physical ==
 
The pedal has ten preset buttons, a pair of up and down buttons, and two expression pedals. The unit is quite large at 27” long, x 8 ¾” deep, and 2 3/8” thick. The unit weighs 7.7lbs. 
 
Each button has an LED above it. In addition there is a display that indicates which bank is active, and some status lights that provide mode and status information while programming. 

There are two 1/4&quot; jacks on the back for the two relay contacts that can be programmed, as well as a MIDI In and MIDI Out jack, and of course the power input jack.

== Programming ==
 
BEFORE beginning ANY programming on the FCB1010, it is extremely important that you verify (and upgrade if necessary) the firmware. The minimum firmware version would be 2.3. The most current version is 2.5.1. 

Please visit the FCB1010 Yahoo group http://groups.yahoo.com/group/fcb1010 and download the free Windows Editor. Even if you don't use it, just loading it up and looking at it, will help you to understand it's capabilities and how to program it. For the Mac, a non-free editor, called &quot;iFCB&quot;, is available from Wabbit Wanch Design at http://www.wabbitwanch.com/iFCB.html .

== Manual Programming Example ==

This exchange is from the FCB1010 user group on Yahoogroups. These instructions walk you through programming one Program Change message as a means of illustrating how programming works on this pedal. 

First, here are the steps to set up a program change from the manual:

Preset programming:
Generally UP confirms and DOWN cancels the current changes.

1. Select the preset you would like to edit.

2. Press the DOWN button for 2-3 seconds, to enter the preset configuration mode.

3. The green LED for switch 1-2 will flash now. If you want to use the relay switches in this preset, you can activate/deactivate them by pressing pedal 1 and/or 2. Once set, press ENTER/UP to confirm.

4. The green select LED will now light up. The red LED's in the buttons indicate the MIDI commands that are to be transmitted when you select this preset. In factory condition, these will be : PROG CHG 1, EXP A and EXP B. If you want to transmit other commands in this preset, press the relevant functions (pedals) until the red LED lights up (2-3 seconds).

5. To set the parameters of the MIDI commands, press the function you would like to edit briefly. The red LED in the pedal of the selected function will start to flash now. Confirm with ENTER/UP.

6. Fig. 2 shows the parameters that need to be set. Fill in the required values, and always confirm with ENTER/UP.

7. When all values have been entered, leave the preset programming by pressing the DOWN button for 2-3 seconds. Your preset is stored now.

Referring to the steps above, follow this procedure: 

First power up your FCB1010. 

In step 1 above, you press a button, and the LED comes on. For the sake of argument, and to help clarify things (you'll see why) please choose button 5. So now button 5's LED is on.

In step 2 above, you hold the Down button for a couple seconds, and you should see (step 3) the green LED for the switch flashing. Ignore them for now and press the UP button.

Step 4, you should see the green LED by Select is On. You should also have at this point the LED on button 1 should be on steady, and both LEDs on buttons 8 and 9 should be on steady. What these LED's are indicating are that you have one MIDI channel configured to transmit your program change messages (that's why the first button's LED is on), and that the preset you are configuring includes both expression pedals (that's why the LED's on buttons 8 and 9 are on). This, for me, was the most confusing aspect of programming this controller - the LED's are indicating different things during the process of programming - sometimes indicating which button was pressed, but also indicating MIDI channel, Control Change info, Expression Pedal status, etc.

Step 5. Here it gets interesting. We're going to set up Program Change 5 on button 5 here, and the LED on button 1 is on. So, you press button 1 until it begins to flash. Why? You started this process by pressing button 5, so the FCB knows you are configuring preset 5 all the way through the process. You also have to remember this! You only have one MIDI channel configured (if it's still in Factory configuration), and it's status and programming are on the first button. So you press button 1 to start configuring what goes out on that channel. So now button 1 is blinking, right? Press the UP button and you should see the display change to indicate what program change message is configured to go out on that channel. The left number is steady, and the right number is blinking. If you started on FCB bank 0, the left number will be 0. If you started on FCB bank 9, the left number will be 9. But this two digit number is the program change message that will go out when you press button 5 (remember, we're programming button 5 here). So I expect you see 05 in the display, with the 5 flashing. To program this Program Change, select any two numbers, and press the up button. So if you want button 5 to send out Program Change 5, press the 0 button and then the 5 button to choose that. Obviously, you can choose to set button 5 to ANY program change message from 00 to 127 at this step. 

Once you set the program change value and pressed the Up button, the LED's go back to showing the programming status. If you are done configuring what you want to go out on MIDI channel 1, you can press the down button for a few seconds to exit programming mode. But you can choose any other active function to program at this point. As we noted earlier, buttons 8 and 9 have their LED's illuminated as well. That tells you that you could choose to press one, wait for it to begin blinking, and set up an expression pedal. But for the moment, please exit programming mode (press Down for about 3 seconds) and go see if you get anything to respond to the button you just programmed. 

At this point, you should have had your &quot;AHA!&quot; moment, and now understand the way all programming works on this pedal - choose a preset, go into programming mode, choose the feature you wish to program, program it, and exit programming mode.

== Expression Pedals ==
 
Calibrate the Expression pedals BEFORE you attempt to use them. Here's the procedure for firmware versions PRIOR to 2.4: 

1. Keep footswitches 1 and 3 pressed while switching on the unit (This bit you can't do standing up!). Release the switches when the display blanks. The LEDs on the footswitches, the ones on the display and each segment of the two numeric displays will turn on and off in sequence. 

2. Wait until all footswitch LEDs are on. Depress all footswitches one at a time, including UP and DOWN, until all LEDs are off. 

3. Wait until relay switch test is finished. (There will be a couple of mechanical clicks, and the display will end up reading &quot;F1&quot; (at least, it did on mine)). [Also, if you have connected a MIDI cable between the MIDI in and out, the display will show &quot;A1&quot; before this, meaning the midi ports work correctly.] 

4. Press DOWN once. 

5. Adjust the left expression pedal (A) to the lowest value. Once adjusted press UP. 

6. Adjust the left expression pedal (A) to the highest value. Once adjusted press UP. 

7. Adjust the right expression pedal (B) to the lowest value. Once adjusted press UP. 

8. Adjust the right expression pedal (B) to the highest value. Once adjusted press UP. 

9. Select a patch which has both pedals set to their full range, and check the expression pedals now send 0-127 (0x00-0x7F) 

For firmware versions 2.4 and later: 

1. Press buttons 1 + 5 while powering your FCB1010 up (VAL 1 LED on). 

2. First bring the expression pedal A to the up position and confirm with UP (VAL 2 LED turns on), then put the pedal A down and also confirm with UP (VAL 1 LED turns on). 

3. Now proceed with moving expression pedal B to the up position, and confirm with UP (VAL 2 LED turns on). 

4. Finally push expression pedal B down and confirm pressing UP. Now the pedals of your FCB1010 are calibrated and settings are automatically stored. 


== EPROMs ==
 
The FCB1010’s firmware is contained on its internal EPROM, a standard type 27C512 (64kB) or 27C256 (32kB). The EPROM is an OTP (One Time Programmable) type.  To upgrade the FCB1010 to a newer firmware revision, the old EPROM inside the FCB1010 must be replaced by the newer EPROM.   Care must be exercised when removing the original EPROM.  Behringer uses quite a bit of hot glue to secure components in place.  Instructions for replacing the EPROM can be found on Behringer's website.

It is also possible to obtain third-party EPROMs made specifically for the FCB1010.  

UnO http://www.ossandust.be/index.php is a popular general purpose EPROM replacement, which fixes some 'bugs' in the standard Behringer firmware, while adding some features.

EurekaSound! http://www.eurekasound.com/ sells the EurekaPROM for the FCB1010, which has configurations that target specific effects boxes along with a programmable configuration.   While this PROM limits flexibility somewhat, it is very user friendly and much easier to set up.

== Setup with G-Major ==
 
There are two features in the MIDI/IO Menu on the G-Major that will enable your FCB1010 (or other controllers) to communicate with your G-Major. 

1. MIDI Channel: First and foremost, the G-Major has to be able to communicate with the FCB1010 Controller. You can change the MIDI Channel that the FCB1010 is sending MIDI data on as long as you set the G-Major to the same channel in the as the G-Major. Personally, I would simply set the G-Major's MIDI channel to 'OMNI' which will receive everything you send it. This way, you can accidentally change the MIDI channel on the FCB1010 (or any other controller) and it'll still respond to MIDI commands. 

2. MIDI Program Change: This MUST also be turned on for the G-Major to respond to external controllers (FCB1010). A lot of people miss this step. At this point, you should be able to change presets on the G-Major with your FCB Controller. Make sure this is working before you proceed any further. 

CHANGING PRESETS: In the MIDI/UTIL Menu on the G-Major, there is a Program Bank option that allows you to determine which bank of presets you wish to use. There are 100 Factory presets in the G-Major. These CAN NOT be edited! User presets are blank and can be edited and saved for future use. If you want to make changes to a factory preset, you can edit it, then save it to a User preset. The G-Major allows you to select presets within either the Factory presets, User presets, or both. Here are the options as they show up in the G-Major's MIDI/UTIL Program Bank menu: 

1. Factory: Allows you to select only factory preset from an external controller. This works fine if you like the factory presets and don't need to make any changes to the presets. 

2. User: Allows you to select only saved User presets. I use this option as I prefer to customize all of my presets. 

3. Custom: Allows you to select between Factory or User presets. Decide which group of presets you wish to use and select the appropriate option within the Program Bank menu. 

USING THE FCB1010 EXPRESSION PEDALS: Within the G-Major, you can assign up to four Modifiers. A Modifier is an external controller that can control various effects parameters. In this case, we'll use the two expression pedals on the FCB1010 as Modifiers. The left expression pedal will be MOD 1 and the right expression pedal will be MOD 2. Here's how you set them up: 

1. On the G-Major, press the MOD menu button. 

2. Select MOD 1 using the CONTROL PARAMETER wheel. 

3. Turn the inner EDIT wheel clockwise and you'll see your control options, which are OFF, LEARN, PEDAL, and CC1-128. Select the LEARN option. 

4. Press ENTER and the display will begin blinking &quot;LEARNING&quot;. This means that you are in LEARN mode and you can automatically assign your Modifier. 

5. Move the left expression up and down. The &quot;LEARNING&quot; indicator will disappear. The G-Major has now automatically recognized your left expression pedal as MOD 1. 

6. Repeat Steps 1-5, except select MOD 2 instead and move the right expression pedal during the LEARNING mode. Your right controller is now assigned as MOD 2. 

Once you have completed these steps, you can assign either pedal to effects parameters within the G-Major. These settings are Global, meaning that they are present within all presets in the G-Major. 

ASSIGNING THE FCB1010 EXPRESSION PEDALS TO PARAMETERS IN THE G-MAJOR: This section covers setting up the expression pedals to control various effects parameters (i.e.: Chorus speed, Reverb levels, Delay time, etc.) NOTE: Only effects parameters for the 'activated' effects can be assigned. In other words, you must have the CHORUS effect button enabled if you wish to control Chorus parameters within a preset. 

1. On the G-Major, press the MOD menu button. The display will show you MOD 1, 2 ,3 or 4. Do not worry about what is displayed here! This just lets you know that you are in the proper Modifier menu. 

2. Press ENTER. At this point, you will see a list of the various effects parameters that can be modified. In the menu display, you will see the effect listed on the right, and the effects value on the right. 

3. Scroll through the various effects parameters using the PARAMETER wheel until you find the effects parameter that you want to control. 

4. Use the inner VALUE knob to scroll through the various controllers that are available. Select M1 for Modifier 1 (left expression pedal). Press ENTER. You have now assigned your left expression pedal to control the desired effects parameter. You can repeat this step, except using M2 (Modifier 2) for the right expression pedal. 

Also, the controller assignment settings made here are unique to each preset and will need to be initialized for each preset within the G-Major. If you copy a preset, these settings will be copied as well. My suggestion is to set up a generic preset to use as a template for all presets, copy it to all of your other presets within the G-Major, then modify each individual preset as desired.

== Using the FCB1010 with Roland GR and VG Products ==
&lt;br&gt;
First, most Roland GR guitar synthesizers do NOT support MIDI THRU. None of the following GR units have MIDI THRU: 
&lt;br&gt;-GR-700
&lt;br&gt;-GR-1
&lt;br&gt;-GR-30
&lt;br&gt;-GR-33
&lt;br&gt;-GR-55
&lt;br&gt;(please expand this list if you can)
&lt;br&gt;&lt;br&gt;
The following VG units PORTS are described: 
&lt;br&gt;-VGA-7 (no MIDI THRU port, but THRU setting of MIDI OUT port is possible) 
&lt;br&gt;-V-Bass (no MIDI THRU port, and no THRU setting found)
&lt;br&gt;
&lt;br&gt;&lt;b&gt;Put the GR at the End of the MIDI Chain&lt;/b&gt;
&lt;br&gt;This means that if you have other MIDI equipment to communicate with, do NOT put the GR units without MIDI THRU before other target devices in the MIDI chain. The targets beyond the GR will not receive MIDI data. There is no way to &quot;set&quot; these GR units to pass MIDI data thru to the MIDI output.
&lt;br&gt;&lt;br&gt;
This means that the GR must be the last MIDI device in the MIDI chain or the FCB1010 commands will not get through the GR unit to the intended target device.
&lt;br&gt;
&lt;br&gt;&lt;b&gt;GR's use 6 MIDI Channels&lt;/b&gt;&lt;br&gt;
Second, GR units use 6 MIDI channels, one per string, even the bass units (since some basses have 6 strings). Typically GR units have channel 11 set as the default MIDI channel, which really means channels 11 to 16. This usually works out well because most keyboards will default to channel 1 and MIDI drums are almost always  on channel 10. 
&lt;br&gt;&lt;br&gt;
Using and especially while programming the FCB1010, it's important to remember that although sending commands to MIDI channel 11, with a GR they can effect 12-16 also. You probably don't want to set the FCB1010 GLOBAL CONFIG to use channels 12-16 if you have a GR unit among the target devices.
&lt;br&gt;
&lt;br&gt;&lt;b&gt;Possible uses of FCB1010 with GR units&lt;/b&gt;
&lt;br&gt;
Finally, the FCB1010 is a great compliment to any GR unit with MIDI input. It can be used to call up patches, control parameters via CC commands such as HOLD, PITCH, MODULATION, WAH, DELAY and more. See the Roland User Manual for the particular GR unit, and check the MIDI Implementation list at the back of the manual for a list of parameters that can be controlled by CC commands.

The FCB1010 doesn't send PITCH signals, alas.

{{Subjects|Musical equipment}}
{{Alphabetical|B}}
{{status|25%}}</text>
      <sha1>8o9x5reoodo0ta5tebrk3zrjejsmu5g</sha1>
    </revision>
  </page>
  <page>
    <title>C++ Programming/Code/API/Generic Wrappers</title>
    <ns>0</ns>
    <id>40483</id>
    <revision>
      <id>2584668</id>
      <parentid>2263181</parentid>
      <timestamp>2013-11-25T07:59:56Z</timestamp>
      <contributor>
        <ip>213.74.26.66</ip>
      </contributor>
      <comment>Updated the link for Qt.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">=== Generic wrappers ===
Generic GUI/API wrappers are programming libraries that provide a uniform platform neutral interface (API) to the operating system regardless of underlying platform. Such libraries greatly simplify development of cross-platform software.

Using a wrapper as a portability layer will offer applications some or all following benefits:

* Independence from the hardware.
* Independence from the Operating System.
** Independence from changes made to specific releases.
** Independence from API styles and error codes.

Cross-platform programming is more than only GUI programming. Cross-platform programming deals with the minimum requirements for the sections of code that aren't specified by the C++ Standard Language, so as programs can be compiled and run across different hardware platforms. 

Here is some cross-platform GUI toolkit:
* '''[[w:Gtkmm|Gtkmm]]''' - an interface for the C GUI library GTK+. It is not cross-platform by design, but rather mutli-platform i.e. can be used on many platform.
* '''[[Qt]]''' (http://qt-project.org) - a cross-platform (Qt is the basis for the Linux KDE desktop environment and supports the X Window System (Unix/X11), Apple Mac OS X, Microsoft Windows NT/9x/2000/XP/Vista/7 and the Symbian OS), it is an object-oriented '''application development''' framework, widely used for the development of GUI programs (in which case it is known as a widget toolkit), and for developing non-GUI programs such as console tools and servers. Used in numerous commercial applications such as Google Earth, Skype for Linux and Adobe Photoshop Elements. Released under the LGPL or a commercial license.
* '''[[w:WxWidgets|WxWidgets]]''' (http://www.wxwindows.org/) - a widget toolkit for creating graphical user interfaces (GUIs) for cross-platform applications on Win32, Mac OS X, GTK+, X11, Motif, WinCE, and more using one codebase. It can be used from languages such as C++, Python, Perl, and C#/.NET. Unlike other cross-platform toolkits, wxWidgets applications look and feel native. This is because wxWidgets uses the platform's own native controls rather than emulating them. It's also extensive, free, open-source, and mature. wxWidgets is more than a GUI development toolkit it provides classes for files and streams, application settings, multiple threads, interprocess communication, database access and more.
* '''[[w:Fltk|FLTK]]''' The &quot;Fast, Light Toolkit&quot;

[[Category:C++ Programming|{{SUBPAGENAME}}]]</text>
      <sha1>lzlioiog8qwh62ubv9fn7xlqv1jd3yp</sha1>
    </revision>
  </page>
  <page>
    <title>Internet Technologies/Peer-to-Peer (P2P)</title>
    <ns>0</ns>
    <id>40494</id>
    <redirect title="The World of Peer-to-Peer (P2P)" />
    <revision>
      <id>231276</id>
      <timestamp>2005-09-09T03:45:17Z</timestamp>
      <contributor>
        <username>Panic2k4</username>
        <id>2865</id>
      </contributor>
      <comment>Internet Technologies/Peer-to-Peer (P2P) moved to The World of Peer-to-Peer (P2P): naming conventions</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[The World of Peer-to-Peer (P2P)]]</text>
      <sha1>6qstyssfkmnbyi8nnmqeam6h3xjbax0</sha1>
    </revision>
  </page>
  <page>
    <title>Art Tutorials/General Concepts/Light and Shadows</title>
    <ns>0</ns>
    <id>40501</id>
    <revision>
      <id>2559642</id>
      <parentid>487064</parentid>
      <timestamp>2013-09-23T13:09:13Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Shadows==
===Umbra and Penumbra===
The umbra is the darkest region of a shadow. The penumbra is the lightest region of a shadow. 
The more intense the light source, the harder the shadow and the less variation between umbra and penumbra. 
The less intense the light source, the softer the shadow and the more variation between umbra and penumbra.

==Edges of Shadows==
Visually, shadows have greatest local value near the edge. This is apparent with more intense light sources. The shadows appear to get darker near the edge of the shadow meeting with the light. This is mostly an illusion. However, when combined with the use of the rendering of umbra and penumbra, shadows in works often have a more interesting purpose.

{{BookCat}}</text>
      <sha1>98msdiej4jttn2zucw090hw99b6zppb</sha1>
    </revision>
  </page>
  <page>
    <title>Java Programming/Design Patterns</title>
    <ns>0</ns>
    <id>40502</id>
    <revision>
      <id>2681982</id>
      <parentid>2614084</parentid>
      <timestamp>2014-07-16T21:28:04Z</timestamp>
      <contributor>
        <username>Panic2k4</username>
        <id>2865</id>
      </contributor>
      <comment>merge proposal removed (some confusion on source target) the initial idea was to merge the less complete work with Java examples into the Java book</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">A design pattern is not a finished design, it is a description of a solution to a common problem. A design pattern can be reused in multiple applications, and that is the main advantage of using it. It can also be seen as a template for how to solve a problem that can occur in many different situations and/or applications. It is not code reuse as it usually does not specify code, but code can be easily created from a design pattern. Object-oriented design patterns typically show relationships and interactions between classes or objects, without specifying the final application classes or objects that are involved.

Each design pattern consist of the following part:
; Problem/requirement: To create a design pattern, we need to go through a mini analysis design and may be coding to test out the solution.  This section state the requirements the problem we want to solve. This is usually a common problem that will occur in more than one application.

; Forces: This section state the technological boundaries, that helps and guides the creation of the solution.

; Solution: This section describes how to write the code to solve the above problem. This is the design part of the design pattern. It may contain class diagrams, sequence diagrams, and or whatever is needed to describe how to code the solution.

A design pattern can be considered as block that can be placed in your design document, and you have to implement the design pattern with your application.

Using design patterns speeds up your design and helps to communicate your design to other team members.

= Terminology =

The design patterns are not always simple to understand as it is a theoretical vision of programming. You must distinguish the ''abstraction'' and the ''representation''. For example, we have a method that implements an addition:
{| style=&quot;margin: auto;&quot;
|&lt;syntaxhighlight lang=&quot;Java5&quot; line start=&quot;1&quot;&gt;
    public int add(int a, int b) {
        return a + b;
    }
&lt;/syntaxhighlight&gt;
|}
* The ''abstraction'' is only the visible part of your code outside. It is the contract between the provider and the client code. In Java, this theoretical concept is mostly the signatures of the methods of a class or an interface.
* The ''representation'' is the way a problem is resolved. It follows the contract of what is given as input and what is expected to be returned. In Java, this theoretical concept is mostly the code lines in a class and any internal calls to other methods or classes.
{| width=&quot;100%&quot;
|&lt;syntaxhighlight lang=&quot;Java5&quot; line start=&quot;1&quot; highlight=&quot;1&quot;&gt;
    public int add(int a, int b) {
        return a + b;
    }
&lt;/syntaxhighlight&gt;
|&lt;syntaxhighlight lang=&quot;Java5&quot; line start=&quot;1&quot; highlight=&quot;2&quot;&gt;
    public int add(int a, int b) {
        return a + b;
    }
&lt;/syntaxhighlight&gt;
|-
|style=&quot;text-align:center;&quot;|''abstraction''
|style=&quot;text-align:center;&quot;|''representation''
|}

[[Category:Java Programming]]</text>
      <sha1>670kuy7pcff1815z39iuggnlig90pme</sha1>
    </revision>
  </page>
  <page>
    <title>Art Tutorials/Traditional Media/Drawing</title>
    <ns>0</ns>
    <id>40510</id>
    <revision>
      <id>2464956</id>
      <parentid>2264719</parentid>
      <timestamp>2012-12-18T15:08:53Z</timestamp>
      <contributor>
        <username>Aiselu</username>
        <id>841047</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Introduction==
Drawing - whether with pen, pencil, crayon or something else, this is a fascinating way to create artworks. It is probably one of the easiest to begin with.

Drawing is the basis for most visual media art. Some people may say something like &quot;I can paint, but I can't draw&quot;. This is silly since a strong base in drawing is needed to be good at painting, even for abstract painters.

==Common Tools==
This is a typical list of drawing tools from any college level drawing course. Your supplies may vary based on your needs.

# stick(s) of jumbo charcoal
# stick(s) of vine charcoal (soft or medium)
# charcoal pencil (4B)
# woodless pencil (6B)
# ebony pencil
# conté crayons
# blending stump
# pink pearl eraser
# kneaded eraser
# chamois skin or paper towel
# drawing paper tablet
# rough newsprint pad
# fixative

==Tutorials and Exercises==
===Drawing from Life===
Drawing from Life means drawing the three dimensional objects you see in front of you. Drawing from life is what will make your drawing skills improve fastest and is a great exercise at any skill level. Many beginners don't understand the value of it and eventually become bored and abandon it pretty soon. Give it a chance and try to draw from life on scrap paper or in your sketchbook whenever possible. And sometimes take your time to do elaborate long time still-life studies.

When you are just starting out all you will need is tons of cheap paper and pencils. For beginners it is best to choose simple geometric objects like balls, cylinders and cubes lit by a single light-source.

===Tutorials===
[[/How to draw a face|How To Draw A Face]]

{{BookCat}}</text>
      <sha1>hi1psobuzvqda03ob32d3ctem8vx1ip</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Ancient History/Rome/Coming of the Dark Ages</title>
    <ns>1</ns>
    <id>40511</id>
    <revision>
      <id>430184</id>
      <parentid>231376</parentid>
      <timestamp>2006-04-15T22:32:35Z</timestamp>
      <contributor>
        <username>Hagindaz</username>
        <id>19723</id>
      </contributor>
      <minor />
      <comment>[[Talk:Rome:Coming of the Dark Ages]] moved to [[Talk:Ancient History/Rome/Coming of the Dark Ages]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This period should be called The Middle Ages or the neo-Keltic Ages.

Originaly the term &quot;The Dark Ages&quot; refered to the relative lack of information about the period at the start of the 19th century, when the term was coined. Later it became synonimous with &quot;underdeveloped period&quot;. Now that in the second half of the 20th century more and more information has been recovered and interpreted, it is becoming clearer and clearer that the period between ca. 500 AD and ca. 1500 AD is neither unknown nor underdeveloped. In fact, the return to natural law in combination with ancient (Roman) laws and habits, supported the start of a new Empire in Europe: The Frankish Empire. Out of the Frankish Empire developed the different peoples, states and countries (in Europe and later in the world through colonialism) we know today. There is a direct line between the new empire of Clovis (Merovingian), Charlemagne (Franks), William the Conqueror (Norman-English) to the Habsburg Kingdom (Hispano-Austrian) of the 16th century. 

All times were ruled by a stringent rule of law supported by force. No force, no law, but force could not be applied without legal stature or the consequences could be dire. Law developed from the rules of Charlemagne. Many additions and changes in interpretations were introduced as the ruling powers tried to enhance there strength, always affraid of losing there position on the first sign of weakness. However, it is now clear that the European (and later Western) society did not start in the modern era with the Renaissance in Italy, but it rather developed from the growing powers of the Middle Ages, starting directly after the destruction of the Western Roman Empire.</text>
      <sha1>3lxjiwx6p5mawov5u4qyte2k4c6yyg2</sha1>
    </revision>
  </page>
  <page>
    <title>Ancient History/Rome/Coming of the Dark Ages</title>
    <ns>0</ns>
    <id>40512</id>
    <revision>
      <id>1159794</id>
      <parentid>1107076</parentid>
      <timestamp>2008-04-08T17:07:14Z</timestamp>
      <contributor>
        <username>Neoptolemus</username>
        <id>77154</id>
      </contributor>
      <minor />
      <comment>fix cat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This period should be called The Middle Ages or the neo-Keltic Ages.

Originally the term &quot;The Dark Ages&quot; referred to the relative lack of information about the period at the start of the 19th century, when the term was coined. Later it became synonymous with &quot;underdeveloped period&quot;. In the second half of the 20th Century more and more information has been recovered and interpreted, and it is becoming clearer and clearer that the period between ca. 500 AD and ca. 1500 AD is neither unknown nor underdeveloped. In fact, the return to natural law in combination with ancient (Roman) laws and habits supported the start of a new empire in Europe: The Frankish Empire. Out of the Frankish Empire developed the different peoples, states and countries (in Europe and later throughout the world through colonialism) that we know today. There is a direct line from the new empire of Clovis (Merovingian), Charlemagne (Franks), William the Conqueror (Norman-English) to the Hapsburg Kingdom (Hispano-Austrian) of the 16th Century.

All eras have been ruled by a stringent rule of law supported by force. No force - no law, but force could not be applied without legal stature or the consequences could be dire. Law developed from the rules of Charlemagne. Many additions and changes in interpretations were introduced as the ruling powers tried to enhance their strength, always afraid of losing their position at the first sign of weakness. However, it is now clear that European (and later Western) society did not start in the modern era with Renaissance Italy, but rather developed from the growing powers of the Middle Ages, starting directly after the destruction of the Western Roman Empire.

{{BookCat}}</text>
      <sha1>5uhmh276k2oxy3kr87gwly6dooh1pql</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Kinematics</title>
    <ns>1</ns>
    <id>40517</id>
    <revision>
      <id>541407</id>
      <parentid>231432</parentid>
      <timestamp>2006-07-30T11:41:04Z</timestamp>
      <contributor>
        <username>Âme Errante~enwikibooks</username>
        <id>33727</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Possible Merge==
There is already a book on theoretical mechanics (predates this book with a few months ;-) ). Perhaps it might be a good idea to merge the content of this book with [[Theoretical Mechanics]]? --[[User:Patrik|Patrik]] 13:02, 9 September 2005 (UTC)

:Patrik,

:This book would not be a good addition to the theoretical mechanics book.  The reason for this comes from the definition for mechanics, which I quote from Wiktionary: &quot;That science, or branch of applied mathematics, which treats of the action of forces on bodies.&quot;

:The primary point of kinematics (as opposed to kinetics, which you might have been thinking of), is that one looks at the range of motion of objects without respect to the forces involved in this movement.  Looking at kinematics from a mechanics standpoint is more in the realm of a course in mechanisms, robotics, or kinetics.

:Since it has been nearly a year since your post and no one has responded, I am going to remove the merger request from the main page.

:[[User:Âme Errante|Âme Errante]] 11:41, 30 July 2006 (UTC)</text>
      <sha1>2qfoaleo6qie86qs53onrs1043ixte9</sha1>
    </revision>
  </page>
  <page>
    <title>Algebra/Iteration</title>
    <ns>0</ns>
    <id>40520</id>
    <revision>
      <id>2584941</id>
      <parentid>2584939</parentid>
      <timestamp>2013-11-25T20:37:55Z</timestamp>
      <contributor>
        <ip>144.191.148.3</ip>
      </contributor>
      <comment>/* How to use Iteration */ spelling</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Algebra Page}}

== Iteration ==

Iteration is a method of calculating of finding a value of a function through repeated guesses, with each one becoming closer and closer to the correct answer. This is commonly used in computer programs, where this kind of evaluation is easier than direct algebraic manipulation. It is also used in pure mathematics where the answer to a problem is either very difficult or impossible to find using algebraic manipulation. The main problem with Iteration is that it takes many steps to arrive at a suitably precise value for the calculation. However due to the speed of modern computers, it remains a very effective method of calculating values of equation.

== When to use Iteration ==

Iteration can be used for all equations needed to be evaluated in a computer program. Due to
the simplicity of the code required to implement this kind of evaluation, and the accuracy and speed that the computer can calculate the result, it is one of the most effective ways for a computer to evaluate mathematical expressions.

Iteration can also be used for formula that cannot be solved using conventional mathematical techniques. For example, for the equation &lt;math&gt;27 = e^x + x&lt;/math&gt;, there is no known way to directly solve it for x. Using iteration however, the correct answer of 3.17 (to 2 decimal places) is easily calculated.

Thirdly, iteration is useful as a guide to the correct solution to a problem. For example, to evaluate all the values of x in the equation &lt;math&gt;x^3 - 3 * x^2 - 10 * x + 24&lt;/math&gt;, one must first be found using either the [[w:Remainder Theorem|Remainder Theorem]] and trial and error, or complicated simultaneous equation involving the sum, product and sum of product of roots of this equation. By using iteration, one root may be found easily, thereby making the final solution much easier to calculate.

Finally, iteration can be used to provide an estimate for the solution to a mathematical problem. Using iteration, simple arithmetic errors can often be detected as the calculated result does not match up with the expected result (see [[w:Mathematical estimation Techniques|Mathematical estimation Techniques]].

== When not to use Iteration ==

Iteration can not be used to prove a mathematical equation. This is because iteration never provides an exact answer to a problem, only increasingly accurate estimates. 

Also, sometimes the iteration method fails to calculate the correct answer for an equation. This will be discussed later.

Iteration will not work if the equation being tested uses function that only work with integer values. For example an equation with a factorial in it will not work.

Finally, for an equation with multiple roots, the iteration method will only find one (root).

== How to use Iteration ==

Iteration is very simple to use once the basics are understood. Note that basic function notation is required to understand this explanation.

#Move all elements of the equation to one side of the equation so that one side of the equation equals 0 and call the other side f(x)
#Draw a rough graph of f(x) to find an estimate of which value of x f(x) = 0.  Call this value x1.
#Choose values to the left and to the right of x1 and find f(x2) and f(x3).
#If either f(x2) or f(x3) is not an opposite sign to the evaluated value of the initial guess.
##If f(x2) or f(x3) is closer to 0 than f(x1) then choose x2 or x3 the new x1 and start again from step 3.
##Otherwise try different values to the left and right of the initial guess.
#If f(x2) or f(x3) is an opposite sign to f(x1):
##Take xA = x1 and xB = x2 or x3.
##Take a new guess xC from between xA and xB (i.e. &lt;math&gt;xC = (xA + xB) / 2&lt;/math&gt;). For example xC = 3.5
##If f(xC) is an opposite sign to f(xA)
###Make xB = xC
###Repeate from step 5b until desired accuracy is achieved
##If f(xC) is an opposite sign to f(xB)
###Make xA = xC
###Repeat from step 5b until desired accuracy is achieved

Here is an example of this process in operation:

# &lt;math&gt;x^2 + ln x + 3 ^ x = 87&lt;/math&gt; becomes
#: &lt;math&gt;f(x) = x^2 + ln x + 3 ^ x - 87 = 0&lt;/math&gt; (note how one side equals 0).
# Clearly &lt;math&gt;3^x&lt;/math&gt; has to be less than 87 for f(x) to be 0. &lt;math&gt;3^4 = 81&lt;/math&gt; would be a good approximation as 81 nearly cancels out the -87. Hence x1 = 4.
#: f(x1) = 11.38
# try  x2 = 3... &lt;math&gt;f(3) = -49.90&lt;/math&gt; 
#: x3 = 5... &lt;math&gt;f(5) = 182.61&lt;/math&gt;
# Not necessary.
# f(x1) has an opposite sign to f(x2)
#: a) xA = 4, xB = 3 
#:: f(xA) = 11.38  
#:: f(xB) = -49.90 
#: b) xC = (4 + 3) / 2 = 3.5 
#:: f(xC) = f(3.5) = -26.73 
#: c) f(xC) is opposite sign to f(xA) 
#:: i) xB = 3.5
#::: f(xB) = -26.73
#:: ii) go back to step 5b

 5  b) xC = (3.5 + 3) / 2 = 3.25
       f(xC) = -39.72
    c) f(xC) is opposite sign to f(xA)
       i) xB = 3.25
          Take xB as answer

That’s all that's to it. It may seem to take a lot of working on paper but normally most of the working can be skipped once you understand the method of iteration.</text>
      <sha1>9oonldpqv6zv2w6oi8b9scthqtr5ylg</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Algebra/Iteration</title>
    <ns>1</ns>
    <id>40521</id>
    <revision>
      <id>474057</id>
      <parentid>231715</parentid>
      <timestamp>2006-06-01T14:59:31Z</timestamp>
      <contributor>
        <username>Hagindaz</username>
        <id>19723</id>
      </contributor>
      <minor />
      <comment>[[Talk:Iteration]] moved to [[Talk:Algebra/Iteration]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Page Creation ==
Hi this is my first Wikibook page (or Wikipedia page for that matter...). Anyway I would greatly appreciate any feedback from more experienced Wikipedia user about how to go about making pages 
--[[User:WikiWizard|WikiWizard]] 02:28, 10 September 2005 (UTC)


== Example Formating ==
I have had a lot of trouble formatting the example I gave for iteration. I would appreciate any help to get this to work properly. --[[User:WikiWizard|WikiWizard]] 02:28, 10 September 2005 (UTC)</text>
      <sha1>9inshlvbefqlymec29oyyuwnh2tx2lf</sha1>
    </revision>
  </page>
  <page>
    <title>Wikibooks talk:Community Portal</title>
    <ns>5</ns>
    <id>40522</id>
    <restrictions>move=sysop</restrictions>
    <revision>
      <id>2984120</id>
      <parentid>2600834</parentid>
      <timestamp>2015-08-14T06:21:05Z</timestamp>
      <contributor>
        <username>לערי ריינהארט</username>
        <id>3018</id>
      </contributor>
      <comment>/* Maya script */ new section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{metatalk}}

== Editing sections of the Community Portal ==

I removed &quot;&lt;nowiki&gt;__NOEDITSECTION__&lt;/nowiki&gt;&quot; from the Community Portal. I saw no reason for it, and it prevents one from editing one section; for example to add one link. --[[User:Kernigh|Kernigh]] 20:10, 6 December 2005 (UTC)

: There's too much links now in the Portal. Pages should be simple - with lots of section edit links it does not look nice. --[[User:Derbeth|Derbeth]] [[User talk:Derbeth|&lt;sup&gt;talk&lt;/sup&gt;]] 12:31, 7 December 2005 (UTC)

The four == boxes == should have section edit links, though. Maybe the === smaller sections === should become &lt;nowiki&gt;'''&lt;big&gt;smaller sections&lt;/big&gt;'''&lt;/nowiki&gt;? --[[User:Kernigh|Kernigh]] 21:28, 7 December 2005 (UTC)

: The main purpose of Community Portal is to be viewed, not edited. It aleady has a ton of links, adding more would just create more mess. I think lack of section edit links is just a small inconvenience.  BTW, how often do you edit CP? Not so often I think. You're experienced user, I don't think you have big problem because of lack of edit links. --[[User:Derbeth|Derbeth]] [[User talk:Derbeth|&lt;sup&gt;talk&lt;/sup&gt;]] 21:53, 7 December 2005 (UTC)





&gt;&gt;&gt;&gt;&gt;WHY WAS THIS ALTERED? I CAN'T SEE ANY REASON HERE....
The four == boxes == should have section edit links, though. Maybe the === smaller sections === should become &lt;nowiki&gt;'''&lt;big&gt;smaller sections&lt;/big&gt;'''&lt;/nowiki&gt;? --[[User:Kernigh|Kernigh]] 21:28, 7 December 2005 (UTC)

== Let's get going ==

I'd really like to start this up again.  Its a great idea and should ideally be an active central point of collaboration among editors.  If we could a bot to update the template, that'd be great!  I'm not sure how to step forward, but let's just take it one step at a time.  --[[User talk:Iamunknown|Iamunknown]] 05:42, 11 April 2007 (UTC)

== Add fr: == 
The page seems protected, so I note it here: the French page is [[fr:Wikilivres:Accueil]]. Could someone add the link, please ?

:Done. [[User:百家姓之四|百家姓之四]] ([[User talk:百家姓之四|talk]]) 09:47, 22 February 2009 (UTC)

== How to convert pdf to word? ==

I'm writting my paper and need to extract some paragraph out of pdf materials, but the pdf can not be copied, so I need to tranfer them to word so that I can use them freely. Any idea to do that? Do I have to use a software or any tools?

== [[w:en:Maya script|Maya script]] ==

[[file:Deleatur (black).png|thumb|right]]
Deat friends! Please see [[talk:LaTeX#Maya_script|talk:LaTeX#Maya script]]. There is a&lt;br /&gt;
'''question:''' How can the Maya and the marvosym glyphs be displayed? Thanks for any help in advance! Best regards lɛʁi ʁɑjnhɑʁt (Leri Reinhart)&lt;br /&gt;
‫·‏[[user:לערי ריינהארט|לערי ריינהארט]]‏·‏[[user talk:לערי ריינהארט|T]]‏·‏[[m:user:לערי ריינהארט|m]]‏:‏[//meta.wikimedia.org/wiki/user_talk:%D7%9C%D7%A2%D7%A8%D7%99_%D7%A8%D7%99%D7%99%D7%A0%D7%94%D7%90%D7%A8%D7%98?action=history Th]‏·‏[[m:user talk:לערי ריינהארט|T]]‏·‏[[m:special:Emailuser/לערי ריינהארט|email me]]‏·‏‬ 06:21, 14 August 2015 (UTC)
: BTW: [[LaTeX/FAQ]] shows some code but not what is finaly generated with LaTeX. ‫·‏[[user:לערי ריינהארט|לערי ריינהארט]]‏·‏[[user talk:לערי ריינהארט|T]]‏·‏[[m:user:לערי ריינהארט|m]]‏:‏[//meta.wikimedia.org/wiki/user_talk:%D7%9C%D7%A2%D7%A8%D7%99_%D7%A8%D7%99%D7%99%D7%A0%D7%94%D7%90%D7%A8%D7%98?action=history Th]‏·‏[[m:user talk:לערי ריינהארט|T]]‏·‏[[m:special:Emailuser/לערי ריינהארט|email me]]‏·‏‬ 06:21, 14 August 2015 (UTC)</text>
      <sha1>oz3u988unle6f7svq0ws9o3irx7jsm9</sha1>
    </revision>
  </page>
  <page>
    <title>Collection of Mathematical Formulas/References</title>
    <ns>0</ns>
    <id>40523</id>
    <revision>
      <id>1520934</id>
      <parentid>1001813</parentid>
      <timestamp>2009-06-05T14:33:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed category.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==References==
* &lt;div id=&quot;Concrete&quot;&gt;'''[Concrete]'''. Ronald L. Graham, Donald E. Knuth and Oren Patashnik (1989). Concrete Mathematics: A Foundation for Computer Science (2nd Edition). Addison-Wesley Publishing Company, Inc. ISBN 0201558025.
* &lt;div id=&quot;GemsIII&quot;&gt;'''[Gems3]'''. Honsberger, Ross (1985). Mathematical Gems III. The Mathematical Association of America. ISBN 0-88385-318-3.&lt;/div&gt;
* &lt;div id=&quot;TAOCP1&quot;&gt;'''[TAOCP1]'''. Knuth, Donald E. (1997). The Art of Computer Programming, Volume 1: Fundamental Algorithms (3rd Edition). Addison Wesley Longman. ISBN 0-201-89683-4.&lt;/div&gt;

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>3q3bxi0y9knqhxcx9x1isex3eze8tcr</sha1>
    </revision>
  </page>
  <page>
    <title>Collection of Mathematical Formulas/Fibonacci Numbers</title>
    <ns>0</ns>
    <id>40524</id>
    <revision>
      <id>2686119</id>
      <parentid>2200336</parentid>
      <timestamp>2014-07-31T03:07:58Z</timestamp>
      <contributor>
        <username>Plynch22</username>
        <id>655578</id>
      </contributor>
      <comment>minor revision of Fibonacci Sequence definition, also in the sequence's main definition &quot;n&quot; was being listed as functional output, not as an index</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Definition of the Fibonacci sequence:

&lt;table width=&quot;100%&quot;&gt;&lt;tr&gt;&lt;td width=&quot;20pt&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;math&gt;
\begin{cases}
F_0 = 0 \\
F_1 = 1 \\
F_{n+2} = F_n+F_{n+1}, &amp;n \in \left[ 2, \infty \right)
\end{cases}
&lt;/math&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;(1)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

[[Collection_of_Mathematical_Formulas/References#TAOCP1|[TAOCP1, p. 83]]], [[Collection_of_Mathematical_Formulas/References#Concrete|[Concrete, p. 299]]]:

&lt;table width=&quot;100%&quot;&gt;&lt;tr&gt;&lt;td width=&quot;20pt&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;math&gt;
F_n = \frac{1}{\sqrt{5}} (\phi^n - \hat{\phi}^n), \quad n \in \mathbb{Z}, \quad \phi = \frac{1+\sqrt{5}}{2}, \hat{\phi} = \frac{1-\sqrt{5}}{2}
&lt;/math&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;(2)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

[[Collection_of_Mathematical_Formulas/References#TAOCP1|[TAOCP1, p. 85]]]:

&lt;table width=&quot;100%&quot;&gt;&lt;tr&gt;&lt;td width=&quot;20pt&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;math&gt;
F_{n+k} F_{m-k} - F_n F_m = (-1)^n F_{m-n-k} F_k
&lt;/math&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;(2)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>7t6jnz8jqw26hfcokti5w03b1d5fd1y</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/NHL/Mantle cell lymphoma</title>
    <ns>0</ns>
    <id>40526</id>
    <revision>
      <id>2129350</id>
      <parentid>1385408</parentid>
      <timestamp>2011-06-28T19:04:37Z</timestamp>
      <contributor>
        <username>Brim</username>
        <id>2387</id>
      </contributor>
      <comment>/* Limited Stage */ MSKCC 2006</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/NHL:TOC}}


==Overview==
*Rare subtype, comprises ~6% of NHL in US
*Usually in older men
*Only 5-15% present with Stage I-II
*Most often Stage III or IV disease, extranodal involvement including spleen and liver and bone marrow common, frequent B symptoms (about 50%). 
*A variant can present as multiple polyps throughout the GI tract (lymphomatous polyposis)
*Microscopically they have &quot;angulated&quot; nuclei, and resemble lymphocytes in mantle zone adjacent to the lymphoid follicles
*Translocation t(11;14) rearranges the Bcl-1 gene (PRAD-1) which codes for Cyclin D1 (involved in cell cycle regulation) and puts it under the control of the immunoglobulin gene promotor.  
*Very poor survival. Aggressive and doesn't respond well to chemotherapy. Subset of elderly patients can present asymptomatic and have a very indolent course



==Treatment==
*CHOP alone not very effective, early SWOG experience showed median OS 3 years
*Addition of Rituximab (R-CHOP) did not improve PFS or OS
*More intense chemotherapy regimens required
**Stem cell transplant is being evaluated (e.g. [[Radiation_Oncology/Chemotherapy_combinations#R-CHOP|R-CHOP-14]] -&gt; [[Radiation_Oncology/Chemotherapy_combinations#R-ICE|R-ICE]] -&gt; ASCT)
**[[Radiation_Oncology/Chemotherapy_combinations#Hyper-CVAD|Hyper-CVAD]] also appears promising
*In asymptomatic elderly with limited disease, careful observation may be considered
*RT has a potentially significant role in Stage I-II disease, as MCL is very radiosensitive


==Radiotherapy==
'''''All Stages:'''''
*'''MSKCC; 2006''' (1998-2004) PMID 16682133 -- &quot;Highly effective local control and palliation of mantle cell lymphoma with involved-field radiation therapy (IFRT).&quot; (Rosenbluth BD, Int J Radiat Oncol Biol Phys. 2006 Jul 15;65(4):1185-91.)
**Retrospective. 21 pts treated to 38 sites. 81% were Stage IV or relapsed. Most pts had received prior chemotherapy. IFRT, mean dose 30 Gy (range: 10.5-45 Gy), dose per fraction 150-200 cGy. 2 pts received RT as consolidative therapy after CR to chemo. 
**Mean f/u 13 mo. For 36 sites with measurable disease, overall local response of 100% (CR 64%, PR 36%). 94% with pain relief. Local progession in 34% at a median of 10 months. No significant correlation between RT dose and control. 1-yr OS 55%
**Conclusion: RT provided effective and lasting local responses in MCL patients and was associated with minimal toxicity. Radiation doses required for most lesions were relatively low and responses were noticed early in the course of treatment. Radiation therapy should be considered early in the course of relapsing, refractory, or localized MCL.


'''''Limited Stage:'''''
*'''British Columbia; 2003''' PMID 14504058 -- &quot;Limited-stage mantle-cell lymphoma.&quot; (Leitch HA, Ann Oncol. 2003 Oct;14(10):1555-61.)
**Retrospective. 26 patients. Initial therapy IFRT +/- chemo (n=17), observation or chemo (n=9)
**5-year outcome: PFS 46%, OS 70%
**Predictors: age (PFS &lt;60 83% vs. &gt;60 39%, SS), RT (PFS RT 68% vs. no RT 11%; OS 71% vs. 25%, NS)
**Conclusion: Limited-stage MCL had improved outcome with RT

==Advanced Stage==
*'''GLSG''' (Germany)
**Randomized. 122 untreated patients, advanced-stage MCL. Treated with Arm 1) CHOP vs. Arm 2) R-CHOP. Patients &lt;=65 with CR/PR second randomization to ASCT vs. IFN-alpha. Patients &gt;65 received IFN-alpha maintenance
**'''2005''' PMID 15668467 -- &quot;Immunochemotherapy with rituximab and cyclophosphamide, doxorubicin, vincristine, and prednisone significantly improves response and time to treatment failure, but not long-term outcome in patients with previously untreated mantle cell lymphoma: results of a prospective randomized trial of the German Low Grade Lymphoma Study Group (GLSG).&quot; (Lenz G, J Clin Oncol. 2005 Mar 20;23(9):1984-92.)
***Outcome: R-CHOP better for CR (34% vs. 7%, SS), and TTF (21 months vs. 14 months, SS), but no difference in PFS or OS
***Conclusion: Better response rate, but no diffference in PFS or OS

*'''SWOG; 1995''' -- PMID 7849295 -- &quot;A clinical analysis of two indolent lymphoma entities: mantle cell lymphoma and marginal zone lymphoma (including the mucosa-associated lymphoid tissue and monocytoid B-cell subcategories): a Southwest Oncology Group study. (Fisher RI, Blood. 1995 Feb 15;85(4):1075-82.)
**Retrospective. Treated with CHOP on SWOG-7204, SWOG-7426, SWOG-7713
**Outcome: median FFS 1.7 years, median OS 3 years
**Conclusion: MCL is not an indolent lymphoma, and requires innovative therapy

==Reviews==
*'''Mayo; 2005''' - PMID 16155027  &amp;mdash; &quot;Current Treatment Approaches for Mantle-Cell Lymphoma.&quot; Witzig TE et al. J Clin Oncol. Vol 23, No 26 (September 10), 2005: pp. 6409-6414.</text>
      <sha1>dpv3e6k3awmadxecgdo96abappm4zxg</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/NHL/Nodal marginal zone</title>
    <ns>0</ns>
    <id>40527</id>
    <revision>
      <id>2478123</id>
      <parentid>895105</parentid>
      <timestamp>2013-01-15T19:52:36Z</timestamp>
      <contributor>
        <username>Brim</username>
        <id>2387</id>
      </contributor>
      <comment>link to follicular</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/NHL:TOC}}

==RT dose==
See discussion at [[Radiation Oncology/NHL/Follicular#Palliation | Follicular lymphoma]]

==Reviews==
*JCO, 2005 - PMID 16155028 &amp;mdash; &quot;State-of-the-Art Therapeutics: Marginal-Zone Lymphoma.&quot; Bertoni F et al. Journal of Clinical Oncology, Vol 23, No 26 (September 10), 2005: pp. 6415-6420.</text>
      <sha1>3ttcre4bj2fukaa81m3meropkexbf9b</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/NHL/MALT</title>
    <ns>0</ns>
    <id>40528</id>
    <revision>
      <id>2685428</id>
      <parentid>2685426</parentid>
      <timestamp>2014-07-28T17:43:57Z</timestamp>
      <contributor>
        <username>Brim</username>
        <id>2387</id>
      </contributor>
      <comment>/* Radiation */ IELSG</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/NHL:TOC}}


==Overview==
*MALT is classified as an extra-nodal marginal zone lymphoma.  
*Extra-nodal marginal zone lymphomas tend to home to a certain tissue and remain localized.  Therefore, MALT lymphomas are often stage I and highly curable. 
*Pathologically, see lymphoepithelial lesions as the malignant lymphoma cells invade and destroy normal epithelium (such as glands).


==Work-Up==
*'''Tel Aviv, 2007''' (Israel) PMID 17662066 -- &quot;Diagnostic accuracy of PET/CT in patients with extranodal marginal zone MALT lymphoma.&quot; (Perry C, Eur J Haematol. 2007 Sept 79(3), 205-209)
**Prospective. 33 patients with bx-proven MALT lymphoma, evaluated with PET/CT. Sites: gastric 55%, lung 15%, orbit 12%, parotid 9%
**PET/CT: Active disease at diagnosis 55%. Sensitivity gastric 39% vs. non-gastric 75%. Advanced disease 100% vs. early stage (I-II) 42%
**Conclusion: PET/CT useful tool; sensitivity depends on stage and location

==Reviews==
*''See also reviews at [[../Nodal marginal zone#Reviews|Nodal marginal zone lymphoma]]''


==Treatment==
*''See also [[Radiation_Oncology/NHL/Follicular|Follicular lymphoma treatment]] page''


*'''JAROG; 2007''' (Japan)(2002-2004) PMID 17601683 -- &quot;A Multicenter Phase II Study of Local Radiation Therapy for Stage IEA Mucosa-Associated Lymphoid Tissue Lymphomas: A Preliminary Report From the Japan Radiation Oncology Group (JAROG).&quot; (Isobe K, Int J Radiat Oncol Biol Phys. 2007 Nov 15;69(4):1181-6. Epub 2007 Jul 2.)
**Phase II. 37 patients with MALT (orbit n=24, thyroid n=4, salivary n=4, others n=5). RT dose: if orbital or minimal residual disease 30.6 Gy, if residual tumor &lt;6cm 36 Gy, if &gt;6 cm 39.6 Gy. Median F/U 3.1 years
**Outcome: 3-year OS 100%, PFS 92%, LC 97%
**Toxicity: Late Grade 3 (cataract) 3 patients
**Conclusion: Moderate RT dose highly effective

==Gastric MALT==
===Helicobacter pylori eradication===
*Germany, 2005 - PMID 16204012 &amp;mdash; &quot;Long-Term Follow-Up of Gastric MALT Lymphoma After Helicobacter Pylori Eradication.&quot; Wündisch T et al.  J Clin Oncol. 2005 Nov 1;23(31):8018-24. 
**120 pts. Stage IE. Median f/u 75 mo. 
**5-yr OS 90%. 80% achieved CR by biopsy. 80% of CR pts remained in CR; 17% showed histologic residual dz during follow-entered a second CR; 3% of those with CR had a relapse.
===Radiation===
*'''International Extranodal Lymphoma Study Group (IELSG); 2013''' - PMID 23293112 -- &quot;Long-term outcome for gastric marginal zone lymphoma treated with radiotherapy: a retrospective, multi-centre, International Extranodal Lymphoma Study Group study.&quot; (Wirth A, Ann Oncol. 2013 May;24(5):1344-51.)
**Retrospective. Multicenter. 102 pts (58 de novo, 44 with relapse) treated with RT. Of the 44 relapsed pts: 35 previously treated with antibiotics, 9 with chemo, 8 with surgery. 61 pts treated with RT to the stomach/nodes only and 41 to whole abdomen. Median RT dose 40 Gy in 22 fractions. 
**Median f/u 7.9 yr. 10- and 15-year FFTF was 88%. 10-yr OS 70%.
**Worse outcome: large-cell component (13%) and an exophytic growth pattern (12%).
**Conclusion: &quot;Radiotherapy achieves cure for the majority of patients with low-grade GMZL, including patients who have had prior therapy&quot;

*'''Princess Margaret Hospital; 2001''' (1989-98) - PMID 11483337 -- &quot;Stage I and II MALT lymphoma: results of treatment with radiotherapy.&quot; (Tsang RW, Int J Radiat Oncol Biol Phys. 2001 Aug 1;50(5):1258-64.)
**Retrospective. 15 pts with gastric MALT, Stage I-IIE (paper includes a total of 70 pts with MALT lymphoma of various sites). 11 pts (gastric MALT) treated with RT. 1 pt treated with surgical excision only; 2 pts antibiotics only; 1 refused tx. RT dose 20-30 Gy.
**No relapses were observed in patients with stomach and thyroid lymphoma. The 5-year DFS for these patients was 93%, in contrast to 69% for patients presenting in other sites.
**Conclusion: &quot;Localized MALT lymphomas have excellent prognosis following moderate-dose RT&quot;

*'''Memorial Sloan Kettering; 1998''' - PMID 9586910 &amp;mdash; &quot;Treatment of mucosa-associated lymphoid tissue lymphoma of the stomach with radiation alone.&quot; (Schechter N, J Clin Oncol. 1998 May;16(5):1916-21.)
**Retrospective. 17 patients with stage 1-2 low-grade MALT of the stomach. RT alone to median 30 Gy (range, 28.5 to 43.5 Gy) in 1.5 Gy fractions within 4 weeks to stomach and adjacent lymph nodes. Median F/U 27 mo.
**Outcome: 100% biopsy-confirmed CR. 100% EFS at last F/U
**Toxicity: No significant side effects
**Conclusion: Low-dose RT alone is feasible and safe

==Ocular MALT==
===Chlamydophila Psittaci eradication===
*'''Extrandoal Lymphoma Study Group; 2012''' PMID 22802315 -- &quot;Chlamydophila Psittaci Eradication With Doxycycline As First-Line Targeted Therapy for Ocular Adnexae Lymphoma: Final Results of an International Phase II Trial.&quot; (Ferreri AJ, J Clin Oncol. 2012 Aug 20;30(24):2988-94. Epub 2012 Jul 16.)
**Phase II. 47 patients with ocular adnexal marginal zone lymphoma (OAMZL). Assessment of Chlamydophila psittaci (Cp), followed by treatment with doxycyline. Median F/U 3.1 years
**Outcome: Cp DNA detected in 89% of biopsies. Lymphoma regression in 65%. 5-year PFS 55%. Cp eradiaction associated with improved response (SS) and PFS (NS)
**Conclusion: Upfront doxycycline is a rational and active treatment for patients with Stage I Cp-positive OAMZL</text>
      <sha1>ni4pptkdjbc4wlp8ssqqvcwhi9pl9qu</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/NHL/DLBCL</title>
    <ns>0</ns>
    <id>40529</id>
    <revision>
      <id>2602592</id>
      <parentid>1741465</parentid>
      <timestamp>2014-01-21T18:11:07Z</timestamp>
      <contributor>
        <username>Tymish</username>
        <id>348111</id>
      </contributor>
      <comment>/* Primary Mediastinal Large B-cell */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/NHL:TOC}}


==Pathology==
*Morphology - not clinically useful
**Immunoblastic
**Centroblastic
**Anaplastic
**Multilobated
*Markers
**Improved survival
***Rb (cell cycle)
***Germinal centre (bcl-6, CD10)
**Decreased survival
***CD5 (T-cell lineage)
***HLA-I, HLA-II (immune)
***Ki-67 (proliferation)
***p53+, p21, p27, cyclin D3 (cell cycle)
***bcl-2, bax, survivin (apoptosis)
***CD44 (adhesion)
*Origin
**Germinal center of activated lymphoid follicle


==Subclassification==
*Gene profiling identified 3 separate subtypes, with different clinical behavior (5-year OS)
**&lt;u&gt;Activated B-cell&lt;/u&gt; - activation of NFkB - 30% survival
**&lt;u&gt;Germinal B-cell&lt;/u&gt; - hypermutations, REL amplification, bcl-2 translocations - 64% survival
**&lt;u&gt;Primary Mediastinal B-cell&lt;/u&gt; - 59% survival
*Mediastinal B-cell lymphoma is more closely related to nodular sclerosis subtype of Hodgkin lymphoma (clinically and by gene expression profile), than to the other types of B-cell lymphoma
*Morphologically, there is also a significant overlap with [[Radiation_Oncology/NHL/Burkitt_lymphoma|Burkitt's Lymphoma]]


*'''Charite, 2006''' (Germany) PMID 16760442 -- &quot;A biologic definition of Burkitt's lymphoma from transcriptional and genomic profiling.&quot; (Hummel M, N Engl J Med. 2006 Jun 8;354(23):2419-30.)
**Gene analysis. 220 mature aggressive B-cell lymphomas. Molecular Burkitt's lymphoma (mBL) signature developed: 58 gene set. Some patients with this signature had morphologic appearance of DLBCL
**5-year OS: mBL 75%, GCB-DLBCL 51%, ABC-DLBC 12%
**&lt;i&gt;Myc&lt;/i&gt; locus survival (mBL and DLBCL): breakpoint 15% vs. no breakpoint 44%
**Conclusion: molecular definition of Burkitt's lymphoma

*'''Lymphoma profiling project''' 
**'''2006''' PMID 16760443 -- &quot;Molecular diagnosis of Burkitt's lymphoma.&quot; (Dave SS, N Engl J Med. 2006 Jun 8;354(23):2431-42.)
***Gene analysis. 303 patients with aggressive lymphomas, 25 pathological Burkitt's. Gene profile developed. 
***8 samples submitted as DLBCL had molecular profile of Burkitt's 
***Conclusion: Gene-expression profiling is accurate to differentiate BL and DLBCL
**'''2005''' PMID 16046532 -- &quot;Diffuse large B-cell lymphoma subgroups have distinct genetic profiles that influence tumor biology and improve gene-expression-based survival prediction.&quot; (Bea S, Blood. 2005 Nov 1;106(9):3183-90.)
***ABC-DLBCL: trisomy 3, gain of 3q, gain of 18q21-q22, loss of 6q21-q22
***GCB-DLBCL: gain of 12q12
***PMBCL: gain of 9p21, gain of 2p14-p16

*'''Dana Farber, 2003''' PMID 12933571 -- &quot;The molecular signature of mediastinal large B-cell lymphoma differs from that of other diffuse large B-cell lymphomas and shares features with classical Hodgkin lymphoma.&quot; (Savage KJ, Blood. 2003 Dec 1;102(12):3871-9.)
**Gene expression profiles compared. Shared survival pathway between MBCL and HL

*'''NCI, 2002''' PMID 12075054 -- &quot;The use of molecular profiling to predict survival after chemotherapy for diffuse large-B-cell lymphoma.&quot; (Rosenwald A, N Engl J Med. 2002 Jun 20;346(25):1937-47.)
**Biopsy samples of 240 patients examined with DNA microarrays. 17 gene-set predictor developed
**Gene array independent predictor to IPS 

*'''Stanford, 2000''' PMID 10676951 -- &quot;Distinct types of diffuse large B-cell lymphoma identified by gene expression profiling.&quot; (Alizadeh AA, Nature. 2000 Feb 3;403(6769):503-11.)
**DNA microarrays to conduct a systemic characterization of gene expression
**Two molecularly distinct types: 1) Germinal Center and 2) Activated B-like
**OS significantly better for Germinal Center patients


==Primary Mediastinal Large B-cell==
*Epidemiology: 
**2% of NHL patients
**Tends to affect younger women
*Clinical presentation: 
**Rapidly growing (bulky &gt;10cm) mediastinal mass, often with respiratory symptoms
**Up to 50% can have symptoms of SVC syndrome (facial edeme, neck vein distension, upper extremity edema
*Criteria
**No clear definition for Primary Mediastinal Large B-Cell Lymphoma
**Various definitions include:
***Some: restrict only to tumors with sclerosis and clear-cell morphology or only with involved thymic tissue
***Restricted to low-stage disease or excluding extrathoracic involvement
***&quot;a [DLBCL] that either presents with disease limited to the mediastinal field or more advanced presentations with the dominant site of disease in the mediastinum&quot; (Rodriguez 1994, PMID 8001905)
***mediastinal mass of at least 5 cm with no extramediastinal mass larger than that in the mediastinum (Abou-Elella 1999, PMID 10071267)
*Pathology
**Believed to arise from thymic B-cells
**Have bcl-6 translocation, but also gain in Janus kinase (JAK-2), bcl-2 translocation absent
**Striking clinical, immunologic, and molecular similarities to Hodgkin's disease (NScHL), but cells retain B-cell differentiation markers (eg CD20), and lack Reed-Sternberg cells
*Treatment
**''Please see the [[Radiation_Oncology/NHL/Specific_sites#Primary_Mediastinal_Large_B-Cell_Lymphoma_.28PMBCL.29|Specific Sites]] section for more detail
**Some evidence that dose-intensified therapy (eg MACOP-B, VACOP-B, DA-EPOCH) may be superior to CHOP. Role of Rituxan is unclear, but magnitude of benefit probably similar to DLBCL.  Dunleavy article in [[Radiation_Oncology/NHL/Specific_sites#Primary_Mediastinal_Large_B-Cell_Lymphoma_.28PMBCL.29|Specific Sites]] section suggests the need for radiotherapy is significantly reduced with DA-EPOCH-R. 
**Many patients given consolidative RT for bulky/residual disease, but role of RT somewhat unclear
*Outcome
**Somewhat more aggressive course, despite younger age, with similar survival as DLBCL
**Rarity of relapses past 2 years

==Reviews==
*JCO 2005 - PMID 16155024 &amp;mdash; &quot;State-of-the-Art Therapeutics: Diffuse Large B-Cell Lymphoma.&quot; Coiffier B et al. Journal of Clinical Oncology, Vol 23, No 26 (September 10), 2005: pp. 6387-6393.

==Treatment==
Please see [[Radiation_Oncology/NHL/Treatment_high_grade|Aggressive lymphoma]] treatment section</text>
      <sha1>n6789qc57991xwd3975g6m1kciijz8r</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:130.238.13.40</title>
    <ns>3</ns>
    <id>40530</id>
    <revision>
      <id>231528</id>
      <timestamp>2005-09-09T18:31:22Z</timestamp>
      <contributor>
        <username>Krischik</username>
        <id>3011</id>
      </contributor>
      <comment>Got a bit lost?</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Got a bit lost? ==

I tried to answer your question on [[Wikibooks talk:Community Portal]].</text>
      <sha1>19xs68fvlwvvgssp1a8kah73o7h685n</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Behringer FCB1010 MIDI Pedal</title>
    <ns>1</ns>
    <id>40531</id>
    <revision>
      <id>672652</id>
      <parentid>480851</parentid>
      <timestamp>2006-12-04T04:07:20Z</timestamp>
      <contributor>
        <username>Monk~enwikibooks</username>
        <id>41886</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Is the Behringer FCB1010 Midi pedal interesting enough to have a book's worth of information? ==

Perhaps this book should be merged as a module into another. -[[User:Monk|Monk]] 04:07, 4 December 2006 (UTC)

== terminology ==

This document needs a &quot;Terminology&quot; section. I'll see what I can do to start it, then anyone can add terms.

steve meiers - tekrytor</text>
      <sha1>189p42juhk0uzdjxyzf42msgwgwrems</sha1>
    </revision>
  </page>
  <page>
    <title>User:V. Molotov~enwikibooks</title>
    <ns>2</ns>
    <id>40533</id>
    <revision>
      <id>2891635</id>
      <parentid>612533</parentid>
      <timestamp>2015-04-17T23:20:45Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:V. Molotov]] to [[User:V. Molotov~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/V. Molotov|V. Molotov]]&quot; to &quot;[[Special:CentralAuth/V. Molotov~enwik...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" />
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:V. Molotov~enwikibooks</title>
    <ns>3</ns>
    <id>40534</id>
    <revision>
      <id>2943643</id>
      <parentid>2891634</parentid>
      <timestamp>2015-04-19T05:37:15Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called V. Molotov. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name V. Molotov~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 23:51, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 05:37, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>4wi560a1s71w9ylgvbonld1xxhmr7ee</sha1>
    </revision>
  </page>
  <page>
    <title>User:Chovy~enwikibooks</title>
    <ns>2</ns>
    <id>40535</id>
    <revision>
      <id>2851134</id>
      <parentid>231559</parentid>
      <timestamp>2015-04-17T22:16:49Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Chovy]] to [[User:Chovy~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Chovy|Chovy]]&quot; to &quot;[[Special:CentralAuth/Chovy~enwikibooks|Chovy~enwikibooks]]&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">You can read more about me on my [http://www.chovy.com blog], or see my [http://www.apwebdesign.com/resume.html web developer resume].

You can reach me at: [mailto:apwebdesign@yahoo.com apwebdesign@yahoo.com]</text>
      <sha1>qzbk8uvbdssmy6h4378hslf1wsbwp88</sha1>
    </revision>
  </page>
  <page>
    <title>User:Mshonle/Charters</title>
    <ns>2</ns>
    <id>40536</id>
    <revision>
      <id>237604</id>
      <parentid>231638</parentid>
      <timestamp>2005-09-21T00:11:05Z</timestamp>
      <contributor>
        <username>Mshonle</username>
        <id>1957</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;nowiki&gt;{{proposed}}&lt;/nowiki&gt;

The charter process is the mechanism used to keep the development of wikibooks on track and to preemptively resolve some issues of editorial dispute.

==The Charter Process==
The steps of the charter process are as follows:
# A new, unchartered wikibook is created and placed on a chartered bookshelf.
# '''Unchartered Status Space/Time Limit''': After there are five content modules of the wikibook, or a single content module that reaches 32kbytes (i.e. the &quot;this page is getting to big&quot; limit), or after the period of 6-weeks, whichever comes first, an unchartered wikibook must have a charter. A &quot;content module&quot; is any module of the book, excluding title pages, author pages, table of contents and indexes.
# The contributors of the wikibook and all other interested parties participate in the charter creation process by creating a document that satisfies the properties of a charter (as described below). A consensus must be reached, and disputes will be resolved by favoring common sense solutions and precedence. Some disputes may be resolved by creating two or more different charters to describe different projects, so that the differing views can still both be articulated.
# '''Chartered Status''': After a charter is decided upon by all interested parties is it submitted for approval. A charter is approved if the greater Wikibooks community believes satisfies the properties of the charter. Any deficiencies that are pointed out must be resolved and revisions made before approval. The approval process should also be used to provide advice to charter writers.
# Contributors of unchartered books do not have to wait until the unchartered-status-limit passes to begin writing the charter and can submit the charter for approval even before the unchartered-status-limit.
# Any wikibooks that don't have charters and have exceeded the unchartered-status-limit shall be removed from the bookshelf and placed on an abandoned unchartered books list. Other interested parties can take on abandoned charters as their own project and try the charter submission process again.

Grandfather clauses:
# All wikibooks and shelves that were extant prior to the passing of this policy will not be subject to the unchartered-status-limit. However, progress should be made to create wikibook charters (or series-charters) for these texts. Shelve and wikibook charters of extant materials can be written concurrently but in the end must be consistent with all other rules.

==Properties of a Charter==
A charter must
# Explain what bookshelf its wikibook belongs to and explain how that wikibook satisfies that shelf's criteria. ('''Place''')
# Explain the expected audience ('''Audience''')
# Explain how the wikibook is in accordance with Wikibooks policy by stating which inclusion clause it falls under and by describing how the book will avoid any potential dangers of included prohibited or excluded content. In the approval process any voiced concerns of potential dangers must be addressed. For all warranted voiced concerns the explaination must be included in the charter itself. ('''Appropriate''')
# Provide a general goal ('''Purpose''')
# A target for what fits and doesn't ('''Scope''')
# First edition criteria ('''First Edition''')

A charter should not
# Include information that is likely to change; including chapter order, chapter listings,  or anything else where book progress would be limited by requiring changes to the charter

Here is an example charter for a programming languages computer science book:
* ''Place'': This book is part of the Computer Science bookshelf. The relevant goal from the Computer Science bookshelf that this book satisfies is the goal of creating a textbook for each course in a computer science ciriculum. This book covers the topic of programming languages, a commonly taught course.
* ''Audience'':
* ''Appropriate'': This book is permitted by Wikibooks policy because it is an instructional resource for a university-level course. This book will not cover any content related into breaking (hacking) into computer systems.
* ''Purpose'':
* ''First Edition'':

===Series Charters===
A series of wikibooks can have a single series-charter, in place of individual book charters, to coordinate tasks between books in a series. For example, a series-charter could be used to allow for a sensible progression from beginner, intermediate, to advanced books on a subject with attention to what content is appropriate for which book.

===Bookshelf Charters===
All bookshelves must themselves be chartered, to dictate the extent of their scope and to explicitly allow or disallow materials. For example, the Biology bookshelf could forbid the shelving of Creation Science.

All wikibooks that correctly follow the What is a Wikibook policy must be allowed to be put on some existing bookshelf. Thus, for example, Creation Science itself cannot be excluded by charters and it would be up to the contributors of the Philosophy, Religion, Biology or other shelves to determine the appropriate place. A Miscellaneous shelf exists for the purposes of allowing books to be shelved that are incompatible with all other shelf charters.

The development of bookshelf charters must be coordinated with each other in order to provide a usable interface and to minimize as much as possible the use of the Miscellaneous shelf.

----
A charter system would also respect the experts more, because it would prevent just anyone (or a group) coming along and making changes to a book that are counter to the (approved) charter. It's easier for an expert (e.g. an academic) to argue for and against charters than it is for them to fight against pseudo-trolls and other project hijackers. This could also be an enforced policy, which would mean charter deviations can be reverted.

Whatever the case, this sounds more like VFD/book creation policy than it does in defining what is a WikiBook. But the two can be complimentary. We might not be satisfied until we see both.</text>
      <sha1>ljjvnkfntcgvg079sf7hhd84yp193hp</sha1>
    </revision>
  </page>
  <page>
    <title>Active Server Pages/Functions and Subroutines</title>
    <ns>0</ns>
    <id>40537</id>
    <revision>
      <id>2713654</id>
      <parentid>2565803</parentid>
      <timestamp>2014-10-14T23:51:59Z</timestamp>
      <contributor>
        <ip>70.239.148.130</ip>
      </contributor>
      <comment>/* Calling Conventions */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{prognav|Active Server Pages|Conditionals and Looping|Database Access Using ADO}}

= Objectives =

In this chapter we will introduce the concepts of creating procedures.  A procedure may be a function or subroutine definition.  Once defined, a procedure can be called from anywhere in your code.  After reading this chapter, you should understand how to write your own procedure and then call that from another point in your code.

= Content =

One of the most powerful features of the Active Server Pages is the ability to create powerful procedures that can extend the scripting language.  If you are new to procedural programming, you can think of a procedure as a macro that performs a complex task.  Once defined and included in your web page, you can reference the macro in any code block you define.

For example, if you created a function to display the current date and time you could call this function with something like:

&lt;source lang=&quot;asp&quot;&gt;
 &lt;%= TodaysDate() %&gt;
&lt;/source&gt;

== What is a Function? ==

A function is a procedure that returns a value to the caller.  By &quot;caller&quot;, we mean the place in the ASP code where you invoke the procedure through a &quot;function call&quot;.  Functions are declared using the '''Function''' statement and terminated with an '''End Function''' statement.

&lt;source lang=&quot;asp&quot;&gt;
 ' a totally useless function to get the current date and time
 Function TodaysDate
 	TodaysDate = Now()
 End Function
&lt;/source&gt;

Above, we have an example of a function definition that will return the current date and time using the built-in function '''Now'''.  By assigning a value to a variable which has the same name as the function ('''TodaysDate'''), we return a value to the calling process.  There is no ''return'' statement like the PHP scripting language or in C programming.

This function can be declared anywhere in your web page and it will be made available for you to call from within anywhere in the page.  As we will see later, you can even place commonly used procedures within a Server-Side Include page so that you don't have to write duplicate procedures on multiple pages from your web site.

This function is totally useless because it's easier to just call the built-in function '''Now'''.

It is important to note that a procedure declaration like this will not do anything meaningful until it is actually called.  It simply declares a procedure which will do work '''when it is called'''.

== What is a Subroutine? ==

A subroutine is a procedure that ''does not'' return a value to the caller.  Subroutines are declared using the '''Sub''' statement and terminated with an '''End Sub''' statement.

&lt;source lang=&quot;asp&quot;&gt;
 ' a subroutine to output today's date
 Sub ShowDate
 	Response.Write(&quot;Today's Date is: &quot;)
 	Response.Write(Now())
 End Sub
&lt;/source&gt;

The subroutine call above will output text that looks like &quot;Today's Date is: Jan, 23 2004 06:43:12AM&quot; when it is called.  The location in the web page where this is output depends on where the subroutine is called.  You should call the subroutine at the exact point where you would like it to output the text.

Unlike a function declaration, you are not allowed to assign a ''return value'' to the procedure name (ShowDate).  If you attempt to use a subroutine as a function, you will receive a runtime error.  The same is true when you try to use a function as a subroutine.

== Procedure Parameters ==

Thus far, we have only looked at procedures which have no parameters.  A parameter is an ASP value which is passed to the procedure for the purpose of completing a task.  An optional parameter list is declared along with the function or subroutine by appending a comma-separated list of parameter names and enclosing this within parentheses.

&lt;source lang=&quot;asp&quot;&gt;
 ' a subroutine to say hello
 Sub SayHello(sName)
 	Response.Write &quot;Hello &quot;
 	Response.Write sName
 	Response.Write &quot;, Nice to Meet You!&quot;
 End Sub
&lt;/source&gt;

Above we have a very simple subroutine which takes a single argument.  This argument is the name of the person you want to say hello to.  When you invoke this subroutine with a call such as:

&lt;source lang=&quot;asp&quot;&gt;
 &lt;% SayHello(&quot;Bill Gates&quot;) %&gt;
&lt;/source&gt;

Your ASP page will output &quot;Hello Bill Gates, Nice to Meet You!&quot;.  In this case we pass a string literal as the argument to the subroutine.  You may also pass an ASP variable or a complex expression.

&lt;source lang=&quot;asp&quot;&gt;
 ' a subroutine to convert hours/minutes to seconds
 Function HoursToSeconds(nHours, nMinutes)
 	 HoursToSeconds = nHours * 3600 + nMinutes * 60
 End Function
&lt;/source&gt;

Finally, this example shows how multiple parameters are declared for a function.  These two values are used to compute the number of seconds from the hours and minutes.  You can see that multiple parameters are separated by a comma.  If you want to place a long list of parameters on multiple lines, you will have to use the &quot;line continuation&quot; operator which is the underscore character ('''_''').

=== Passing by Reference ===

By default, all procedure parameters are passed by reference.  This means that when you use a variable as your procedure argument, any changes to the parameter within the procedure, will be reflected in the original argument.  If you want to explicitly declare your parameter as &quot;by reference&quot;, you may use the '''ByRef''' keyword:

&lt;source lang=&quot;asp&quot;&gt;
 ' explicitly pass by reference
 Sub HelloInformal(ByRef sFullName)
 	If InStr(1, sFullName, &quot; &quot;) &gt; 0 Then
 		sFullName = Left(sFullName, InStr(1, sFullName, &quot; &quot;)-1)
 	End If
 	Response.Write &quot;Hello &quot;
 	Response.Write(sFullName)
 End Sub
&lt;/source&gt;

You need to be careful when writing and invoking procedures like these.  This procedure will actually modify the calling argument by removing everything except the first word in the argument.

Passing by reference is the '''default calling method'''.  So even if the '''ByRef''' keyword is not present, the parameter is defined as &quot;by reference&quot; by default.  It is important to remember this so that you don't fall into the trap mentioned above.

=== Passing by Value ===

The other way to pass values into your procedure is &quot;by value&quot;.  This means that a copy of the value is taken when the procedure is called.  The parameter holds a copy of the value so that any modifications to this parameter will not affect any arguments that were used by the calling process.

Parameters which should be &quot;passed by value&quot; should be declared using the '''ByVal''' prefix.  By default, all parameters are passed &quot;by reference&quot;.  If you need to pass a value &quot;by value&quot;, you ''need'' to prefix the parameter declaration with '''ByVal'''.

&lt;source lang=&quot;asp&quot;&gt;
 ' explicitly pass by value
 Sub HelloInformal(ByVal sFullName)
 	If InStr(1, sFullName, &quot; &quot;) &gt; 0 Then
 		sFullName = Left(sFullName, InStr(1, sFullName, &quot; &quot;)-1)
 	End If
 	Response.Write &quot;Hello &quot;
 	Response.Write(sFullName)
 End Sub
&lt;/source&gt;

When invoking this subroutine call, you will be guaranteed that the original argument will not be modified.  You won't have that same guarantee with the previous declaration which declares the parameter '''ByRef'''.

You should only use '''ByVal''' when it is absolutely necessary.  It is more efficient to pass parameters &quot;by reference&quot; than it is to pass them &quot;by value&quot;.  In typical use, most parameters are used as &quot;read only&quot;, so you will probably only use the '''ByVal''' keyword occasionally.

Of course, you can mix the '''ByRef''' and '''ByVal''' prefixes together on a list of multiple parameters.  Each parameter in your list can have one prefix modifying it (or none at all).

== Calling Conventions ==

When invoking a subroutine or function, you need to be aware of the different calling conventions used for each.  If you fail to follow these guidelines, you will receive a syntax error when loading the page in your browser.

Calling a function will always require you to enclose the arguments within parentheses.  Unlike subroutines, a function can be used within expressions or as an argument to another function.

&lt;source lang=&quot;asp&quot;&gt;
 ' call a function
 nSeconds = ToSeconds(2, 35)

 ' use a function call within an expression
 nSeconds = 3600 + ToSeconds(2, 35)

 ' use a function as an argument to another function
 sTime = MyFormatTime(ToSeconds(2, 35))

 ' ignore the return value for a function call
 ToSeconds(2, 35)
&lt;/source&gt;

In the last example above, you will notice we call the function but ignore the return result.  This is only useful when your function has some side effect on a global variable, or modifies a variable passed &quot;by reference&quot;.

Calling subroutines, on the other hand, requires that you ''do not'' enclose the arguments within parentheses.  The one exception to this rule is when you precede your function call with the '''Call''' keyword.  The two different invocations are shown below

&lt;source lang=&quot;asp&quot;&gt;
 ' call a subroutine (parentheses forbidden...)
 SayHello &quot;Bill Gates&quot;

 ' parentheses allowed for subroutine call using &quot;Call&quot;
 Call SayHello(&quot;Bill Gates&quot;)
&lt;/source&gt;

== Local Variables ==

Just as you can declare variables using the '''Dim''' statement in your web page, you can also declare variables for use within your procedures.  These are typically referred to as &quot;local variables&quot; because they are only available &quot;locally&quot; within the procedure declaration.  The variables declared outside of the procedures can be thought of as &quot;global variables&quot;.

You declare local variables within a procedure block just as you would a regular variable:

&lt;source lang=&quot;asp&quot;&gt;
 ' example of local variables as loop iterator
 Sub CountTo(nFinal)
 	Dim I

 	For I = 1 To nFinal
 		Response.Write &quot;count = &quot; &amp; I &amp; &quot;&amp;lt;br&amp;gt;&quot;
 	Next
 End Sub
&lt;/source&gt;

The scope of the variable '''I''' is strictly within the procedure declaration.  You won't be able to reference '''I''' outside of the procedure.  It is created when the function is called and disappears when the function finishes.

Active Server Pages allows you to reference global variables within your procedures.  Although this is not recommended because it makes your procedures less portable, there are some instances where this proves useful.

=== Variable Hiding ===

A variable may be declared &quot;locally&quot; and &quot;globally&quot; using the same name.  This is perfectly legal in ASP.  When you do this, the local variable will &quot;hide&quot; the global variable within the context of the procedure.

&lt;source lang=&quot;asp&quot;&gt;
 ' I declared globally and locally
 Dim I
 I = 5
 Response.Write &quot;I = &quot; &amp; I &amp; &quot;&amp;lt;br&amp;gt;&quot;
 CountTo 10
 Response.Write &quot;I = &quot; &amp; I &amp; &quot;&amp;lt;br&amp;gt;&quot;

 Sub CountTo(nFinal)
 	Dim I
 
 	For I = 1 To nFinal
 		Response.Write &quot;count = &quot; &amp; I &amp; &quot;&amp;lt;br&amp;gt;&quot;
 	Next
 End Sub
&lt;/source&gt;

In the example above, we have the variable '''I''' declared globally (actually the scope is the life of the web page) and locally.  When you run this sample code, you will notice that the global variable I remains unchanged after the call to '''CountTo'''.  This is because the local variable is completely separate from the global.  Changes to the local variable have no effect on global '''I'''.

Because you declared a local variable with the same name as a global one, you effectively hide the reference to the global variable.  Within the procedure '''CountTo''', there is no way to reference the global '''I'''.  While other languages provide a mechanism to access such variables, ASP does not.  One way to get around this is to either: change the name of your local variable or pass the global variable as a parameter (using a different name).

== Recursion ==

''Recursion'' refers to the practice of having a function &quot;call itself&quot; in order to perform a repetitive task.  Creating a recursive function is as simple as declaring a function that contains a call to itself.

&lt;source lang=&quot;asp&quot;&gt;
 ' A simple bubble-sort routine
 Sub BubbleSort(arrList, nSpan)
 	Dim I, vTemp

 	If nSpan = 0 Then nSpan = UBound(arrList)
 	For I = 0 To UBound(arrList) - nSpan
 		If arrList(I) &gt; arrList(I + nSpan) Then
 			vTemp = arrList(I + nSpan)
 			arrList(I + nSpan) = arrList(I)
 			arrList(I) = vTemp
 		End If
 	Next
 	If nSpan &gt; 1 Then BubbleSort arrList, nSpan-1
 End Sub
&lt;/source&gt;

As you can see on the last line of the subroutine, the bubble sort routine will call itself recursively as the span decreases by one each time.  The function will stop calling itself once the span distance reaches one.  The &quot;depth&quot; or &quot;level of recursion&quot; depends on the size of the array passed.  If you have seven elements, the procedure will call itself 6 times.

Shown below is some ASP code which will test the bubble sort routine be creating an array of seven numbers and invoking the '''BubbleSort''' procedure:

&lt;source lang=&quot;asp&quot;&gt;
 Response.Write &quot;&lt;p&gt;&quot;
 Dim arrTest, I
 arrTest = Array(8753, 5234, 434, 5234, 34, 1, 65, 123)
 For I = 0 To UBound(arrTest)
 	Response.Write &quot;arr(&quot;&amp;I&amp;&quot;) = &quot; &amp; arrTest(I) &amp; &quot;&lt;br&gt;&quot;
 Next
 	BubbleSort arrTest, 0
 Response.Write &quot;&lt;/p&gt;&quot;
 
 Response.Write &quot;&lt;p&gt;&quot;
 For I = 0 To UBound(arrTest)
 	Response.Write &quot;arr(&quot;&amp;I&amp;&quot;) = &quot; &amp; arrTest(I) &amp; &quot;&lt;br&gt;&quot;
 Next
 Response.Write &quot;&lt;/p&gt;&quot;
&lt;/source&gt;

You should notice, that we first call the procedure with a span of zero.  Code in the procedure will recognize this as a signal to initialize the span parameter with for sorting.

You should also be aware, that the bubble sort routine outlined above could easily be re-written to use no recursion at all.  A good rule-of-thumb is: if the procedure is much easier to write and maintain using recursion then go ahead and do so.

= Summary =

Procedures allow you to create reusable code &quot;macros&quot; that perform a specific task.  Functions are procedures which return a value, whereas subroutines do not.  Procedures may be declared anywhere within a page and referenced from anywhere on your page.  Output from a subroutine or function will be placed at the location where the sent to the location where the procedure is invoked.

Each procedure declaration may have an optional list of parameters.  Parameters may be declared as being passed &quot;by reference&quot; or &quot;by value&quot;.  The default parameter passing convention is &quot;by reference&quot;.  Use '''ByVal''' or '''ByRef''' to explicitly declare your procedure parameters.

= Review Questions =

* Procedures may be subroutines or functions.
* Only functions may return a value to the caller.
* '''Function''' declares a function, '''Sub''' declares a subroutine.
* Procedures may be placed anywhere on the page from which they are called.
* Commonly-used procedures may be placed in a Server-Side Include file.
* An optional parameter list may be declared after the procedure name.
* The parameter list must be enclosed in parentheses.
* Multiple parameters are separated by a comma.
* The default parameter passing convention is &quot;by reference&quot;.
* ASP variables passed &quot;by reference&quot; to a procedure may be modified.
* The default parameter passing convention is &quot;by reference&quot;.
* When calling functions, enclose the arguments in parentheses
* When calling subroutines, use no parentheses around the arguments
* Functions may be used in expressions and as arguments to functions
* Local variables may be declared inside of a procedure block.
* Local variables hide references to global (page-scoped) ones.

= Exercises =

* Write a function to compute the diameter of a circle (2 * pi * radius) with the single parameter being the radius.
* Write a function to compute the area of a rectangle (length * width) having two parameters.
* Write a subroutine to output a greeting such as: &quot;Good Morning&quot;, &quot;Good Afternoon&quot; or &quot;Good Evening&quot; based on the time-of-day.
* Re-write the bubble-sort procedure as a non-recursive function.

{{prognav|Active Server Pages|Conditionals and Looping|Database Access Using ADO}}

[[Category:Active Server Pages|Functions and Subroutines]]</text>
      <sha1>0m9hsoelkhwqh7ai5t4meomeehm2mnn</sha1>
    </revision>
  </page>
  <page>
    <title>Tok Pisin/Articles</title>
    <ns>0</ns>
    <id>40539</id>
    <revision>
      <id>961709</id>
      <parentid>540323</parentid>
      <timestamp>2007-09-08T05:43:32Z</timestamp>
      <contributor>
        <username>Lalamans</username>
        <id>62161</id>
      </contributor>
      <comment>&quot;direct article&quot; -&gt; &quot;definite article&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">=== Articles ===
Tok Pisin does not have a definite article.  The word '''ol''' can be mistaken for a definite plural article, since it can feel like it should be translated as &quot;the&quot; for instance in &quot;ol diwai&quot; meaning &quot;the trees&quot;.  However, it is merely a marker for plurality and if plurality has already been established it is not used.
&lt;br&gt;&lt;br&gt;
In Tok Pisin, the word for &quot;one&quot; '''wanpela''' is also used for the indefinite article.
&lt;br&gt;

[[Category:Tok Pisin]]</text>
      <sha1>0tzjkzqepc8yk8zjax8s0csjhcpvkcj</sha1>
    </revision>
  </page>
  <page>
    <title>C++ Programming/Programming Languages/C++/Code/Statements/Variables/Type/Data Types</title>
    <ns>0</ns>
    <id>40540</id>
    <revision>
      <id>2650021</id>
      <parentid>2362093</parentid>
      <timestamp>2014-05-08T22:28:58Z</timestamp>
      <contributor>
        <ip>50.67.251.99</ip>
      </contributor>
      <comment>/* Data types */ fixing table headings</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==== Data types ====
{| class=&quot;wikitable&quot; style=&quot;margin: 1em auto 1em auto&quot; latexfontsize=&quot;scriptsize&quot;
!Type!!Size in Bits!! Comments!!Alternate Names
|-
!colspan=4 align=center|Primitive Types
|-
|&lt;tt&gt;'''char'''&lt;/tt&gt;||align=center|≥ 8
|
* May or may not be signed,  The choice is implementation dependent.
* The fundamental memory unit is the byte.  A char is 8 bits or more, and at least big enough to contain UTF-8 or implementation's full character set, which ever is larger and any character encoding of 8 bits or less (e.g. ASCII).
* Logical and arithmetic operations outside the range 0 ←→ +127 may lack portability.
* All bits contribute to the value of the &lt;tt&gt;'''char'''&lt;/tt&gt;, i.e. there are no &quot;holes&quot; or &quot;padding&quot; bits.
* a char will represent the same values as either signed char or unsigned char as defined by the implementation.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;'''signed''' '''char'''&lt;/tt&gt;||align=center|same as &lt;tt&gt;'''char'''&lt;/tt&gt;
|
* Characters stored like for type &lt;tt&gt;'''char'''&lt;/tt&gt;.
* Can store integers in the range -128 to 127 portably&lt;sup&gt;[[#Table of Types Footnotes|&lt;nowiki&gt;[1]&lt;/nowiki&gt;]]&lt;/sup&gt;.
|align=center|&amp;mdash;
|-
|{{C++ Programming/kw|unsigned}} &lt;tt&gt;'''char'''&lt;/tt&gt;||align=center|same as &lt;tt&gt;'''char'''&lt;/tt&gt;
|
* Characters stored like for type &lt;tt&gt;'''char'''&lt;/tt&gt;.
* Can store integers in the range 0 to 255 portably.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;'''short'''&lt;/tt&gt;||align=center|≥ 16, ≥ size of &lt;tt&gt;'''char'''&lt;/tt&gt;
|
* Can store integers in the range -32767 ~ 32767 portably&lt;sup&gt;[[#Table of Types Footnotes|&lt;nowiki&gt;[2]&lt;/nowiki&gt;]]&lt;/sup&gt;.
* Used to reduce memory usage (although the resulting executable may be larger and probably slower as compared to using &lt;tt&gt;'''int'''&lt;/tt&gt;.
|align=center|&lt;tt&gt;'''short''' '''int'''&lt;/tt&gt;, &lt;tt&gt;'''signed''' '''short'''&lt;/tt&gt;, &lt;tt&gt;'''signed''' '''short''' '''int'''&lt;/tt&gt;
|-
|{{C++ Programming/kw|unsigned}} &lt;tt&gt;'''short'''&lt;/tt&gt;||align=center|same as &lt;tt&gt;'''short'''&lt;/tt&gt;
|
* Can store integers in the range 0 ~ 65535 portably.
* Used to reduce memory usage (although the resulting executable may be larger and probably slower as compared to using &lt;tt&gt;'''int'''&lt;/tt&gt;.
|align=center|{{C++ Programming/kw|unsigned}} &lt;tt&gt;'''short''' '''int'''&lt;/tt&gt;
|-
|&lt;tt&gt;'''int'''&lt;/tt&gt;||align=center|≥ 16, ≥ size of &lt;tt&gt;'''short'''&lt;/tt&gt;
|
* Represents the &quot;normal&quot; size of data the processor deals with (the word-size); this is the integral data-type used normally.
* Can store integers in the range -32767 ~ 32767 portably&lt;sup&gt;[[#Table of Types Footnotes|&lt;nowiki&gt;[2]&lt;/nowiki&gt;]]&lt;/sup&gt;.
|align=center|&lt;tt&gt;'''signed'''&lt;/tt&gt;, &lt;tt&gt;'''signed''' '''int'''&lt;/tt&gt;
|-
|{{C++ Programming/kw|unsigned}} &lt;tt&gt;'''int'''&lt;/tt&gt;||align=center|same as &lt;tt&gt;'''int'''&lt;/tt&gt;
|
* Can store integers in the range 0 ~ 65535 portably.
|align=center|{{C++ Programming/kw|unsigned}}
|-
|&lt;tt&gt;'''long'''&lt;/tt&gt;||align=center|≥ 32, ≥ size of &lt;tt&gt;'''int'''&lt;/tt&gt;
|
* Can store integers in the range -2147483647 ~ 2147483647 portably&lt;sup&gt;[[#Table of Types Footnotes|&lt;nowiki&gt;[3]&lt;/nowiki&gt;]]&lt;/sup&gt;.
|align=center|&lt;tt&gt;'''long''' '''int'''&lt;/tt&gt;, &lt;tt&gt;'''signed''' '''long'''&lt;/tt&gt;, &lt;tt&gt;'''signed''' '''long''' '''int'''&lt;/tt&gt;
|-
|{{C++ Programming/kw|unsigned}} &lt;tt&gt;'''long'''&lt;/tt&gt;||align=center|same as &lt;tt&gt;'''long'''&lt;/tt&gt;
|
* Can store integers in the range 0 ~ 4294967295 portably.
|align=center|{{C++ Programming/kw|unsigned}} &lt;tt&gt;'''long''' '''int'''&lt;/tt&gt;
|-
|&lt;tt&gt;'''bool'''&lt;/tt&gt;||align=center|≥ size of &lt;tt&gt;'''char'''&lt;/tt&gt;, ≤ size of &lt;tt&gt;'''long'''&lt;/tt&gt;
|
* Can store the constants &lt;tt&gt;'''true'''&lt;/tt&gt; and &lt;tt&gt;'''false'''&lt;/tt&gt;.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;'''wchar_t'''&lt;/tt&gt;||align=center|≥ size of &lt;tt&gt;'''char'''&lt;/tt&gt;, ≤ size of &lt;tt&gt;'''long'''&lt;/tt&gt;
|
* Signedness is implementation-defined.
* Can store &quot;wide&quot; (multi-byte) characters, which include those stored in a &lt;tt&gt;'''char'''&lt;/tt&gt; and probably many more, depending on the implementation.
* Integer operations are better not performed with &lt;tt&gt;'''wchar_t'''&lt;/tt&gt;s. Use &lt;tt&gt;'''int'''&lt;/tt&gt; or {{C++ Programming/kw|unsigned}} &lt;tt&gt;'''int'''&lt;/tt&gt; instead.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;'''float'''&lt;/tt&gt;||align=center|≥ size of &lt;tt&gt;'''char'''&lt;/tt&gt;
|
* Used to reduce memory usage when the values used do not vary widely.
* The floating-point format used is implementation defined and need not be the IEEE single-precision format.
* {{C++ Programming/kw|unsigned}} cannot be specified.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;'''double'''&lt;/tt&gt;||align=center|≥ size of &lt;tt&gt;'''float'''&lt;/tt&gt;
|
* Represents the &quot;normal&quot; size of data the processor deals with; this is the floating-point data-type used normally.
* The floating-point format used is implementation defined and need not be the IEEE double-precision format.
* {{C++ Programming/kw|unsigned}} cannot be specified.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;'''long''' '''double'''&lt;/tt&gt;||align=center|≥ size of &lt;tt&gt;'''double'''&lt;/tt&gt;
|
* {{C++ Programming/kw|unsigned}} cannot be specified.
|align=center|&amp;mdash;
|-
!colspan=4 align=center|User Defined Types
|-
|&lt;tt&gt;'''struct'''&lt;/tt&gt; or &lt;tt&gt;'''class'''&lt;/tt&gt;||align=center|≥ sum of size of each member 
|
* Default access modifier for &lt;tt&gt;'''struct'''&lt;/tt&gt;s for members and base classes is &lt;tt&gt;'''public'''&lt;/tt&gt;.
* For &lt;tt&gt;'''class'''&lt;/tt&gt;es the default is &lt;tt&gt;'''private'''&lt;/tt&gt;.
* The [[C++ Programming/Programming Languages/C++/Code/Style Conventions|convention]] is to use &lt;tt&gt;'''struct'''&lt;/tt&gt; only for  Plain Old Data types.
* Said to be a ''compound type''.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;'''union'''&lt;/tt&gt;||align=center|≥ size of the largest member
|
* Default access modifier for members and base classes is &lt;tt&gt;'''public'''&lt;/tt&gt;.
* Said to be a ''compound type''.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;'''enum'''&lt;/tt&gt;||align=center|≥ size of &lt;tt&gt;'''char'''&lt;/tt&gt;
|
* Enumerations are a distinct type from &lt;tt&gt;'''int'''&lt;/tt&gt;s. &lt;tt&gt;int&lt;/tt&gt;s are not implicitly converted to &lt;tt&gt;'''enum'''&lt;/tt&gt;s, unlike in C. Also ++/-- cannot be applied to &lt;tt&gt;'''enum'''&lt;/tt&gt;s unless overloaded.
|align=center|&amp;mdash;
|-
|{{C++ Programming/kw|typedef}}||align=center|same as the type being given a name
|
* Syntax similar to a storage class like &lt;tt&gt;'''static'''&lt;/tt&gt;, {{C++ Programming/kw|register}} or &lt;tt&gt;'''extern'''&lt;/tt&gt;.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;'''template'''&lt;/tt&gt;||align=center|≥ size of &lt;tt&gt;'''char'''&lt;/tt&gt;
|align=center|&amp;mdash;
|align=center|&amp;mdash;
|-
!colspan=4 align=center|Derived Types&lt;sup&gt;[[#Table of Types Footnotes|&lt;nowiki&gt;[4]&lt;/nowiki&gt;]]&lt;/sup&gt;
|-
|&lt;tt&gt;''type''&amp;&lt;/tt&gt;&lt;br&gt;&lt;br&gt;(reference)||align=center|≥ size of &lt;tt&gt;'''char'''&lt;/tt&gt;
|
* References (unless optimized out) are usually internally implemented using pointers and hence they ''do'' occupy extra space separate from the locations they refer to.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;''type''*&lt;/tt&gt;&lt;br&gt;&lt;br&gt;(pointer)||align=center|≥ size of &lt;tt&gt;'''char'''&lt;/tt&gt;
|
* &lt;tt&gt;0&lt;/tt&gt; always represents the null pointer (an address where no data can be placed), irrespective of what bit sequence represents the value of a null pointer.
* Pointers to different types may have different representations, which means they could also be of different sizes. So they are not convertible to one another.
* Even in an implementation which guarantees all data pointers to be of the same size, function pointers and data pointers are in general incompatible with each other.
* For functions taking variable number of arguments, the arguments passed must be of appropriate type, so even &lt;tt&gt;0&lt;/tt&gt; must be cast to the appropriate type in such function-calls.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;''type'' [''integer'']&lt;/tt&gt;&lt;br&gt;&lt;br&gt;(array)||align=center|≥ &lt;tt&gt;''integer''&lt;/tt&gt; &amp;times; size of &lt;tt&gt;''type''&lt;/tt&gt;
|
* The brackets (&lt;tt&gt;[]&lt;/tt&gt;) ''follow'' the identifier name in a declaration.
* In a declaration which also initializes the array (including a function parameter declaration), the size of the array (the ''integer'') can be omitted.
* &lt;tt&gt;''type'' []&lt;/tt&gt; is not the same as &lt;tt&gt;''type''*&lt;/tt&gt;. Only under some circumstances one can be converted to the other.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;''type'' (''comma-delimited list of types/declarations'')&lt;/tt&gt;&lt;br&gt;&lt;br&gt;(function)||align=center|&amp;mdash;
|
* The parentheses (&lt;tt&gt;()&lt;/tt&gt;) ''follow'' the identifier name in a declaration, e.g. a 2-arg function pointer: &lt;tt&gt;'''int''' (* fptr) ('''int''' arg1, '''int''' arg2)&lt;/tt&gt;.
* Functions declared without any storage class are &lt;tt&gt;'''extern'''&lt;/tt&gt;.
|align=center|&amp;mdash;
|-
|&lt;tt&gt;''type'' ''aggregate_type''::*&lt;/tt&gt;&lt;br&gt;&lt;br&gt;(member pointer)||align=center|≥ size of &lt;tt&gt;'''char'''&lt;/tt&gt;
|
* &lt;tt&gt;0&lt;/tt&gt; always represents the null pointer (a value which does not point to any member of the aggregate type), irrespective of what bit sequence represents the value of a null pointer.
* Pointers to different types may have different representations, which means they could also be of different sizes. So they are not convertible to one another.
|align=center|&amp;mdash;
|}

{|
|colspan=3|&lt;sup&gt;[1]&lt;/sup&gt; -128 can be stored in two's-complement machines (i.e. almost all machines in existence).  In other memory models (eg. 1's complement) a smaller range is possible, eg -127 ←→ +127.
|-
|colspan=3|&lt;sup&gt;[2]&lt;/sup&gt; -32768 can be stored in two's-complement machines (i.e. most machines in existence).
|-
|colspan=3|&lt;sup&gt;[3]&lt;/sup&gt; -2147483648 can be stored in two's-complement machines (i.e. most machines in existence).
|-
|&lt;sup&gt;[4]&lt;/sup&gt; The precedences in a declaration are:
|&lt;tt&gt;[]&lt;/tt&gt;, &lt;tt&gt;()&lt;/tt&gt; (left associative)			||&amp;mdash; Highest
|-
|
|&lt;tt&gt;&amp;&lt;/tt&gt;, &lt;tt&gt;*&lt;/tt&gt;, &lt;tt&gt;::*&lt;/tt&gt; (right associative)	||&amp;mdash; Lowest
|}

{{TODO|Add &lt;tt&gt;'''long long'''&lt;/tt&gt; to the table, now part of the standard.}}

{{NOTE|Most compilers will support the &lt;tt&gt;'''long long'''&lt;/tt&gt; and {{C++ Programming/kw|unsigned}} &lt;tt&gt;'''long long'''&lt;/tt&gt; data types. These new types were only adopted into the standard in 2011 and have been standard in C since 1999.

Before C++98, the char type was undefined in regard to its ability to represent negative numbers. This information is important if you are using old compilers or reviewing old code.}}  
{{BookCat}}
&lt;noinclude&gt;{{displaytitle|title=C++ Programming: Language Default Data Types}}&lt;/noinclude&gt;</text>
      <sha1>4sedcuf0zxlubr1jt2faeqlyxv3aivu</sha1>
    </revision>
  </page>
  <page>
    <title>C++ Programming/Standard Headers</title>
    <ns>0</ns>
    <id>40544</id>
    <revision>
      <id>2507174</id>
      <parentid>2507173</parentid>
      <timestamp>2013-03-30T00:51:04Z</timestamp>
      <contributor>
        <username>Muscles</username>
        <id>903614</id>
      </contributor>
      <comment>/* Standard Headers */ rebalance columns</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;noinclude&gt;&lt;!-- Also Included in the Preprocessor chapter --&gt;
== Standard Headers ==
&lt;/noinclude&gt;
&lt;center&gt;
{| style=&quot;margin:1px; border:1px solid black; background:white; border-spacing:0px&quot;
 ! colspan=&quot;3&quot; style=&quot;padding-top:5px&quot; | Standard Template Library
 |-
 |
* &lt;tt&gt;[[C++ Programming/headers#algorithm|algorithm]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#array|array]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#atomic|atomic]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#bitset|bitset]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#chrono|chrono]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#codecvt|codecvt]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#complex|complex]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#condition_variable|condition_variable]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#deque|deque]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#exception|exception]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#forward_list|forward_list]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#fstream|fstream]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#functional|functional]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#future|future]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#initializer_list|initializer_list]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#iomanip|iomanip]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#ios|ios]]&lt;/tt&gt;
 | 
* &lt;tt&gt;[[C++ Programming/headers#iosfwd|iosfwd]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#iostream|iostream]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#istream|istream]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#iterator|iterator]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#limits|limits]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#list|list]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#locale|locale]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#map|map]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#memory|memory]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#mutex|mutex]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#new|new]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#numeric|numeric]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#ostream|ostream]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#queue|queue]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#random|random]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#ratio|ratio]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#regex|regex]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#set|set]]&lt;/tt&gt;
|
* &lt;tt&gt;[[C++ Programming/headers#sstream|sstream]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#stack|stack]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#stdexcept|stdexcept]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#streambuf|streambuf]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#string|string]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#strstream|strstream]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#system_error|system_error]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#thread|thread]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#tuple|tuple]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#type_traits|type_traits]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#typeinfo|typeinfo]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#typeindex|typeindex]]&lt;ref name=cpp11 group=&quot;c++11&quot;&gt;In C++11 only&lt;/ref&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#unordered_map|unordered_map]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#unordered_set|unordered_set]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#utility|utility]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#valarray|valarray]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#vector|vector]]&lt;/tt&gt;
 |}

'''and the '''

{| style=&quot;margin: 1px; border: 1px solid black; background: white; border-spacing: 0px&quot;
 ! colspan=&quot;3&quot; style=&quot;padding-top:5px&quot; | Standard C Library
 |-
 |
* &lt;tt&gt;[[C++ Programming/headers#cassert|cassert]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#ccomplex|ccomplex]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cctype|cctype]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cerrno|cerrno]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cfenv|cfenv]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cfloat|cfloat]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cinttypes|cinttypes]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#ciso646|ciso646]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#climits|climits]]&lt;/tt&gt;
 |
* &lt;tt&gt;[[C++ Programming/headers#clocale|clocale]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cmath|cmath]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#csetjmp|csetjmp]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#csignal|csignal]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cstdalign|cstdalign]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cstdarg|cstdarg]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cstdbool|cstdbool]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cstddef|cstddef]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cstdint|cstdint]]&lt;/tt&gt;
 |
* &lt;tt&gt;[[C++ Programming/headers#cstdio|cstdio]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cstdlib|cstdlib]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cstring|cstring]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#ctgmath|ctgmath]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#ctime|ctime]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cuchar|cuchar]]&lt;ref name=cpp11 group=&quot;c++11&quot;/&gt;&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cwchar|cwchar]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cwctype|cwctype]]&lt;/tt&gt;
* &lt;tt&gt;[[C++ Programming/headers#cwstring|cwstring]]&lt;/tt&gt;
 |}
&lt;/center&gt;
{{reflist|group=&quot;c++11&quot;}}
Everything inside C++'s standard library is kept in the &lt;tt&gt;std::&lt;/tt&gt; namespace.

Old compilers may include headers with a &lt;tt&gt;.h&lt;/tt&gt; suffix (e.g. the non-standard &lt;tt&gt;&lt;iostream.h&gt;&lt;/tt&gt; vs. the standard &lt;tt&gt;&lt;iostream&gt;&lt;/tt&gt;) instead of the standard headers. These names were common before the standardization of C++ and some compilers still include these headers for backwards compatibility. Rather than using the &lt;tt&gt;std::&lt;/tt&gt; namespace, these older headers pollute the global namespace and may otherwise only implement the standard in a limited way.

Some vendors use the [[w:Silicon Graphics|SGI]] [[C++ Programming/STL|STL]] headers. This was the first implementation of the standard template library.

&lt;center&gt;
{| style=&quot;margin: 1px; border: 1px solid black; background: white; border-spacing: 0px&quot; latexfontsize=&quot;scriptsize&quot;
 ! colspan=&quot;3&quot; style=&quot;padding-top:5px&quot; | Non-standard but somewhat common C++ libraries
 |-
 |
* &lt;tt&gt;[[C++ Programming/headers#stdiostream.h|stdiostream.h]]&lt;ref&gt;Streams based on FILE* from stdio.h.&lt;/ref&gt;&lt;/tt&gt;
 |
* &lt;tt&gt;[[C++ Programming/headers#stream.h|stream.h]]&lt;ref&gt;Precursor to iostream. Old stream library mostly included for backwards compatibility even with old compilers.&lt;/ref&gt;&lt;/tt&gt;
 |
* &lt;tt&gt;[[C++ Programming/headers#strstream.h|strstream.h]]&lt;ref&gt;Uses '''char'''* whereas sstream uses string. Prefer the standard library sstream.&lt;/ref&gt;&lt;/tt&gt;
 |}
&lt;/center&gt;

&lt;references/&gt;

{{BookCat}}
&lt;noinclude&gt;{{displaytitle|title=C++ Programming: Language Standard Headers}}&lt;/noinclude&gt;</text>
      <sha1>ohv6ypsz7co561szxvd6uob7vz2q2vv</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Think Simple</title>
    <ns>0</ns>
    <id>40546</id>
    <revision>
      <id>1517741</id>
      <parentid>530050</parentid>
      <timestamp>2009-06-03T03:52:45Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Yes, think simple, but not simply. 

Most beginner scripts are too complicated. 

It is more difficult to write something simple and elegant. 

* Strive to keep your code simple. 

* Treat every script as if it were unfinished until you have removed all unnecessary code and data. 

Small, simple scripts are easier to read and maintain.

&quot;A designer knows he has achieved perfection not when there is nothing left to add, 
but when there is nothing left to take away.&quot; -Antoine de Saint-Exupery

For example to return the days in a month you '''could''' write something like:

 data-block: [
    &quot;January&quot; 31 &quot;February&quot; 28 &quot;March&quot; 31 
    &quot;April&quot; 30 &quot;May&quot; 31 &quot;June&quot; 30 
    &quot;July&quot; 31 &quot;August&quot; 31 &quot;September&quot; 30 
    &quot;October&quot; 31 &quot;November&quot; 30 &quot;December&quot; 31
 ]
 month: {June}
 print first skip find data-block month 1

It works .... but is a bit long for what it provides.

* you don't need to hold the months as strings

* data-block is not a very descriptive name. Maybe ''days-in-month'' would be better

* the REBOL path notation makes the navigation to the answer direct so you don't need to use the '''find''' and worry about where you are in the series after you find the value you sought

* you don't need to define variables like 'month' for values that can be accessed directly


This should be easier to follow and maintain:

 days-in-month: [
   January 31 February 28 March 31 
   April 30 May 31 June 30 
   July 31 August 31 September 30 
   October 31 November 30 December 31
 ]
 print days-in-month/June 

Or we don't need to define a variable for the month block:


  print select [
   January 31 February 28 March 31 
   April 30 May 31 June 30 
   July 31 August 31 September 30 
   October 31 November 30 December 31
  ] 'June

Now you might decide to make this a function so that it can be re-used or you might have that sneaking suspicion that because you needed this function someone else has already written it.

If you decide to make it a function, you now have the ability to add the leap-year decision.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>q9myka1s4bx1er2swgdfmf6ujd0h2ug</sha1>
    </revision>
  </page>
  <page>
    <title>C++ Programming/Operators Table</title>
    <ns>0</ns>
    <id>40549</id>
    <revision>
      <id>2310378</id>
      <parentid>2310374</parentid>
      <timestamp>2012-04-21T11:04:05Z</timestamp>
      <contributor>
        <username>Panic2k4</username>
        <id>2865</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">===Table of operators===
Operators in the same group have the same '''precedence''' and the order of evaluation is decided by the '''associativity''' (''left-to-right'' or ''right-to-left''). Operators in a preceding group have ''higher'' precedence than those in a subsequent group.

{{NOTE|Binding of operators actually cannot be completely described by &quot;precedence&quot; rules, and as such this table is an approximation.  Correct understanding of the rules requires an understanding of the grammar of expressions.}}

&lt;center&gt;
{| cellspacing=5 class=&quot;wikitable&quot; latexfontsize=&quot;scriptsize&quot;
!Operators!!Description!!Example Usage!!Associativity
|-
!colspan=3 align=center|Scope Resolution Operator
|rowspan=3 align=center|&amp;mdash;
|-
|&lt;tt&gt;::&lt;/tt&gt;||unary scope resolution operator&lt;br&gt;''for globals''||&lt;tt&gt;::NUM_ELEMENTS&lt;/tt&gt;
|-
|&lt;tt&gt;::&lt;/tt&gt;||binary scope resolution operator&lt;br&gt;''for class and {{C++ Programming/kw|namespace}} members''||&lt;tt&gt;std::cout&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Function Call, Member Access, Post-Increment/Decrement Operators, RTTI and C++ Casts
|rowspan=10|Left to right
|-
|&lt;tt&gt;()&lt;/tt&gt;||function call operator||&lt;tt&gt;swap (x, y)&lt;/tt&gt;
|-
|&lt;tt&gt;[]&lt;/tt&gt;||array index operator||&lt;tt&gt;arr [i]&lt;/tt&gt;
|-
|&lt;tt&gt;.&lt;/tt&gt;||member access operator&lt;br&gt;''for an object of class/union type&lt;br&gt;or a reference to it''||&lt;tt&gt;obj.member&lt;/tt&gt;
|-
|&lt;tt&gt;-&gt;&lt;/tt&gt;||member access operator&lt;br&gt;''for a pointer to an object of&lt;br&gt;class/union type''||&lt;tt&gt;ptr-&gt;member&lt;/tt&gt;
|-
|&lt;tt&gt;++ --&lt;/tt&gt;||post-increment/decrement operators||&lt;tt&gt;num++&lt;/tt&gt;
|-
|&lt;tt&gt;'''typeid'''()&lt;/tt&gt;||run time type identification operator&lt;br&gt;''for an object or type''||&lt;tt&gt;'''typeid''' (std::cout)&lt;br /&gt;&lt;tt&gt;'''typeid''' (std::iostream)&lt;/tt&gt;
|-
|{{C++ Programming/kw|static_cast}}&lt;tt&gt;&lt;&gt;()&lt;/tt&gt;&lt;br/&gt;{{C++ Programming/kw|dynamic_cast}}&lt;tt&gt;&lt;&gt;()&lt;/tt&gt;&lt;br/&gt;{{C++ Programming/kw|const_cast}}&lt;tt&gt;&lt;&gt;()&lt;/tt&gt;&lt;br/&gt;{{C++ Programming/kw|reinterpret_cast}}&lt;tt&gt;&lt;&gt;()&lt;/tt&gt;
|C++ style cast operators&lt;br&gt;for compile-time type conversion&lt;br&gt;&lt;small&gt;''See [[C++ Programming/Programming Languages/C++/Code/Statements/Variables/Type Casting|Type Casting]] for more info''&lt;/small&gt;
|{{C++ Programming/kw|static_cast}}&lt;tt&gt;&lt;'''float'''&gt; (i)&lt;/tt&gt;&lt;br/&gt;&lt;tt&gt;{{C++ Programming/kw|dynamic_cast}}&lt;std::istream&gt; (stream)&lt;/tt&gt;&lt;br/&gt;{{C++ Programming/kw|const_cast}}&lt;tt&gt;&lt;'''char'''*&gt; (&quot;Hello, World!&quot;)&lt;/tt&gt;&lt;br/&gt;{{C++ Programming/kw|reinterpret_cast}}&lt;tt&gt;&lt;'''const''' '''long'''*&gt; (&quot;C++&quot;)&lt;/tt&gt;
|-
|rowspan=2|&lt;tt&gt;''type''()&lt;/tt&gt;||functional cast operator&lt;br&gt;''(''{{C++ Programming/kw|static_cast}}'' is preferred&lt;br&gt;for conversion to a primitive type)''
|&lt;tt&gt;'''float''' (i)&lt;/tt&gt;
|-
|''also used as a constructor call&lt;br&gt;for creating a temporary object, esp.&lt;br&gt;of a class type''||&lt;tt&gt;std::string (&quot;Hello, world!&quot;, 0, 5)&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Unary Operators
|rowspan=11|Right to left
|-
|&lt;tt&gt;!&lt;/tt&gt;, '''not'''||logical not operator||&lt;tt&gt;!eof_reached&lt;/tt&gt;
|-
|&lt;tt&gt;~&lt;/tt&gt;, '''compl'''||bitwise not operator||&lt;tt&gt;~mask&lt;/tt&gt;
|-
|&lt;tt&gt;+ -&lt;/tt&gt;||unary plus/minus operators||&lt;tt&gt;-num&lt;/tt&gt;
|-
|&lt;tt&gt;++ --&lt;/tt&gt;||pre-increment/decrement operators||&lt;tt&gt;++num&lt;/tt&gt;
|-
|&lt;tt&gt;&amp;&lt;/tt&gt;, '''bitand'''||address-of operator||&lt;tt&gt;&amp;data&lt;/tt&gt;
|-
|&lt;tt&gt;*&lt;/tt&gt;||indirection operator||&lt;tt&gt;*ptr&lt;/tt&gt;
|-
|&lt;tt&gt;'''new'''&lt;/tt&gt;&lt;br /&gt;&lt;tt&gt;'''new'''[]&lt;/tt&gt;&lt;br/&gt;&lt;tt&gt;'''new'''()&lt;/tt&gt;&lt;br /&gt;&lt;tt&gt;'''new'''()[]&lt;/tt&gt;
|new operators&lt;br&gt;''for single objects or arrays''
|&lt;tt&gt;'''new''' std::string (5, '*')&lt;/tt&gt;&lt;br /&gt;&lt;tt&gt;'''new''' '''int''' [100]&lt;/tt&gt;&lt;br /&gt;&lt;tt&gt;'''new''' (raw_mem) '''int'''&lt;br /&gt;&lt;tt&gt;&lt;tt&gt;'''new''' (arg1, arg2) '''int''' [100]&lt;/tt&gt;
|-
|&lt;tt&gt;'''delete'''&lt;/tt&gt;&lt;br /&gt;&lt;tt&gt;'''delete'''[]&lt;/tt&gt;||delete operator&lt;br&gt;''for pointers to single objects or arrays''||&lt;tt&gt;'''delete''' ptr&lt;/tt&gt;&lt;br /&gt;&lt;tt&gt;'''delete'''[] arr&lt;/tt&gt;
|-
|{{C++ Programming/kw|sizeof}}&lt;br/&gt;&lt;tt&gt;{{C++ Programming/kw|sizeof}}()&lt;/tt&gt;||{{C++ Programming/kw|sizeof}} operator &lt;br/&gt;''for expressions or types''||{{C++ Programming/kw|sizeof}} &lt;code&gt;123&lt;/code&gt;&lt;br/&gt;{{C++ Programming/kw|sizeof}} &lt;code&gt;('''int''')&lt;/code&gt;
|-
|&lt;tt&gt;(''type'')&lt;/tt&gt;||C-style cast operator ''(deprecated)''||&lt;tt&gt;('''float''')i&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Member Pointer Operators
|rowspan=3|Right to left
|-
|&lt;tt&gt;.*&lt;/tt&gt;||member pointer access operator&lt;br&gt;''for an object of class/union type&lt;br&gt;or a reference to it''||&lt;tt&gt;obj.*memptr&lt;/tt&gt;
|-
|&lt;tt&gt;-&gt;*&lt;/tt&gt;||member pointer access operator&lt;br&gt;''for a pointer to an object of&lt;br&gt;class/union type''||&lt;tt&gt;ptr-&gt;*memptr&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Multiplicative Operators
|rowspan=2|Left to right
|-
|&lt;tt&gt;* / %&lt;/tt&gt;||multiplication, division and&lt;br&gt;modulus operators||&lt;tt&gt;celsius_diff * 9 / 5&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Additive Operators
|rowspan=2|Left to right
|-
|&lt;tt&gt;+ -&lt;/tt&gt;||addition and subtraction operators||&lt;tt&gt;end - start + 1&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Bitwise Shift Operators
|rowspan=2|Left to right
|-
|&lt;tt&gt;&lt;&lt;&lt;/tt&gt;&lt;br /&gt;&lt;tt&gt;&gt;&gt;&lt;/tt&gt;||left and right shift operators||&lt;tt&gt;bits &lt;&lt; shift_len&lt;/tt&gt;&lt;br /&gt;&lt;tt&gt;bits &gt;&gt; shift_len&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Relational Inequality Operators
|rowspan=2|Left to right
|-
|&lt;tt&gt;&lt; &gt; &lt;= &gt;=&lt;/tt&gt;||less-than, greater-than, less-than or&lt;br&gt;equal-to, greater-than or equal-to||&lt;tt&gt;i &lt; num_elements&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Relational Equality Operators
|rowspan=2|Left to right
|-
|&lt;tt&gt;== !=&lt;/tt&gt;, '''not_eq'''||equal-to, not-equal-to||&lt;tt&gt;choice != 'n'&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Bitwise And Operator
|rowspan=2|Left to right
|-
|&lt;tt&gt;&amp;&lt;/tt&gt;, '''bitand'''|| ||&lt;tt&gt;bits &amp; clear_mask_complement&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Bitwise Xor Operator
|rowspan=2|Left to right
|-
|&lt;tt&gt;^&lt;/tt&gt;, '''xor'''|| ||&lt;tt&gt;bits ^ invert_mask&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Bitwise Or Operator
|rowspan=2|Left to right
|-
||&lt;tt&gt;|&lt;/tt&gt;, '''bitor'''|| |||&lt;tt&gt;bits | set_mask&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Logical And Operator
|rowspan=2|Left to right
|-
|&lt;tt&gt;&amp;&amp;&lt;/tt&gt;, '''and'''|| ||&lt;tt&gt;arr != 0 &amp;&amp; arr-&gt;len != 0&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Logical Or Operator
|rowspan=2|Left to right
|-
|&lt;tt&gt;&lt;nowiki&gt;||&lt;/nowiki&gt;&lt;/tt&gt;, '''or'''|| ||&lt;tt&gt;&lt;nowiki&gt;arr == 0 || arr-&gt;len == 0&lt;/nowiki&gt;&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Conditional Operator
|rowspan=2|Right to left
|-
|&lt;tt&gt;?:&lt;/tt&gt;|| ||&lt;tt&gt;size &gt;= 0 ? size : 0&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Assignment Operators
|rowspan=3|Right to left
|-
|&lt;tt&gt;=&lt;/tt&gt;||assignment operator||&lt;tt&gt;i = 0&lt;/tt&gt;
|-
|&lt;tt&gt;+= -= *= /= %=&lt;/tt&gt;&lt;br&gt;&lt;tt&gt;&amp;=&lt;/tt&gt;, '''and_eq'''&lt;br&gt;&lt;nowiki&gt;|=&lt;/nowiki&gt;, '''or_eq'''&lt;br&gt;&lt;tt&gt;^=&lt;/tt&gt;, '''xor_eq''' &lt;tt&gt;&lt;&lt;= &gt;&gt;=&lt;/tt&gt;
|shorthand assignment operators&lt;br&gt;''(''&lt;tt&gt;''foo'' op= ''bar''&lt;/tt&gt;'' represents&lt;br&gt;''&lt;tt&gt;''foo'' = ''foo'' op ''bar''&lt;/tt&gt;'')''||&lt;tt&gt;num /= 10&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Exceptions
|rowspan=2 align=center|&amp;mdash;
|-
|&lt;tt&gt;'''throw'''&lt;/tt&gt;|| ||&lt;tt&gt;'''throw''' &quot;Array index out of bounds&quot;&lt;/tt&gt;
|-
|colspan=4|&lt;br&gt;
|-
!colspan=3 align=center|Comma Operator
|rowspan=2|Left to right
|-
|&lt;tt&gt;,&lt;/tt&gt;|| ||&lt;tt&gt;i = 0, j = i + 1, k = 0&lt;/tt&gt;
|}
&lt;/center&gt;

[[Category:C++ Programming|{{SUBPAGENAME}}]]
&lt;noinclude&gt;{{displaytitle|title=C++ Programming: Language Default Operators}}&lt;/noinclude&gt;</text>
      <sha1>lee3e7oybzn3l2j2t1e2xbfy0th3czd</sha1>
    </revision>
  </page>
  <page>
    <title>C++ Programming/Programming Languages/C++</title>
    <ns>0</ns>
    <id>40552</id>
    <revision>
      <id>2991100</id>
      <parentid>2991098</parentid>
      <timestamp>2015-09-09T03:30:32Z</timestamp>
      <contributor>
        <ip>70.67.193.151</ip>
      </contributor>
      <comment>/* History and standardization */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{TOC right}}
== Introducing C++ ==
[[Image:C plus plus.svg|35px|left]](pronounced &quot;see plus plus&quot;) is a ''general-purpose'', ''statically typed'', ''free-form'', ''multi-paradigm'' '''''[[C++ Programming/Programming Languages|programming language]]''''' supporting procedural programming, data abstraction, and generic programming. If these concepts are unfamiliar, do not worry, they will be introduced in subsequent sections.  During the [[w:1990s|1990s]] '''C++''' grew to become one of the most popular computer programming languages, a position that it still hold today ([http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html Tiobe  rankings]).

=== History and standardization ===
[[Image:BjarneStroustrup.jpg|300px|right|Photo of Bjarne Stroustrup, creator of the programming language C++.]]
[[w:Bjarne Stroustrup|Bjarne Stroustrup]], a Computer Scientist from [[w:Bell Labs|Bell Labs]], was the designer and original implementer of '''C++''' (originally named &quot;C with Classes&quot;) during the 1980s as an enhancement to the [[Subject:C programming language|C programming language]]. Enhancements started with the addition of [[C++ Programming/Programming Languages/Paradigms#Object-oriented_programming|object-oriented]] concepts like [[C++ Programming/Classes|classes]], followed by, among many features, [[C++ Programming/Programming Languages/Paradigms/Polymorphism|virtual functions]], [[C++ Programming/Operators/Operator Overloading|operator overloading]], [[C++ Programming/Programming Languages/Paradigms/Inheritance|multiple inheritance]], [[C++ Programming/Templates|templates]], and [[C++ Programming/Exception Handling|exception handling]]. These and other features are covered in detail in this book.

The '''C++ programming language''' is a standard recognized by the [[w:American National Standards Institute|ANSI]] (The American National Standards Institute), BSI (The British Standards Institute), DIN (The German national standards organization), and several other national standards bodies, and was ratified in 1998 by the ISO (The International Standards Organization) as ''[[w:ISO/IEC 14882|ISO/IEC 14882]]:1998'', consists of two parts: the Core Language and the Standard Library; the latter includes the [[C++ Programming/STL|Standard Template Library]] and the [[C++ Programming/Code/Standard C Library|Standard C Library]] (ANSI C 89).

Features introduced in '''C++''' include declarations as statements, function-like casts, &lt;code&gt;new&lt;/code&gt;/&lt;code&gt;delete&lt;/code&gt;, &lt;tt&gt;bool&lt;/tt&gt;, reference types, &lt;tt&gt;const&lt;/tt&gt;, {{C++ Programming/kw|inline}} functions, default arguments, function overloading, [[C++ Programming/Programming Languages/C++/Code/Statements/Scope/Namespaces|namespaces]], classes (including all class-related features such as inheritance, member functions, virtual functions, abstract classes, and constructors), operator overloading, templates, the &lt;code&gt;::&lt;/code&gt; operator, exception handling, run-time type identification, and more type checking in several cases. Comments starting with two slashes (&quot;&lt;tt&gt;//&lt;/tt&gt;&quot;) were originally part of [[w:BCPL|BCPL]], and were reintroduced in '''C++'''. Several features of C++ were later adopted by C, including &lt;code&gt;const&lt;/code&gt;, {{C++ Programming/kw|inline}}, declarations in {{C++ Programming/kw|for}} loops, and '''C++'''-style comments (using the &lt;tt&gt;//&lt;/tt&gt; symbol).

The 2003 version, ''ISO/IEC 14882:2003'', redefined the standard language as a single item. The STL (&quot;Standard Template Language&quot;) that pre-dated the standardization of '''C++''' and was originally implemented in Ada became an integral part of the standard and a requirement for a compliant implementation of the same. 

From 2004, the standards committee (which includes Bjarne Stroustrup) worked out the details of a new revision of the standard, with a '''C++11''' (often called '''C++0x''') standard approved on 12 August 2011. Some C++ compilers now fully support the new standard, and other compilers are increasing their support for it. A [http://wiki.apache.org/stdcxx/C++0xCompilerSupport table] of compiler support for each feature is available. C++11 makes the language more efficient and easier to use, and adds more functionality. The specification for '''C++14''' was released on 15 December 2014, with smaller changes compared to '''C++11''', and compiler support for this standard has followed quickly.

Many other '''C++''' libraries exist which are not part of the Standard, such as [[C++ Programming/Libraries/Boost|Boost]]. Also, non-Standard libraries written in C can generally be used by '''C++''' programs.

;''C++ source code example''
{{:C++ Programming/Examples/Hello World}}

Traditionally, the first program people write in a new language is called &quot;Hello World,&quot; because all it does is simply prints (displays) the words '''Hello World''', revealing basic information about the language's syntax in the process. [[C++ Programming/Examples/Hello world|Hello World Explained]] (in the [[C++ Programming/Examples|Examples Appendix]]) offers a detailed explanation of this code; the included source code is to give you an idea of a simple '''C++''' program.

=== Overview ===
Before you begin your journey to understand how to write programs using '''C++''', it is important to understand a few key concepts that you may encounter. These concepts are not unique to '''C++''', but are helpful to understanding computer programming in general. Readers who have experience in another programming language may wish to skim through this section, or skip it entirely.

There are many different kinds of programs in use today. From the operating system you use that makes sure everything works as it should, to the video games and music applications you use for entertainment, programs can fulfill many different purposes. What all '''programs''' (also called '''software''' or '''applications''') have in common is that they all are made up of a sequence of instructions written, in some form or another, in a programming language. These instructions tell a computer what to do, and generally how to do it. Programs can contain anything from instructions to solve math problems, to how to behave when a video game character is shot in a game. The computer will follow the instructions of a program one instruction at a time from start to finish.

Another thing true of all computer programs (or most programs, rather) is that they solve problems and perform tasks. Say hello to the world. Paint a button on the screen. Calculate 26*78. Drive the car. Fortunately or not, computers must be taught how to perform these tasks. In other words, they must be programmed.

=== Why learn C++ ? ===
Why not? This is the most clarifying approach to the decision to learn anything. Although learning is always good, selecting what you learn is more important as it is how you will prioritize tasks.  Another side of this problem is that you will be investing some time in getting a new skill set. You must decide how this will benefit you. Check your objectives and compare similar projects or see what the programming market is in need of. In any case, the more programming languages you know, the better.

'''C++''' is not the ideal first language. However, if you are willing to dedicate a more than passing interest in '''C++''', then you can even learn it as your first language. Make sure to dedicate some time understanding the different paradigms and why C++ is a multi-paradigm, or hybrid, language.

If you are approaching the learning process only to add another notch under your belt, that is, willing only to dedicate enough effort to understand its major quirks and learn something about its dark corners, then you would be best served in learning two other languages first. This will clarify what makes '''C++''' special in its approach to programming. You should select one imperative and one object-oriented language. C will probably be the best choice for the former, as it has a good market value and a direct relation to '''C++''', although a good substitute would be ASM. For the latter, Java is a good choice, mostly because it shares much of its syntax with C++ but it does not support imperative programming. Read the [[C++ Programming/Programming Languages/Comparisons|language comparison]] section for better understanding the relations.

Although learning C is not a requirement for understanding '''C++''', you must know how to use an imperative language. '''C++''' will not make it easy for you to understand some of these deeper concepts, since in it you, the programmer, are given the greater range of freedom. There are many ways of doing things in C++. Understanding which options to choose will become the cornerstone of mastering the language.

You should not learn '''C++''' if you are solely interested in learning Object-oriented Programming. C++ offers some support for objects, but is still not truly Object-oriented, and consequently the nomenclature used and the approaches taken to solve problems will make it more difficult to learn and master those concepts. If you are truly interested in Object-oriented programming, you should learn [[Smalltalk Programming|Smalltalk]].

As with all languages, '''C++''' has a specific scope of application where it can truly shine. C++ is harder to learn than C and Java but more powerful than both. '''C++''' enables you to abstract from the little things you have to deal with in C or other lower level languages but will grant you more control and responsibility than Java. As it will not provide the default features you can obtain in similar higher level languages, you will have to search and examine several external implementations of those features and freely select those that best serve your purposes (or implement your own solution).

{{BookCat}}
&lt;noinclude&gt;{{displaytitle|title=C++ Programming: The C++ programming language}}&lt;/noinclude&gt;</text>
      <sha1>nw58q09sg8vb2inz3a3xtjoepnasjbo</sha1>
    </revision>
  </page>
  <page>
    <title>German/Grammar/Cases</title>
    <ns>0</ns>
    <id>40554</id>
    <revision>
      <id>2724052</id>
      <parentid>2724051</parentid>
      <timestamp>2014-11-11T20:09:20Z</timestamp>
      <contributor>
        <ip>82.30.116.215</ip>
      </contributor>
      <comment>/* What are cases for? */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">German has four cases. A case may determine the particular adjective, adjective ending, pronoun, and noun ending to use. If there is a definite article, the case is often easier to recognise.

The nominative case is used in reference to the subject of a sentence.        

'''Der Mann  /  Die Frau /  Das Kind''' isst. (The man / the woman / the child is eating.)


The accusative case is used in reference to the direct object of a sentence.  

Ich sehe '''den Mann  /  die Frau /  das Kind.''' (I see the man / the woman / the child.)


The dative case is used in reference to the indirect object of a sentence.    

Er gibt '''dem Mann  /  der Frau  /  dem Kind''' den Löffel. (He gives the spoon to the man / the woman / the child.)


The genitive case is used in reference to a possessed object of a sentence.   

das Buch '''des Mannes  /  der Frau  /  des Kindes'''  (the man's / woman's / child's book)


To determine the case of a noun or pronoun in German, use the following steps, in order.

== Determining Cases ==
*If the noun or pronoun is a subject, it takes the nominative case. If the noun is an object, it takes either the accusative, dative or genitive case.
*If the expression contains a dative, accusative or genitive preposition, the case of the noun or pronoun takes the case of that preposition.
*If the expression contains a two-way preposition, if the verb is transitive, the expression takes the accusative case. If the verb is intransitive, the expression takes the dative case.
*If the expression contains no prepositions, the expression takes the accusative case if the verb is intransitive, and the dative case if the verb is transitive. (see also [[../Prepositions_and_Postpositions |Prepositions and Postpositions]])
*In some cases, a noun or pronoun will take the genitive case, if it is possessed by the subject, or if the verb implies possession.

== What are cases for? ==
In English, and many other languages, you know what role a noun plays from its place in the sentence. For example:

''The dog bit the man

Here, you know that the man has bite-marks on his leg.

''The man bit the dog''.

Here, surprisingly, the dog has the bite-marks.

In German, you can change the word order around as you like. You can write:

''Der Hund biss den Mann'' (The dog bit the man)

or

''Den Mann biss der Hund'' (The dog bit the man)

These are ''both'' the &quot;unsurprising&quot; version where the man has teeth-marks. You can see that because in both sentences, it says &quot;'''den''' Mann&quot;, not &quot;der Mann&quot;. &quot;Den Mann&quot; is the accusative form which means that the person is the one bitten, not the biter. In both cases, the dog is &quot;der Hund&quot;, making it the biter. &quot;The man bit the dog&quot; would be &quot;Der Mann biss den Hund&quot; or &quot;Den Hund biss der Mann&quot;.

So while English uses word order to tell us what is the subject (here, the biter) and what is the object (here, the bitten), German uses cases to give us this important information.  This allows German to have the advantage over English of being able to stress the object or the subject of a sentence by changing the word order (normally the first noun is the stressed part).

&lt;noinclude&gt;{{German/Grammar/Footer}}

[[pt:Alemão/Gramática/Casos]]&lt;/noinclude&gt;</text>
      <sha1>ro3rt7o28n2ecvhmmbpw67n3607zgss</sha1>
    </revision>
  </page>
  <page>
    <title>Old English</title>
    <ns>0</ns>
    <id>40558</id>
    <revision>
      <id>3016991</id>
      <parentid>2986136</parentid>
      <timestamp>2015-11-18T06:03:57Z</timestamp>
      <contributor>
        <username>Leorneealdenglisc</username>
        <id>2809800</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">[[File:Beowulf.firstpage.jpeg|right|thumb|300px|The first page of Beowulf, probably the most famous piece of Anglo-Saxon writing today]]
{{Sister|text=See also the {{Plain link|http://ang.wikibooks.org/ |Old English Wikibooks}}}}

''Wes þū hāl and wilcume!'' Hello and welcome! This a Wikibook about Old English, the Germanic language spoken in England from about 500 AD (after the arrival of the Angles, the Saxons, and Jutes from the area around northern Germany, the Netherlands, and Denmark) in southern Great Britain, until about 1100 AD, shortly after the Norman Conquest lead by William I (William the Conqueror), at which time Old English became Middle English. 

While we would like this Wikibook to be a useful resource for learning Old English, it is not at the moment in too good condition; but it is being improved. ''Leorna þū full spēdiglīce!'' Learn well!

If you are already a speaker of Old English, or are learning it, you can see [http://en.wikisource.org/wiki/Category:Old_English_works some Old English texts] at Wikisource. Also, there is an [http://ang.wikipedia.org/wiki/H%C4%93afods%C4%ABde Anglo-Saxon Wikipedia] to which you can contribute.

==History==
* [[/History, Culture, and Society/]]

== Old English Grammar ==

*[[/Fōresprǣc/]] (Introduction) ~ &lt;small&gt;The Alphabet and Pronunciation, A Short Example of Old English&lt;/small&gt; {{stage short|00%}}
*[[/Grammar/]] {{stage short|00%}}
*[[/Orthography/]] {{stage short|25%|Sept 11, 2005}}
*[[/I-mutation/]]
*[[/Nouns/]] {{stage short|50%|Sept 11, 2005}}
*[[/Pronouns/]] {{stage short|25%|Sept 11, 2005}}
*[[/Articles/]]
*[[/Adjectives/]] {{stage short|25%|Sept 11, 2005}}
*[[/Numbers/]]
*[[/Verbs/]] {{stage short|25%|Sept 11, 2005}}
*[[/Participles/]] {{stage short|00%}}
*[[/Adverbs/]] {{stage short|25%|Sept 11, 2005}}
*[[/Conjunctions/]] {{stage short|00%}}
*[[/Prepositions/]] {{stage short|25%|Sept 11, 2005}}
*[[/Interjections/]] {{stage short|00%}}
*[[/Appositives/]] {{stage short|00%}}
*[[/Word Formation/]]
*[[/Punctuation/]] {{stage short|00%}}
*[[/Syntax/]] {{stage short|00%}}

== Additional Old English resource pages ==
*[[/Old English Phrasebook|An informal Old English phrasebook, with some explicitly marked neologisms]]
*[[/Titles and Nicknames|Titles and Nicknames]]
*[[/Time|Telling time]] {{stage short|00%|Jan 24, 2005}}
*[[/Legal|Legal Usage]] {{stage short|00%|Jan 24, 2005}}
*[[/Phrases|Phrases]] {{stage short|00%|Jan 24, 2005}}
*[[/Directions|Directions]] {{stage short|00%|Mar 17, 2006}}
*[[/The spoken language|The spoken language]]
*[[/Runes|Runes]]

== Vocabulary ==
After you've mastered the grammar, the main things to do is learn vocabulary and idiomatic language usage. They both can be done by reading actual historical texts and practicing what you have already learnt, but here are some lists to help with the vocabulary.
*[[/Vocabulary/100 Keywords/]]
*[[/Vocabulary/Nouns/]]
*[[/Vocabulary/Verbs/]]

&lt;!--I feel that this section, being largely empty at the moment, mostly currently serves to be just intimidating and ugly, so I've hidden it till someone can put time into it
== Appendices ==
*[[/Appendices/Common phrases/]]
*[[/Appendices/Adjectives/]]
*[[/Appendices//Strong Verbs/]]
**[[/Appendices/Strong Verbs/Type 1a/]]
**[[/Appendices/Strong Verbs/Type 1b/]]
**[[/Appendices/Strong Verbs/Type 2/]]
**[[/Appendices/Strong Verbs/Type 3/]]
**[[/Appendices/Strong Verbs/Type 4/]]
**[[/Appendices/Strong Verbs/Type 5/]]
**[[/Appendices/Strong Verbs/Type 6/]]
**[[/Appendices/Strong Verbs/Type 7/]]
*[[/Appendices/Irregular Verbs/]]
*[[/Appendices/Preterite-Present Verbs/]]
*[[/Appendices/Masculine Nouns/]]
*[[/Appendices/Feminine Nouns/]]
*[[/Appendices/Neuter Nouns/]]
--&gt;

== Other electronic resources ==
Thankfully, there are many other quality online accessible resources already available for Old English. Here are some of them:

*[http://lexicon.ff.cuni.cz/search/aa_search.html An online searchable version of the Bosworth and Toller dictionary, and other Germanic language resources]
*[http://bosworth.ff.cuni.cz/ Another online searchable version of Bosworth and Toller, but this time with no other Germanic language resources]
*[http://www.wmich.edu/medieval/resources/IOE/index.html The Electronic Introduction to Old English]
*[http://www.ucalgary.ca/UofC/eduweb/engl401/grammar/index.htm A fairly simple, non-comprehensive resource] 

{{Subjects|English language}}
{{alphabetical|O}}
{{status|25%}}
__NOTOC__</text>
      <sha1>e2ep1xcls5nw86uluvii35j5fzt86n6</sha1>
    </revision>
  </page>
  <page>
    <title>Old English/Prepositions</title>
    <ns>0</ns>
    <id>40561</id>
    <revision>
      <id>3037252</id>
      <parentid>3036302</parentid>
      <timestamp>2016-01-12T23:19:52Z</timestamp>
      <contributor>
        <username>Az1568</username>
        <id>37227</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/151.227.247.98|151.227.247.98]] ([[User talk:151.227.247.98|talk]]) to last version by 70.173.37.60</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Old English}}
Old English has many prepositions, and like German, they require certain cases of noun to come after them to complete their meaning.  Old English has 4 cases other than nominative (subject) case which can be objects of prepositions.  The genitive, dative, instrumental, and accusative cases can all be objects of prepositions.
==Common Prepositions==
===Mid===
*This preposition means 'with', as in:
**I went with him - ic ēode mid him.
**I traveled along with her - ic fōr mid hire.
===Tō===
*This means 'to,' as in:
**I spoke to him - ic spræc tō him.
**I go to the door - ic gā tō þǣre dura.
===Þurh===
*This means 'through,' as in:
**I go through the gate - ic gā þurh þæt geat.
This preposition governs the accusative case.

Now, there are a great deal of prepositions in Old English, so going through them by case governed will be helpful.
==Genitive Prepositions==
Genitive prepositions that only take the genitive case are rare, and there is only one true such preposition, ''andlang''.
===andlang, andlanges===
#alongside, along, on length, by the side of
##I go alongside the street - ic gā andlang(es) þǣre strǣte.
##I go by the side of the way - ic gā andlang(es) þæs weges.

There are several prepositions which do take genitive objects in addition to other cases:
*betwēonan (dative/accusative too)
*innan (dative/accusative too) - within, from within
*þurh (mainly accusative)
==Dative Prepositions==
===Tōgeagnes===
#''where there is motion towards the object governed by the word''
##''without the idea of hostility'', towards, so as to meet
##''with idea of hostility'', against, to meet
#''where there is motion of the object governed by the word''
##''without idea of opposition'', in the way of, to meet the approach of, in readiness for, against the coming of
##''with the idea of opposition'', against, for the purpose of resisting
#''marking the object towards or against which an action is directed''
##''of reciprocal action'', again, in return
#''marking time'', on the approach of, towards
#''marking comparison or contrast''

==Instrumental Prepositions==
==Accusative Prepositions==
There are several pure accusative prepositions, among the most common are '''geond''', '''geondan''', '''oþ''', '''þurh''', '''underneoðan''', '''wiþgeondan''', '''ymb''', '''ymbūtan'''.  Some of these prepositions can take other cases, but only rarely.  There are also some less common prepositions, which will be listed below with the others.
===geond===
#throughout, during
===geondan===
#beyond
===oþ===
#to, up to, as far as
===þurh===
#through, during
===þurhūt===
#right through, throughout
##hē ēode þurhūt Ēoforwīc - he went throughout York
===underneoðan===
#underneath, below
===wiþgeondan===
#beyond
===ymb===
#around, about, at
===ymbūtan===
#around, about
==Dative/Accusative Prepositions==
===ābūtan===
#on, about, around, around about, on the outside
(variant of onbūtan)
===in===
===innan===
#''dative'' - in
##''rest'' in, within - '''innan healle''' ''within a hall''
##''motion'' in, within - '''hé éode innan þǽm mynstre''' ''he went within the monastery''
##''time'' within the limits of ''a period'', in; '''híe wendon innan þǽre middanwintres tíde''' ''they went within the limits of midwinter time''
#''accusative'' - into
===onbūtan===
#about
##''place''
##''time''
###'''about All Saint's Day or later''' ''onbūtan Ealra Hālgena dæg and gīet lator''
==Dative/Instrumental Prepositions==
===Mid===
====''Dative''====
#with, in conjunction with, in company with, together with
====''Instrumental''====
#through, by means of

==Reference==
*[[Old English/Prepositions of Place|Place Prepositions]]
*[[Old English/Prepositions of Time|Time Prepositions]]
*[[Old English/Prepositions of Means|Manner Prepositions]]
*[[Old English/Prepositions of Relationships|Relation Prepositions]]</text>
      <sha1>r4nknarp75al5woc4mbu5g95y6lucwe</sha1>
    </revision>
  </page>
  <page>
    <title>Old English/Prepositions of Time</title>
    <ns>0</ns>
    <id>40562</id>
    <revision>
      <id>2534636</id>
      <parentid>2534635</parentid>
      <timestamp>2013-06-10T22:29:11Z</timestamp>
      <contributor>
        <username>LlamaAl</username>
        <id>716551</id>
      </contributor>
      <minor />
      <comment>Reverted 1 edit by [[Special:Contributions/177.225.152.19|177.225.152.19]] ([[User talk:177.225.152.19|talk]]) identified as [[w:WP:VAND|vandalism]] to last revision by LlamaAl. ([[w:WP:TW|TW]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Old English prepositions of time, which detail the temporal relationships of their sentences.

==Dative==
Prepositions of time in the dative case generally concern events ''within'' a certain block of time.
===Innan===
#within the limits of ''a period'', in; '''híe wendon innan þǽre middanwintres tíde''' ''they went within the limits of midwinter time''
===On===
*On with the dative is used with generic time nouns, such as ''dæg'' and ''gēar''.
#on + gēare: hæbbe ic þriwa on gēare mid tōþlǣccan gesetne dæg - ''I have a set day with a dentist thrice in the year.''
#on + þǣm + ǣrdæge: on þǣm ǣrdæge ēodon hīe tō cirican - ''in early morning they went to church.''
===Tōgeagnes===
#on the approach of, towards; '''tōgeagnes Ēastran cōm þæs pāpan sande''' ''the pope's legate came towards Easter''
==Accusative==
===On===
*on/in a day, month, year; This is used with the accusative with named days and months
## on + dæg: gif gē lesaþ wyrte on Sunnandæg - ''if we gather roots on Sunday''
## on + mōnaþ: se ǣresta Frīgedæg þe man sceal fæsten is on Hlȳdan (Hrēþmōnaþ) - ''the first Friday that one shall fast is in March''
## on + morgen: on morgen gā ic tō scōle - ''in the morning I go to school''
==No Preposition==
Often cases can be used to indicate when something happens.  This is often used with the dative, but can also be accusative and genitive.
* Sunnan dagum gā ic tō cirican (or ''on Sunnandagum'') - ''Sundays I go to church.''
* Sunnan dæges cēapinge ne dōþ man (on gehwamlicum Sunnandæge) - ''Sunday one does not do marketing.''
* þȳ gēare æfter his lyre (oþþe on gēare) - ''the year after his loss'' (instrumental case)

[[Category:Old English]]</text>
      <sha1>p9xxk2fgnjv3aan5xmxa2rywt27jhb4</sha1>
    </revision>
  </page>
  <page>
    <title>User:Sfdan~enwikibooks</title>
    <ns>2</ns>
    <id>40563</id>
    <revision>
      <id>2884731</id>
      <parentid>231746</parentid>
      <timestamp>2015-04-17T23:06:53Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Sfdan]] to [[User:Sfdan~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Sfdan|Sfdan]]&quot; to &quot;[[Special:CentralAuth/Sfdan~enwikibooks|Sfdan~enwikibooks]]&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">[http://en.wikipedia.org/wiki/User:Sfdan My English Wikipedia user page].</text>
      <sha1>cnva1j4n3ad2f4y1z35c7d9sl044hv7</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Old English</title>
    <ns>10</ns>
    <id>40565</id>
    <revision>
      <id>2537897</id>
      <parentid>2537891</parentid>
      <timestamp>2013-06-20T22:58:56Z</timestamp>
      <contributor>
        <username>Gott wisst</username>
        <id>153929</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;center&gt;
'''Introduction: '''
[[Old English/Fōresprǣc|Introduction]] -
[[Old English/Grammar|Grammar]] -
[[Old English/Orthography|Orthography]] -
[[Old English/I-mutation|I-mutation]]&lt;br /&gt;
'''Grammar:'''
[[Old English/Nouns|Nouns]] -
[[Old English/Pronouns|Pronouns]] -
[[Old English/Articles|Articles]] -
[[Old English/Adjectives|Adjectives]] -
[[Old English/Numbers|Numbers]] -
[[Old English/Verbs|Verbs]] -
[[Old English/Participles|Participles]] -
[[Old English/Adverbs|Adverbs]] -
[[Old English/Conjunctions|Conjunctions]] -
[[Old English/Prepositions|Prepositions]] - 
[[Old English/Interjections|Interjections]] -
[[Old English/Appositives|Appositives]] -
[[Old English/Word Formation|Word Formation]] -
&lt;/center&gt;{{BookCat}}</text>
      <sha1>hakl1xbvv0rmnzp6dvw4182nox6yzdr</sha1>
    </revision>
  </page>
  <page>
    <title>Old English/Nouns</title>
    <ns>0</ns>
    <id>40567</id>
    <revision>
      <id>3013998</id>
      <parentid>3013996</parentid>
      <timestamp>2015-11-08T10:23:22Z</timestamp>
      <contributor>
        <username>一個正常人</username>
        <id>748432</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Old English}}

'''Nouns''' are words which indicate a person, place, animal, thing, or idea, like &quot;thing&quot;, &quot;animal&quot;, &quot;Samuel&quot;, and &quot;Buddhism&quot; in Modern English. 

In Old English they have 3 genders (masculine, neuter, feminine), 2 numbers (singular, plural), and 5 cases (nominative,  accusative, genitive, dative, instrumental). Note that the so-called &quot;genders&quot; were purely ''grammatical'' genders - they very often did not correspond to ''natural'' gender. For example the word ''wīf'' - &quot;woman&quot; is actually of the neuter (grammatical) gender, not the feminine (natural gender).

In Old English, nouns were inflected (they changed how they were written and spoken) to add little bits of extra information to communicate their function within the sentence and the number of the noun (whether singular or plural). Although learning a language with three different genders might seem hard, it isn't really very hard - it can easily enough be done if you just make sure to memorize nouns along with their definitive article, because the definitive articles for each grammatical gender are unique. For example, don't just remember the word &quot;ġiefu&quot; - remember &quot;sēo ġiefu&quot;, so you'll always know it's a feminine noun - you can easily just not say the article if you don't need to; on the other hand, if you don't know the gender of a noun, it might be annoying.

Nouns were the essential element to a noun phrase (either a noun or a pronoun had to be in a noun phrase), which is an important part of most sentences. Also in the noun phrase you could put noun modifiers, like numbers, adjectives (words that describe, like &quot;cool&quot; or &quot;special&quot;), articles (&quot;the&quot; or &quot;a/an), and demonstratives (&quot;this&quot; and &quot;that&quot;). All those other words within a noun phrase had to have the same number, grammatical gender, and case as the noun that they were modifying. In addition, most adjectives (but not most numerals) could either be declined strong or weak depending on what other words were used with them. For more information on adjective declension, please see [[Old English/Adjectives|the page about Old English adjectives]].
==Noun Declensions==
Nouns are divided into two main categories of declension in Old English: the so called &quot;Strong&quot; and &quot;Weak&quot; nouns. There are other minor declension groups, as well; but most nouns fall into these two classifications. If a noun belongs to a particular declension group, it can usually only be declined that way. Occasionally, you can decline an Old English noun one of several ways. Whether or not a noun is weak or strong does ''not'' affect whether or not the modifiers (adjectives) used with it are declined weak or strong. 

Which declension a noun takes must be memorized along with the noun itself. Often, the noun itself may give clues as to which declension it takes, but not always.

===Strong Nouns===
The strong noun paradigm declines for case, gender and singular/plural. 

{| border=&quot;1&quot; style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|-
! rowspan=&quot;2&quot; style=&quot;background:#e74;&quot;| Case
! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;| Masculine
! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;| Neuter
! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;| Feminine
|-
!style=&quot;background:#fed;&quot;| Singular
!style=&quot;background:#fed;&quot;| Plural 
!style=&quot;background:#fed;&quot;| Singular 
!style=&quot;background:#fed;&quot;| Plural 
!style=&quot;background:#fed;&quot;| Singular 
!style=&quot;background:#fed;&quot;| Plural
|-
!style=&quot;background:#fed;&quot;|Nominative
| -- || -as || -- || -u / -- || -u / -- || -a, -e
|-
!style=&quot;background:#fed;&quot;|Accusative
| -- || -as || -- || -u / -- || -e || -a, -e
|-
!style=&quot;background:#fed;&quot;|Genitive
| -es || -a || -es || -a || -e || -a
|-
!style=&quot;background:#fed;&quot;|Dative
| -e || -um || -e || -um || -e || -um
|}

In the Nominative Plural and Accusative Plural of the Strong Neuter declension, a ''-u'' follows only after short syllables (a syllable which ends with 1 short vowel and 1 consonant), while neuters with long syllables (short vowel and 2 consonants or long vowel and one consonant) have no ending. Also, feminine nouns only take &quot;-u&quot; in the nominative singular if they have a short syllable. 


{| border=&quot;1&quot; style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|+'''Example declensions of ''stān'' - &quot;stone&quot; (masc.); ''sċip'' - &quot;ship&quot; (neut. short stem); ''þing'' - &quot;thing&quot; (neut. long stem); ''ġiefu'' - &quot;gift&quot; (fem. short stem); and ''sorg'' - &quot;sorrow&quot; (fem. long stem)''' 
|-
! rowspan=&quot;2&quot; style=&quot;background:#e74;&quot;| Case !! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;| Masculine !! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;| Neuter !! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;| Feminine
|-
!style=&quot;background:#fed;&quot;| Singular !!style=&quot;background:#fed;&quot;| Plural !!style=&quot;background:#fed;&quot;| Singular !!style=&quot;background:#fed;&quot;| Plural !!style=&quot;background:#fed;&quot;| Singular !!style=&quot;background:#fed;&quot;| Plural
|-
!style=&quot;background:#fed;&quot;|Nominative
| stān || stān-as || sċip / þing || sċip-u / þing || ġief-u / sorg || ġief-a / sorg-a, -e
|-
!style=&quot;background:#fed;&quot;|Accusative
| stān || stān-as || sċip / þing || sċip-u / þing || ġief-e / sorg-e || ġief-a / sorg-a, -e
|-
!style=&quot;background:#fed;&quot;|Genitive
| stān-es || stān-a || sċip-es / þing-es || sċip-a / þing-a || ġief-e / sorg-e || ġief-a / sorg-a
|-
!style=&quot;background:#fed;&quot;|Dative
| stān-e || stān-um || sċip-e / þing-e || sċip-um / þing-um || ġief-e / sorg-e || ġief-um / sorg-um
|}

====U-nouns====

Some masculine and some feminine nouns belong to the u-declension. They were either short-stemmed and two-syllabled (like &quot;sunu&quot;), or long-stemmed one-syllabled (like &quot;hand&quot;). 

They had the same endings for both genders, but slightly different endings depending on which of the two types mentioned above a word was. Here are two examples of this declension:

{|border=&quot;1&quot; style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|+'''Example declensions of ''hand'' - &quot;hand&quot; (fem. long-stem) and ''wudu'' - &quot;wood&quot;, &quot;forest&quot; (masc. short-stem)
|-
!style=&quot;background:#e74;&quot; rowspan=&quot;2&quot;|'''Case''' !!colspan=2 align=&quot;center&quot; style=&quot;background:#fd8;&quot;|Feminine !!colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;|Masculine
|-
|style=&quot;background:#fed;&quot;|'''Singular''' ||style=&quot;background:#fed;&quot;|'''Plural''' ||style=&quot;background:#fed;&quot;|'''Singular''' ||style=&quot;background:#fed;&quot;| '''Plural'''
|-
|style=&quot;background:#fed;&quot;|'''Nominative '''|| hand || hand-a || wud-u || wud-a
|-
|style=&quot;background:#fed;&quot;|'''Accusative'''|| hand || hand-a || wud-u || wud-a
|-
|style=&quot;background:#fed;&quot;|'''Genitive'''|| hand-a || hand-a || wud-a || wud-a
|-
|style=&quot;background:#fed;&quot;|'''Dative'''|| hand-a || hand-um || wud-a || wud-um
|}

Other nouns in this category are ''feld'' - field (masc.), ''weald'' - forest, wood (masc.), and ''sunu'' - son (masc.)

====W-nouns====
Nouns whose stem ended in -u or -o (the two were interchangeable) would turn this -u/o to a -w- before a vowel of a grammatical suffix. For example:

{| border=&quot;1&quot; style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|-
!colspan=&quot;3&quot; align=&quot;center&quot; style=&quot;background:#fd8;&quot;|searu (neut.) - device, machine
|-
|style=&quot;background:#e74;&quot;|'''Case''' ||style=&quot;background:#fed;&quot;|'''Singular''' ||style=&quot;background:#fed;&quot;|'''Plural'''
|-
|style=&quot;background:#fed;&quot;|'''Nominative''' || searu || searu
|-
|style=&quot;background:#fed;&quot;|'''Accusative''' || searu || searu
|-
|style=&quot;background:#fed;&quot;|'''Genitive''' || searw-es || searw-a
|-
|style=&quot;background:#fed;&quot;|'''Dative''' || searw-e || searw-um
|}

Note that this applied to the other genders, as well. There are quite a few nouns like this, and it is fairly easy to remember that their stem ends with -u/o, so I won't list them here. But do make sure you don't confuse nouns like this with u-nouns (see above) or strong feminine nouns with the grammatical ending -u.

====I-mutation nouns====
A small handful of nouns in Old English take the i-mutation in parts of their declension. This is for historical reasons, which are not delved into here. Some of these nouns actually have survived into Modern English with their i-mutation in the plural, for example &quot;goose&quot; and &quot;geese&quot;, &quot;mouse&quot; and &quot;mice&quot;, &quot;louse&quot; and &quot;lice&quot;, and &quot;man&quot; and &quot;men&quot;. All i-mutation nouns in Old English are either masculine or feminine. Here is an example of the declension:

{| border=&quot;1&quot; style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|+'''Example declensions of ''mann'' - &quot;human&quot;, &quot;person&quot; (masculine); ''bōc'' - &quot;book&quot; (long-stem feminine); ''hnutu'' - &quot;nut&quot; (short-stem feminine)''' 
|-
!style=&quot;background:#e74;&quot; rowspan=&quot;2&quot;|Case!!colspan=&quot;2&quot; align=&quot;center&quot; style=&quot;background:#fd8;&quot;|Masculine!!colspan=&quot;2&quot; align=&quot;center&quot; style=&quot;background:#fd8;&quot;|Feminine
|-
|style=&quot;background:#fed;&quot;|'''Singular''' ||style=&quot;background:#fed;&quot;|'''Plural'''||style=&quot;background:#fed;&quot;|'''Singular'''||style=&quot;background:#fed;&quot;|'''Plural'''
|-
|style=&quot;background:#fed;&quot;|'''Nominative'''|| mann || menn || bōc, hnutu || bēċ, hnyte
|-
|style=&quot;background:#fed;&quot;|'''Accusative'''|| mann || menn || bōc, hnute || bēċ, hnyte
|-
|style=&quot;background:#fed;&quot;|'''Genitive'''|| menn || manna || bēċ, hnyte ||bōcum, hnuta
|-
|style=&quot;background:#fed;&quot;|'''Dative'''|| menn || mannum || bēċ, hnyte || bōca, hnutum
|}

As you can see, the i-mutation affects the stem vowels in singular dative and genetive, and plural nominative and accusative. Other masculine i-mutation nouns with their i-mutated forms are: 
*''frēond'' (''frīend'') - &quot;friend&quot;
*''fēond'' (''fīend'') - &quot;fiend&quot;, &quot;enemy&quot;
*''fōt'' (''fēt'') - &quot;foot&quot;
*''tōþ'' (''tēþ'') - &quot;tooth&quot;

Other feminine i-mutation nous with their i-mutated forms are:
*''mūs'' (''mȳs'') - &quot;mouse&quot;
*''lūs'' (''lȳs'') - &quot;louse&quot;
*''burg'' (''byriġ'') - &quot;city&quot;
*''āc'' (''ǣċ'') - &quot;oak tree&quot;
*''gāt'' (''gǣt'') - &quot;goat&quot;
*''gōs'' (''gēs'') - goose

Note that sometimes these usually i-mutated nouns were declined just like other strong nouns.

===Weak Declension===
The weak paradigm is more simplified and has less variation between the genders and cases.

{|border=&quot;2&quot; style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|-
!style=&quot;background:#e74;&quot;| Case !!style=&quot;background:#fed;&quot;| Masculine !!style=&quot;background:#fed;&quot;| Neuter !!style=&quot;background:#fed;&quot;| Feminine  !!style=&quot;background:#fed;&quot;| Plural
|-
!style=&quot;background:#fed;&quot;|Nominative
| -a || -e || -e || -an 
|-
!style=&quot;background:#fed;&quot;|Accusative
| -an || -e || -an || -an
|-
!style=&quot;background:#fed;&quot;|Genitive
| -an || -an || -an || -ena 
|-
!style=&quot;background:#fed;&quot;|Dative
| -an || -an || -an || -um 
|}

Note that the plural weak declension is the same for all genders.

{|border=&quot;2&quot; style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|+'''Example declension of ''nama'' - &quot;name&quot;, ''ēage'' - &quot;eye&quot;, and ''tunge'' - &quot;tongue&quot;'''
|-
! rowspan=&quot;2&quot; style=&quot;background:#e74;&quot;| Case !! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;| Masculine !! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;| Neuter !! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;| Feminine
|-
!style=&quot;background:#fed;&quot;| Singular !!style=&quot;background:#fed;&quot;| Plural !!style=&quot;background:#fed;&quot;| Singular !!style=&quot;background:#fed;&quot;| Plural !!style=&quot;background:#fed;&quot;| Singular !!style=&quot;background:#fed;&quot;| Plural
|-
!style=&quot;background:#fed;&quot;|Nominative
| nam-a || nam-an || ēag-e || ēag-an || tung-e || tung-an
|-
!style=&quot;background:#fed;&quot;|Accusative
| nam-an || nam-an || ēag-e || ēag-an || tung-an || tung-an
|-
!style=&quot;background:#fed;&quot;|Genitive
| nam-an || nam-ena || ēag-an || ēag-ena || tung-an || tung-ena
|-
!style=&quot;background:#fed;&quot;|Dative
| nam-an || nam-um || ēag-an || ēag-um || tung-an || tung-um
|}

There are very many other weak masculine and feminine nouns, so they aren't list them here; but there is only one other weak neuter noun, and that is ''ēare'' - &quot;ear&quot;. 

Make sure not to confuse weak feminine nouns with some strong masculine or neuter nouns that end with -e.

===Indeclinable nouns===
Some nouns are indeclinable, or can optionally be treated as indeclinable. This means that they do not change at all according to case or number, but words that modify them, such as adjectives, still do; and verbs that they are used with also still change according to number. 

One large category of such nouns are feminine nouns ending in -o/-u, such as ''lengu'' - &quot;length&quot; and ''strengu'' - &quot;strength&quot;. Sometimes these nouns had weak feminine equivalents that were otherwise identical. Also, country names borrowed from Latin, often ending in &quot;-a&quot;, could usually optionally be treated as indeclinable. There are a few more indeclinable nouns, which should be memorized as you go.

==Appositives==
In Old English, as in Modern English, nouns could sometimes be used similarly to an adjective to modify another noun. These are called ''appositives''. One example of appositives in Modern English is in titles: &quot;Queen Elizabeth&quot;, &quot;Brother John&quot;, &quot;General Schwartzkopf&quot;, where &quot;Queen&quot;, &quot;Brother&quot;, and &quot;General&quot; are all nouns used to modify other nouns.

To get a better understanding of how appositives were used in Old English, see the [[Old English/Appositives|appositives page]].</text>
      <sha1>ey77n9s3nn99rkktyrpn6cb4s7ed6le</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Hellznrg</title>
    <ns>3</ns>
    <id>40571</id>
    <revision>
      <id>231799</id>
      <timestamp>2005-09-10T10:12:28Z</timestamp>
      <contributor>
        <username>Serge</username>
        <id>5070</id>
      </contributor>
      <comment>added coment about vfd</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Deleting UAE ==
Hey Hellznrg. While your book on the United Arab Emirates is really intriguing, because it's really your own experiences and viewpoints, it really probably shouldn't be on Wikibooks as a collaborative effort...however, you really should pursue this as a blog or something, even on your user page....I for one would find it an interesting read. It's currently listed as a [[Wikibooks:Votes for deletion|Vote for deletion]] which means we as a community are voting and discussing its removal. If you want to make a comment about it then go over to that page and fill us in. Good luck with writing the rest of it, where ever that ends up! Cheers, [[User:Serge|Serge]] 10:12, September 10, 2005 (UTC)</text>
      <sha1>iohqpwjatnmrqzf9rrinnh6r36muy7g</sha1>
    </revision>
  </page>
  <page>
    <title>User:Cmadler</title>
    <ns>2</ns>
    <id>40572</id>
    <revision>
      <id>231808</id>
      <timestamp>2005-09-10T10:46:05Z</timestamp>
      <contributor>
        <username>Cmadler</username>
        <id>11348</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">See [http://en.wikipedia.org/wiki/User:Cmadler http://en.wikipedia.org/wiki/User:Cmadler]</text>
      <sha1>abs3fy9me1x07e2l3eljcqdywe8s65b</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Scripts start with a header</title>
    <ns>0</ns>
    <id>40573</id>
    <revision>
      <id>1517743</id>
      <parentid>530048</parentid>
      <timestamp>2009-06-03T03:53:06Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Headers provide a consistent way to to give your script an official title and filename. 

Take advantage of them. They can save you and others time by explaining:

* what a script does

* who wrote it

* when it was last modified

* how it should be used

* its change history, and more. 

Headers also provide reliable search information for libraries, archives, and search engines.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>57qjgs6n7roaiscjv7e5ad59s10gjs2</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Data drives it</title>
    <ns>0</ns>
    <id>40574</id>
    <revision>
      <id>1517748</id>
      <parentid>530072</parentid>
      <timestamp>2009-06-03T03:54:05Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Embrace the concept that data can drive your program. 

This is an old idea called &quot;'''data driven code'''&quot;, and REBOL promotes it to a new level.  

Keep an eye out for repeating patterns in your source code. 

Often a pattern can be reduced to simply a block that expresses the parts of the pattern that are different. 

This saves time, shortens the script, and makes the program easier to maintain.


'''Data driven programming''' is a computer programming paradigm which contrasts to '''Event Driven Programming''' and '''Flow Driven Programming'''.  In '''data driven programming''' the flow of control and look of the program is altered by changing a data structure inside the program, or by altering a data file that is used by the program.  An extreme example of this is REBOL itself which interprets REBOL code.  REBOL code is the data.

Leaving that aside, when we create mini dialects that are read by REBOL at run time to produce modified behaviour, we are using the '''data driven programming''' paradigm.  In this book we have an example where a data structure is used to describe a GUI, which is generated at run time.  Rather than have the data structure inside the program, it could just as easily be read from a file.  In this case we mix paradigms by using a '''data driven program''' to create an '''event driven program'''.

The point about this is that we are reducing complexity, and easing maintenance by taking the decisions outside of the program and placing them into easily modified data.

==== External References ====

*[http://www.faqs.org/docs/artu/ch09s01.html Data-Driven Programming from Eric Raymond]
*[http://www.c2.com/cgi/wiki?DataDrivenPrograms Wikiwiki - Data Driven Programs]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>tf091kwkjrmetfca7xptqyifetcmzay</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Names are critical</title>
    <ns>0</ns>
    <id>40575</id>
    <revision>
      <id>1517744</id>
      <parentid>530047</parentid>
      <timestamp>2009-06-03T03:53:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Words are the symbols that your brain uses to deal with language. 

When defining functions and variables, pick good words that help your brain. 

Good words also help others understand your script. 

'''Take the time to find just the right word.'''

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>cbnx5hpmglzsdav6i0oo0mqz8ekaew6</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Use words not strings</title>
    <ns>0</ns>
    <id>40576</id>
    <revision>
      <id>1873937</id>
      <parentid>1517739</parentid>
      <timestamp>2010-07-04T20:47:15Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">A common mistake of beginners is to use text strings to dynamically compose code and data. 

'''This is unnecessary, inefficient, and does not maintain the context of words appropriately.''' 

All dynamic code and data can be composed directly with words, blocks, and data values. 

This is also the best way to experience the power of REBOL dialecting.

For example: 

 days-in-month: [
   January 31 February 28 March 31 
   April 30 May 31 June 30 
   July 31 August 31 September 30 
   October 31 November 30 December 31
 ]

 print days-in-month/November

 print days-in-month/March

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>jf9nfpq3998c2s18p8j7an5i5k1h8kq</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Code in style</title>
    <ns>0</ns>
    <id>40577</id>
    <revision>
      <id>1517749</id>
      <parentid>530071</parentid>
      <timestamp>2009-06-03T03:54:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">REBOL is a highly dynamic language that allows massive creative freedom in a script's design. 

But, when it comes to the source format of your script, use the standard script style (found in the REBOL User's Guide). 

Adhering to a standard style will make your script easier for you and others to read.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>mlrwg93sz4jtzz66u0b6qrw0fe6t655</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Embed your documentation</title>
    <ns>0</ns>
    <id>40578</id>
    <revision>
      <id>1517746</id>
      <parentid>530045</parentid>
      <timestamp>2009-06-03T03:53:40Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Keep your documentation in sync with your code by embedding documentation in your code. 

REBOL was designed with this principle in mind. 

Function argument blocks can be used to explain the purpose of the function, its  arguments, and refinements. 

HELP will automatically use this information.

Example:

 days-in-month: func [
 {Returns number of days in a month}
 month [ word!]
 {Month of the year}
 ] [
  
  days: [
   January 31 February 28 March 31 
   April 30 May 31 June 30 
   July 31 August 31 September 30 
   October 31 November 30 December 31
  ]
   days/month
 ]


 &gt;&gt;  help days-in-month
 USAGE:
    DAYS-IN-MONTH month
 DESCRIPTION:
     Returns number of days in a month
     DAYS-IN-MONTH is a function value.
 ARGUMENTS:
     month -- Month of the year (Type: word)

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>232vvh2t07cuu3lloqbcg7myr4puuq5</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Define the problem</title>
    <ns>0</ns>
    <id>40580</id>
    <revision>
      <id>1517747</id>
      <parentid>530044</parentid>
      <timestamp>2009-06-03T03:53:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">When faced with coding a task, defining the problem creates most of the solution. 

After all, if you cannot define the problem, then can you ever really find its solution?

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>grh1nh5scu2p2hyq1y2yvnxobpkft6m</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Use the shell</title>
    <ns>0</ns>
    <id>40581</id>
    <revision>
      <id>1517740</id>
      <parentid>530051</parentid>
      <timestamp>2009-06-03T03:52:32Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The command shell is a good way to test an idea or find a quick answer about a function. 

In the shell, you can quickly display information about a particular function and its arguments. 

In addition the SOURCE function can show you how other functions are written.


 &gt;&gt; help func
 USAGE:
    FUNC spec body
 DESCRIPTION:
     Defines a user function with given spec and body.
     FUNC is a function value.
 ARGUMENTS:
     spec -- Help string (opt) followed by arg words (and opt type and string) (Type: block)
     body -- The body block of the function (Type: block)
 (SPECIAL ATTRIBUTES)
     catch


 &gt;&gt; source func
 func: func [
    &quot;Defines a user function with given spec and body.&quot;
    [catch]
    spec [block!] {Help string (opt) followed by arg words (and opt type and string)}
    body [block!] &quot;The body block of the function&quot;
 ][
    throw-on-error [make function! spec body]
 ]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>gr6zj4ze5g2vfzx9dzstyvf8p814cls</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Design Guide/Take advantage of return values</title>
    <ns>0</ns>
    <id>40582</id>
    <revision>
      <id>2452701</id>
      <parentid>1517742</parentid>
      <timestamp>2012-12-03T19:51:23Z</timestamp>
      <contributor>
        <username>Gregg.irwin</username>
        <id>825583</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Many functions return useful values. 

For instance, the INSERT function returns the series just past the insertion. 

IF, EITHER, and most of the looping functions return the value of the block they evaluated.

 &gt;&gt; j: 0
 == 0
 &gt;&gt; print foreach entry [red green blue water aqua] [j: j + 1]
 5

=== Don't use RETURN in every function you write ===

The last value evaluated is returned automatically in user-defined functions. While you can use the RETURN function to exit a function early and return a value, you do not need to use it in every function you write. One reason not to do so is that it is another function call, with the overhead that entails. Another is that using RETURN only for early exit scenarios (as you would use EXIT) makes those special cases more obvious.

 &gt;&gt; fn: does [100]
 &gt;&gt; fn
 == 100
 &gt;&gt; fn: does [return 100]
 &gt;&gt; fn
 == 100

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>ss2uz6z8x290so14opqz2k8pa2kykmi</sha1>
    </revision>
  </page>
  <page>
    <title>How to Write a Research Paper in History/Doing research</title>
    <ns>0</ns>
    <id>40583</id>
    <revision>
      <id>1624548</id>
      <parentid>1624531</parentid>
      <timestamp>2009-09-04T18:33:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">You've got your topic (or at least a general idea of something to explore), you've got an idea of where your primary sources might be &amp;mdash; what now? This section will cover the basics of doing historical research and note taking.

==Taking notes==
Taking notes may seem like a straightforward thing to do, but there are a few pitfalls which can be easily avoided which will save you a lot of time in the end. 

When taking notes, make sure to write as much information on the source's citation as you have available. You likely won't need all of this information for your final paper (formal citation will be covered later), but it will help you find the source again should you need to (as well as help anybody else who would like to find the source and contacts you). If you are dealing with boxed collections (usually full of individual folders), definitely make sure to note which boxes and which folders you looked at &amp;mdash; ''even if you don't find anything useful in them''. This will help you later if you suffer pangs of doubt about whether or not you missed something important. 

There is no &quot;right way&quot; to take notes. The goal of notetaking is to have enough information as to use it later. Sometimes this will mean copying out long quotations, sometimes it will be brief summary notes. Most archives will make photocopies for you (for a price), which is another good reason to keeping careful track of citation information (should you later desire copies of something you looked at). When taking notes from books, keep careful track of which page numbers any information is coming from, as it will allow you to cite it thoroughly and convincingly. 

After you've taken your notes, ''make a backup copy'', whether they are on a computer or on actual paper. ''Never'' keep only one copy of your notes in any form, unless you enjoy re-doing a lot of tedious work. ''Never'' send your only copy of notes in any form of post or mail. ''Never'' leave them anywhere where water could even possibly do them damage. The historical discipline is full of stories of hard work gone to nought because of a tragic and unlikely accident.


&lt;font size=&quot;+1&quot;&gt;'''Next section:''' [[../Organizing your work/]]&lt;/font&gt;

{{BookCat}}</text>
      <sha1>okrk4jyynj2bdue5tq7ai6a8z7j46md</sha1>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:Chicken Curry</title>
    <ns>103</ns>
    <id>40584</id>
    <revision>
      <id>353511</id>
      <parentid>231870</parentid>
      <timestamp>2006-02-03T03:48:16Z</timestamp>
      <contributor>
        <username>Uncle G's major work 'bot~enwikibooks</username>
        <id>10904</id>
      </contributor>
      <minor />
      <comment>[[Talk:Cookbook:Chicken Curry]] moved to [[Cookbook talk:Chicken Curry]]: COOKBOT: Renaming talk page to Cookbook talk namespace</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Have tidied this up a bit, in keeping with the other recipes.  This is my first attempt at Wiki-ing, so be gentle!  The '''1/4th''' in the original I assume is a quarter ounce (would seem about right from my experiences), though I'd usually use 1-2 teaspoons myself as the measure.  The original recipe also had '''black peppers''' in it, but didn't mention what to do with it.  I personally don't use black peppers in my Indian cooking, so I've omitted them from this recipe, though I suppose they could be added to the curry spice. [[User:TheMoog|TheMoog]] 14:13, 10 September 2005 (UTC)</text>
      <sha1>l82wgle5krw7b1yee25uizmanaf6xhd</sha1>
    </revision>
  </page>
  <page>
    <title>User:TheMoog~enwikibooks</title>
    <ns>2</ns>
    <id>40585</id>
    <revision>
      <id>2889716</id>
      <parentid>231871</parentid>
      <timestamp>2015-04-17T23:16:48Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:TheMoog]] to [[User:TheMoog~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/TheMoog|TheMoog]]&quot; to &quot;[[Special:CentralAuth/TheMoog~enwikibooks|TheMoog~...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">[http://xania.org Matt Godbolt], interested in grammar, spelling, and curry!</text>
      <sha1>9foaz5ceoo550q9wop4j00sm35rp9yw</sha1>
    </revision>
  </page>
  <page>
    <title>User:Thanks for nothing</title>
    <ns>2</ns>
    <id>40586</id>
    <revision>
      <id>242022</id>
      <parentid>231882</parentid>
      <timestamp>2005-09-26T14:53:58Z</timestamp>
      <contributor>
        <username>Thanks for nothing</username>
        <id>11349</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" />
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:24.18.157.108</title>
    <ns>3</ns>
    <id>40591</id>
    <revision>
      <id>231892</id>
      <timestamp>2005-09-10T17:08:44Z</timestamp>
      <contributor>
        <username>Krischik</username>
        <id>3011</id>
      </contributor>
      <comment>Fortran</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Fortran ==

If you want to add Fortran then you should all a propper date for when you have read the book. I do not belive you read the book on the &quot;Jan, 01 0000&quot;. You can add the entry again - but do it properly.</text>
      <sha1>q86edxpmojvewo81adr982e996c5z4t</sha1>
    </revision>
  </page>
  <page>
    <title>Engineering Acoustics/Solution Methods for Electro-Mechanical Analogies</title>
    <ns>0</ns>
    <id>40592</id>
    <revision>
      <id>1349911</id>
      <parentid>1349889</parentid>
      <timestamp>2008-12-02T16:07:48Z</timestamp>
      <contributor>
        <username>John.d</username>
        <id>136420</id>
      </contributor>
      <comment>/* Dot Method: (Valid only for planar network) */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Engineering Acoustics}}

After drawing the electro-mechanical analogy of a mechanical system, it is always safe to check the circuit. There are two methods to accomplish this:


==Review of Circuit Solving Methods==

'''Kirchkoff's Voltage law'''

&quot;The sum of the potential drops around a loop must equal zero.&quot; 

[[Image:KVL.png‎]]

&lt;math&gt;v_1 + v_2 + v_3 + v_4 = 0 \displaystyle&lt;/math&gt;

'''Kirchkoff's Current Law'''

&quot;The Sum of the currents at a node (junction of more than two elements) must be zero&quot;

[[Image:KCL.png‎]]

&lt;math&gt; -i_1+i_2+i_3-i_4 = 0  \displaystyle&lt;/math&gt;

'''Hints for solving circuits:'''

Remember that certain elements can be combined to simplify the circuit (the combination of like elements in series and parallel)

If solving a ciruit that involves steady-state sources, use impedances. Any circuit can eventually be combined into a single impedance using the following identities:

Impedances in series: &lt;math&gt;Z_\mathrm{eq} = Z_1 + Z_2 + \,\cdots\, + Z_n.&lt;/math&gt;

Impedances in parallel: &lt;math&gt;\frac{1}{Z_\mathrm{eq}} = \frac{1}{Z_1}  +   \frac{1}{Z_2}  + \,\cdots\, +  \frac{1}{Z_n} .&lt;/math&gt;

== Dot Method: (Valid only for planar network) ==
This method helps obtain the dual analog (one analog is the dual of the other). The steps for the dot product are as follows:
1) Place one dot within each loop and one outside all the loops. 
2) Connect the dots. Make sure that only there is only one line through each element and that no lines cross more than one element.
3) Draw in each line that crosses an element its dual element, including the source. 
4) The circuit obtained should have an equivalent behavior as the dual analog of the original electro-mechanical circuit.

'''Example:'''

[[Image:Dotmethod.PNG]]

The parallel RLC Circuit above is equivalent to a series RLC driven by an ideal current source

== Low-Frequency Limits: ==
This method looks at the behavior of the system for very large or very small values of the parameters and compares them with the expected behavior of the mechanical system. For instance, you can compare the mobility circuit behavior of a near-infinite inductance with the mechanical system behavior of a near-infinite stiffness spring.

{| class=&quot;wikitable&quot;
! 
! Very High Value
! Very Low Value
|-
| '''Capacitor'''
| Short Circuit
| Open Circuit
|-
| '''Inductor'''
| Open Circuit
| Closed Circuit
|-
| '''Resistor'''
| Open Circuit
| Short Circuit
|}

=Additional Resources for solving linear circuits:=

Thomas &amp; Rosa, &quot;The Analysis and Design of Linear Circuits&quot;, Wiley, 2001

Hayt, Kemmerly &amp; Durbin, &quot;Engineering Circuit Analysis&quot;, 6th ed., McGraw Hill, 2002

[http://en.wikibooks.org/wiki/Engineering_Acoustics Back to Main page]</text>
      <sha1>r17msjfa3lkpwcxxo84jvnegoh2zze5</sha1>
    </revision>
  </page>
  <page>
    <title>Japanese/Numbers</title>
    <ns>0</ns>
    <id>40600</id>
    <revision>
      <id>2580751</id>
      <parentid>2273626</parentid>
      <timestamp>2013-11-11T13:14:00Z</timestamp>
      <contributor>
        <username>Whym</username>
        <id>109931</id>
      </contributor>
      <minor />
      <comment>/* Chinese numbers */ comma for decimal mark</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Native Japanese numbers ==

There are two sets of counter words in Japanese. The older is the native Japanese reading and is appended with &quot;〜つ&quot; when counting things without counters.

# ひとつ
# ふたつ
# みっつ
# よっつ
# いつつ
# むっつ
# ななつ
# やっつ
# ここのつ 
# とお (sometimes とを or even とう)

Note that there are three pairs of similar pronunciation: 1 (ひとつ) and 2 (ふたつ), 3 (みっつ) and 6 (むっつ), 4 (よっつ) and 8 (やっつ). Also note that there is no &quot;つ&quot; ending for the number 10.

{{Japanese related|lesson|[[Japanese/Lessons/Days]]}}
These numbers are used for counting days and general objects (without counters) of numbers ten or less. Dates mix these with the chinese numbers below and have an extra word for ''twenty'': &quot;はつ&quot;. Sometimes these counters are also used without the suffix ( ひと (rarely, ひ)，ふた (rarely, ふ)，み，よ，いつ，む，なな，や，ここの，とお).

== Chinese numbers ==

With the large number of Chinese words adopted and integrated into Japanese, came the Chinese numbers. Their reading is called ''onyomi'' (音読み, おんよみ) and they are used for numbering most things, such as time, months, and counting. There are still four numbers where the native ''kunyomi'' pops up: ひ, ふ, よん and なな.

# (一) いち
# (二) に
# (三) さん
# (四) し
# (五) ご
# (六) ろく
# (七) しち
# (八) はち
# (九) きゅう or く
# (十) じゅう

Note that the &quot;く&quot; reading of &quot;9&quot; is just a contraction of きゅう and both can be used when counting. The &quot;きゅう&quot; reading is usually preferred in telephone numbers and when counting &quot;90&quot;, &quot;900&quot;, etc. (such as for prices, distances, altitude) In telephone numbers usually きゅう (kyū) is used. Also for 90, 900, 9000 etc. (in e.g. price, distance, altitude) that is the prefered reading. For September (lit: &quot;9th month&quot;) and for the time 9:00 the く (ku) reading is used (９月:くがつ and ９時:くじ).

When counting people, the ''kunyomi'' readings &quot;ひとり&quot; and &quot;ふたり&quot; are used for one and two people (written &quot;１人&quot; and &quot;２人&quot;), but higher numbers of people use the ''onyomi'' with the suffix &quot;〜にん&quot; (written &quot;〜人&quot;; e.g. {{furi|６|ろく}}{{furi|人|にん}})&lt;ref&gt;When emphasising the number of people (such as when inquiring for the number of customers at a restaurant) the &quot;〜名&quot; counter is used (with which &quot;two people&quot; takes the ''kunyomi'' reading: {{furi|２|に}}{{furi|名|めい}}).&lt;/ref&gt;

It is highly irregular which reading is used ''four'' and ''seven''. For situations including normal counting and the months, the ''onyomi'' readings are used. The ''kunyomi'' readings &quot;よん&quot; and &quot;なな&quot; are used in many other situations for (over &quot;し&quot; and &quot;しち&quot;) for the numbers &quot;4&quot; and &quot;7&quot;.

Note finally that the ''kunyomi'' reading &quot;よん&quot; is somewhat irregular with the &quot;ん&quot; being omitted in &quot;four o'clock&quot; (よじ) and &quot;4 years&quot; (よねん).

For larger numbers, prepend the number to the words for ''tens'', ''hundreds'', etc.
{{Japanese vocabulary entry|begin}}
{{Japanese vocabulary entry
| english = 10
| japanese= 十
| reading = じゅう
}}
{{Japanese vocabulary entry
| english = 100
| japanese= 百
| reading = ひゃく
}}
{{Japanese vocabulary entry
| english = 1000
| japanese= 千
| reading = せん
}}
{{Japanese vocabulary entry
| english = 10,000
| japanese= 万
| reading = まん
}}
{{Japanese vocabulary entry
| english = 10&lt;sup&gt;8&lt;/sup&gt;
| japanese= 億
| reading = おく
| notes = 10&lt;sup&gt;8&lt;/sup&gt; = 10.000&lt;sup&gt;2&lt;/sup&gt;
}}
{{Japanese vocabulary entry
| english = 10&lt;sup&gt;12&lt;/sup&gt;
| japanese= 兆
| reading = ちょう
| notes = 10&lt;sup&gt;12&lt;/sup&gt; = 10.000&lt;sup&gt;3&lt;/sup&gt;
}}
{{Japanese vocabulary entry
| english = 10&lt;sup&gt;16&lt;/sup&gt;
| japanese= 京
| reading = けい
| notes = 10&lt;sup&gt;16&lt;/sup&gt; = 10.000&lt;sup&gt;4&lt;/sup&gt;
}}
{{Japanese vocabulary entry|end}}
Japanese counts the decimals up to ten-thousand and then in powers of that.

Tens, hundreds and thousands don't get a &quot;one&quot; preceding them (i.e. &quot;hundred&quot; not &quot;one-hundred&quot;). Ten thousand, however, is &quot;いちまん&quot; and for numbers, ten thousand or larger, one thousand becomes &quot;いっせん&quot;.

{{Japanese example|
: 16 (十六)　 じゅうろく
: 24 (二十四) にじゅうよん
: 87 (八十七) はちじゅうなな
: 625 (六百二十五) ろっぴゃくにじゅうご: 625 (note that ろく and ひゃく are combined into ろっぴゃく.
: 800.049 (八十万四十九) はちじゅうまんよんじゅうきゅう: 800.049 (note how じゅう and まん are put together to say a hundred thousand, litteraly: 80x10.000+49).
: 21.000 (二万一千) にまんいっせん
}}

== Scoring ==

Here is the East Asian scoring method to count up to five and more. You will repeat writing the kanji 正 as many fives as you count.

[[File:Tally_marks_3.svg]]

== Notes ==
&lt;references/&gt;

[[Category:Japanese|{{SUBPAGENAME}}]]</text>
      <sha1>63w6hmr67ruyz2pfv8zcd4s85l8b2zj</sha1>
    </revision>
  </page>
  <page>
    <title>Cookbook:Mike's Saffron Rice and Beans</title>
    <ns>102</ns>
    <id>40611</id>
    <revision>
      <id>1749701</id>
      <parentid>747036</parentid>
      <timestamp>2010-04-02T21:21:21Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Vegetarian cuisine|Vegetarian]] | [[Cookbook:Vegan cuisine|Vegan Cuisine]]

This recipe originally started as a vegetarian approximation to [[Cookbook:Paella|paella]].  It has since diverged from its resemblance to paella.

==Ingredients==
* 1 small [[Cookbook:Potato|potatoes]] Sliced extremely thin
* 1 big [[Cookbook:Onion|Onion]] cut into chunks or sliced thin
* 1-3 [[Cookbook:Tomato|tomatoes]], cut into cubes or slices
* 2-3 [[Cookbook:Bell Pepper|Red bell peppers]], sliced.
* 1/2 [[Cookbook:Cup|cup]] of [[Cookbook:Olive Oil|olive oil]]
* 1 tablespoon [[Cookbook:Curry Powder|curry powder]]
* 5-10 cloves [[Cookbook:Garlic|garlic]]
* 2 tablespoon [[Cookbook:Paprika|paprika]]
* 2 tablespoon [[Cookbook:Cumin|cumin]]
* 1-2 tablespoon ground [[Cookbook:Chili|chili]] or [[Cookbook:Chili Powder|chili powder]]
* 1-2 pinch(es) [[Cookbook:Saffron|saffron]]
* 1 cup [[Cookbook:Basmati rice|basmati rice]]
* 1-3 tablespoon [[Cookbook:Oregano|ground oregano]] 
* 1 can [[Cookbook:Black Bean|black beans]] 
* 1/2 cup [[Cookbook:Wine|red wine]]
* 2 tablespoon [[Cookbook:Pine Nut|pine nuts]]
* 1 tablespoon [[Cookbook:Caraway|caraway]]
* 1 cube [[Cookbook:Stock|vegetarian bouillon]]

==Procedure==
# Put the olive oil in very large saucepan, heat
# When oil is hot, add curry powder, potatoes, onions, red peppers, tomatoes
# Stir and fry until potatoes are nearly done
# Reduce heat, add crushed garlic, pine nuts, caraway, dried oregano, chili powder, stir
# In a separate pot (with a lid) heat 1 3/4 cup water to boil
# While waiting for water to boil, make a rice spice mix from 1 tablespoon paprika, pinch of saffron, 1 tablespoon cumin, 1 tablespoon oregano
# Mix rice spice mix with 1 cup basmati rice
# When water has begun to boil, reduce heat, add rice and rice spice mix.  Cover.  It will simmer for 20 minutes in total
# Add wine to saucepan, stir, turn heat off
# Let rice simmer for 10 minutes covered, keep rice covered
# Turn saucepan heat onto low, simmer, stirring occasionally
# Add bouillion cube to saucepan, mix
# Let rice simmer for another 10 minutes.  Stir contents of saucepan during these 10 minutes
# Turn heat off on rice
# When saucepan appears to be frying again, add rice to saucepan, stir
# When liquid is absorbed by rice, open one can black beans, add to saucepan
# Stir contents of saucepan until done
# Turn off heat.  Serve with cheese ([[Cookbook:Parmesan Cheese|Parmesan]] or [[Cookbook:Cotija Cheese|Cotija]] work best)
# Consume remainder of bottle of red wine while eating meal.  Serves 2-4

==Variations==
===Vegan Variation===
Serve without cheese.
===Easier Variation===
This dish is easier to cook if the potatoes are left out altogether.
===Other Variations===
Most vegetables go well in this dish.  Feel free to chop up any vegetable and
throw it in the pan during the initial frying stage.


[[Category:Vegan recipes|{{PAGENAME}}]]
[[Category:Rice recipes|{{PAGENAME}}]]
[[Category:Bean recipes|{{PAGENAME}}]]</text>
      <sha1>gx6h3kkfi2igbpzy4cnt8mx4yqit4p4</sha1>
    </revision>
  </page>
  <page>
    <title>File:LUCEM.jpg</title>
    <ns>6</ns>
    <id>40615</id>
    <revision>
      <id>232037</id>
      <timestamp>2005-09-10T22:00:43Z</timestamp>
      <contributor>
        <username>Athrash</username>
        <id>7262</id>
      </contributor>
      <comment>{{GFDL}} non venit ad lucem (Codex Bezae Syro-Latin text John 3: 20) not come to the light</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{GFDL}} non venit ad lucem (Codex Bezae Syro-Latin text John 3: 20) not come to the light</text>
      <sha1>26to5fh9ps9gj9l1o35qmyprd4hjdlm</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Big Cats/Snow leopard</title>
    <ns>111</ns>
    <id>40618</id>
    <revision>
      <id>895256</id>
      <parentid>420747</parentid>
      <timestamp>2007-06-13T16:08:53Z</timestamp>
      <contributor>
        <username>Tsca.bot</username>
        <id>12613</id>
      </contributor>
      <minor />
      <comment>[[Talk:Wikijunior Big Cats/Snow leopard]] moved to [[Wikijunior talk:Big Cats/Snow leopard]]: moving Wikijunior pages to the new namespace; see [[meta:user talk:tsca#Renaming_for_Wikijunior]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==References==
*[[w:Snow Leopard]]
*[http://www.kidsplanet.org/factsheets/snow_leopard.html Snow Leopard] - Accessed September 10, 2005
*[http://www.bigcatrescue.org/snow_leopard.htm Big Cat Rescue: Snow Leopard] - Accessed September 10, 2005

*I thought this was supposed to be a book for children? Pardon me if I'm wrong, but in the intro paragraph someone had placed &quot;Snow leopards dare to shag each other...&quot; Isn't that a bit inappropriate? Mate, perhaps, would be a better choice.[[User:Soulaegis|Soulaegis]] 20:33, 6 April 2006 (UTC)</text>
      <sha1>no1vj1nn3pysyq3150lq7lcxltd8wcn</sha1>
    </revision>
  </page>
  <page>
    <title>Ayyavazhi</title>
    <ns>0</ns>
    <id>40620</id>
    <revision>
      <id>2109155</id>
      <parentid>1856737</parentid>
      <timestamp>2011-05-27T13:29:45Z</timestamp>
      <contributor>
        <username>Arthurvogel</username>
        <id>448563</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''Ayyavazhi''' அய்யாவழி ([[w:Tamil language|Tamil]]: &quot;path of the father&quot;) is a [[w:Tamil people|Tamil]] [[w:monism|monistic]] religion that originated in South India in the mid-19th century. The 'zhi' (ழி)  in the word, 'Ayyavazhi', is a [[w:retroflex|retroflex]], ''ri''. Though Ayyavazhi has not received official recognition, it has transformed itself into a distinctive religious phenomenon, making its presence felt in India's southern districts of Tamil Nadu.
__NOTOC__ __NOEDITSECTION__
==Chapter 1: The Essence of Ayyavazhi==
*[[/Introduction/]]
*[[/Ekam/]]
*[[/Ayya Vaikundar/]]
*[[/Sivam/]]
*[[/Sakthi/]]
*[[/Narayana/]]

==Chapter 2: Worship Centers==
*[[/Thalaimaippathi/]]
*[[/Panchappathi/]]
*[[/Pathis/]]
*[[/Nizhal Thangals/]]

==Chapter 3: Scriptures==
*[[/Akilattirattu Ammanai/]]
*[[/Arul Nool/]]
*[[/Ayyavazhi Prayers/]]
*[[/Religious Characters/]]

==Chapter 4: History==
*[[/History of Ayyavazhi/]]
*[[/History of Pathis/]]
*[[/History of Nizhal Thangals/]]

==Chapter 5: Philosophical Concepts==
*[[/Philosophy of Akilattirattu Ammanai/]]
*[[/Eight Yugas/]]
*[[/Avatars/]]
*[[/Kroni/]]

==Chapter 6: Theology ==
*[[/Monism/]] 
*[[/Panentheism/]] 
*[[/Formation of Species/]]

==Chapter 7: Doctrine ==
*[[/Incarnation of Vaikundar/]]
*[[/Vinchai, Thirukkalyanam and Dharma Yukam/]]
*[[/Other teachings and debates/]]

==Chapter 7: Festivals==
*[[/Ayya Vaikunda Avataram/]]
*[[/Thiru Eadu Vasippu/]]
*[[/Akila Thirunal/]]

{{Alphabetical|A}}
{{Subjects|Indian religions}}
{{status|25%}}</text>
      <sha1>7e7xu498au7ru51u63zvrfwqlk7pppw</sha1>
    </revision>
  </page>
  <page>
    <title>Ayyavazhi/Ekam</title>
    <ns>0</ns>
    <id>40625</id>
    <revision>
      <id>2564127</id>
      <parentid>2063158</parentid>
      <timestamp>2013-10-07T12:09:42Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This is the term used in Akilattirattu Ammanai the holy book of Ayyavazhi to represent The Ultimate Oneness, and in Thiruvasakam - 2 it was stated that it was from this Ekam all this objects including the separate Godheads, Devas, Asuras etc. of the Universe formed.

Ekam is akin to the concept of Brahman in Advaita philosophy and Smarta theology.

{{BookCat}}</text>
      <sha1>9bbzt6mn59k9htahxqxocc2h14jj1tn</sha1>
    </revision>
  </page>
  <page>
    <title>Ayyavazhi/Ayya Vaikundar</title>
    <ns>0</ns>
    <id>40626</id>
    <revision>
      <id>2835732</id>
      <parentid>2835728</parentid>
      <timestamp>2015-03-29T13:01:33Z</timestamp>
      <contributor>
        <username>Atcovi</username>
        <id>1015207</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/117.218.102.129|117.218.102.129]] ([[User talk:117.218.102.129|talk]]) to last version by QuiteUnusual</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Ayya Vaikundar அய்யா வைகுண்டர், is a Manu (father, sovereign) avatar (the incarnation of a deity) of the Lord Narayana according to Akilattirattu Ammanai the holy script of the Ayyavazhi religion, a Tamil Hindu sect. (See also Ayyavazhi Mythology).

The physical human body of Ayya Vaikundar was born with the name Muthukutty. However, Muthukutty is referred to as Sampooranathevan, a deva (a deity), in the religious book Akilam. Ayya Vikundar, therefore, is a combination of the spirit of Narayana, the soul of the Supreme God, Ekam (God beyond conciouseness) and the body of an ordinary human being (Muthukutty).

Contents [hide]
1 Early life 
2 The transformation 
3 The incarnation of Ayya Vaikundar 
4 Tavam 
5 Incinerating evil spirits 
6 Seizing the powers of witchcraft, sorcery, and other esoteric magical practices 
7 Vaikundar as Pantaram 
8 Ordeals 
9 Post-imprisonment activities 
10 Attaining Vaikundam 
11 See also 
12 References 
 
== Early life ==

In 1809, Muthukutty was born in the southern most tip of south India, in a holy place named Swamithoppe (then part of a Tamaraikulam village) in the Kanyakumari District. His parents, Ponnu Nadar and Veiyelal, of the lower caste and of very poor means, initially named him Mudisoodum Perumal, meaning &quot;Lord Vishnu with a crown&quot;, but due to objections from those of higher caste, the family changed his name to Muthukutty.

The religious book, Akilam, states that the child was born dead, and then the soul of the deva Sampooranathevan was installed in the body. The family realized only stillness in the child, for a time immedietly after the birth, and then found the child alright. They were completely unaware of the exchange. This was in accord with the plan of Mayon to defeat the evil Kroni (analogous to Satan) during the sixth yuga (see The Incarnation of Ayya Vaikundar below and Ayyavazhi mythology). Thereafter, that boy grew up called Muthukutty in human history, and Sampooranathevan in Ayyavazhi mythology.

Muthukutty (Sampooranathevan), a religious minded boy, had special interest in choosing to worship Lord Vishnu (herein, synonymous with Narayana and Mayon). The holy book Akilam mentions that he had set a pedestal for Lord Vishnu in his house and worshipped the deity devoutly.

At the age of seventeen, Muthukutty married Thirumalammal (called Paradevathai in the holy book, Akilam) from the nearby village of Puviyur, and led a family life with her and their only son. Although Thirumalammal had been previously married, she was allowed to leave her former husband since her karma with him was fulfilled.

(Note: There are claims that the child was born to her in the relationship with her first husband, consistent with some quotes from the holy book, Akilam.)

According to the Akilam, Sampooranathevan's marriage had been divinely established to the mythical figure Paradevathai in an arrangement with the Lord Mayon (again as part of the plan to defeat the evil Kroni).

Muthukutty earned his living as a Palmyra climber and as an agricultural laborer.

== The transformation ==

In his twenty-fourth year, Muthukutty (Sampooranathevan) was struck by a severe illness that inflicted acute pain and suffering for a year. Muthukutty's mother, receiving instruction in her dreams, took her diseased son to the temple at Thiruchendur, during the Fall festival (19th day of the month of Masi, in the year 1008 of Malayalam era), 1833 AD. Muthukutty arrived in Thiruchendur in a cradle, carried by the kith and kin of the family. In Thiruchendur, Muthukutty went in to the sea and disappeared. Following a full day of waiting for him at the shore, all, but his mother, Veilal, returned to Tamaraikulam, but Veilal alone stayed weeping on the sea-shore.

On the third day, Lord Vaikundar appeared on the sea-shore. (See: post-incarnational events)). On seeing him, Veiyelal mistook him to be her son and tried to embrace him. But Lord Vaikundar told her that he was no longer her son, but the son of Narayana. He also told that &quot;Look upon the face of the water of the sea, where I've born&quot; and he told that &quot; Before 1008, Masi you were known as my mother, but now I was born as the son of Narayan and for the dawn of Dharma Yukam I am going to the world with the Vinchais given by Narayana.&quot; By saying this he take some sea water (Katal Patham) in his hand, he asked her to drink. Upon her refusal, she fell down and died.

Then as per the instructions of Lord Narayana, inside the sea, he started walking towards Detchanam. The place where Ayya Vaikundar performed the Avataram (translation unsure: possibly, a ceremony of the incarnation) was a holy place for the devotees of Ayyavazhi and they erected a temple there named Avatharappathi at Thiruchendur.

== The incarnation of Ayya Vaikundar ==

Ayya Vaikundar, who arose from the sea at Thiruchendur on 20th of the Tamil Month of Masi, is considered a unique Avatar. Akilam, the holy book, speaks about it in great detail, as summarized below:

First, in each of the five yugas (see Pre-Incarnational Events) prior to the Avatar of Ayya Vaikundar, as each fragment of Kroni (evil or Devil) came into physical form, the Lord Narayana incarnated as well, destroying them. However, in this the sixth yuga, Kroni was called Kali (also Kalineesan and Kaliyan), (not the Hindu deity) and having no physical form (see Pre-Incarnational Events for this account) he occupied the mind of people of earth as the Mayai (illusion), causing them to behave discourteously. Due to the boons Kaliyan claimed, it was impossible to destroy him in this yuga as in the previous ones, as found in the Akilam, the holy book, &quot;Munnindru kolla Moovaralume arithu&quot; (translated: It was impossible even for Trimurthi to oppose him). Since, Kaliyan held the boon for the birth of gods, and birth of Brahmins, it was impossible for Narayan, or any others, to incarnate directly in the world to destroy him. Finally, Kaliyan promised that if he made trouble to any Pantaram on earth, (See:Promise made by Kaliyan) all his boons would be forfeited and he would die in hell. So Kaliyan would only be destroyed if he trouble any Pantarams on earth.

Since God could not incarnate directly, He incarnated as Ayya Vaikundar in three stages.

*The first stage of Avatar was the born dead child (birth of the Body). 
*Next, immediately the soul of Sampooranathevan was installed into the body , along with the Spirit (not Soul) of Narayana kept in Parvatha Ucchi Malai (a mythical mountain believed to be in this region) after the completion of the Krishna Avatar. This was the second stage of the Avatar. 
*Then in the sea (during the 24th year), the soul of Sampooranathevan was granted moksha (liberation from the cycle of death and birth, synonymous with heaven), unified to the Ultimate Soul. Now, the Spirit of Narayana along with the Ultimate Soul (Paramatma) incarnated in the body of a human being (Muthukutty). (see:The Incarnation) This is the third stage of Avatar and from here he was called Ayya Vaikundar.Then Ayya Vaikundar was given Vinchai by Narayanar.(see: Vinchai to Vaikundar). 

So Ayya Vaikundar is not merely a human, not merely Narayana, and not merely the Ultimate Soul, on the other hand he is a human and he is the Ultimate Soul and he is Narayana. He is the one who had the responsibility to destroy the sixth fragment of Kroni, as told by Sivan earlier. Such a technique was practiced to overcome the boons offered to Kaliyan.

== Tavam ==

Having reached Poovantanthoppe, (present-day Swamithope), he undertook to perform the proclaimed tavam. The tavam consisted of three stages, each spanning two years. Akilattirattu says that there were three specific intentions for the respective three stages of the Tavam. There is a tradition that describes his postures during the six-year tavam as follows: during the first two years, he stood inside a pit of six depth, during the next two years, squatted on the ground, and, during last two years, sat on a raised platform. His appearance was squalid, &quot;long and entangled plait of hair&quot; and frayed clothes. He seems have spoken less and subsisted on frugal meals.

== Incinerating evil spirits ==

Akilattirattu speaks of this act of incinerating the evil spirits as an important event in the incarnation of Ayya Vaikundar. It took place when he was performing his great tavam, which had been announced by him to be the means of destroying the kalimayai - the illusory evil force. Akilattirattu says that, since he had come as 'the invincible avatar', his foes – the devils, demons, and evil spirits were to be incinerated. He, then, gathered the people around, and caused some of them, both male and female, to get 'possessed' of the evil spirits (peyattam). The 'possessed' ones came and danced in front of the crowd as if the evil spirits had come upon them. Vaikundar, then, ordered these evil spirits to make an oath, in front of the people, to surrender their powers and get burned up in flames. When he had finished his orders, those dancing under the duress of 'possession' got exhausted and fell flat on the ground. Thus the evil spirits were incinerated. Akilam speaks it in a grand way.

== Seizing the powers of witchcraft, sorcery, and other esoteric magical practices ==

Similarly, Vaikundar performed another action to 'seize the esoteric evil powers'. Akilam says that, he had taken away the powers of those who knew to perform witchcraft, sorcery, and other magical rituals. People living in the hills, called as Kanikkarar, were believed to be powerful shamans or witchdoctors, having powers to contain or to provoke the demons. Vaikundar, in yet another occasion of trance, made some of these Kanikkarar to testify in front of the people that they had surrendered their powers. People grew appreciative of Ayya's actions. They began addressing him as Vaikuntacami. This implied an attribution of divinity to Vaikundar. Having incinerated the demons, and seized the powers of esoteric evil practices, Vaikundar exhorted the people as follows:

:&quot;There are no demons, no devils, No ill effects of magical practices, No disease, no pain, and no extortion of taxes, And, therefore, live courageously.&quot;

== Vaikundar as Pantaram ==

The fame of Vaikundar had begun to spread in the countries of Tiruvitankur and Tirunelveli, and he had been gradually recognised socially as a religious person with extraordinary powers. In the religious parlance of the time, he was addressed as a Pantaram, a religious person hailing from, and serving the ordinary folk. Akilattirattu addresses him as NarayanaPantaram.

People came to him to listen to his teachings and instructions, &quot;to be cured by him of different diseases&quot;, to witness, worship and serve a religious person undertaking tavam. Vaikundar encouraged the people to come together around a well to take a ritual bath, irrespective of caste differences. He encouraged them to dine together in his presence.

He gave out a number of teachings and instructions, the central point of which was that he had come to abolish Kali Yukam, and to usher in an age of Dharma Yukam, during the time of which the now-oppressed and suffering people would be liberated and rule the land under his leadership. 'Uplift of the lowly is dharmam’ was a constant refrain in his teachings.

People were enjoined to serve as catalysts for the destruction of Kali by transforming themselves to be 'people of Dharma Yukam' and to acquire a new character. The new character would come upon them, he said, if they-learned to live with self-respect, social dignity and fearlessness. Underscoring the importance of self-respect and social dignity, he said, ‘if one lives with dignity and self-respect, the kali would destroy itself’ . He said when people grew out of kalimayai, Dharma Yukam would unfold itself and in that age, he would rule over the people as Dharma Raja, the king of Dharma Yukam.

== Ordeals ==

Against the background of the growing popularity of Vaikundar, and the convergence of people around him in multitudes, a complaint seems to have been preferred against him to the king of Travancore (Kalineesan). He arrests Vaikundar and jailed and tortured him a lot.

== Post-imprisonment activities ==

After he returned from imprisonment, Vaikundar inspired a group of his devotees to undertake a religious exercise called Thuvayal Thavasu. He also practiced several activities of divinity. He married the Saptha Kanniyar as Narayanar , the Seven deities in the form of Ekam , He initiated a lot of festivities around him .&quot; There were ceremonial processions held amidst singing, incantations and shouts of joy by the followers. Several rites and rituals were instituted during these occasions.

== Attaining Vaikundam ==

Later Vaikundar was invited by his 'devotees' to their homes and treated in a grand manner. By way of soliciting his blessings, his 'devotees' carried him to different places. During these occasions, he laid foundations in various places for small shrine-like centres, called as Nizhal Thangals. Vaikundar came to recognize five individuals as his closest disciples. Through one of his disciples, Hari Gopalan Citar, he wrote the holy book, called Akilam.

On June 2, 1851, Vaikundar attained Vaikundam (see also:Attaining Vaikundam). As he attained Vaikundam his body was interned in a tomb and, around that, a pati (temple) was raised later on. His devotees continued to visit this site, and performed the rituals as the used to do when Vaikundar was bodily present. His life and works remain the foundation of the religion Ayyavazhi. The head temple of the Ayyavazhi religion is called the Swamithoppepathi and is located in the Village of Swamithope.

{{BookCat}}</text>
      <sha1>iqnbyqvqrg57z6x58iwb0sismjbeecg</sha1>
    </revision>
  </page>
  <page>
    <title>Category:Ayyavazhi</title>
    <ns>14</ns>
    <id>40627</id>
    <revision>
      <id>1515423</id>
      <parentid>232087</parentid>
      <timestamp>2009-06-02T00:51:56Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat and added description</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This category contains pages that are part of the [[{{PAGENAME}}]] book.

[[Category:Indian religions]]</text>
      <sha1>qn7cjq7qeaf6sijqurblh8ieccnq3t6</sha1>
    </revision>
  </page>
  <page>
    <title>Ayyavazhi/Thalaimaippathi</title>
    <ns>0</ns>
    <id>40628</id>
    <revision>
      <id>2743497</id>
      <parentid>2114742</parentid>
      <timestamp>2014-12-09T00:02:56Z</timestamp>
      <contributor>
        <username>Omnipaedista</username>
        <id>150965</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''Swamithoppe Pathi''' (Tamil: சுவாமிதோப்பு பதி; also called Swamithoppu-pathi, Manavaippathi, or Thalaimaippathi) is the primary pathi of the Ayyavazhi path of Hinduism, the head of all worship centers of Ayyavazhi, and the place where Ayya Vaikundar is said to have performed the Tavam.

According to Ayyavazhi , Ayya Vaikundar , an incarnation of Lord Narayana, carried out his tavam (efforts) at Poovantanthoppe, attracting many people from across India. The ponnmenikkoodu (Sacred Golden Body) of Ayya Vaikuntar were interred there, and the square-shaped Swamithoppu-pathi was constructed enveloping them. The holy book Akilathirattu ammanai of Ayyavazhi refers to the temple as &quot;Thoppuppathi&quot;.

Swamithoppe Pathi contains two oil lamps (kuthuvilakku), an elunetru, and a large mirror. On a raised pedestal, covered with kavi cloth, the temple also preserves some articles believed to have been used by Ayya Vaikuntar, including a rattan cane (perampu) and a pair of wooden sandals.

Swamithoppe Pathi is the headquarters of the five pathis (Panchappathis) of Ayyavazhi , and its geographical focal point. Swamithoppe Pathi, is located in the village of Swamithope, which lies southeast of the City of Nagercoil, the head quarters (capital) of the District of Kanyakumari in the State of Tamil Nadu at the extreme southern tip of India. Swamithope lies about half-way between the Cities of Nagercoil and Kanniyakumari on the Nagercoil-Kanniyakumari road.

{{BookCat}}</text>
      <sha1>129vmvm1827g13hkt0yzb54gh5ktaht</sha1>
    </revision>
  </page>
  <page>
    <title>Ayyavazhi/Panchappathi</title>
    <ns>0</ns>
    <id>40629</id>
    <revision>
      <id>2564178</id>
      <parentid>232091</parentid>
      <timestamp>2013-10-07T16:43:13Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">A Pathi (from a Tamil word meaning &quot;The place where God is&quot;) is an important centre of congregational worship for the South Indian religion of Ayyavazhi, having a relatively large structure like that of a temple.

They obtain their significance from the fact that Ayya Vaikundar and his activities were historically associated with them. There are five Pathis, (&quot;Five places where God is&quot;) which appeared during the time of Ayya Vaikundar. According to Akilattirattu Ammanai the source of Ayyavazhi mythology, these Panchappathis are the places where Ayya Vaikundar performed the Avatara Ekanai. These are the sacred places for the people of Ayyavazhi. They are:

*Swamithoppepathi 
*Ambalappathi 
*Muttappathi 
*Tamaraikulampathi 
*Pooppathi 
*The Thalaimaippathi is the headquarters of the Panchappathis.

{{Bookcat}}</text>
      <sha1>hd3g25wiotfxydyg9jr33cj4ycd74p6</sha1>
    </revision>
  </page>
  <page>
    <title>Ayyavazhi/Nizhal Thangals</title>
    <ns>0</ns>
    <id>40630</id>
    <revision>
      <id>2564177</id>
      <parentid>232092</parentid>
      <timestamp>2013-10-07T16:42:37Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">A Nizhal Thangal (நிழல் தாங்கல்) (also called Narayana Swamy Temple) is a simple temple of the Ayyavazhi religion built per the instructions of Akilattirattu Ammanai by commoners in order to worship without distinction of color, race or caste. Cleanliness is strictly enforced: there are no sacrifices, no incenses, no arathi and no poojari. Inside the temples, no murti is used. Instead, a saffron cloth is laid on a chair, upon which a rudraksha is placed, and a mirror is placed on the wall behind it. Tamil is the official language of worship, and the object of worship is Lord Narayana with the trinity of Brahma, Vishnu, and Shiva. A survey from the year 1998 states that there are approximately 7000 Nizhal Thangals throughout South India.

Some Nizhal Thangals serve as community centers, with facilities to cook for large crowds of people; others serve as schools for the community

{{BookCat}}</text>
      <sha1>shwrbpcw7njzntehji126j5q1qf6my9</sha1>
    </revision>
  </page>
  <page>
    <title>Ayyavazhi/Akilattirattu Ammanai</title>
    <ns>0</ns>
    <id>40631</id>
    <revision>
      <id>2743486</id>
      <parentid>923222</parentid>
      <timestamp>2014-12-08T23:56:55Z</timestamp>
      <contributor>
        <username>Omnipaedista</username>
        <id>150965</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''Akilathirattu Ammanai''' (Tamil: அகிலத்திரட்டு அம்மானை; ''akilam'' (&quot;world&quot;), ''thirattu'' (&quot;collection&quot;), ''ammanai'' (&quot;ballad&quot;)), also called '''Thiru Edu''' (venerable book), is the main religious book of the Southern Indian Ayyavazhi faith, an offshoot of Hinduism.  The title is often abbreviated to '''Akilam'''.

==History==
       
According to the book, ''Akilam'', Hari Gopalan Citar wrote this book on the twenty-seventh day of the Tamil month of Karthikai (November/December) in the year 1016 ME (1841 CE). The author claims that God woke him up during his sleep and commissioned him to take dictation from what he said. ''Akilathirattu'' was recorded on palm leaves until 1939, when it was given printed form.

According to the author, the book is the story of God coming in this age, the Kali Yukam or Iron Age, to rule the world by transforming it into that of Dharma Yukam. This story of faith has woven together the historical facts about Ayya Vaikundar and his activities, with reinterpretations of episodes from the Hindu Puranas (mythologies) and Itihasas (epics). It is presented as if Vishnu is narrating the whole story to his consort Lakshmi.

Though the Citar Hari Gopalan wrote the book Akilam, as per his claim, he did not know any thing about the contents of the book. He woke up in the morning as usual and he didn't know what he had written the day before. 

As soon as Ayya Vaikundar attained Vaikundam, the tied-up palm leaf text, which was until then not opened was unfolded. It was there the regulations of Ayyavazhi contains. As per the instructions found there in Akilam, Ayyavazhi was preached by the Citars far and wide.

== Style==
''Akilam'' is in two parts; the first is an account of the ages preceding that of the present age, the Kali Yugam, and the second is an account of the activities of Ayya Vaikundar leading up to his attaining Vaikundam.

''Akilathirattu'' is written as a poem in the Tamil language. The narration alternates between two sub-genres, called Viruttam and Natai. Both the sub-genres employ many poetic devices, such as alliteration and hyperbatons. It contains more than 15000 lines. There are seventeen sections:

== Sections ==
The ''Akilam'' is divided into seventeen parts:

*[[Akilam one]]
*[[Akilam two]]
*[[Akilam three]]
*[[Akilam four]]
*[[Akilam five]]
*[[Akilam six]]
*[[Akilam seven]]
*[[Akilam eight]]
*[[Akilam nine]]
*[[Akilam ten]]
*[[Akilam eleven]]
*[[Akilam twelve]]
*[[Akilam thirteen]]
*[[Akilam fourteen]]
*[[Akilam fifteen]]
*[[Akilam sixteen]]
*[[Akilam seventeen]]

[[Category:Ayyavazhi]]</text>
      <sha1>6jkqj53za4oml6hgw5iiw37mxzmlmel</sha1>
    </revision>
  </page>
  <page>
    <title>Engineering Acoustics/Examples</title>
    <ns>0</ns>
    <id>40633</id>
    <revision>
      <id>1350067</id>
      <parentid>1350065</parentid>
      <timestamp>2008-12-02T17:28:39Z</timestamp>
      <contributor>
        <username>John.d</username>
        <id>136420</id>
      </contributor>
      <comment>/* Example System */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Engineering Acoustics}}
=Example System=

[[Image:Electromechanical_analogy_example.PNG‎]]

Note: The crank indicates an ideal velocity generator, with an amplitude of &lt;math&gt;u_0&lt;/math&gt; rotating at &lt;math&gt;\omega&lt;/math&gt; rad/s.

=Impedance Analog Solution=
[[Image:Impedance_example.PNG|600px|]]

=Mobility Analog Solution=
[[Image:Mobility_example.PNG|800px|]]

[http://en.wikibooks.org/wiki/Engineering_Acoustics Back to Main page]</text>
      <sha1>2o8yolpgxmlsmszoe43dd9z8a26di37</sha1>
    </revision>
  </page>
  <page>
    <title>Cookbook:Sourdough Starter</title>
    <ns>102</ns>
    <id>40635</id>
    <revision>
      <id>2985453</id>
      <parentid>2838213</parentid>
      <timestamp>2015-08-18T17:45:07Z</timestamp>
      <contributor>
        <username>Storkk</username>
        <id>76541</id>
      </contributor>
      <comment>/* Refreshment */ +video</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{recipe}}
[[Image:Masa madre.jpg|right|thumb|250px|A somewhat liquid sourdough starter]]

Sourdough is generally considered wild yeast, though the flavor of sourdough is actually from a mixture of yeast and lacto-bacteria. Once a stable culture has been created, the amount of leavening gas is produced roughly equally by the yeasts and bacteria.

The flavor and nature of a given sourdough has been claimed to depend strongly on the location. The famous San Francisco sourdough grows only in (and near) the city of San Francisco; if taken elsewhere local yeasts and bacteria will soon grow, and in a few months the cultures will no longer be the same. For this reason, sourdough fans every few months trade batches with San Francisco locals, to get the original flavor or leavening action.

Because each local variation is different, rising times and flavors will also diverge. Some batches, can even take longer to rise, up to a full day. These alterations will then result in a local specific flavor. 

Cooking with sourdough must be planned days or even weeks in advance to ensure sufficient starter is on hand. Bread can take 3 days between starting and baking, not counting time to prepare the starter. 

==Obtaining starter==
{{TOC right}}
Sourdough starter is alive. Thus the easiest way to get starter is find someone with it, and borrow a small amount and increase it. If you wish to have a starter other than whatever is local, this is the only way to get it.
You can get a free sourdough starter that has been kept alive for 150 years from the [http://carlsfriends.net/ Friends of Carl Griffith].

==Making your own starter==
If you cannot find a source of starter it is easy to make your own. 

===Key concepts===
Several key concepts are needed for understanding the sourdough production process. In what follows, recipe by volume measures are probably familiar.  Measurement of the ingredients by weight, and any notation system used may be new and unfamiliar. Such notation systems are actually very simple, and it is recommended you familiarize yourself with them.

====Two types of sourdough starter====
In the most basic sense, there are two types of sourdough used in baking. One type is used in acid-base reactions to form leavening gas, such as sourdough quick breads or pancakes. Such doughs or more liquid batters might be combined with baking soda for the production of leavening gas. These sourdoughs may be kept in an imbalanced or unstable state of abnormally high acidity. The other type of sourdoughs are ideally kept in stable-culture states. Breads made from such starters are often associated with places like San Francisco and French sourdoughs, or German-rye sourdoughs, etc. These sourdoughs are leavened by the gas production of yeasts and lactobacilli during fermentation.

Unstable sourdoughs can easily be created from stable ones, all that's needed is to stop refreshing it as frequently, or to refresh it with a too-high ratio of old:new flour. For both types, sufficient time is required for the organisms to initially grow, and with respect to the latter type, balance themselves into what is called a stable culture. Patience is required for creating both types, and with respect to stable cultures, more attention to details are required.

====Refreshment====
[[File:Rye sourdough starter culture rising.webm|thumb|left|Timelapse of a newly refreshed stiff (100% hydration) rye starter culture over a 10-hour period at roughly 25°C]]
Refreshment occurs when new dough is mixed with older dough. New dough is made by mixing fresh flour with water. New dough becomes older dough when it has sufficient age. New dough is essentially new food supply for the yeasts and lactobacilli existing in the older dough. That food supply comes from the flour in the dough.

When older dough is mixed with new dough, any organisms in the older dough inoculate the new dough. With sufficient time the populations of organisms in the older dough increase. Over multiple refreshments, a stable culture emerges. If the objective is maintenance of a stable culture suitable for leavening bread, one which is stored or fermented at room temperatures, refreshments that occur once per day are acceptable.

====Temperature====
According to sourdough researcher Micheal Gänzle, optimum growth for one strain of ''Lactobacillus sanfransicensis'' occurs at 32 °C (89.6 °F), and for the yeast ''Candida milleri'', 27 °C (80.6 °F). That yeast stops growing at 35–37 °C (95–99 °F). Some enthusiasts think that starter-storage temperatures over 27 °C (80.6 °F) are too hot. At temperatures lower than that, the generation times of both organisms are increased.

According to Van der Meulen, Scheirlinck, Van Schoor, et al., when starting a spontaneous starter, enterococci and lactococci establish themselves before lactobacilli, which establish themselves before the yeasts. The emergence of heterofermentative lactic acid bacteria follows, and is a marker of having a stable culture. These bacteria produce CO2 leavening gas. 

Thus, a tactic to speed the establishment of a stable culture may be to use optimum lactobacilli temperatures in the first 2-3 days, then slightly lower temperatures better suited to yeast growth afterward. Once a stable culture is established, the mother dough is often kept at room temperature, and sometimes is refrigerated to slow growth. Calvel cautioned against the use of storage temperatures lower than 10 °C (50 °F).

====pH====
{{NOTE|The [[w:pH|pH]] metric (negative log of the activity of the hydrogen ion in an aqueous solution) offers a scale to measure the acidity or alkalinity of liquids. It takes a value between 0.0 and 14.0 and low pH values (tending towards zero) are acidic, 7 is neutral (the pH of pure water), and high pH values (tending towards 14) are alkaline.}}

Until bacteria and yeast populations establish themselves, the pH of the dough tends to be sweeter or more alkaline. The &quot;sour&quot; of sourdough essentially means &quot;acid&quot; dough. As new dough ages it becomes more acidic due to production of lactic and acetic acids by bacteria growing in the sourdough. Sourdough starter has preservation effects in the bread made with it, decreasing its rate of staling. The pH of a dough can be measured at anytime; however, from a dough kneader's viewpoint, a more acidic dough is stickier. 

In his correspondence with Dan Wing, Gänzle said the optimum pH for lactobacilli is in the range of 5.0-to-5.5. The lactobacilli colonies stop growing at 3.8, they stop producing acid at 3.6. New dough has a higher pH than sourdough, so every time mother dough is refreshed with new dough, the pH is increased or made more alkaline. As the organisms' populations grow following refreshment, they produce more acid, lowering the dough's pH as time passes. The yeasts are less sensitive to acidic conditions than the lactobacilli, so by manipulating the older:new dough ratio, in cooperation with the time interval between refreshments, conditions more or less favorable for each set of organisms are created.

====Typical ingredients====
*unbleached (wholegrain works best) [[Cookbook:Flour|flour]] 
*non-chlorinated [[Cookbook:Water|water]]

Bleached flour or tap water can be used, but may give undesirable results. Bleached flour has most of the yeasts killed. Chlorine in tap water can inhibit the wild yeast that you wish to grow. For typical, artisan-style lean-dough  breads, the wheat flour used should be of a protein level suitable for bread. For quick breads, lower protein flours are commonly desired. 

Flour manufacturers may not have added barley malt or enzymes, thus diastatic malt may be a desired ingredient in the initial dough.  Diastatic malt is generally finely ground malted barley or other sprouted grain that has not been subjected to high temperatures which inactivate its enzymes. One function of the enzymes is to snip apart the starch matrix into food the organisms can consume. If the flour's ingredient label doesn't indicate enzymes or malt were added, then add powdered, diastatic malt at a rate of 0-2% of the flour weight. Calvel used 0.5% based on the flour weight in the initial dough of his primary-culture levain.

===Firm starter by weight=== 
The following formula was inspired by the former Larraburu Company of San Francisco.&lt;ref name=&quot;larraburu&quot;&gt;{{cite journal |authors=A.M. Galal, J.A. Johnson, E. Varriano-Marston |title=Lactic and Volatile (C2-C5) Organic Acids of San Francisco Sourdough French Bread |journal=Cereal Chemistry |volume=55 |pages=461-468 |year=1978 |url=http://www.aaccnet.org/publications/cc/backissues/1978/Documents/chem55_461.pdf |format=PDF |accessdate=2012-Apr-05}}&lt;/ref&gt; Inspiration was also provided by the works of sourdough researcher Micheal Gänzle, as well as many others, found by following the links in the references section. What follows is a simple, basic process, and thus should be beneficial for beginners' understanding. There are many instructions by excellent bakers that use more complexity in their sourdough formulas, often for very good reasons. Unfortunately, those very same embellishments tend to obscure the basic process.

====Bakers' percentages====
Professional bakers measure by weight due to its higher accuracy compared to volumetric measure, even though some professionals publish volumetric recipes. Professional bakers also tend to work with larger dough amounts in commercial settings. One advantage of bakers percentages is that they may be easily scaled to larger or smaller quantities. Baker's percentages are based on flour weight, and are calculated so the flour percentage equals 100%.  However, this is not an article about how to calculate them.

A brief review of how to use a typical formula composed of bakers' percentages:
:{{math|''ingredient weight'' {{=}} ''flour weight'' × {{frac|''baker percent&lt;sub&gt;(ingredient)&lt;/sub&gt;''|''100%''}}}}

Sourdough has a flour fraction, as aged as it may be, and it has a water fraction. This means the starter or older dough would need to be proportioned in order that the new flour and the old flour (in the older dough) would add up to 100%. An example of such a notation system is presented by Kulp and Lorenz in their Table 10, &quot;Formulas of U.S. Sourdough French Bread and Panettone Bread&quot;.&lt;ref&gt;{{cite book |author=Lorenz, Klaus J.; Kulp, Karel |title=Handbook of Dough Fermentation |publisher=Marcel Dekker Inc |location=New York |year=2003 |page=130 |url=http://books.google.com/books?id=SlLLsoHmedUC&amp;pg=PA130&amp;lpg=PA130 |isbn=0-8247-5527-8 |accessdate=2012-04-11}}&lt;/ref&gt;

In the notation system of ''Firm starter by weight'', the new flour is considered the 100% ingredient. Such a notation system is similar to the one Gisslen used in his formula for Rustic Sourdough Bread, a final dough.&lt;ref&gt;{{cite book |author=Gisslen, Wayne |title=Professional baking |publisher=John Wiley |location=New York |edition=5th |year=2009 |page=158 |isbn=0-471-78349-8}}&lt;/ref&gt;  The starter from the prior refreshment and its flour, the old flour, is not included in the 100% new-flour value. Thus, the above formula has been altered with a minor change:
:{{math|''ingredient weight'' {{=}} ''new-flour weight'' × {{frac|''baker percent&lt;sub&gt;(ingredient)&lt;/sub&gt;''|''100%''}}}}

====Scales or balances====
A scale of 1/10 gram readability or better is required for measuring the ingredient weights that follow. The error range of a 1 gram readability scale when measuring 5 grams is 20%.

If your scale reads with only 1 gram of accuracy, the weights given will need to be increased. Simply multiply the flour weights by 10 and recalculate the other weights from the bakers' percentages. You could also multiply the given weights by 10.

====Initial dough====

:{| class=wikitable style=&quot;text-align:center;&quot;
|-
! colspan=3 | Initial dough&lt;br /&gt;1st day 
|-
! ingredient || bakers&lt;br&gt;% || grams 
|-
| align=left | wheat flour || 100% || 13.33 
|-
| align=left | water || 50% || 6.67 
|-
! align=right | formula || 150% ||style=&quot;color:green;&quot;| 20 
|}

The bottom line's numbers are known as the formula percentage and formula weight.

Combine 13.33 grams of flour with 6.67 grams of water in a rather small bowl, about the size of a custard cup.  Lightly mix it with a spoon until the water has just combined with all or most all of the flour. A second spoon is helpful for scraping the dough from the first spoon. Let it sit or rest for a few minutes to hydrate. Next, finish the mixing process by hand kneading it. It is too small of a dough amount for mixing machines, and it won't need much kneading. If it gets hard to knead, and the dry flour is not fully incorporated, let it rest for 15-20 minutes to relax the dough, then finish kneading it. Form it into a small dough ball. Be sure to have prepared a small jar or container half full of flour, with a slight depression in the center as viewed from above. Place the dough ball into the depression. The purpose of the flour and its depression is to keep the dough ball from rolling and contacting the container and sticking to it: it also raises it higher in the jar, easing daily access. Loosely cover the container with a lid, and ideally store it in a location with a temperature in the range of 27 to 32 °C (81 to 89.6 °F), slightly warmer than room temperature, for about 24 hours. If fermentation occurs at temperatures lower than that, the organisms' generation times are increased.

====Maintain-weight refreshments====
:{| class=wikitable style=&quot;text-align:center;&quot;
|-
! colspan=3 |Mother dough&lt;br /&gt;Maintain weight&lt;br /&gt;&lt;span style=&quot;font-size:8pt;font-weight:normal;&quot;&gt;Days 2-7 (or longer)&lt;br /&gt;refresh every 24 hrs&lt;/span&gt;
|-
! ingredient || bakers&lt;br&gt;% || grams 
|-
| align=left | wheat flour  || 100% || 10
|-
| align=left | water  || 50% || 5
|-
| align=left | starter  || 50% || 5
|-
! align=right | formula || 200% ||style=&quot;color:red;&quot;| 20
|}

The flour weight equals the formula weight divided by the formula percentage: &lt;span style=&quot;color:green;&quot;&gt;'''20'''&lt;/span&gt;&amp;nbsp;g&amp;nbsp;÷&amp;nbsp;200%&amp;nbsp;=&amp;nbsp;10&amp;nbsp;g. 

Lightly mix 10 grams of flour with 5 grams of water, making 15 grams of new dough, and let it rest for at least a few minutes to hydrate. Hand knead the result, making a new-dough ball. Weigh 5 grams of starter from the total of &lt;span style=&quot;color:green;&quot;&gt;'''20'''&lt;/span&gt; grams made the previous day, and discard the remainder. Knead the starter and new-dough ball together well, and form into a refreshed-dough ball. Place it back in the jar, and cover. Repeat this process once per day for at least 7 days. Until you have a stable sourdough and one that rises or swells reliably, continue to ferment it in the range of 27 to 32 °C (81 to 89.6 °F), refreshing once per day. Once your dough rises reliably, fermentation may occur at room temperatures.  If you don't have such a warm place, and only have room temperature available, expect the process to take a bit longer.

Presuming you originally used a small jar half-filled with new flour, and haven't changed the flour, you will probably observe that it moistens somewhat after a few refreshments, and once a firm sourdough culture is successfully created and fermented in this flour, it will begin to develop its own set of faint odors. It is no longer fresh, new flour.

You may decide to change the mother dough's flour weight for various reasons. However, the ratios of the newly added fresh flour to the older flour already fermented are rather important.  This ratio is somewhat occulted in bakers' formula notation, so figure and weigh carefully.

====Increase-weight refreshments====
:{| class=wikitable style=&quot;text-align:center;&quot;
|-
! colspan=3 |Mother dough&lt;br /&gt;Increase weight
|-
! ingredient || bakers&lt;br&gt;% || grams
|-
| align=left | wheat flour || 100% || 40
|-
| align=left | water || 50% || 20
|-
| align=left | starter || 50% ||style=&quot;color:red;&quot;| '''20'''
|-
! align=right | formula || 200% || 80
|}

To increase the starter weight the same abstract formula is used to determine the flour weight, but the values used are different. You'll note that in the matrix the 20&amp;nbsp;g figure occurs on an ingredient line, the starter's line instead of the formula line. To determine the flour weight, the existing starter weight from the prior fermentation is divided by the bakers' percent&lt;sub&gt;(starter)&lt;/sub&gt;: &lt;span style=&quot;color:red;&quot;&gt;'''20'''&lt;/span&gt;&amp;nbsp;g&amp;nbsp;÷&amp;nbsp;50%&amp;nbsp;=&amp;nbsp;40&amp;nbsp;g. This is the maximum amount of new flour that can be used for this increase-weight refreshment given the available starter weight. 

The formula claims you have 20 grams of starter from the prior day. However, weighing it and calculating ingredient weights based on the actual weight is a consideration due to losses, such as dough that sticks to the mixing spoon, or storage container, etc. With a small dough ball, more precision is required. 

If you use less flour and the prior day's starter weighs 20&amp;nbsp;g, there will be some starter discard when measuring to the calculated starter weight. If more starter is needed than the formula weight of 80&amp;nbsp;g, it is best to use only 40&amp;nbsp;g of flour, let it ferment for 24 hours, then increase it once again. 

Presuming the next step's formula calls for a bakers' percent&lt;sub&gt;(starter)&lt;/sub&gt; of 50%, and presuming you have no dough losses, the table above shows a formula weight of 80&amp;nbsp;g. Thus 80&amp;nbsp;g ÷ 50% = 160&amp;nbsp;g. This means 160&amp;nbsp;g is the maximum amount of flour to use on the next increase. This increase method maintains the starter:flour ratio and the implied ratio of old:new flour.

After you have increased the mother dough to sufficient weight for your final dough, it is important to weigh and reserve your mother-dough starter before adding the other portion to the final dough, otherwise you will lose your stable culture. In the formula weights calculated above, the starter weight is 5 grams, thus you need 5 grams more starter at the end of increase refreshments than the final-dough formula demands. You may also decide to maintain a different weight mother dough, particularly so your increase weight iterations synchronize better to the final starter weight needed.

====Starter amount for final dough====
The Larraburu Company is reported to have used a baker's percent value of 15% for the final dough.&lt;ref name=&quot;larraburu&quot; /&gt; Let's say you have increased your original 20&amp;nbsp;g stable-culture sourdough ball to 80&amp;nbsp;g of starter (because of losses, you'll actually have a little less than that). Remember to reserve 5&amp;nbsp;g for the mother-dough ball.  80&amp;nbsp;g&amp;nbsp;−&amp;nbsp;5&amp;nbsp;g&amp;nbsp;=&amp;nbsp;75&amp;nbsp;g. How much bread can you make? 75&amp;nbsp;g&amp;nbsp;÷&amp;nbsp;15%&amp;nbsp;=&amp;nbsp;500&amp;nbsp;g. This means when you have made 80&amp;nbsp;g of starter and reserved 5&amp;nbsp;g for the mother-dough ball, you already have enough starter for a final dough of 500&amp;nbsp;g new-flour weight. Any other non-flour ingredients in the final dough are irrelevant to that calculation. The formula weight of the final dough will be greater than 500&amp;nbsp;g.

====Advanced topics: altering the formula====
One beauty of baker's percentages is the ease with which an ingredient's values may be changed, thus making a new formula. In the mother dough formulas above, two values that may be changed are the bakers' percent&lt;sub&gt;(water)&lt;/sub&gt; and bakers' percent&lt;sub&gt;(starter)&lt;/sub&gt;. The ''new'' flour is fixed at 100%.

=====Liquid starter=====
If you desire a more liquid starter than the firm starter described above, increase the bakers' percent&lt;sub&gt;(water)&lt;/sub&gt;, and recalculate the ingredient weights and formula percent. More liquid starters would generally have a water value of around 100%, though it could be increased further. 

:{| class=wikitable style=&quot;text-align:center;&quot;
|-
! colspan=2 | Liquid starter 
|-
! ingredient || bakers&lt;br&gt;% 
|-
| align=left | wheat flour || 100% 
|-
| align=left | water || 100% 
|-
| align=left | starter || 50% 
|-
! align=right | formula || 250%  
|}

However, by only changing the water value, the old:new flour ratio is also changed.

When fermenting a liquid starter, do not store it in a container filled with flour, just use a container with a suitable opening. A wide-mouthed glass jar with a loose-fitting or breathable lid works well for small amounts. Only fill the container partway full, otherwise the starter may overflow as it ferments.  How much it rises is somewhat dependent on its liquidity and other factors.

=====Starter ratio=====
The other value which may be changed is the starter percentage, a value which is related to the old:new flour ratio.  With the water value fixed at 50%, starter values in excess of 100% generally result, just after refreshment, in too low of a dough pH for the lactobacilli to grow well. As that value is increased even further, the lactobacilli will be more inhibited. If you've increased the starter percentage too much, decrease it some, and refresh a few times with the new ratio.

:{| class=wikitable style=&quot;text-align:center;&quot;
|-
! colspan=2 | Higher inoculum&lt;br /&gt;liquid starter 
|-
! ingredient || bakers&lt;br&gt;% 
|-
| align=left | wheat flour || 100% 
|-
| align=left | water || 100% 
|-
| align=left | starter || 100% 
|-
! align=right | formula || 300%  
|}

=====Water and starter interrelationships=====
There are interrelationships between the water percentage and the starter percentage that are not quite as obvious. When the starter's percent is a fixed value relative to the new flour, increasing the water percentage decreases the relative amount of flour in a given weight of starter, thus changing the old:new flour ratio.  So, when the bakers' percentage&lt;sub&gt;(water)&lt;/sub&gt; is changed, it will be necessary to adjust the bakers' percentage&lt;sub&gt;(starter)&lt;/sub&gt; to maintain the desired ratio.

======True percent======
While baker's percentages are based on flour weight, true percentages are based on formula percentage or weight,  frequently phrased as total weight. The formula percent is the sum of the bakers' percentages. 

:{{math|''true percent&lt;sub&gt;(ingredient)&lt;/sub&gt; '' {{=}} {{frac|''baker percent&lt;sub&gt;(ingredient)&lt;/sub&gt;''|''formula percent''}} × ''100%''}}

The ratio underlying the true percent is useful for calculating various old:new ratios.
:{{math|''true ratio&lt;sub&gt;(ingredient)&lt;/sub&gt; '' {{=}} {{frac|''baker percent&lt;sub&gt;(ingredient)&lt;/sub&gt;''|''formula percent''}}}}

If an ingredient's bakers' percent remains constant, the true percent decreases as formula percent increases, and the true percent increases as formula percent decreases.  When any of the other bakers' percents change, the formula percent changes.

======Puzzle======
Consider the following two formulas:

:{| class=wikitable style=&quot;text-align:center;&quot;
|-
! ingredient || bakers&lt;br&gt;% || bakers&lt;br&gt;%
|-
| align=left | wheat flour || 100% || 100%
|-
| align=left | water || 50% || 200%
|-
| align=left | starter || 100% || 200%
|-
! align=right | formula || 250%  || 500%
|}

What are the old:new flour ratios?

===Highly-liquid starter by volume===
Combine 1/2 tablespoon of flour with 3 tablespoons of water and let sit overnight at room temperature. Each day add 1 tablespoon of water and one tablespoon flour and mix until the total volume is about 1 cup (240ml). The symbiotic combination of yeasts and lactobacilli can be encouraged to reproduce more easily by controlling the pH (acidity) of the mixture using pineapple juice instead of water for the first three days and maintaining a temperature of 75 °F (about 23 °C, roughly international room temperature). Make sure that you have a working starter by observing whether the dough bubbles and rises. If not, then leave exposed to the air and test again. Thereafter, dump out ½ cup (120ml), and mix in ½ cup (120ml) water and ½ cup (120ml) flour.

====Discussion====
A method of decreasing the dough's pH faster, one used by The Baker's Manual author Joseph Amendola, is to have an excessively large starter percentage, based on new-flour weight, on the second and third days (first and second refreshment), roughly 214% and 433%, respectively, before dropping it back down to 66.7% on all remaining days of a 7-day-long process.  

When making sourdough for the purposes of acid-base leavening, such as pancakes, a more-acid dough is often desired. A simple way for a baker to achieve that using accurate measurement and formula notation is to use an excessively high starter percentage.

Generally, sourdough improves with age. There is a noticeable difference between a 1-week and a 1-month starter, and some can tell a difference between 1 month and 1 year. Some will claim it takes 40 years to get a good starter, though nobody waits that long to use it.

The sourdough method sometimes takes patience when starting anew. You may have to refresh your dough for longer than 7 days, much depends upon the flour and water used, as well as any yeasts and bacteria that exist in the environment, the starter ratio, the time between refreshments, and the temperature. There is no guarantee that you will pick up good yeasts floating in the air (there are many yeasts, but most will not make for good bread). The only way to tell is to wait until you get a critical mass of yeasts and see if it makes good bread. Generally, bad yeasts will smell strange; and so too will starter that uses too high of a starter:flour ratio, and thus is too acid for the lactobacilli to grow. Your starter should always smell clean, perhaps with undertones of alcohol and a sharp touch of acid if it is getting old.

There are other methods that are more likely to succeed, but you may lose the locality effect. Take some organic grapes. Wash them to knock off any dust or dirt, and immerse them in a bowl of potable water for 2 minutes. Remove the grapes from the water, which now contains the yeast that was growing on the outside of the grapes. If the grapes are local, then you have a local starter. Use this water to mix with the flour to make a dough, place in a small cup, cover and wait. If the dough rises, then you have a working starter.

A third method is to use a little [[Cookbook:Kefir|kefir]] to initiate the sourdough starter. As with grapes, you will not get the effect of using a localised starter, but it is a reliable and effective method. Give it a stir every eight hours or so. It should be very active within 3 hours, possibly as few as 2.

Mixing 100 g flour with 100 g buttermilk or natural yogurt, plus 15 g water is also very effective for beginning a sourdough starter. This usually takes about 72 hours at room temperature to get going.

Or if you really want to cheat, you can mix flour with water to a desired hydration ratio and add a pinch of shop bought yeast. This should be left for 48 hrs at room temperature before using. You won't get the same natural taste initially, but the local yeasts in the air and in your flour will take over in time.

====Keeping starter====
Sourdough starter is alive, and thus it must be regularly refreshed. Exactly how often this should be done depends on storage temperatures and the local strain. An active starter should be fed daily, if not multiple times per day depending on temperature, starter ratio, and other conditions. See the note below about dormant starters.

Sourdough is best stored at room temperature or slightly warmer. Anything outside of this range will change the proportions of the bacteria and yeast, which affects the flavor of the baked product. 

Starter can be safely stored in the fridge, and if so, let it sit out several hours after feeding before returning it to the fridge. This allows the yeasts to get active and feed. Longer than this and your starter will begin to smell boozy and have a sharper tang to it than you might want. To fix this, just discard 90% and start the feeding cycle again.

According to Amendola, starter stored in the refrigerator needs refreshment only once per week. When removed for use, it requires two refreshments at room temperature to recover before adding to a final dough.

Long-term storage can be done by drying some starter, causing the yeast to go dormant. A thin layer of liquid starter spread on glass or ceramic plate speeds drying. If you have access to a vacuum dryer, that's even better. Exactly how long yeast can be stored this way varies, but it is enough for trading starters.

Freezing the dried-out starter allows it to be stored for over a year. Just dry the starter out, place it into a sealed jar and put it in the freezer. If you need it again, take one part of frozen starter, crush it, and mix it with one part of fresh flour. Add water and it should get active in a few hours.

If you do not bake daily, then your starter will go dormant as the yeasts shut down from hunger. You may see a separation occur in the starter vessel, where a yellowish clear liquid rises to the top and the white doughy starter falls to the bottom.  The liquid is rich in yeast metabolic by-products. You can mix it back in when you feed, but it sharpens the finished bread flavor to a degree that you may find distasteful. Simply throw out the liquid before feeding. But you should note that once your starter has gone dormant, you must re-invigorate by multiple feedings to get it back to a healthful vigor (see below).

====Using starter====
Using starter is easy, just take out the amount you need, and then increase the starter to replenish your supply. Avoid using all the starter on hand, though if you must, enough will cling to the sides of the pot to get the starter going again.

If using starter often you should keep your batches large enough so that enough is on hand. If you rarely use your starter you should keep just a small amount on hand, and increase it before it's needed.

You need to make sure that your starter is full strength before committing it to a dough. That means that it should quadruple if fed and left for an hour. If not, then it needs to be fed. Accelerate your feeding schedule until it passes the above test.

====Increasing====
Many recipes call for more starter than is kept on hand. Starter is easily increased. At its most basic level, simply add more new dough and let it ferment for a day. However, the amount of new dough added affects the pH, this change in pH in turn affects the culture. If not enough new dough is added, it may not raise the pH sufficiently to insure vigorous lactobacilli growth. If too much new dough is added, the amount of inoculum is reduced, and according to Karel Kulp and Klaus Lorenz, starter values less than 20% of ''total weight'' correlate to less stable cultures. In either case, a previously stable culture can become unstable, requiring multiple refreshments and fermentation intervals to restabilize. A formula for increasing starter precisely to a stipulated ratio is covered in the ''by weight'' sections.

==References==
:[http://en.wikipedia.org/wiki/Sourdough Wikipedia: Sourdough]

:[http://en.wikipedia.org/wiki/Baker_percentage Wikipedia: Bakers' percentage]

{{reflist}}

[[Category:Bread recipes|{{PAGENAME}}]]
[[Category:Leavening Agents|{{PAGENAME}}]]
[[Category:Recipes_with_metric_units|{{PAGENAME}}]]</text>
      <sha1>4st42wfpohs5ih1agx2rkce81rngc9p</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Language Features/View</title>
    <ns>0</ns>
    <id>40639</id>
    <revision>
      <id>1517715</id>
      <parentid>700902</parentid>
      <timestamp>2009-06-03T03:47:15Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''View''' is a powerful two dimensional compositing graphical engine that was designed to display user interfaces.  It takes a '''face''' object, which contains a hierarchical description of various graphical elements, and calls the operating system to render them to the user display.  Various visual objects, or faces, may have handlers that deal specifically with certain visual events such as mouse overs, clicks, window resizing etc, and these events are linked into REBOL's event handling system with the call to ''''do-events'''.

This means that when a mouse click is detected in a window, and the mouse click is over a button object, '''View''' is able to execute the handling code defined by that button that deals with mouse clicks.

REBOL uses a standard face that is used as a blue print for all graphical objects.  '''View''' needs to use this as the base object as it contains the minimum set of properties needed to render and allow interaction with the operating system.  It is defined in '''system/standard/face''' and is also referred to by the global variable '''face'''.

Let's define a face by templating from the system '''face''' as follows:

 a-face: make face [
    offset: 100x100
    size: 200x100
    color: red
    effect: [gradient]
 ]

The default face has an offset of 0x0, has a color of value 200.200.200 and size of 100x100.  We've changed it here to add some red with the gradient changing across the face, repositioned and resized it.


How did we know what properties the system face object has?  Simply, by typing

 &gt;&gt; help face

 FACE is an object of value:
   type            word!     face
   offset          pair!     0x0
   size            pair!     100x100
   span            none!     none
   pane            none!     none
   text            none!     none
   color           tuple!    200.200.200
   image           none!     none
   effect          none!     none
   data            none!     none
   edge            object!   [color image effect size]
   font            object!   [name style size color offset space align valign s...
   para            object!   [origin margin indent tabs wrap? scroll]
   feel            object!   [redraw detect over engage]
   saved-area      none!     none
   rate            none!     none
   show?           logic!    true
   options         none!     none
   parent-face     none!     none
   old-offset      none!     none
   old-size        none!     none
   line-list       none!     none
   changes         none!     none
   face-flags      integer!  0
   action          none!     none

To become proficient directly using '''View''' requires an intimate knowledge of the various graphic components.  For most users wishing to build user interfaces, this degree of detail is not necessary, and fortunately REBOL has a visual interfaces dialect (VID) which greatly simplifies the process.

To build an interface with a text label, and a text entry field, is as simple with '''VID''' as

 view layout [ label &quot;Enter Name:&quot; field [ print face/text ]]

which looks like this:

'''layout''' parses the block, and from this, builds a face with a complex set of graphical elements that handle text editing, and mouse overs. The '''View''' engine then renders this to the screen.  

Although '''VID''' is touted as being only an example of a dialect that can be created to build user interfaces, it has, by virtue of being built in, and being simpler than programming directly in '''View''', become the default way to build user interfaces.  

There are a number of problems with this approach.  Since '''VID''' programming greatly simplifies the builing of a user interface, it also hides the complexity behind what happens so that if you wish to do something which is not documented, it does mean examining the source to VID to see how this might be done.  Furthermore, VID remains incomplete in its range of graphical interface objects with third party widgets often failing to work well with each other.  There is also a lot of redundancy in the code generated by the '''layout''' engine since not every facet of an object is needed in every instance, but is still generated.  It also lacks an automatic resizing mechanism, and elements have to be repositioned manually.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>f74znzy9zv41nimpb0wgb2zj91o06sp</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Design guide</title>
    <ns>0</ns>
    <id>40641</id>
    <revision>
      <id>3033932</id>
      <parentid>3033545</parentid>
      <timestamp>2016-01-05T11:24:54Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <comment>/* Design Guide */ use sentence case</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Design guide ==

The basis for this section is the '''REBOL Design Guide''' published by REBOL Technology.

The topics: 

* [[REBOL Programming/Design Guide/Forget the Past|Forget the past]] &lt;!-- {{stage short|75%|Sep 05, 2005}} --&gt;

* [[REBOL Programming/Design Guide/Think Simple|Think simple]]

* [[REBOL Programming/Design Guide/Scripts start with a header|Scripts start with a header ]]

* [[REBOL Programming/Design Guide/Data drives it|Data drives it]] &lt;!-- {{stage short|50%|Sep 05, 2005}} --&gt;

* [[REBOL Programming/Design Guide/Names are critical|Names are critical]]

* [[REBOL Programming/Design Guide/Use words not strings|Use words not strings]]

* [[REBOL Programming/Design Guide/Code in style|Code in style]]

* [[REBOL Programming/Design Guide/Embed your documentation|Embed your documentation]]

* [[REBOL Programming/Design Guide/Define the problem|Define the problem]]

* [[REBOL Programming/Design Guide/Use the shell|Use the shell]]

* [[REBOL Programming/Language Features/Dialects|Dialects are key]] &lt;!-- {{stage short|75%|Sep 05, 2005}} (This also resides in the Language Features list!) --&gt;

* [[REBOL Programming/Design Guide/Take advantage of return values|Take advantage of return values]]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>5s4qxwedo4xicy3ticn6ekod6iti6v8</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Mshonle/Fork issue</title>
    <ns>3</ns>
    <id>40657</id>
    <restrictions>move=sysop:edit=sysop</restrictions>
    <revision>
      <id>233258</id>
      <parentid>233254</parentid>
      <timestamp>2005-09-13T04:49:26Z</timestamp>
      <contributor>
        <username>Mshonle</username>
        <id>1957</id>
      </contributor>
      <comment>too long</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This page is locked. Start new discussions at [[../Fork issue 2|Fork issue 2]].

==And the fork issue itself==
Well, again I see my attempt to contribute were &quot;reverted&quot; and as they were to all on the same day to be a non-issue.
As I stated many times, I really ain't inclined to be political (and politically correct) and from time to time to explain the same thing over and over. I'm interested in providing content (I will fallow rules but will not spend time mastering them, it's sufficient that they are pointed out to me as they are in check) the limitations of the given framework aren´t my problem and I can't do noting to change -well I could try to make them policies- (nor do I like the framework in the first place, I do love the idea of it)... this said I will be &quot;moving&quot; (as in; stop contributions, making a derived work elsewhere) if the &quot;reversions&quot; are reverted or a just explanation to them is given, by a third party (not by Mshonle) ).

I must point out that:
# Moderators don't seem to know how to &quot;moderate&quot;, probably not theyer fault as so much work needs doing that the time doesn't allow to be polite or examine theyer actions (like looking to what they are doing in the first place, I do believe that they tend to make much fuss when actions are more &quot;visible&quot; than really doing the work needed... not all seem to be on this class, but it's my vision on most of the work done by said &quot;moderators&quot;)
# There is no Fork the books are indeed dif. from each oder as I already told another &quot;moderator&quot; that simply &quot;deleted&quot; the books without fallowing the (created rules to deal with this same &quot;fork&quot;), a simple examination of the 2 works will be sufficient to see that they are intended to dif. audiences (I was merging what could be reused, trasncluding parts that were equal or similar, and since [[u:Paddu|Paddu]] seems now absent or wiling to merge its initial part of the book witch was mostly contributed by him a Index page could be used to provide a framework to his work without any prejudice, most of Paddus objections were again the talk page restructuring than to the changes done to the book by me.  

8 September 2005
    23:58 Programming:C -/- -/- OnePage (diff; hist) . . Mshonle (Talk) (phase out this template, in addition to the eventual deletion of this fork)
    23:49 Embedded Systems: Theory, Design and Implementation (diff; hist) . . Mshonle (Talk) (remove Foreword; having the first page of every wikibook look alike is a non-goal)
    23:47 Internet Technologies/Peer-to-Peer (P2P) (diff; hist) . . Mshonle (Talk) (Wow, this book actually *is* about peer to peer this time (many uses of the Foreword template must have been directly copied from here))
    23:44 Programming:Unified Modeling Language (UML) (diff; hist) . . Mshonle (Talk) (remove Foreword; having the first page of every wikibook look alike is a non-goal)
    23:38 Wikibooks:Forking policy (diff; hist) . . Mshonle (Talk) (remove some of Panic's rewording)
    23:28 Programming:D (diff; hist) . . Mshonle (Talk) (Revert to Phil Boswell's version; such a forward is completely unnecessary)
    23:02 Programming:C -/- -/- (diff; hist) . . Mshonle (Talk) (Remove &lt;nowiki&gt;{{Botm}}&lt;/nowiki&gt; notice)
    16:29 Programming:C sharp (diff; hist) . . 141.211.35.23 (Talk) (→User input)
    04:45 Wikibooks talk:Forking policy (diff; hist) . . Mshonle (Talk) (→Programming:C plus plus and its fork Programming: C -/- -/- - update)
    03:54 Programming:MS Visual Studio (diff; hist) . . Mshonle (Talk) (remove distracting banners and unneeded forward)
    03:47 Programming:Objective-C (diff; hist) . . Mshonle (Talk) (remove distracting banner)
    03:46 Programming:Java (diff; hist) . . Mshonle (Talk) (remove distracting banners and unneeded forward)
    03:40 Programming:Object-Oriented Programming (OOP) (diff; hist) . . Mshonle (Talk) (remove distracting banner)
 m  03:21 Programming:C plus plus (diff; hist) . . Mshonle (Talk) (since the whole page itself kind of *is* a TOC)
    03:18 User talk:Panic2k4 (diff; hist) . . Mshonle (Talk) (Fork Warning)
    03:05 Talk:Programming:C -/- -/- (diff; hist) . . Mshonle (Talk) (Notice of Merge)
    03:05 Talk:Programming:C plus plus (diff; hist) . . Mshonle (Talk) (Notice of Merge)
7 September 2005
    22:22 Template:Wrongtitle (diff; hist) . . Mshonle (Talk) (rv to Eyu100's vers. The tech limitations are broader than WB-- in some instances the limitations are imposed by web-standards. Also, we don't need to link the words title or book)

Most comments are without merit or based only on Mshonle estetics taste, I would like him to express his vews and any valid points on the work discussion page.
I will revert his changes so I can continue to reorganize the book, if Mshonle thinks changes should be made please do fallow the rules and ask another &quot;moderator&quot; to moderate...

--[[User:Panic2k4|Panic]] 00:55, 9 September 2005 (UTC)
:Hi Panic: you argue that these are separate books, yet the scope of each is the same. Even if ''every sentence'' was different in each book so long as the books covered exactly the same material that would still be a loss for contributors. I know a thing or two about C++, so tell me, which book would I submit to? For starterts, both books have the same name (despite the odd spelling of &quot;plus&quot; as &quot;-/-&quot;) and there was a notice on C_plus_plus that there was a fork. This is not a good way to run an online collaborative book project.&lt;p&gt;I've certainly been making a lot of changes, because the C -/- -/- book is in violation of policy. I've been deleting the links to the C -/- -/- book and replacing them with links to the C_plus_plus book. As for asethetics, you seem to have done similar activities, posting a &quot;Foreword&quot; on other book projects, complete with a nonsequiter of using &quot;WEB&quot; addresses.&lt;p&gt;As for the wrongtitle template, you are mistaken. The technical limitations are limitations in web standards, including the use of + in URLs and the use of % and &amp; signs. That template is used by many other books as well, and some limitations that you think are particular to wikibooks are actually more general. Also, the wording I changed it to matches the wikipedia wording closer. Given that other users on that template made similar changes should be a signal to you that your view is not the consensus. I would be happy to debate each and every change I've made with you. [[User:Mshonle|MShonle]] 01:34, 9 September 2005 (UTC)

==fork issue part 2==
Did you read the policies notice you &quot;reverted&quot;. ?!?

Books can have the same subject matter.
Books are not Wikipedia articles they do not overlap, they complement each other.

C -/- -/- the policies was created because of C -/- -/- (and after the fact (not fork) fork was used by me and Paddu but in the context of fork of effort not content) and the book has been aproved in a previous discussion with a moderator that it is inside the policies.
(you should see the history before coming to decisions)

As I was the creator(submitter and primary writer) of most of the books I like my structure and I would allow for any other contributor to change that on a just cause (whatever it was, not only because he dislikes similar books)...

Heerr a template on wikibooks refers to Wikibooks so where is the problem ?!?

I'll gladly accept another moderator input on this matter.
After your destructive actions, I take them as personal attack without warning.
A simple check would show that I do active work (almost daily) so a simple talk would have sufficed to clarefy your wrong assumptions...
--[[User:Panic2k4|Panic]] 01:59, 9 September 2005 (UTC)
:Panic, don't try to strawman me here. I'm smarter than that. ''Ofcourse'' there can be books on the same subject matter. If you've been following what I've been writing you would know I clearly and unambiguously feel that way. But two books with the same goal cannot exist on WikiBooks. If you really want two C++ books you're going to have to find a way to make it actually be a different audience and different charters. Just saying so and changing the title of your book does not make it so.&lt;p&gt;I hope you do seek other moderators about this. I want this process to be as open as possible. I also want to put this issue to rest. You mention your contributions, and I and everyone else thank you for those contributions. However, you need to acknowledge that the fork has also served to scare off possible contributors or turn off existing contributors who have left the project. We need to keep this project open to all, not to a select few who happened to get there first. [[User:Mshonle|MShonle]] 02:27, 9 September 2005 (UTC)

==fork issue part 3==
:''I must ask you to stop using the name Programming in C -/- -/-'' ... ''any other name that uses those hyphens and slashes'' ... ''correct name to use is &quot;plus plus&quot;''

Why cant it be -/- -/- (Wikimedia limitation ?!? ) ?
The representation is closest to ++ than Plus Plus (since Plus is a English word that differs form the intended &quot;logic&quot; of the representation of ++ (increment) and that opens the door to other interpretations, lets say in Portuguese &quot;C Mais Mais&quot; )

What about Programming_in_C%C2%B1%C2%B1 (try it on the URL, it's also similar, this is only to be represented on the URL other references should use ++ as possible), not the perfect solution but better than Plus Plus).

: Why not [[Programming in C±±]]?. And actuay WikiMedia supports unicode (hope your browser does as well) so I can beat that with [[Programming in C✝✝]]. --[[User:Krischik|Krischik]]&amp;nbsp;&lt;sup&gt;[[User_talk:Krischik|T]]&lt;/sup&gt; 20:00, 11 September 2005 (UTC)

::Ouch. Let's try to remember that what the URL is not necessarily the book's name. For example, the Algorithms book is &quot;actually&quot; named Algorithms: Fundamental Techniques. But that's too long to type, and &quot;AlgFundTech&quot; would look even worse. I just can't imagine someone having such high standards for what appears in the URL that they'd petition the W3C to allow full TeX formatting. What makes better URLs are names that are easy to remember and type. [[User:Mshonle|MShonle]] 20:09, 11 September 2005 (UTC)

Since the limitation is in Wikimedia and Plus Plus only reason is the relation in word vs graphic representation and so establishing a meaning that is not correct any alias to the character -/-, %C2%B1 is valid (if it doesn't cause problems on the framework and I didn't noticed any)
--[[User:Panic2k4|Panic]] 20:26, 10 September 2005 (UTC)

:Slashes are to be avoided because they are used for separating pages and subpages. Not being able to use + is a limitation of webstandards, not of mediawiki (WikiMedia is the organization, and Mediawiki is the software). While to you &quot;-/-&quot; looks like a plus, no one else thinks so. Insular naming conventions are confusing and discourage people from contributing. [[User:Mshonle|MShonle]] 20:40, 10 September 2005 (UTC)
----
Well, your are wrong the URL can be parsed so it can use the ASCII &quot;+&quot; code (see for example del.icio.us they had a similar problem and resolved it parsing enclosed &quot;&quot; strings in a dif. way...

Again I admit that -/- can be confusing but that is not a problem because it's only used on URL representations every other palace can use &quot;in house&quot; links our a C++ overriding the &quot;confusing representation&quot; but I see that Wikipedia users may have problems but one of the following solutions can be used.

1) A note explaining the use of the alias. (already present but that doesn't explain in detail to possible writers...)

2) Use of the C%C2%B1%C2%B1 to avoid the &quot;/&quot; problem in a clean way.

You should not be moderating any more of my actions, as we have an open divergency, you should resolve the first point first before starting any more disruptive actions.

Please do explain what is your problem with my &quot;overall&quot; contributions as:

1) You did take actions against several works I was doing on Wikibooks, all at the same time and without notifying me or checking its history.

2) You seem to be overzealous on your &quot;moderation&quot; actions against me in particular, as the misnamed &quot;fork&quot; was already resolved before any of your actions and now after more  than (5 or 6) months of using the name with -/- you are rising issues even after another moderation spoke with me about the naming conventions, the other book, created the forking policy (created because of the precedent created by me, not a fork) and said nothing in particular agains the  -/- (see talk page).

It's my opinion and common sense that any moderation actions agains registred and active users, should be preceded with talks, if a aggreement isn't reached the initiator of the action should call a 3rd person to try to reach it, and then act on it...

Format, design should only decided by active contributors if not in direct conflict with the hosting service policy.
 
More important is that you are placing &quot;format&quot; or the medium over the content, the time I'm taking reformatting the work could have been used expanding the information, if one is providing content any moderations should be delt with ease as the content will remain for future editing, heck the contributor can be runned over by a truck tomorow...--[[User:Panic2k4|Panic]] 22:34, 10 September 2005 (UTC)

:Panic, First, the trivial issue: I just don't think anyone sees eye-to-eye with you about your ideas of using &quot;-/-&quot;. That use of the slash does not conform to our naming policies. Putting up explainations for it or using hexcodes are poor solutions and poor compromises. There's a perfectly good word in the English language for it: Plus. It's actually fairly common in certain contexts to name the language &quot;C Plus Plus&quot; instead of &quot;C++&quot;. You just can't expect everything go the way you want it to go. In a community project such an attitude is only going to lead to hurt feelings and disappointment.

:I can see that you are concerned with the actions I have been taking. No one wants to see their books get deleted. But in the greater interest of the community I cannot serve only you, I must serve everyone. I have asked other admins to watch what I've been doing, just for your specific concerns.

:I disagree with the template you have been using on your &quot;own&quot; books and others. It's simply anti-community to tell people on the first page that they have &quot;The right to leave.&quot; The real message you send is &quot;you're going to have to do it my way, or bye!&quot; We need to be more respectful of others instead of scaring them off.

:Given all of the circumstances, I think your reactions are perfectly natural and logical. However, I'm concerned with some of the tone you have been using and the increasingly dramatic steps you've been taking lately. There isn't going to be any big shake up. Quite simply we're justing seeing one fork get deleted, as well as the many references to it. We cannot keep on sending the signal that forks and uncompromising disputes is the way we do business around here. It's obvious to me that you are unhappy and frustrated by this process. I appologize that you have been sent mixed signals for the past year. [[User:Mshonle|MShonle]] 23:45, 10 September 2005 (UTC)

==fork issue part 4==
Did anyone &quot;contributing&quot; to the work expressed a problem with the URL ?
(the URL isn't the title nor it is expected to be, the problem seems to be an organization issue on Wikibooks and that rule wasn't broken by the use of the -/- or even using the new proposed change to eliminate the &quot;/&quot; problem, the URLs on Wikibooks are not so easy to use by humans as they are, so this is not a problem, if so I would agree in something like CPP, even if I did not like it)

''slash does not conform to our naming policies''

It did last time I checked... but I understand that it can lead to technical problems in the future, so I presented another option...

''You just can't expect everything go the way you want it to go''

I don't, never did, it's obvious that this is a community work, and as so the &quot;writers&quot; should express/debate they views on the problems &quot;they&quot; encounter, you aren't really a contributor to the work and your busk actions are on the line of being offensive against the ones that are contributing to the work...

''No one wants to see their books get deleted''

The book are GFDL so your actions in the extreme can only lead to me moving the work elsewhere and even preventing you from using parts of my contributions/work on derivative as stated on the GFDL and due to limitations on the framework (I don't look forward to it since it can lead to other examining the fragilities of the framework use of licenses/contributions/writers some of them are beginning to surface on Wikipedia (see for instance dual-license problem) but since most contributors are anonymous you can easely see the ramifications of any license depute, this would be wrong and serve no purpose), but I do like the notion of examining the limits of the Wikimedia concept, for instance at least now have a clarification on the forking policy.

''I disagree with the template you have been using on your &quot;own&quot; books and others.''

You can desagree but you as moderator should not interfere (only if they were against the rules/policies, they aren't), that section of the book you are referring to is part of the GFDL and needed to explain writes of their rights, your interpretation is that it turns people off (I don't agree with your view and since you aren't contributing to the works I would like to understand the weight of your views on the work being done by others), heck tomorrow if you would prefer all pages had a magenta background they would be obliged to use it), I did only made the change the books that I was working on, I did not impose my view on others as you are doing... Writes have discussion pages to debate that points it shouldn't be imposed by &quot;moderators&quot; or non contributing users (readers should be heard, but you are debating something as you are directly affected by it as a contributor, that is my side of the depute, your actions are affecting me as a writer)

''&quot;you're going to have to do it my way, or bye!&quot;''

This again is your personal view. Not even you can use such wording as a moderator you don't own the content, you do manage the medium, and should only focus on creating/elaborating guidelines and implementing them)

''We need to be more respectful of others instead of scaring them off.''

Herr, did you gave me any respect and aren't your actions intended on scaring me off ?!?
(If I was an average user I probably would already left, the time I'm spending debating this points with you are due only to a bigger ideal, to prevent the kind of actions you are taking and/or clarify them to any other future authors.

''I think your reactions are perfectly natural and logical.''

Txs, I also try to understand your view point, but I can't seem to grasp its logic. I do comprehend that you think you are helping, I don't know why or whom, and even less why did you select to attack me personally.

Again there is no fork (the notice on C Plus Plus was old and as I did not intended on contributing to that book nor was I the author of it, I selected to leave it standing, again my major problem is losing time not being productive debating this kinds of &quot;policy&quot; matters but since you are a moderator I've opened  an exception, moderation was requested some time ago it's sad that it only came  when there was no need for it...

''It's obvious to me that you are unhappy and frustrated by this process.''

Frustrated not unhappy, I do think that this debate in the end will be productive one way or another...

''I appologize that you have been sent mixed signals for the past year.''

That seems to be a problem with the framework we have to work under, I don't like it, but I think it will evolve, I do think that a kind of checks and balances should be implemented to provide some &quot;power&quot; to authors, it's like building a car and some one comes in, doesn't pay for it and says it should use yellow lights, square wheels and the top should be pink and run on methane...

Another point is you should fallow the Wikibooks policies and you didn't (forking) even if wrongly applied, the other is that you removed a template that  by being missing, made books violate the GFDL...
--[[User:Panic2k4|Panic]] 01:25, 11 September 2005 (UTC)
:I think you misunderstand what an administrator is. First, we are not &quot;moderators,&quot; we're administrators, or &quot;sysops&quot;. Occasionally we can be moderate disputes, but that is only one of our roles. There isn't a single administrator who is not a contributor to Wikibooks. Indeed, an administrator is someone who, through their many contributions, have proved to the rest of the community that they can be trusted. In return, we are given some extra tools to help fight spammers and vandals. As Jimbo says, it &quot;isn't really a big deal.&quot;

:Also, it would not be &quot;extreme&quot; in any sense for you to take the GFDL'd work and move it to your own sites. I know that you don't like &quot;to study politics&quot; so it may be surprising for you to learn that such external forking is actually a valuable incentive that ''encourages'' contributions. For example, if I were only &quot;working for Wikibooks&quot; and had no freedoms with the materials I sumbitted, I might not have written as much about Lambda Calculus as I did last weekend. By using a copyleft license I can benefit from the fruits of other contributors, just as others can benefit from the fruits of my productions. [[User:Mshonle|MShonle]] 02:30, 11 September 2005 (UTC)

:BTW, with regard to policy in the future, I've been working on a plan for [[User:Mshonle/Charters|charters]] (still in progress). The idea is that a book would have a charter, just like a student organization, coorporation, or town does, and the charter itself (different for each book) would be the &quot;constitution&quot; of the book and be a guide for contributors. That way, contributions would be measured against how well they follow the spirit of the charter. So, for example, one C++ book would have a charter that states it's an introductory text. Thus, some finer, esoteric details of C++ would be excluded from that book. While another C++ book might have a charter that states it's a complete reference, in which case all esoteric details would have to be included. (E.g., the beginners book probably shouldn't talk about diagraphs or trigraphs, while the reference book would.) Then there could be a rule that books with overlapping charter-goals would need to coordinate with eachother, to minimize confusion and duplication of effort. [[User:Mshonle|MShonle]] 02:37, 11 September 2005 (UTC)

----
I've been watching this little battle of wills from afar and I can see that this isn't getting anywhere. Panic, let's make this very simple. Can you explain to me the outsider, with barely a grasp of Javascript let alone C++, exactly how the two books are so different? THAT is the heart of this issue, I feel, moreso than arguing over representations of the addition symbol. Now much earlier on (on the other page) you said that Paddu wanted a beginner guide but you wanted an overview (or was it the other way around?)...

However I don't see how these two concepts can't coexist in the same book. Take a look at [[Grand Theft Auto: San Andreas/Missions/OG Loc]]. I was dissatisfied with the level of detail Aya provided in the short writeup as I myself usually prefer step-by-step instructions, but I knew that just as many people prefer this brief style so I didn't want to merely replace it with my preferred method.

So what did I do? Did I fork off the guide and write an in-depth version just to get things done ''my'' way? No, I added the in-depth version below the other. In the end this idea worked out so well that I'm now purposefully including both brief and indepth methods in other game guides I write. '''So why can't you do that to teach C++?!?'''

You need to give a simple and convincing explanation of how your book is so greatly different from the other. Otherwise [http://mail.wikimedia.org/pipermail/wikitech-l/2004-November/026406.html what Jimbo said] will have to go into effect in one way or another, hopefully to everyone's satisfaction. [[User:Garrett|Garrett]]&lt;sup&gt;[[User talk:Garrett|Talk]]&lt;/sup&gt; 03:42, 11 September 2005 (UTC)
----

Simpler version:
The original book was a introductory guide to the language, split in multiple and without no real structure, every change made was debated to exhaustion, more time was spend debating things that doing work on it, Paddu prevented a new structure to be created (as per your example or a similar solution) after a small reversion war with no admin intervention the fork was created (no policy existed at the time) so a fork was &quot;legal&quot; even if no one wanted it but it was the only way to keep work going and it worked until a policy was created with retroactive  effects and a deletion was done to a now completely dif. and bigger book that has some point in contact with the prev. but extends it much further as can be easily observed C Plus Plus is a bunch of articles (the existing structure is my work, redesigned by other user intervention and agreed upon I think by Paddu, at least he didn't seem to really care after I moved along, I didn't post my book as a fork Paddu did... (an important note must be made that Paddu did almost no contributions to the works since the time I started, but made much noise about  every structural change I tried to make, and both of us tried to find moderation , the split and divergence was the only solution at that time, I took it to escape the endless reversions and debates, no contributors made any request or expressed views on the problem, then and now, only confusion was created due to the posting of the notice by Paddu)



Longer version:
Well, I came to Wikibooks willing to create a &quot;real&quot; C++ book and found an already existing  book (not to complex, an  Introduction to the language, a simple Guide, similar on what was
on Wikipedia at the time and with a FAQ, and some examples,).

Paddu was the last contributor (registered and was active on the discussion page, but wasn't really contributing to the book (the work was stagnated) and he seemed to put some defect,
point some problem to any change I made  so I started incrementing on what was there, trying to make some changes as he pointed out  to me to make everybody happy, but soon realized
that in a FAQ structure and with a bunch os scattered information on examples I could not go anywhere, and I was losing to much time debating every point with a user that did not do any
work, so as I extender the information in the book, a structure seemed to be in need and  there was a need  for moving stuff from place to place, redesigning the way some stuff was
explained etc...

A huge page started to be created (the Monolithic page was created), and after  mining the existing scattered information for what use could be made of it (again some contributors
helped but the majority didn't use the talk page or express any vision for the work as a hole (some did start commenting and adding notes on the book and I adopted the idea as it is
today) after a wile more the book got to be so big that Paddu  really started to make demands for a split into chapters, I was not keen on the idea as information and the structure
wasn't yet completed and asked for some more time to reach a point that it could be done and so avoiding the duplication of information on dif. chapters, and the debate got hotter and
Paddu got other people (non contributors) to be involved), after a wile longer and after I did ask some other authors on the web to use some documents and posted some messages on the
newsgroups for C++, some people started to came and contribute more actively (note: not Paddu, he never did any real work after I &quot;took over&quot; the project), then as the talk page got
longer I restructured it so I could give some order to it, and fallow any comments made, again no real contributors participated only Paddu and I think a moderator (watever, Sysop) and
create some standards, that Paddu and other non contributing users didn't like, (the created standard didn't do much more that expressing the rules that were already used on the book,
or expressed on the talk page so far), after it was done Paddu reverted  it (and a small reversion war took place) and then reverted some parts of the work itself at that point I and
him had agreed on using transclusion (Im not a wikipedia fanatic nor I do love to spend time debating stuff and &quot;losing&quot; time  trying to make head and tail of the &quot;rules&quot;, it was Paddu
himself that gave me the knowledge and information needed to get going with the work).

I reverted some of Paddu changes and Paddu proposed a new structure to the talk page, I didn't like that (Paddu even no providing content started posting messages asking for moderation
and trying to get more people involved in the debate, as it's natural  I was pushed to a debate and asked/needed to give some explanations and defend my point of view also and for some
time was spending more time debating the issues with every other person who asked about &quot;this&quot; or &quot;that&quot; and proposed solutions at a point I was so mad that I told Paddu that due to no
one appeared to be able to moderate the problem the solution was to fork the work and revert the C Plus Plus to a stage more or less before the Monolithic version came to be, the
reversion was done (not by me) and I moved to a new C++ book to get on with the work and implement a more complete, detailed structure, Paddu got ballistic and posted some forking notices
and asked people not to contribute to any book, I change some of the more aggressive wording and got to work on the other book, all was well and going fine until some one created a new
rule on forks (no problem there) but another admin Garrett :) as was expected came and (grrr) deleted the bigger work without following the policy (changing some urls etc) after we got
to a common ground Garrett asked for a merge and I started working on that (more time lost formatting the work), then some one proposed for a name change saying that the Programming: was
wrong (gezz lots of transclusions some templates and as many redirects on the talk page got mangled due to Garrett actions) I started renaming the pages at the same time as I extracted
the data from the Monolithic version then  Mshonle came and in one day reverted a lot of pages, broke the GFDL by renaming a template, attacked my other books, and used really rude
comments on its changes), that is why we are here at this point in time, no work being done, Mshonle is reverting much of the work I did (continues to use rude and I must say misleading
comments to my changes, not even realizing that much of the original work on C Plus Plus and other books he mangled was done by me).

You can/should  easily check  this hole mess doing a search on google for Panic2k4 you can even find a post by Paddu that Jimbo responded to (as you did), and if you take some real time to examine
the history of some pages the Plus Plus talk my talk Paddus talk etc to get a proper idea of the subject.

I did try to find out my prev. talks with you (Garrett) to show  Mshonle but after his actions I realy didn't go to the trouble, he seemed mindset on provoking me into a debate with
unkind comments and reversions and finding problems were none existed.--[[User:Panic2k4|Panic]] 04:57, 11 September 2005 (UTC)

:There's a lot going on there, so I can only hit the key points: (1) You have no grounds for saying I &quot;broke the GFDL,&quot; and I've seen you repeat this pattern of dramatic claims before. (2) I've mostly been mitigating any damage done to the other books, one of them was when you pasted some boiler-plate descriptions on several books, claiming they were books about &quot;peer to peer&quot;, although only one of them was actually a peer-to-peer book. (3) I've been removing links to the C -/- -/- book, and part of that was removing the use of a template. The banner advertizing your own version of the C++ should not have been placed on other books. (4) It's not the end of the world. You can of course keep all of the work you have done and it won't be lost. It just won't be on wikibooks in 10 days. We cannot condone anti-community, anti-contributor actions. Dividing efforts between volunteers is so counter-productive it's equivalent to damage. (5) I will be watching any changes to the C Plus Plus book. [[User:Mshonle|MShonle]] 06:42, 11 September 2005 (UTC)

==fork issue part 5==
1) Examine your actions, if you remove the authors part of a work you break the GFDL (you did that).

:[Sorry, that was an honest mistake. Could you tell me which books were affected? [[User:Mshonle|MShonle]] 18:36, 11 September 2005 (UTC)]

::Sorry you have to check your own edits --[[User:Panic2k4|Panic]] 19:02, 11 September 2005 (UTC)

:::Aw, come on, not even a clue? [[User:Mshonle|MShonle]] 19:30, 11 September 2005 (UTC)

::::Check the &quot;foreword&quot; linking as it enforces the authors of the books, that is requested in the GFDL--[[User:Panic2k4|Panic]] 22:58, 11 September 2005 (UTC)

2) It was a work in progress no &quot;contributor&quot; requested moderation, you had at least on my POV right to revert you could have requested, altered or asked, not doing a esthetic correction to works you are not evolved nor are under depute, your opinions are welcome but you are placing them above other... PS: And you should try to moderate your comments as you alter stuff some can be really anoing...

:(revert to last version by Krischik, ends up Panic's idea of &quot;merge&quot; is to delete good material and to replace it with worse material)

:(Programming in C -/- -/-: ANSI C -/- -/- 98 Keywords Table moved to
Programming:C plus plus/Keywords: -/- -/- is an unprofessional, sloppy
name)

:Programming:C (remove obtrusive banners)

:[It's my opinion that the banners were obtrusive. Such a level of promotion imposed on other books is against the spirit of the project. As for the worse material comment, you replaced a perfectly fine section of the book with a modified version that had broken formatting. It was also rather odd to me that when you were &quot;doing the merge&quot; you chose first to combine the sections of the two books which were virtually identical. [[User:Mshonle|MShonle]] 18:36, 11 September 2005 (UTC)]

::Well you opinion has the same weight as mine and since I was contributing those books I had more right to do any change and was able to discuss them with any other contributor, for instance the banner on C was not placed there by me, I tried to contribute to that book some time ago and one of the prev. contributors reverted my changes and asked that I comply with the structure that was in place, I did not made any more edits to that book since I was busy with other works...--[[User:Panic2k4|Panic]] 19:03, 11 September 2005 (UTC)

:::That's a very valid point, but I'm affraid I'm not the only one with that opinion. The history logs speak for themselves. [[User:Mshonle|MShonle]] 19:30, 11 September 2005 (UTC)

3) The reversions you did were not called for, no one requested them the
pages in question were not against any policy, and you did them because
of your esthetics POV, the &quot;obtrusive banners&quot; is subject matter that
relates to the book topic lets say a reader that is interested in C will
probably like to know C++ or OOP or Java for instance in the C book, and
it's a way to get people to cross pollinate similar works, you know as
good as I that the languages share common points with each other..

4) That is your opinion, I've not performed any actions on those lines, you did.

''Dividing efforts between volunteers''

You are not part of the C++ community here are you? I never noticed you writing  there (you came, you saw, you judged and execute sentence this is not due process) and I've replied to anyone requesting information about the subject matter, I've not tried to impose my views and I'm open to debates, please do provide bases for your accusations...

:[But the very point of this exercise, and why we are deleting your fork, is because there's currently an environment that is ''counter'' to encouraging work. Given the reasons why we must remove the book from Wikibooks (need I repeat you are free to take it elsewhere?) it should not be surprising that many in the community have shied away from contributing, including myself. [[User:Mshonle|MShonle]] 18:36, 11 September 2005 (UTC)]

::It's not a FORK, the other stuff I agree with you but it's better to fork than enter a reversion war at least content is been added (I would probaly have some better ideas to the fork policy as it is), FORKS do encourage work, if you were willing to contribute you should have stated your probles on the talk page not acting as you did...--[[User:Panic2k4|Panic]] 19:03, 11 September 2005 (UTC)

:::Sorry, but I have to act to help the community, not to satisfy your own internal standards about what I need to be doing or not doing. I mostly see this episode as tragic, and I'd rather not be disturbing your creations and instead just let them be. (I can guarantee you that I will not disturb them on any other server or wiki. In fact, I would fight tooth and nail that the [[Programming:C plus plus]] book include a link to your book in the references section if you were to move it elsewhere.) But what's been going on on ''this wiki'' has to stop. [[User:Mshonle|MShonle]] 19:30, 11 September 2005 (UTC)

''I appologize that you have been sent mixed signals for the past year.''

The problem is that the policies are in constant mutation, and even the administrators seems not to fallow them or know them by hearth, even you in your recent actions did violate several...

5) As soon as I can make the changes I'll merge the 2 books as requested by Garrett before any of your actions, if you can try to revert some of what you did or if you feel dif. write about it on the books talk page, the book url for me is irrelevant and can be settled easily (the closest alias to the &quot;proper&quot; name is last one I proposed, if wikimedia evolves the name can be fixed later....)
--[[User:Panic2k4|Panic]] 17:51, 11 September 2005 (UTC)

:[I have a copy of the first edition of Stroustrup right here in my hands. The library of congress data says this as the alternate title: &quot;II. Title: C plus plus programming language.&quot; Here's the alternate title given to Stroustrup's The Design and Evolution of C++: &quot;II. Title: Design and Evolution of C plus plus.&quot; [[User:Mshonle|MShonle]] 18:36, 11 September 2005 (UTC)]

::I have state again and again Plus Plus is English centric, even your own find shows that, again Plus Plus has not the same spirit that ++ you know that it means &quot;increment&quot;, well Plus is also used in French, I think the last proposed naming scheme by me would solve all the problems (plus , minus sign is the most graphical similar sign we can get on Wikimedia), as I do intend on translating the book and I'm the only active contributor to it I don't see how your POV should be enforced (I agree that &quot;/&quot; is a problem and it should be fixed), my main problem with C Plus Plus is that it is a bad fix to bypass a limitation on the framework if people feel that lets say C Sharp, C Plus Plus C -/- -/- is wrong and do give value to the url they should probably be contributing to Wikipeadia code and solve the problem once and for all...--[[User:Panic2k4|Panic]] 19:03, 11 September 2005 (UTC)

:::Typically things on the &quot;en.&quot; subdomain tend to have a little English bias. Yes. [[User:Mshonle|MShonle]] 19:30, 11 September 2005 (UTC)

== &quot;C plus pus&quot; vs. &quot;C -/- -/-&quot; ==

Well, I think that the C++ community shoud decide for themself - they should have a vote on it - just like the we did at [[Ada Programming]] - see [[Talk:Ada_Programming/New_Name_needed]] for details. If they decide on &quot;C -/- -/-&quot; so it be.

Just a few suggestions:

# I had a call on news:comp.lang.ada for additional votes from our readers. Nothing came from it but at least I tried.
# Subpages provide automated back links which - unlike manual back links - work nicely in transclusions.

--[[User:Krischik|Krischik]] 07:06, 11 September 2005 (UTC)
:Yeah, what I did for the [[Computer Science:Data Structures]] book is have _content pages that each chapter would transclude in addition to having the nav bar. Then the all pages view would just transclude the _contents, and not use any navs. But I think in a greater sense there might be certain advantages to wikibooks following the same naming conventions. I'm working out some [[User:Mshonle/Charters|plans]] of a system where books/series of books, and bookshelves all have charters. Thus, a shelf might be able to better organize itself by only allowing books that fit the (widely approved) charters. The VFD process could become much more streamlined, and most likely the activities would be replaced with charter approvals. This kind of fits into Aya's idea of allowing only books that are on a list can be created. But many more details need to be worked out. [[User:Mshonle|MShonle]] 08:35, 11 September 2005 (UTC)

:: As I'm the only one working on the book and C Plus Plus has been static for some time now I don't think that solution would apply and I don't think a social network of &quot;false&quot; readers would also provide any insight on the problem, that solution is based on how &quot;visible&quot; you are, as I don't intend on having any visibility I'm against any such campaigns (this one of my problems with most of Mshonle actions, they seem intended on generating friction and buzz, not in producing any results)--[[User:Panic2k4|Panic]] 19:10, 11 September 2005 (UTC)

::: Would you be satisfied if we kept &quot;Programming:C -/- -/-&quot; up as a redirect page to the &quot;Programming:C plus plus&quot; book? [[User:Mshonle|MShonle]] 19:41, 11 September 2005 (UTC)

::: Well, we have enough readers ([[Wikibooks:Book_of_the_month/September_2005_voting#Ada_Programming_.2F_Programming:Ada_.2816.29|18 at least]]) and contributers (3 main contributers and 10 more in the 2nd row.) - thank you very much. And yes: I do marketing as well - I contribute so the book is helpfull - and to be helpfull people have to know about it. --[[User:Krischik|Krischik]]&amp;nbsp;&lt;sup&gt;[[User_talk:Krischik|T]]&lt;/sup&gt; 20:14, 11 September 2005 (UTC)

:::I do agree with you [[User:Krischik|Krischik]] and you should state that you are talking about Ada Programming, but I don't have you luck as far as contributers goes so a debate there is betewen Me, myself and I :) and a administratior on policy covered issues, what Ive stated is that [[User:Mshonle|MShonle]] actions on my works (not only the C++ book are well beyond the wikibooks policies.--[[User:Panic2k4|Panic]] 02:25, 13 September 2005 (UTC)

=Q &amp; A=

This is the last action I will try to come to any result on this topic so I ask a simple reply if possible...

A merge of the work was being done.
The naming of the book was being adressed as can be seen on the book talk page.
The single page problem was being adressed.

Your actions were disruptive and could probably be done better.

----
Q: Did any one requested moderation on any of you problems with C -/- -/- ?

A: [I'm not even sure what this question means. [[User:Mshonle|MShonle]] 20:26, 11 September 2005 (UTC)]

:''Aw, come on, not even a clue?''--[[User:Panic2k4|Panic]] 23:19, 11 September 2005 (UTC)
::It's got so many things that are unclear. Are you talking about the -/- name issue again, are you talking about the book itself? It's unclear. [[User:Mshonle|MShonle]] 23:38, 11 September 2005 (UTC)

:::Well since you were the one that pointed out the &quot;things&quot;, so you should know what the so called problems are, I have only identified a new one the use of the &quot;/&quot; the others were resolved and no one before you started your actions pointed them out to me...--[[User:Panic2k4|Panic]] 23:56, 11 September 2005 (UTC)

::::OK, you've seriously lost me here. What are you talking about? [[User:Mshonle|MShonle]] 00:11, 12 September 2005 (UTC)
----
Q: Can you live with the C%C2%B1%C2%B1 in the URL ? (best you try creating a page with that URL, a fix or a vote can be done later if any contributors ask for it)

A: [Can you live with that, and your -/-'s as being redirects to C_plus_plus? URLs should be easy to remember and type. As Strunk and White say, prefer the standard to the offbeat. Given the community here, the WP community, and the library of congress cataloging it's hardly seen as a failure that we need to name the book C_plus_plus. [[User:Mshonle|MShonle]] 20:26, 11 September 2005 (UTC)]

:The history on C Plus Plus should be preserved, since Paddu and other contributers even Wikibooks policy requests that, I will have no problem on doing the reverse, redirecting C Plus Plus to a non &quot;/&quot; url as for the use of any alias urls aren't really human friendly on Wikibooks so to ease the moving, redirect, transclusion and edits, C%C2%B1%C2%B1 will probably help as spaces are turned into &quot;_&quot; and it's easier to search and replace urls off line (hole pages) if they are kept all the same by simply &quot;force&quot; copy-paste operations when urls are concerned...--[[User:Panic2k4|Panic]] 23:19, 11 September 2005 (UTC)
::I wouldn't try it. For the moment don't rename anything, ok? [[User:Mshonle|MShonle]] 23:38, 11 September 2005 (UTC)

:::If I can't rename the url I can't continue with the merger and do any work on the book, I think that is self evident--[[User:Panic2k4|Panic]] 23:47, 11 September 2005 (UTC)

::::Just stick with the URLs you got. [[User:Mshonle|MShonle]] 00:11, 12 September 2005 (UTC)

----
Q: Will you fix some of reversions you did and if totaly agains it state so on the discussion page?

A: [I will fix the mistaken deletion of the authors list, yes, unless someone else gets to it first. But I can only &quot;fix&quot; what was broken. [[User:Mshonle|MShonle]] 20:26, 11 September 2005 (UTC)]
----
Q: Will you help merge the 2 books?

A: [I will keep an eye on the C_plus_plus book and be sure that what's added is factually accurate, non-biased, pertinent, well-written or at least easily changable into such. But you should understand that I am in no obligation to do so. [[User:Mshonle|MShonle]] 20:26, 11 September 2005 (UTC)]

:In other words, as I undestand it, you will not provide any help on merging the works and probably will no contribute content--[[User:Panic2k4|Panic]] 23:19, 11 September 2005 (UTC)

::I won't promise to work on it, and I won't promise not to work on it. I promise only to serve the community by ending the fork. [[User:Mshonle|MShonle]] 23:38, 11 September 2005 (UTC)

:::What part of &quot;there is no fork&quot; and &quot;the merge was underway before your intervention&quot; can't you understand?--[[User:Panic2k4|Panic]] 23:47, 11 September 2005 (UTC) 

::::I will understand &quot;there is no fork&quot; quite well in two Wednesday's time. [[User:Mshonle|MShonle]] 00:11, 12 September 2005 (UTC)
----

Txs, as soon as you can please put the pages in its proper state so I can continue the work, or move the book to the next stage of the policy you are addressing, as I have stated Im the only (registred/active) contributor to the work...
--[[User:Panic2k4|Panic]] 19:26, 11 September 2005 (UTC)
:I'm not sure what you mean by &quot;pages in its proper state.&quot; [[User:Mshonle|MShonle]] 20:26, 11 September 2005 (UTC)

::Being able to repair the &quot;/&quot; problem by moving it to a another location and fix all the mess, if contributor request a vote will be made later to substitute or use another url--[[User:Panic2k4|Panic]] 23:19, 11 September 2005 (UTC)
:::Don't worry about namespaces right now. The page names should remain as they are for the next two weeks. [[User:Mshonle|MShonle]] 23:38, 11 September 2005 (UTC)

::PS: This is equal to terrorist tactics http://en.wikibooks.org/wiki/User_talk:Maxberger you are spreadin missinformation, escalating the issue and displaing the issue as a ''fait-accompli''--[[User:Panic2k4|Panic]] 23:19, 11 September 2005 (UTC)

:::I'm not spreading misinformation. I'm spreading the fact that [[Programming:C -/- -/-]] will be deleted soon. Seemed like it would be good for him to know. [[User:Mshonle|MShonle]] 23:38, 11 September 2005 (UTC)

::::Marking a work for deletion doesn't mean that it will be deleted, you as an Administrator know perfectly well (or should) the steps it takes, as the only contributor to the book I have requested that you failing to revert your steps, move it to the next step ASAP not in 2 weeks so we are able to resolve the issue quickly--[[User:Panic2k4|Panic]] 23:51, 11 September 2005 (UTC)

:::::I'm just a single admin. If you don't trust me I can ask [[Wikibooks:Staff_lounge#Aye_-_you_are_right_to_enforce_the_policy|one of the many other]] admins or bureaus to do the deletion. I do hope you have by now made a local copy of all of the work you have done. You should be proud of it. [[User:Mshonle|MShonle]] 00:11, 12 September 2005 (UTC)

::''(talk page redirects are evil)''

::Transclusions would resolve the problem but due to the proxy setup on Wikibooks they take time to become effective, since the pages are empty a single location is easier to fallow, if contributor object or request than it would need a redesign the issue would be addressed, if you can please remove and fix (revert) you comments on the foreword talk page a move to the redirect talk would be ok--[[User:Panic2k4|Panic]] 23:19, 11 September 2005 (UTC)

=RightToLeave=
(remove RightToLeave comment)

Will you please stop ?!? RightToLeave is a corner stone of the GFDL hiding the information from writers isn't correct I would argue with you that point also, if you were collaborating on the works you are editing... --[[User:Panic2k4|Panic]] 00:05, 12 September 2005 (UTC)

That section of the work isn't valid only on Wikibooks it's needed for any port of the work to any other interactive medium, I would probably include the text of the GFDL but it's lengthy, but any port/copy of the work would miss that information also, probably a small description of the GFDL should also be included and a link to the hole text--[[User:Panic2k4|Panic]] 00:08, 12 September 2005 (UTC)

:Telling users on the first page they have a right to leave is a good way of scaring off contributors. It's quite obvious on any webpage that you don't have to read it. And it's quite obvious that no one visiting this page would suddenly feel an obligation to be a part of the project. But links to MeatBall used in some official capacity as you are doing is very confusing for others.

:No where does the GNU FDL require for you to link to that page. Trust me, if the GNU FDL required you to link to a page, it would be a GNU page. The only page you need to worry about linking to is [[Wikibooks:Copyrights|right here]], which is already referenced on every page the reader will see. [[User:Mshonle|MShonle]] 00:19, 12 September 2005 (UTC)

::You are confusing the issiues 1- The note is in  the writers section 2-If I print the work http://en.wikibooks.org/w/index.php?title=The_World_of_Peer-to-Peer_%28P2P%29&amp;printable=yes I don't get a copy of the license nor a direct link to get one or a mail address (if in a paper version)--[[User:Panic2k4|Panic]] 00:24, 12 September 2005 (UTC)

::: I'm with [[User:Mshonle|Mshonle]], there is no way we want to be telling potential future Wikibookians they have the right to leave. [[User:Serge|Serge]] 08:53, September 12, 2005 (UTC)

:::: What you are saying, as I understand it, is that the best way to go is (against the Wikimedia spirit) by editorial ways hide the truth from future writers, if even some administrator are confused about the GFDL the future seems dark to me, I think people should think by themselves the interpretation of the information provided is up to them, and no one should claim to know how others will interpret at best if something is wrongly explained it should be corrected not edited out...--[[User:Panic2k4|Panic]] 02:38, 13 September 2005 (UTC)

:::::The wikispirit is to encourage contributions, not give them some libertarian lecture. But I think you misunderstand what I say. Do you have a phone number and time zone? [[User:Mshonle|MShonle]] 04:21, 13 September 2005 (UTC)

:::::If I had used a complete description of the rights, I would agree with you, but all I did, to clarefy writers, was to provide the links (I think they were indicated by Jimbo), about the direct link to me sorry, you can use the e-mail on my user page (I'm also on IRC:telepac.ptnet.org:6667 #C++ or #GNUTELLA) but for all to benefit all stuff wikimedia related should be dealth here, so it can be used for future reference if needed.--[[User:Panic2k4|Panic]] 04:32, 13 September 2005 (UTC)

=A Proposition=

ok, here's an idea:

* Use the name c_plus_plus, for technical reasons (i kinda like -/-, but the technical argument is unbeatable)

* What used to be the -/- -/- books gets to be the main content. It is much more readable and easier to understand.

* What used to be the plus plus book becomes the &quot;reference section&quot;

* Topics should be explained in the explanation section, and appropriate tables etc. should be linked from the reference section.

I know I haven't contributed, but I really like Panic's content and i would hate to loose it. I'd help moving / renaming if needed.

-- [[User:maxberger|Max]]

:But isn't Panic's one the indepth guide? Hmmm... I forget. Anyway, I suggested this earlier myself and I think it would work very well. [[User:Garrett|Garrett]]&lt;sup&gt;[[User talk:Garrett|Talk]]&lt;/sup&gt; 01:50, 13 September 2005 (UTC)

::Yes it is, and not 80% based on the other work as I've seen you post somewhere, at this moment I'm very frustrated at Wikibooks, policy rules have effect on previous works without any consideration for the contributors, administrator seem have editorial rights that goes beyond the scope of policies and can or seem to be able to implement esthectic views on works they aren't working on, nor under dispute by its contributors.
::It was my idea that due to you administration action some time ago the subject of the possible fork (that I still say it wasn't really a content fork as the prev. work was reverted on the original book), was closed and I was working on on a segretation by chapters of the Monolithic version as requested and the merging of contents of both works, that was what I was doing before the intervention of this administrator, that possibly by lack of previews administration work thought that the situation was still under some kind of dispute
::The work if GFDL you can do whatever you think best [[User:maxberger|Max]] even copy it to another hosting place and link there for your needs and extend it, I have a backup also but I'll not release it in a public forum for now, sorry. If you do fallow this option just look up the GFDL limitations and if it can be publicly edited/extended please do post the url on my talk page so I can collaborate on it. Txs--[[User:Panic2k4|Panic]] 02:15, 13 September 2005 (UTC)

Hi Max. I think we should instead merge in the content into the existing [[Programming:C_plus_plus]] pages. In a little bit I'll be renaming the pages to use the &quot;/&quot; notation. What this will do is create automatic chapter navigation (so that I can remove the manual chapter navigation, which conflicts with transclusions). Then, I'll make any other changes to the submodules in order to get a proper &quot;Print Version&quot; of the book up (as an uber page).

But I don't like the idea of effectively renaming the -/- -/- book to plus_plus. That would basically set up a precedence to reward people who fork. This particular kind of fork divided contributions and confused future contributors (just as you yourself were confused where exactly to contribute). I'm not sure what you mean by having the book become a reference section. Could you elaborate? [[User:Mshonle|MShonle]] 02:35, 13 September 2005 (UTC)

: False, the policy was created after the fact, no reward is expected only consideration, and the work you are doing was already being done, without your editorial changes. I think Max referes to the structure as seen in the Index page...--[[User:Panic2k4|Panic]] 02:42, 13 September 2005 (UTC)

:[Programming:C plus plus:All Chapters] as I have said the problems with that solution are:
:1) TOCs will have to be hidden and a new TOC maintened by hand.
:2) The Previous, Up, Next artifacts can't be removed, can they?
:--[[User:Panic2k4|Panic]] 02:57, 13 September 2005 (UTC)

::It doesn't matter when the policy was made. The only special circumstances around this is how long we've been dividing/scaring off C++ contributions. But reload that page in a little while, and we'll see if it's cleaned up. OK?  (And of course the Prev/Up/Next can be removed.) [[User:Mshonle|MShonle]] 03:02, 13 September 2005 (UTC)

:::It should be added to every policy and new ones that they have a retroactive effect or if default stated in evidence and any that doesn't state the exception--[[User:Panic2k4|Panic]] 03:55, 13 September 2005 (UTC)

::::A short introduction to bureaucracies: Typically new policies are only created when something &quot;has gone wrong.&quot; It's like how I can't go to the movies on time with my Aunt Selma. Just before we're out the door she's like &quot;oh, let me check for my keys&quot; and then &quot;oh, is the burner on?&quot; All of these checks are there because, probably, at one point she forgot her keys, and at another point she forgot to turn off the burner. When a mistake happens you want to be sure that it doesn't happen again. That's why large companies have so much paper work and take so long to do things. It's a fairly natural state for things to get more bureaucratic the older they get. When something happens, you review the situation and put in policy to be sure it won't happen again. [[User:Mshonle|MShonle]] 04:32, 13 September 2005 (UTC)

=Merge=

Ok, here's what I see when I look at the plus plus book: 3 chapters with actual explanation content: Hello World, Variables, Data Types. These are more or less in more details in the -/- -/- book (however, these could/should actually be merged). Then some good references (but not explanations): The reference tabls section, and the idioms page. Both are good and necessary, but as a reference (and definitely not for people new to programming, only for people new to c++). Between these (the content and the references) there is a huge gap - and that information is in c -/- -/-  [[User:maxberger|Max]] 02:59, 13 September 2005 (UTC)

For the page structure: Are you using the [[Wikibooks:Naming_policy#Flat|Flat style]] ? If not, please link me to the current naming policy 03:14, 13 September 2005 (UTC)
:Hi Max, I've been changing it to use something like the flat structure. [[User:Mshonle|MShonle]] 04:45, 13 September 2005 (UTC)

:Again, the C Plus Plus content is older, not corrected and static, since any of the so called fork (see Dysposia page were Paddu reference on it not really being a fork) you should consider all content on C -/- -/- up-to-date and with all needed additions and as I was a contributor in both works the editorial rights should be mine not yours, so I again state that the structure on C -/- -/- minus the use of &quot;/&quot; is the best, more, again I state the objection to the &quot;plus&quot; but I can let you change it all to your best editorial views and proceed with a vote (more work but now it's a point I will make sure it's addressed, even if the merge is dropped and only one work stands, I would like to know if any contributors will have problems with the name change as it goes beyond me the importance you are placing on the url of the book)
::I'm affraid you don't have any &quot;editorial rights&quot; that are exclusively yours. Any one has the right to edit. When there is a dispute the issue must be discussed. [[User:Mshonle|MShonle]] 04:45, 13 September 2005 (UTC)

:Again, a non human usable url is best because:
:1) Easier to perform transclusions, edits, additions and keep only one url in the work (in place of &quot;C Plus Plus&quot; &quot;C_Plus Plus&quot; &quot;C_Plus_Plus&quot; (simple examples) that will make it harder (as you are probably noticing, on changing parts or all the location of the book (future policies may implement new locations)
:2) Books that are not addressed by a easy and direct url will provide more visibility to the Wikibooks as a hole
:3) There are more points but I'll build up the list for a future vote...
:PS: Anyone is free to edit my comments (for miss-spelling) haven't English as my main language the, -grumble- SpellChecker not doing it's work and speedy writing I'm aware that there are plenty of errors.--[[User:Panic2k4|Panic]] 03:25, 13 September 2005 (UTC)
::Use the Google toolbar, which has a spellchecker. [[User:Mshonle|MShonle]] 04:45, 13 September 2005 (UTC)

::By &quot;your structure&quot; you mean your order of content? If so, here's an idea: Provide multiple index pages, that reference to the same content, but in a different order. I, for example would probably like a different order for beginners (or is that a bad idea?) --[[User:Maxberger|Max]] 03:36, 13 September 2005 (UTC)
:::What ordering did you have in mind? If it's better, then it's better. Solutions that push the decision &quot;to let the reader decide&quot; are typically poor because they are non-decisions. [[User:Mshonle|MShonle]] 04:45, 13 September 2005 (UTC)

:::Good idea, but wait utill the actual work is done and we can structure it, I think the order now is the best for any intruduction to the language but as I did it all without any other inputs...--[[User:Panic2k4|Panic]] 03:43, 13 September 2005 (UTC)

Herr, [[User:Mshonle|MShonle]] it seems someone referred to having &quot;Programming:&quot; as a location was bad (it should be on the C -/- -/- talk), again if you adopting stuff from C -/- -/- be careful to add the needed reference to the other works and the author section--[[User:Panic2k4|Panic]] 03:53, 13 September 2005 (UTC)
:The &quot;Programming:&quot; is a namespace. It's a separate issue. In the meantime, we'll keep the C++ book in this namespace. [[User:Mshonle|MShonle]] 04:45, 13 September 2005 (UTC)

Isn't the image considered a part of the cover changing it and adding a new one would probably be possible if using the 2 but I think it cant be removed (again if you are adopting C -/- -/-)--[[User:Panic2k4|Panic]] 04:03, 13 September 2005 (UTC)
:What can't be removed? [[User:Mshonle|MShonle]] 04:45, 13 September 2005 (UTC)</text>
      <sha1>t81vng2szizzhlwurv7nntverhimh2z</sha1>
    </revision>
  </page>
  <page>
    <title>User:H Padleckas</title>
    <ns>2</ns>
    <id>40659</id>
    <revision>
      <id>269176</id>
      <parentid>232252</parentid>
      <timestamp>2005-10-31T07:18:52Z</timestamp>
      <contributor>
        <username>H Padleckas</username>
        <id>1153</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">In addition to being a member of Wikibooks, I am also an English language member of Wikipedia, WikiCommons, Wiktionary, and WikiNews.  I also belonged to Nupedia before they folded.  [[User:H Padleckas|H Padleckas]]</text>
      <sha1>mipiml83bkmz4qatan3t46zk07toi7x</sha1>
    </revision>
  </page>
  <page>
    <title>MediaWiki talk:Edithelppage</title>
    <ns>9</ns>
    <id>40662</id>
    <revision>
      <id>232280</id>
      <timestamp>2005-09-11T08:39:31Z</timestamp>
      <contributor>
        <username>Robert Horning</username>
        <id>1227</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Just a quick comment about this page.  I changed to link directly to meta, but it doesnt seem to &quot;open&quot; direclty into a new page like it used to.  I don't know the problem, but certainly we can change it back to the old help page if necessary.  --[[User:Robert Horning|Rob Horning]] 08:39, 11 September 2005 (UTC)</text>
      <sha1>4u95wnaf4nfog5slisipjgsekro08m9</sha1>
    </revision>
  </page>
  <page>
    <title>User:Bjtitus~enwikibooks</title>
    <ns>2</ns>
    <id>40663</id>
    <revision>
      <id>2848577</id>
      <parentid>232281</parentid>
      <timestamp>2015-04-17T22:13:55Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Bjtitus]] to [[User:Bjtitus~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Bjtitus|Bjtitus]]&quot; to &quot;[[Special:CentralAuth/Bjtitus~enwikibooks|Bjtitus~...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{| border=&quot;2&quot; style=&quot;border-collapse:collapse; float:left;&quot; cellpadding=&quot;2&quot; cellspacing=&quot;2&quot; rules=&quot;none&quot;
|-
! bgcolor=&quot;#cccccc&quot; | Bjtitus
|-
| align=&quot;center&quot; | [[Meta:User:Bjtitus|Meta]] | [[Wikipedia:User:Bjtitus|EN.Wikipedia]] | [[Commons:User:Bjtitus|Commons]] | [[Wikinews:User:Bjtitus|Wikinews]]
|-
| align=&quot;center&quot; | [[Wiktionary:User:Bjtitus|Wiktionary]] | [[User:Bjtitus|Wikibooks]] | [[Wikisource:User:Bjtitus|Wikisource]] | [[Wikiquote:User:Bjtitus|Wikiquote]] | [[Wikicities:User:Bjtitus|Wikicities]]
|}

&lt;br clear=&quot;all&quot; /&gt;</text>
      <sha1>6rw43vdmz5wlicg3mwsoo10kop0fygf</sha1>
    </revision>
  </page>
  <page>
    <title>Scouting/Knots/Decorational Knots/Sinnets</title>
    <ns>0</ns>
    <id>40664</id>
    <revision>
      <id>531460</id>
      <parentid>232298</parentid>
      <timestamp>2006-07-21T17:23:09Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Sinnets consist of 3 or more interwinded laces or ropes. The most simple and most famous sinnet is the [[Scouting/Knots/Decorational Knots/Sinnets/Three String English Sinnet|Three String English Sinnet]].
Sinnets can consist of almost any number of strings although they become more and more complicated when more strings are added. Sinnets also include variants of braids.

*[[Scouting/Knots/Decorational Knots/Sinnets/Three String English Sinnet|Three String English Sinnet]] or Common Braid
*[[Scouting/Knots/Decorational Knots/Sinnets/Five String English Sinnet|Five String English Sinnet]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Four String French Sinnet|Four String French Sinnet]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Five String French Sinnet|Five String French Sinnet]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Four String Square Sinnet|Four String Square Sinnet]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Eight String Square Sinnet|Eight String Square Sinnet]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Six String Round Sinnet|Six String Round Sinnet]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Crown Sinnet|Crown Sinnet]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Alternating Crown Sinnet| Alternating Crown Sinnet]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Round Crown Sinnet|Round Crown Sinnet]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Chain Sinnet|Chain Sinnet]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Solomon Bar|Solomon Bar]]
*[[Scouting/Knots/Decorational Knots/Sinnets/Bannister Bar|Bannister Bar]]

[[Category:Scouting]]</text>
      <sha1>5tankrvao3o42hu9ji33bi6llne8fqr</sha1>
    </revision>
  </page>
  <page>
    <title>Scouting/Knots/Decorational Knots/Sinnets/Three String English Sinnet</title>
    <ns>0</ns>
    <id>40665</id>
    <revision>
      <id>1844666</id>
      <parentid>1687334</parentid>
      <timestamp>2010-06-17T01:47:36Z</timestamp>
      <contributor>
        <username>Internoob</username>
        <id>306903</id>
      </contributor>
      <minor />
      <comment>/* Description */ grammar</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;div style=&quot;float:right;&quot;&gt;
[[image:Knot-Sinnet-English_Sinnet-3-a.gif|thumb|none|Tying a Three String English Sinnet]]
&lt;/div&gt;
=Making a Three String English Sinnet=
The Three String English Sinnet is the most simple sinnet to create. You start by putting the three strings next to each other. Then you pick the left string and cross it over the middle string, making the left string the middle string and vice versa. Then, you pick the right string, and cross it over the middle string, making the right string the middle string, and vice versa. Repeat this process alternating the left and right string, until the desired length is reached.

=Description=
This sinnet is a braid, and is therefore primarily used for decoration. Another use for this sinnet is creating a stronger rope by braiding several weaker ropes. A Three String English Sinnet will create a rope three times stronger than either of the three individual ropes (provided the three ropes used were of the same quality and strength).

=Other Names=
*Common Braid
*Braid
*Three String Braid
*Vlecht (Dutch)
*Driestrengs Vlecht (Dutch)
*Driestrengs Engelse Platting (Dutch)

=Related Knots=
*[[Scouting/Knots/Decorational Knots/Sinnets/Five String English Sinnet|Five String English Sinnet]]

[[Category:Scouting]]</text>
      <sha1>ojobkuvsoy7hrgnexpnlv804kgfl6u5</sha1>
    </revision>
  </page>
  <page>
    <title>Scouting/Knots/Decorational Knots/Sinnets/Five String English Sinnet</title>
    <ns>0</ns>
    <id>40668</id>
    <revision>
      <id>1844667</id>
      <parentid>1687335</parentid>
      <timestamp>2010-06-17T01:50:04Z</timestamp>
      <contributor>
        <username>Internoob</username>
        <id>306903</id>
      </contributor>
      <minor />
      <comment>/* Description */ grammar</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;div style=&quot;float:right;&quot;&gt;
[[image:Knot-Sinnet-English_Sinnet-5-a.gif|thumb|none|Tying a Five String English Sinnet]]
&lt;/div&gt;
=Making a Five String English Sinnet=
The Five String English Sinnet is a very simple sinnet to create, and closely related to the Three Strings version. You start by putting the five strings next to each other. Then you pick the leftmost string and cross it over the middle string. Then, you pick the rightmost string, and cross it over the middle string. Repeat this process alternating the leftmost and rightmost string, until the desired length is reached.

=Description=
This sinnet is a braid, and is therefore primarily used for decoration. Another use for this sinnet is creating a stronger rope by braiding several weaker ropes. A Five String English Sinnet will create a rope five times stronger than either of the five individual ropes (provided the five ropes used were of the same quality and strength).

=Other Names=
*Five String Braid
*Vijfstrengs Vlecht (Dutch)
*Vijfstrengs Engelse Platting (Dutch)

=Related Knots=
*[[Scouting/Knots/Decorational Knots/Sinnets/Three String English Sinnet|Three String English Sinnet]]
*English Sinnets with more strings are created the same manner. Any uneven number of strings can be used.

[[Category:Scouting]]</text>
      <sha1>er3ghi7t4577onyetkcm4enksjju70z</sha1>
    </revision>
  </page>
  <page>
    <title>Visual Basic/External Processes</title>
    <ns>0</ns>
    <id>40670</id>
    <revision>
      <id>2530208</id>
      <parentid>2497366</parentid>
      <timestamp>2013-05-29T19:33:25Z</timestamp>
      <contributor>
        <username>Dan Polansky</username>
        <id>78491</id>
      </contributor>
      <comment>revert edits with very little added value over what was already in &quot;The Shell Function&quot; section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">It is often the case that a program already exists to do some job so
rather than rewrite the program in Visual Basic it is more efficient
to run the existing program from Visual Basic.  This can work very
well for command line programs or scripts written in any language.

The general scheme is to create a string containing the command line,
call a function to run it and then wait for the command to complete.
There are many refinements that can be made including all sorts of
ways of sending data to the new process, reading results from it,
pausing it, setting its priority and so on.

==The Shell Function==

The simplest way of running an external program is to do something like this:

&lt;source lang=&quot;vb&quot;&gt;Shell &quot;cmd /c dir %temp%&quot;&lt;/source&gt;

''Shell'' is a built in Visual Basic function that executes a command
line and returns a ''handle'' to that process.  ''Shell'' takes an
optional argument that controls the ''window style'' of the new
process (maximized, normal, hidden, etc.).

Unfortunately running another program like this doesn't give you much
control over what is happening.  In particular, there is no obvious
way to find out if the program has completed its work.

Luckily ''Shell'' actually does slightly more than launch the program.
It also returns the ''process id''.  This is the number displayed by
''Task Managers'' and can be used to check the status of the ''process''.
Unfortunately, as is so often the case with Visual Basic and Windows,
there is no built in function nor even a single [[../Windows API|API]] function that
can use it directly. Therefore, we must write a little more code.  First, we
must declare a few [[../Windows_API|API]] functions and constants:

&lt;source lang=&quot;vb&quot;&gt;
  Option Explicit
  
  Const SYNCHRONIZE = &amp;H100000
  Const INFINITE = &amp;HFFFF    'Wait forever
  Const WAIT_OBJECT_0 = 0    'The state of the specified object is signaled.
  Const WAIT_TIMEOUT = &amp;H102 'The time-out interval elapsed, and the object’s state is nonsignaled.
  
  Private Declare Function OpenProcess Lib &quot;kernel32&quot; _
          (ByVal dwDesiredAccess As Long, _
           ByVal bInheritHandle As Long, _
           ByVal dwProcessId As Long) _
          As Long
  Private Declare Function WaitForSingleObject Lib &quot;kernel32&quot; _
          (ByVal hHandle As Long, _
           ByVal dwMilliseconds As Long) _
          As Long
  Private Declare Function CloseHandle Lib &quot;kernel32&quot; _
          (ByVal hObject As Long) _
          As Long
  
  Dim ProcessID As Long
  Dim hProcess As Long 
&lt;/source&gt;

Here is an example of a function that executes a command and waits for
it to complete:

&lt;source lang=&quot;vb&quot;&gt;
  Function ShellWait(CommandLine As String, _
                     TimeOut As Long, _
                     WindowState As VbAppWinStyle) As Boolean
    
    Dim ProcessID As Long
    Dim hProcess As Long
    
    ProcessID = Shell(CommandLine,WindowState)
    If ProcessID &lt;&gt; 0 Then
      'non-zero (True) so Shell worked
      ' Get a process handle for the PID (Wait takes a handle)
      hProcess = OpenProcess(SYNCHRONIZE, False, ProcessID)
      If hProcess &lt;&gt; 0 Then
        ' Got process handle
        ' Wait until process finishes before going on
        If WaitForSingleObject(hProcess, TimeOut) = WAIT_OBJECT_0 Then
          ShellWait = True
        Else
          ShellWait = False
        End If
      Else
        'Failed to get process handle.
        'Perhaps the process terminated very quickly
        'or it might not really have executed at all even though Windows
        ' started a process.
        ShellWait = False
      End If
    Else
      ' PID zero (False) so Shell failed
      ShellWait = False
    End If
  End Function
&lt;/source&gt;
  
Call it like this:

&lt;source lang=&quot;vb&quot;&gt;
  If ShellWait(&quot;calc.exe&quot;) then
    MsgBox &quot;Success :-)&quot;
  Else
    MsgBox &quot;Failure :-(&quot;
  End If
&lt;/source&gt;

==Exercises==

*Modify the ShellWait example function so that the caller can distinguish between failure to launch the process and timeout.
*Suggest a reason why this might be a good idea.


{{VBClassicNav1|Windows_API|Object Oriented Programming}}

{{stub}}</text>
      <sha1>5oymqe88mn05im6k926tjxyyowh16z4</sha1>
    </revision>
  </page>
  <page>
    <title>Category:Wikibooks bookshelves</title>
    <ns>14</ns>
    <id>40674</id>
    <revision>
      <id>2157317</id>
      <parentid>1561636</parentid>
      <timestamp>2011-08-15T08:27:46Z</timestamp>
      <contributor>
        <username>VolkovBot</username>
        <id>171303</id>
      </contributor>
      <minor />
      <comment>r2.5.1) (robot Modifying: [[cy:Categori:Silffoedd llyfrau]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{deprecated bookshelf}}
{{Bookshelves}}

[[Category:Wikibooks|Bookshelves]]

[[cy:Categori:Silffoedd llyfrau]]
[[da:Kategori:Boghylder]]
[[ms:Kategori:Rak Wikibooks]]</text>
      <sha1>piii0b6eektskxsqiypw6rweqnm6bs9</sha1>
    </revision>
  </page>
  <page>
    <title>Visual Basic/Snippets</title>
    <ns>0</ns>
    <id>40676</id>
    <revision>
      <id>1964128</id>
      <parentid>1057040</parentid>
      <timestamp>2010-11-02T16:59:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed headings; syntax highlighting</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==TopMost Function==

The code below is useful if you want to keep your application window on top or swap your application window between staying the topmost window and behaving like a standard window. Paste the code below into a code module and call either of the two routines as required.

To make your application stay on top use this call :

&lt;source lang=&quot;vb&quot;&gt;MakeTopMost Me.hwnd&lt;/source&gt;

To make your application window behave like a normal window use this call :

&lt;source lang=&quot;vb&quot;&gt;MakeNormal Me.hwnd&lt;/source&gt;

&lt;source lang=&quot;vb&quot;&gt;
  ' Created by E.Spencer - This code is public domain.
  '
  Public Const HWND_TOPMOST = -1
  Public Const HWND_NOTOPMOST = -2
  Public Const SWP_NOMOVE = &amp;H2
  Public Const SWP_NOSIZE = &amp;H1
  Public Const SWP_NOACTIVATE = &amp;H10
  Public Const SWP_SHOWWINDOW = &amp;H40
  Public Const TOPMOST_FLAGS = SWP_NOMOVE Or SWP_NOSIZE
  Public Declare Function SetWindowPos Lib &quot;user32&quot; _
                          (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, _
                           ByVal x As Long, y, ByVal cx As Long, _
                           ByVal cy As Long, ByVal wFlags As Long) As Long
  
  Public Sub MakeTopMost(Handle As Long)
    SetWindowPos Handle, HWND_TOPMOST, 0, 0, 0, 0, TOPMOST_FLAGS
  End Sub
    
  Public Sub MakeNormal(Handle As Long)
    SetWindowPos Handle, HWND_NOTOPMOST, 0, 0, 0, 0, TOPMOST_FLAGS
  End Sub
&lt;/source&gt;

==Form Close Button Disable==
This was posted to the misc VB news group by Ben Baird. I include it here mainly because I found it quite handy, it details the code required to disable the Form Close button (little x button at top right of the window) whilst still keeping the button visible. To test this out open a new VB project, add a command button, paste in the code below and run it.

&lt;source lang=&quot;vb&quot;&gt;
  Private Declare Function GetSystemMenu Lib &quot;user32&quot; _
          (ByVal hwnd As Long, ByVal bRevert As Long) As Long
  Private Declare Function GetMenuItemCount Lib &quot;user32&quot; _
          (ByVal hMenu As Long) As Long
  Private Declare Function RemoveMenu Lib &quot;user32&quot; _
          (ByVal hMenu As Long, ByVal nPosition As Long, ByVal wFlags As Long) As Long
  Private Declare Function DrawMenuBar Lib &quot;user32&quot; _
          (ByVal hwnd As Long) As Long
  Private Const MF_BYPOSITION = &amp;H400&amp;
  Private Const MF_DISABLED = &amp;H2&amp;
  
  Public Sub DisableX(Frm As Form)
    Dim hMenu As Long
    Dim nCount As Long
    hMenu = GetSystemMenu(Frm.hwnd, 0)
    nCount = GetMenuItemCount(hMenu)
    Call RemoveMenu(hMenu, nCount - 1, MF_DISABLED Or MF_BYPOSITION)
    DrawMenuBar Frm.hwnd
  End Sub
  
  Private Sub Command1_Click()
    DisableX Me
  End Sub
&lt;/source&gt;

==ComboBox Automation==
The code below demonstrates how to expand and hide combo box lists via code. To test it out create a new VB project, place a command button and combo box on the form and paste in the code below. When you run the project and use the tab button to move the focus from the combo box to the command button you should notice that the combo box expands and hides.

&lt;source lang=&quot;vb&quot;&gt;
  Private Declare Function SendMessageLong Lib &quot;user32&quot; Alias &quot;SendMessageA&quot; _
          (ByVal hwnd As Long, _
           ByVal wMsg As Long, _
           ByVal wParam As Long, _
           ByVal lParam As Long) As Long
  
  Private Const CB_SHOWDROPDOWN = &amp;H14F
    
  Private Sub Combo1_GotFocus()
    SendMessageLong Combo1.hwnd, CB_SHOWDROPDOWN, True, 0
  End Sub
    
  Private Sub Combo1_LostFocus()
    SendMessageLong Combo1.hwnd, CB_SHOWDROPDOWN, False, 0
  End Sub
    
  Sub Form_Load()
    Combo1.AddItem &quot;Item 1&quot;
    Combo1.AddItem &quot;Item 2&quot;
    Combo1.AddItem &quot;Item 3&quot;
  End Sub
&lt;/source&gt;

==Reversing a String==
This code demonstrates a small function that reverses the content of a string. To test this out set up a form with a single command button and two text boxes then paste in the code below. If you now enter the text &quot;dlroW olleH&quot; in text box 1 and press the command button you will see the reversal in text box 2, it should read &quot;Hello World&quot;

&lt;source lang=&quot;vb&quot;&gt;
  Option Explicit

  Private Sub Command1_Click()
    Text2 = ReverseStr(Text1.Text)
  End Sub

  Private Function ReverseStr(ByVal IPStr As String) As String
    Dim i As Integer
    For i = Len(IPStr) To 1 Step -1
      ReverseStr = ReverseStr &amp; Mid(IPStr, i, 1)
    Next
  End Function
&lt;/source&gt;

==Preventing flicker during update==
It's a common problem that controls seem to flicker as they are updated. This can be due to Windows updating a control's screen image multiple times during an update or Windows updating a control during the monitor vertical refresh. The technique below gives you the ability to lock individual controls or the entire form window during updates, this allows you to dictate to Windows when the screen updating should be done. Another way of reducing flicker is to set the form's ClipControl property to false, this forces Windows to paint the form screen as whole instead of trying to preserve the look of individual controls (it can also increase the speed of your application). For those of you having problems with flickering graphics you should investigate using the API call BitBlt (Bit Block Transfer) instead of methods like Paintpicture.

To test the code below create a new VB project and place two command buttons and a combo box on the form. The first button will populate the combo box whilst the control is locked. The second button will unlock the control and allow Windows to refresh it. Change the Hwnd to reflect the name of the control or form you want to lock.

&lt;source lang=&quot;vb&quot;&gt;
  Private Declare Function LockWindowUpdate Lib &quot;User32&quot; (ByVal hWnd As Long) As Long
  
  Private Sub Command1_Click()
    Dim i As Integer
    Combo1.Clear   ' Clear and refresh the control to show the changes
    Combo1.Refresh
    ' Lock the control to prevent redrawing
    LockWindowUpdate Combo1.hWnd
    ' Update the control
    For i = 0 To 200
      Combo1.AddItem &quot;Entry &quot; &amp; i, i
    Next
    Combo1.ListIndex = 150
  End Sub
    
  Private Sub Command2_Click()
    ' Unlock
    LockWindowUpdate 0
  End Sub
&lt;/source&gt;

==Useful Date Functions==

All these functions except Lastofmonth (Elliot Spener's) were sent into PCW magazine by Simon Faulkner. I've found these date functions very handy, if you have any other useful functions let me know and I'll put them on.

&lt;source lang=&quot;vb&quot;&gt;
  Firstofmonth = Now() - Day(Now()) + 1
  
  Lastofmonth = DateAdd(&quot;m&quot;, 1, Date - Day(Date))
  
  Firstofyear = Now() - Datepart(&quot;y&quot;, Now()) + 1
  
  Lastofyear = Dateadd(&quot;yyyy&quot;, 1, Now() - Datepart(&quot;y&quot;, Now()))
  
  Daysinmonth = Datepart(&quot;d&quot;, Dateadd(&quot;m&quot;, 1, Now() - Day(Now))))
  
  Daysleftinyear = Dateadd(&quot;yyyy&quot;, 1, Now() - Datepart(&quot;y&quot;, Now())) - Now()
  
  Daysleftuntilchristmas = Dateadd(&quot;yyyy&quot;, 1, Now() - Datepart(&quot;y&quot;, Now())) - Now() - 7
  
  Daysinyear = Dateadd(&quot;yyyy&quot;, 1, Now() - Datepart(&quot;y&quot;, Now())) - (Now() - Datepart(&quot;y&quot;, Now()))
  
  Leapyear = IIf((Dateadd(&quot;yyyy&quot;, 1, Now() - Datepart(&quot;y&quot;, Now())) - (Now() - Datepart(&quot;y&quot;, Now()))) = 366, True, False)
&lt;/source&gt;

==Blast Effect==

Makes a circular blast effect on the picture box, make sure you rename it pic. X and Y is the center of the circle, R is the radius of the blast effect

&lt;source lang=&quot;vb&quot;&gt; 
  For angle=1 to 360
    pic.line (x,y) - (x + r * cos(angle*3.14159265358979/180),y + r * sin(angle*3.14159265358979/180))
  next angle
&lt;/source&gt;

==Sleep Function==

This is useful if you want to put your program in a wait state for a specific period of time. Just paste the code below into a new form to test it and attach it to a command button, then run it - you can view the time in the debug window. 1000 milliseconds = 1 second (but you probably knew that).

&lt;source lang=&quot;vb&quot;&gt;
  Private Declare Sub Sleep Lib &quot;kernel32&quot; (ByVal dwMilliseconds As Long)

  Private Sub Command1_Click()
    Debug.Print &quot;Started - &quot; &amp; Time()
    Sleep 1000
    Debug.Print &quot;Ended - &quot; &amp; Time()
  End Sub
&lt;/source&gt;

==Random Numbers==
Random numbers are not truly random if the random number generator isn't started, so you need to start it before using Rnd()

&lt;source lang=&quot;vb&quot;&gt;Randomize()&lt;/source&gt;

Replace HighestNumber and LowestNumber with your own range.

&lt;source lang=&quot;vb&quot;&gt;X=Int((HighestNumber - LowestNum + 1) * Rnd + LowestNumber)&lt;/source&gt;

==Animated Mouse Cursor==
The code below demonstrates how to change the mouse cursor from the base cursor to one of the animated ones. Open up a new project, add a drop list and a command button to the form then add in the code below and run it.
 
&lt;source lang=&quot;vb&quot;&gt;
  Option Explicit
  
  Public Const GCL_HCURSOR = -12
  
  Declare Function ClipCursor Lib &quot;user32&quot; _
          (lpRect As Any) _
          As Long
  Declare Function DestroyCursor Lib &quot;user32&quot; _
          (ByVal hCursor As Any) _
          As Long
  Declare Function LoadCursorFromFile Lib &quot;user32&quot; Alias &quot;LoadCursorFromFileA&quot; _
          (ByVal lpFileName As String) _
          As Long
  Declare Function SetClassLong Lib &quot;user32&quot; Alias &quot;SetClassLongA&quot; _
          (ByVal hwnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) _
          As Long
  Declare Function GetClassLong Lib &quot;user32&quot; Alias &quot;GetClassLongA&quot; _
          (ByVal hwnd As Long, ByVal nIndex As Long) _
          As Long
  
  Private mhAniCursor As Long
  Private mhBaseCursor As Long
  Private lresult As Long
  
  Private Sub Command1_Click()
    ' Sort out the user selection
    If Combo1.ListIndex = 0 Then
      lresult = SetClassLong((Form1.hwnd), GCL_HCURSOR, mhBaseCursor)
      lresult = DestroyCursor(mhAniCursor)
    Else
      If Combo1.ListIndex = 1 Then
        mhAniCursor = LoadCursorFromFile(&quot;C:\windows\cursors\hourglas.ani&quot;)
      Else
        mhAniCursor = LoadCursorFromFile(&quot;C:\windows\cursors\globe.ani&quot;)
      End If
      lresult = SetClassLong((Form1.hwnd), GCL_HCURSOR, mhAniCursor)
    End If
  End Sub
  
  Private Sub Form_Load()
    ' Set up the list of cursor options
    Combo1.AddItem &quot;Normal&quot;, 0
    Combo1.AddItem &quot;HourGlass&quot;, 1
    Combo1.AddItem &quot;Globe&quot;, 2
    Combo1.ListIndex = 0
    ' Grab the current base cursor
    mhBaseCursor = GetClassLong((hwnd), GCL_HCURSOR)
  End Sub
&lt;/source&gt;

==Adding a bitmap to a menu entry==
The code below demonstrates how to add 13x13 bitmap pictures (not icons) to the left hand of each menu entry. You can define a different bitmap for both the checked and unchecked condition (as shown) or set one of these values to zero if you don't want a bitmap shown for a particular condition.

The project uses 2 picture boxes (each holding one of the required bitmaps and set to be non visible), a button and any amount of menus and submenus.  

&lt;source lang=&quot;vb&quot;&gt;
  Private Declare Function GetMenu Lib &quot;user32&quot; _
          (ByVal hwnd As Long) _
          As Long
  Private Declare Function GetSubMenu Lib &quot;user32&quot; _
          (ByVal hMenu As Long, ByVal nPos As Long) _
          As Long
  Private Declare Function GetMenuItemID Lib &quot;user32&quot; _
          (ByVal hMenu As Long, ByVal nPos As Long) _
          As Long
  Private Declare Function SetMenuItemBitmaps Lib &quot;user32&quot; _
          (ByVal hMenu As Long, ByVal nPosition As Long, ByVal wFlags As Long, _
           ByVal hBitmapUnchecked As Long, ByVal hBitmapChecked As Long) _
          As Long
  Private Declare Function GetMenuItemCount Lib &quot;user32&quot; _
          (ByVal hMenu As Long) _
          As Long
  
  Private Const MF_BITMAP = &amp;H4&amp;
  
  Private Sub AddIconToMenus_Click()
    Dim i1 As Long, i2 As Long, Ret As Long
    Dim MnHndl As Long
    Dim SMnHndl As Long
    Dim MCnt As Long
    Dim SMCnt As Long
    Dim SMnID As Long
  
    MnHndl = GetMenu(Form1.hwnd)' Get the menu handle for the current form
    MCnt = GetMenuItemCount(MnHndl)  ' Find out how many menus there are
    For i1 = 0 To MCnt - 1               ' Process each menu entry
      SMnHndl = GetSubMenu(MnHndl, i1) 'Get the next submenu handle for this menu
      SMCnt = GetMenuItemCount(SMnHndl) 'Find out how many entries are in this submenu
      For i2 = 0 To SMCnt - 1           'Process each submenu entry
        SMnID = GetMenuItemID(SMnHndl, i2) 'Get each entry ID for the current submenu
        ' Add two pictures - one for checked and one for unchecked
        Ret = SetMenuItemBitmaps(MnHndl, SMnID, MF_BITMAP, Picture2.Picture, Picture1.Picture)
      Next i2
    Next i1
  End Sub
&lt;/source&gt;

==Application Launching==
The code below demonstrates how to launch the default &quot;Open&quot; action for any given file (which will normally mean launching the application that handles data files of that type). I've also included a variation of ShellExecute that allows you to launch the default system Internet browser and have it go immediately to a specified Web site.

&lt;source lang=&quot;vb&quot;&gt;
  ' Required declarations
  Private Declare Function ShellExecute Lib &quot;shell32.dll&quot; Alias &quot;ShellExecuteA&quot; _
          (ByVal hwnd As Long, ByVal lpOperation As String, _
           ByVal lpFile As String, ByVal lpParameters As String, _
           ByVal lpDirectory As String, ByVal nShowCmd As Long) _
          As Long
  Private Declare Function GetDesktopWindow Lib &quot;user32&quot; () As Long
  Private Const SW_SHOWDEFAULT = 10
  Private Const SW_SHOWMAXIMIZED = 3
  Private Const SW_SHOWMINIMIZED = 2
  Private Const SW_SHOWMINNOACTIVE = 7
  Private Const SW_SHOWNA = 8
  Private Const SW_SHOWNOACTIVATE = 4
  Private Const SW_SHOWNORMAL = 1
  
  Private Sub Command1_Click()
    ' Open the browser and goto a specified site
    Dim DWHdc As Long, Ret As Long
    Dim PathAndFile As String
    PathAndFile = File1.Path &amp; &quot;\&quot; &amp; File1.filename
    ' Use the desktop window as the parent
    DWHdc = GetDesktopWindow()
    Ret = ShellExecute(DWHdc, &quot;Open&quot;, Text1.Text, &quot;&quot;, &quot;c:\&quot;, SW_SHOWMAXIMIZED)
  End Sub
  
  Private Sub Dir1_Change()
    File1.Path = Dir1.Path
  End Sub
  
  Private Sub Drive1_Change()
    Dir1.Path = Drive1.Drive
  End Sub
  
  Private Sub File1_DblClick()
    ' Launch the default &quot;Open&quot; action for the file
    Dim DWHdc As Long, Ret As Long
    Dim PathAndFile As String
    PathAndFile = File1.Path &amp; &quot;\&quot; &amp; File1.filename
    ' Use the desktop window as the parent
    DWHdc = GetDesktopWindow()
    Ret = ShellExecute(DWHdc, &quot;Open&quot;, PathAndFile, &quot;&quot;, File1.Path, SW_SHOWNORMAL)
  End Sub
&lt;/source&gt;

==Rounding Things Up==
If you're bored of rectangular controls on rectangular forms then try the code below. Open a new project, put a command button on it, paste this code in and then run it. You should see a round button on a round form, it works on most controls. The code is fairly straightforward, you calculate the size of the ellipse required and feed this through two API calls. With a bit of playing you can get some very odd effects.

&lt;source lang=&quot;vb&quot;&gt;
  Private hwndDest As Long
  Private Declare Function CreateEllipticRgn Lib &quot;gdi32&quot; _
                           (ByVal X1 As Long, ByVal Y1 As Long, _
                            ByVal X2 As Long, ByVal Y2 As Long) As Long
  Private Declare Function SetWindowRgn Lib &quot;user32&quot; _
                           (ByVal hWnd As Long, ByVal hRgn As Long, _
                            ByVal bRedraw As Long) As Long

  Private Sub Command1_Click()
    Unload Me
  End Sub

  Private Sub Form_Load()
    Dim hr&amp;, dl&amp;
    Dim usew&amp;, useh&amp;
    hwndDest = Me.hWnd
    usew&amp; = Me.Width / Screen.TwipsPerPixelX
    useh&amp; = Me.Height / Screen.TwipsPerPixelY
    hr&amp; = CreateEllipticRgn(0, 0, usew&amp;, useh&amp;)
    dl&amp; = SetWindowRgn(hwndDest, hr, True)
    hwndDest = Command1.hWnd
    usew&amp; = Command1.Width / Screen.TwipsPerPixelX
    useh&amp; = Command1.Height / Screen.TwipsPerPixelY
    hr&amp; = CreateEllipticRgn(0, 0, usew&amp;, useh&amp;)
    dl&amp; = SetWindowRgn(hwndDest, hr, True)
  End Sub
&lt;/source&gt;

== TCP/Winsock - Point-to-Point Connection ==
This is a client-server Point-to-Point TCP over Winsock snippet, which settings are hard-coded.
The snippet will connect to the server through the loopback adapter through port 50000, and the conversation would be the client sending the server a &quot;Hello World&quot; message which the server would show on a MsgBox. The server could only accept one connection from a client, if there is a second connection request from another client it would disconnect the first connection (thus, Point-to-Point). For a Point-to-Multipoint code (the server allows multiple connection from multiple client) see below.

===Client Code===
Add the following controls
* Winsock Control - Name=&quot;sckClient&quot;
* Command Button - Name=&quot;Command1&quot;, Caption=&quot;Say &quot;Hello World&quot;&quot;
* Command Button - Name=&quot;Command2&quot;, Caption=&quot;Make a Connection&quot;
* (Optional) Timer - Name=&quot;Timer1&quot;, Interval=&quot;1&quot;, Enabled=&quot;True&quot;

&lt;source lang=&quot;vb&quot;&gt;
    Option Explicit
    
    Private Sub Command1_Click()
        ' If connected, send data, if not, popup a msgbox telling to connect first
        If sckClient.State &lt;&gt; sckConnected Then
            MsgBox &quot;Connect First&quot;
        Else
            sckClient.SendData &quot;Hello World&quot;
        End If
    End Sub
    
    Private Sub Command2_Click()
        ' If there is already a connection, close it first, 
        ' failure of doing this would result in an error
        If sckClient.State &lt;&gt; sckClosed Then sckClient.Close
        
        ' OK, the winsock is free, we could open a new connection
        sckClient.Connect &quot;127.0.0.1&quot;, 50000
    End Sub
    
    Private Sub Timer1_Timer()
        ' Code for seeing the status of the winsock in the form window.
        ' For the meaning of the Status Code, go to the Object Browser (F2) and search for Winsock
        Me.Caption = sckClient.State
    End Sub
&lt;/source&gt;

===Server Code===
Add the following control
* Winsock Control - Name=&quot;sckServer&quot;
* (Optional) Timer - Name=&quot;Timer1&quot;, Interval=&quot;1&quot;, Enabled=&quot;True&quot;

&lt;source lang=&quot;vb&quot;&gt;
    Option Explicit
    
    Private Sub Form_Load()
        ' Listen to port 50000 for incoming connection from a client
        sckServer.LocalPort = 50000
        sckServer.Listen
    End Sub
    
    Private Sub sckServer_Close()
        ' If the connection is closed, restart the listening routine 
        ' so other connection can be received.
        sckServer.Close
        sckServer.Listen
    End Sub
    
    Private Sub sckServer_ConnectionRequest(ByVal requestID As Long)
        ' If the connection is not closed close it first before accepting a connection
        ' You can alter this behaviour, like to refuse the second connection
        If sckServer.State &lt;&gt; sckClosed Then sckServer.Close
        sckServer.Accept requestID
    End Sub
    
    Private Sub sckServer_DataArrival(ByVal bytesTotal As Long)
        Dim Data As String
        ' Receive the data (GetData), 
        ' Clear the data buffer (automatic with calling GetData),
        ' Display the data on a MsgBox
        sckServer.GetData Data
        MsgBox Data
    End Sub
    
    Private Sub Timer1_Timer()
        ' Code for seeing the status of the winsock in the form window.
        ' For the meaning of the Status Code, go to the Object Browser (F2) and search for Winsock
        Me.Caption = sckServer.State
    End Sub
&lt;/source&gt;

== TCP/Winsock - Point-to-MultiPoint Connection ==
This snippet is the same as the TCP/Winsock - Point-to-Point Connection above, but this code allows the server to receive multiple connection from multiple client simultaneously. This behavior is achieved by using Control Array. The Winsock Control Array index 0 is a special one, since it is never opened, it'll only listen for incoming connection, and assign to another Winsock control if there is an incoming connection. The server code is coded to reuse existing WinSock control that is already closed to receive new connection. The client code is the same as with the Point-to-Point snippet. The client will never unload Winsock control that is already open. You should understand Point-to-Point Connection before trying to implement Point-to-Multipoint connection.

===Client Code===
The same with client code for [[#TCP/Winsock - Point-to-Point Connection|Point-to-Point Client Code]]

===Server Code===
Add the following control
* Winsock Control - Name=&quot;sckServer&quot;, Index=&quot;0&quot;
* (Optional) Timer - Name=&quot;Timer1&quot;, Interval=&quot;1&quot;, Enabled=&quot;True&quot;

&lt;source lang=&quot;vb&quot;&gt;
    Private Sub Form_Load()
        ' Open a listening routine on port 50000
        sckServer(0).LocalPort = 50000
        sckServer(0).Listen
    End Sub
    
    Private Sub sckServer_Close(Index As Integer)
        ' Close the WinSock so it could be reopened if needed
        sckServer(Index).Close
    End Sub
    
    Private Sub sckServer_ConnectionRequest(Index As Integer, ByVal requestID As Long)
        Dim sock As Winsock
        ' If there is any closed Winsock, accept on that Winsock
        For Each sock In sckServer
            If sock.State = sckClosed Then
                sock.Accept requestID
                Exit Sub
            End If
        Next
        
        ' Else make a new Winsock
        Load sckServer(sckServer.UBound + 1)
        sckServer(sckServer.UBound).Accept requestID
    End Sub
    
    
    Private Sub sckServer_DataArrival(Index As Integer, ByVal bytesTotal As Long)
        Dim Data As String
        ' Receive the data (GetData) for the connection that is receiving, 
        ' Clear the data buffer (automatic with calling GetData) of the receiving connection,
        ' Display the data on a MsgBox with the index of the receiving Winsock
        sckServer(Index).GetData Data, vbString
        MsgBox Data &amp; vbCrLf &amp; Index
    End Sub
    
    Private Sub Timer1_Timer()
        Dim conn As Winsock
        ' Display the status for all connection on the window bar
        ' The status code is space-separated
        Me.Caption = &quot;&quot;
        For Each conn In sckServer
            Me.Caption = Me.Caption &amp; &quot; &quot; &amp; conn.State
        Next
    End Sub
&lt;/source&gt;


{{VBClassicNav1|Optimizing Visual Basic|The Language}}</text>
      <sha1>5d31d4dzdkw65z317v8dkp8nkp906ns</sha1>
    </revision>
  </page>
  <page>
    <title>Ayyavazhi/Sivam</title>
    <ns>0</ns>
    <id>40678</id>
    <revision>
      <id>2564179</id>
      <parentid>232450</parentid>
      <timestamp>2013-10-07T16:43:49Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&quot;Sivan&quot; Tamil name for Siva. This Sivan is not to confused with Sivam, which represents the whole mass which exists, according to Akilattirattu Ammanai (see also Sakthi).

{{BookCat}}</text>
      <sha1>rmgzd7orz6a0sow100373xi5d9xwnw8</sha1>
    </revision>
  </page>
  <page>
    <title>Ayyavazhi/Sakthi</title>
    <ns>0</ns>
    <id>40679</id>
    <revision>
      <id>232453</id>
      <timestamp>2005-09-11T20:01:46Z</timestamp>
      <contributor>
        <ip>61.1.210.168</ip>
      </contributor>
      <comment>Newly Created</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The Sakthi represents the sum total of the force existing in this Universe, according to [[Akilattirattu Ammanai]] the source of [[Ayyavazhi mythology]] and is the [[Tamil]] name for Shakti. All forces, including the force which controls the very small atom and the very large Universe is called as Sakthi. This Sakthi is not to be confused with [[Sivam]].

[[Category:Ayyavazhi]]</text>
      <sha1>efg1c2bjemyr15lndfxwh6q6eu6ruy6</sha1>
    </revision>
  </page>
  <page>
    <title>Ayyavazhi/Narayana</title>
    <ns>0</ns>
    <id>40680</id>
    <revision>
      <id>2564176</id>
      <parentid>232455</parentid>
      <timestamp>2013-10-07T16:41:52Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Narayana (Thirumal) in known as &quot;The Maintainer&quot; according to Ayyavazhi mythology. The name Thirumal is Tamil for Sriman Narayana, or Vishnu.
{{BookCat}}</text>
      <sha1>6gkz0m9wv8d4s9olpbh2l23zedlscpl</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Hindi/Family relations</title>
    <ns>1</ns>
    <id>40681</id>
    <revision>
      <id>2486921</id>
      <parentid>1926363</parentid>
      <timestamp>2013-02-11T20:25:54Z</timestamp>
      <contributor>
        <ip>31.11.242.231</ip>
      </contributor>
      <comment>/* Where's the Devanagari? */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{WikiProject Languages}} 

== Where's the Devanagari? ==

Why is this all in some weird form of English pronunciation? The page would look much better and be much easier to read if it were in Devanagari.
:I switched what I could spell to include the Devanagari in unicode and switched to the common Itrans for the pronunciation. I'll do the rest as I find the proper spelling. I may have messed up on some of the short and long forms of i. [http://www.unicode.org/charts/PDF/U0900.pdf Here's] the Devanagari unicode chart if anyone has a chance to do more. If I knew how to cross wikilink correctly I would link on the page to Wikipedia:Enabling complex text support for Indic scripts, to let people see the script right. - [[User:Taxman|Taxman]] 22:52, 27 September 2005 (UTC)

Once again, please add devanagari spelling in each place there is not one now. And correct all this &quot;Englishy&quot; transliteration into the accurate one. Who needs this weird &quot;common usage&quot;? For example: &quot;Mother's sister husband -- मौसा (massad)&quot; is NOT a transliteration of this word, is it? Anyway, I can see (mausaa), not (massad) here...</text>
      <sha1>nxap8rbm4w8uzf8co5satzz1ya5h80f</sha1>
    </revision>
  </page>
  <page>
    <title>User:Mysekurity</title>
    <ns>2</ns>
    <id>40682</id>
    <revision>
      <id>1272251</id>
      <parentid>266314</parentid>
      <timestamp>2008-09-07T12:31:37Z</timestamp>
      <contributor>
        <username>タチコマ robot</username>
        <id>67889</id>
      </contributor>
      <minor />
      <comment>Robot: Automated text replacement (-Metawiki.png +Wikimedia-logo-meta.png, -metawiki.png +Wikimedia-logo-meta.png)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{| style=&quot;background-color:#FFFFFF; align=&quot;center&quot; cellpadding=&quot;3px&quot; 
 |-
 | colspan=&quot;5&quot; align=&quot;center&quot; bgcolor=&quot;#CAD2ff&quot; | '''[[Wikimedia:Home|Wikimedia Foundation]]'''
 |- align=&quot;center&quot;
&lt;!-- | [[Image:Wikimedia-logo.png|30px]] --&gt;
 | [[Image:Wikipedia-logo-en.png|30px]]
 | [[Image:Wiktionary-logo-en.png|30px]]
 | [[Image:Wikibooks-logo.png|30px]]
 | [[Image:Wikinews-logo.png|30px]]
 |- bgcolor=&quot;#CAD2ff&quot; align=&quot;center&quot; font-size:small;
&lt;!--| [[Wikimedia:User:Mysekurity|Wikimedia]]--&gt;
 | [[W:User:Mysekurity|Wikipedia]]
 | [[Wiktionary:User:Mysekurity|Wiktionary]]
 | [[B:User:Mysekurity|Wikibooks]]
 | [[N:User:Mysekurity|Wikinews]]
 |- align=&quot;center&quot;
 | [[Image:Wikisource-logo.png|30px]] 
 | [[Image:Commons-logo.svg|30px]]
 | [[Image:Wikiquote-logo.png|30px]]
 | [[Image:Wikispecies-logo.png|30px]]
 | [[Image:Wikimedia-logo-meta.png|30px]]
 |- bgcolor=&quot;#CAD2ff&quot; align=&quot;center&quot; font-size:small;
 | [[Wikisource:User:Mysekurity|Wikisource]]
 | [[Commons:User:Mysekurity|Commons]]
 | [[Wikiquote:User:Mysekurity|Wikiquote]]
 | [[Wikispecies:User:Mysekurity|Wikispecies]]
 | [[Meta:User:Mysekurity|Meta]]
 |}
&lt;!--This ''was'' [[User:Angela|Angela]]'s, but I liked it, so I took it. --&gt;</text>
      <sha1>hzr7l03oraemno0ttjbjlypu5cp50el</sha1>
    </revision>
  </page>
  <page>
    <title>User:Maxberger</title>
    <ns>2</ns>
    <id>40683</id>
    <revision>
      <id>239212</id>
      <parentid>237002</parentid>
      <timestamp>2005-09-22T23:58:11Z</timestamp>
      <contributor>
        <username>Maxberger</username>
        <id>11343</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Hi All,

i am currently teaching a beginners class in C++. Therefore I am interested in the books [[Programming in C -/- -/-]] and [[Programming:C plus plus]]. Leave me a message :)

Max

-----

My bookmarks:

* [[Programming:C_plus_plus]]
* [[Programming:C_plus_plus/Conventions]]
* [[Talk:Programming:C plus plus/Table of contents]]
* [[Talk:Programming:C_plus_plus]]
* [[Talk:Programming:C plus plus/Cover Image]]</text>
      <sha1>d7rxm0gqhl2cit7f8u5ux2bjn2tnng6</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Maxberger</title>
    <ns>3</ns>
    <id>40684</id>
    <revision>
      <id>240886</id>
      <parentid>240885</parentid>
      <timestamp>2005-09-25T02:14:23Z</timestamp>
      <contributor>
        <username>Panic2k4</username>
        <id>2865</id>
      </contributor>
      <minor />
      <comment>/* minor edit */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Hi Max! Welcome to Wikibooks! We're going to turn [[Programming:C -/- -/-]] into a redirect to [[Programming:C plus plus]]. So, any thing you'd like to contribute should go to [[Programming:C plus plus]] directly. In theory the other C++ book is being merged in, but you are under no obligation to do any of that merging. Instead, simply do what you can to make [[Programming:C plus plus]] a better book. Thanks. --[[User:Mshonle|MShonle]] 22:51, 11 September 2005 (UTC)

:(BTW, [[Wikibooks:Staff_lounge#Merging_of_Forks_Action_Taken]] has a write-up and links to all that you'd care to know about this issue. [[User:Mshonle|MShonle]] 23:46, 11 September 2005 (UTC))

----
= Programming: C Plus Plus =

Oi Max, can you merge your style page with the conventions page or the Edit or do something that joins the 3 to 2 or 1 page only if you can manage it ?--[[User:Panic2k4|Panic]] 00:44, 18 September 2005 (UTC)


BTW pages not related to content (C++) pages should be kept on the Talk: space (at least that is my interpretation of the non-existing naming policy ... I say this because of you last edit.--[[User:Panic2k4|Panic]] 00:47, 18 September 2005 (UTC)

:Sorry, I guess you were faster creating the conventions page that I was.... Should have looked first, and then done it. I've now merged your and my version. Sorry --[[User:Maxberger|Max]] 01:17, 18 September 2005 (UTC)
= info =
Olá again Max,

Check out http://en.wikibooks.org/wiki/Special:Recentchanges (side bar also), the page of general discussion is [[Wikibooks:Staff lounge]].--[[User:Panic2k4|Panic]] 02:44, 19 September 2005 (UTC)
:done. Tnx. --[[User:Maxberger|Max]] 14:36, 19 September 2005 (UTC)

----

If you can check out the C plu plus talk page and remove or alter you signed information to the contents page (I didn't do it because it was signed, most people  don't like adulteration of signed texts/comments)--[[User:Panic2k4|Panic]] 02:46, 19 September 2005 (UTC)
:done. --[[User:Maxberger|Max]] 14:36, 19 September 2005 (UTC)


----

Max, what did you do with the external (links/information) the old page did you delete it? That page was very useful (I can only see 4 or 6 references now) and if we are after people to produce some work that page structure was a great to attract new readers contributors as they probably do have other sources or contributions that they want listed and doing so they will bring more content (at least that was what I saw after I restructured it the first time, people came added some link to a forum a mailing list a book and did some contributions to the book) one of those was from the C++ mailing list (NNTP) at the time he also added the book to the mailing list faq page, I think that this cross referencing is important to get some visibility--[[User:Panic2k4|Panic]] 23:56, 20 September 2005 (UTC)
:I have not deleted anything, I think it is within the FAQ page (from the plus plus book). This needs to be reorganized (will work on that right now), as so many things need to be reorganized.... But I promised not to touch any pages from -/- -/- until that is deleted. --[[User:Maxberger|Max]] 00:01, 21 September 2005 (UTC)
::You can edit and move stuff about (like on the same page) only keep in mind that there are redirects (no big deal, humm I saw some broken ones in the OnePage version but did not correct them), You could also take a look there before the delete I think I've moved almost all the content, humm there will be some problems with the reference tables as they are separated in the C -/- -/- book and on C plus plus they are on a single page (there are modules now on C plus plus that use those tables.--[[User:Panic2k4|Panic]] 00:11, 21 September 2005 (UTC)
::I will look at the -/- and see if we're missing anything. The External links are merged. The Reference Tables will have to be merged, but I'll find an easy way to do that (hopefully tonight) --00:15, 21 September 2005 (UTC)

=minor edit=
Sorry about that, I really don't make much distinction on the use of that function of wikibooks, I'll try to keep it on my mind on future edits.--[[User:Panic2k4|Panic]] 02:13, 25 September 2005 (UTC)</text>
      <sha1>0nqqqo0hwcoxmk3r8sx239jyb23hmzz</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Gzur</title>
    <ns>3</ns>
    <id>40687</id>
    <revision>
      <id>232528</id>
      <timestamp>2005-09-12T00:06:16Z</timestamp>
      <contributor>
        <username>Gzur</username>
        <id>11391</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Learning Latin - [http://en.wikibooks.org/wiki/Latin_Lesson_1 Lesson 1] - Excercises
&lt;ol&gt;
&lt;li&gt;
'''Define the stem:'''&lt;br&gt;
The stem is the part of a word to which suffixes are attached for the purposes of inflection - e.g. in icelandic - &quot;hús&quot; is the 'stem' of &quot;húsinu&quot; and &quot;húsið&quot; with -inu and -ið being suffixes which inflect the word(change its 		meaning) - this is done by word order in english.
&lt;/li&gt;&lt;li&gt;
'''Define the root:'''&lt;br&gt;
The root of a word is in common with other words of similar meaning.
&lt;/li&gt;&lt;li&gt;
'''Define inflection:'''&lt;br&gt;
Inflection is when suffixes(endings) are applied to a stem to change its meaning(húsið vs. hússins)
&lt;/li&gt;&lt;li&gt;
'''Define endings:'''&lt;br&gt;
Endings are suffixes which are applied to stems to inflect them(ie. change their meaning)
&lt;/li&gt;&lt;li&gt;
&lt;/li&gt;&lt;li&gt;'''Name the parts of speech:'''&lt;br&gt;
 Nouns - verbs - adjectives - pronouns - substantives - prepositions - conjunctions - adverbs
&lt;/li&gt;&lt;ol&gt;</text>
      <sha1>9anu33sh0jdcmm3rrw968s773tnr4wf</sha1>
    </revision>
  </page>
  <page>
    <title>Template:MMM</title>
    <ns>10</ns>
    <id>40690</id>
    <redirect title="Template:MMM Header" />
    <revision>
      <id>1666915</id>
      <parentid>1666912</parentid>
      <timestamp>2009-11-28T20:13:51Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>#REDIRECT[[Template:MMM Header]] - only transcluded that and nothing else</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT[[Template:MMM Header]]</text>
      <sha1>rfc4nbtpwrmvbz8i5xi0fmluou7n1a7</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Movie Making Manual/Budget/Grants</title>
    <ns>1</ns>
    <id>40691</id>
    <revision>
      <id>2564507</id>
      <parentid>1056157</parentid>
      <timestamp>2013-10-09T03:05:45Z</timestamp>
      <contributor>
        <username>Illusional</username>
        <id>687249</id>
      </contributor>
      <minor />
      <comment>Illusional moved page [[Talk:Movie Making Manual/Grants]] to [[Talk:Movie Making Manual/Budget/Grants]]: Naming Conventions</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">What... nothing in the US? Hmmmm...


Uh!
Entities like what?! This needs revision.</text>
      <sha1>59y6emhim5y1lh0ncs88yvrq2v5o57y</sha1>
    </revision>
  </page>
  <page>
    <title>Introduction to Communication Theory</title>
    <ns>0</ns>
    <id>40692</id>
    <revision>
      <id>1933089</id>
      <parentid>1856738</parentid>
      <timestamp>2010-09-15T14:29:00Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>status=0%</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Expand}}

The fundamental activity of every human being is to engage in communication with another. This book serves as an introduction to various communication theories proposed and developed over the last century.

==Contents==
{{print version}}
# Introduction
## [[/Introduction/]] {{stage short|25%|Sept 11, 2005}}
## [[/Evaluating Theory/]] {{stage short|50%|Sept 11, 2005}} from [[w:Communication_theory|Wikipedia - Communication_theory]]
## [[/Semiotics|Creating Meaning]] (Semiotics) {{stage short|25%|Sept 11, 2005}}
## Argumentation
# Interpersonal
## Small Group Relationships
## Nonverbal
## [[/Culture/]] {{stage short|25%|Sept 11, 2005}}
### Face Saving
### Negotiation
### Ethnography
### Gender Studies
# Macropersonal
## Communication Media
## [[/Media Content/]] {{stage short|00%|Sept 12, 2005}}
## Propaganda

==Related books==
* [[Communication Theory]]

{{alphabetical|I}}
{{Subjects|Communication}}
{{status|0%}}</text>
      <sha1>7j5quve6tf29gkvv9e1wv2cxwp6bnr6</sha1>
    </revision>
  </page>
  <page>
    <title>File:128px-Headlock.png</title>
    <ns>6</ns>
    <id>40693</id>
    <revision>
      <id>2983313</id>
      <parentid>258819</parentid>
      <timestamp>2015-08-10T20:04:39Z</timestamp>
      <contributor>
        <username>Green Giant</username>
        <id>22365</id>
      </contributor>
      <comment>Infobox; assumed own work; license migrated per [[m:License update]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Summary ==
{{Information
|description = An example of the classic headlock.
|date = 12 September 2005	
|source = {{own}}
|author = [[User:Chrismo~enwikibooks|Chrismo~enwikibooks]]
|permission = {{GFDL}}{{cc-by-sa-3.0}}
}}</text>
      <sha1>j3zmawaeemgcwyztbirdgzo5bfgxvjx</sha1>
    </revision>
  </page>
  <page>
    <title>File:128px-Headlock ground.png</title>
    <ns>6</ns>
    <id>40694</id>
    <revision>
      <id>2983317</id>
      <parentid>258822</parentid>
      <timestamp>2015-08-10T20:18:29Z</timestamp>
      <contributor>
        <username>Green Giant</username>
        <id>22365</id>
      </contributor>
      <comment>Infobox; relicensed per [[m:License update]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Summary ==
{{Information
|description = How to escape the classic headlock. Push off the ground and run (or fight).
|date = 12 September 2005
|source = {{own}}
|author = [[User:Chrismo~enwikibooks|Chrismo~enwikibooks]]
|permission = {{GFDL}}{{cc-by-sa-3.0}}
}}</text>
      <sha1>bcshcfndpol0hbop3cjzx0fw5shmgqk</sha1>
    </revision>
  </page>
  <page>
    <title>File:128px-Headlock leg.png</title>
    <ns>6</ns>
    <id>40695</id>
    <revision>
      <id>2983315</id>
      <parentid>258818</parentid>
      <timestamp>2015-08-10T20:15:31Z</timestamp>
      <contributor>
        <username>Green Giant</username>
        <id>22365</id>
      </contributor>
      <comment>Infobox; relicensed per [[m:License update]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Summary ==
{{Information
|description = How to escape the classic headlock. Place your leg behind both of their legs
|date = 12 September 2005	
|source = {{own}}
|author = [[User:Chrismo~enwikibooks|Chrismo~enwikibooks]]
|permission = {{GFDL}}{{cc-by-sa-3.0}}
}}</text>
      <sha1>cdo3ex1rietrj72xds7m3b2x1fdw6li</sha1>
    </revision>
  </page>
  <page>
    <title>File:128px-Headlock pulldown.png</title>
    <ns>6</ns>
    <id>40696</id>
    <revision>
      <id>2983316</id>
      <parentid>258821</parentid>
      <timestamp>2015-08-10T20:17:13Z</timestamp>
      <contributor>
        <username>Green Giant</username>
        <id>22365</id>
      </contributor>
      <comment>Infobox; relicensed per [[m:License update]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Summary ==
{{Information
|description = How to escape the classic headlock. Fall backwards and trip them over your leg.
|date = 12 September 2005	
|source = {{own}}
|author = [[User:Chrismo~enwikibooks|Chrismo~enwikibooks]]
|permission = {{GFDL}}{{cc-by-sa-3.0}}
}}</text>
      <sha1>cv1pr5wr6s0xw3a25glyldk2wrax32y</sha1>
    </revision>
  </page>
  <page>
    <title>File:128px-Headlock shoulder.png</title>
    <ns>6</ns>
    <id>40697</id>
    <revision>
      <id>2983314</id>
      <parentid>258820</parentid>
      <timestamp>2015-08-10T20:13:54Z</timestamp>
      <contributor>
        <username>Green Giant</username>
        <id>22365</id>
      </contributor>
      <comment>Infobox; relicensed per [[m:License update]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Summary ==
{{Information
|description = How to escape the classic headlock. Rotate your body, use your shoulder and place your arm in front of their body.
|date = 12 September 2005	
|source = {{own}}
|author = [[User:Chrismo~enwikibooks|Chrismo~enwikibooks]]
|permission = {{GFDL}}{{cc-by-sa-3.0}}
}}</text>
      <sha1>51d1xoizzg5ppvh613gfekqtcrfd46e</sha1>
    </revision>
  </page>
  <page>
    <title>How to Escape the Headlock</title>
    <ns>0</ns>
    <id>40698</id>
    <revision>
      <id>2947461</id>
      <parentid>2842323</parentid>
      <timestamp>2015-04-20T08:01:28Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The headlock is one of the most common holds used both by untrained and trained fighters. 

==How to avoid the headlock==
#Be aware of your surroundings. If you are aware of someone approaching you, it is unlikely they'll be able to apply a headlock, and if they try you can defend against that similarly to a shoulder grab since you'll have enough distance to start with. Having good posture is also very important.
#If you've only started to be aware a split second before the headlock is applied, it might be possible to maneuver out of it by ducking and blocking his arms. (In any case, the longer you wait, the harder it will be.)

== General headlock guidelines ==
* Tuck your chin. You do not want them to cut off your supply of air or blood. Turn your head towards their body, using their chest to protect your face from their fists. Grab their hands grabbing each other and the hand that is choking you and pull the hands down to release the pressure
* Keep a stable base. This means stay low and keep your legs relatively wide in a horse stance position with your legs bent. They will probably be thrashing you about and dragging you by your neck, so the ability to gain stability and counterattack at a moment's notice is crucial.
* To counter-attack, there are many possible choices, depending on what position you're in at any one moment. A particularly effective one is to punch their upper inner thigh or their groin. Afterwards pull their head area backwards using any hold you can get (e.g. hair, collar, eye sockets). Then push their arm away and run.
* Another option is to take your opponent down, as is demonstrated in the next section:
* There are many different defenses against the headlock and many different ways to do the headlock.

== Escaping the headlock using Jujutsu in 4 steps ==
[[File:128px-Headlock.png|frame|left|Here we see the classic headlock]]
[[File:128px-Headlock shoulder.png|frame|left|'''Step 1'''&lt;br&gt;Rotate your body, use your shoulder and place your arm in front of their body]]
[[File:128px-Headlock leg.png|left|frame|'''Step 2'''&lt;br&gt;Place your leg behind both of their legs]]
[[File:128px-Headlock pulldown.png|frame|left|'''Step 3'''&lt;br&gt;Fall backwards and trip them over your leg]]
[[File:128px-Headlock ground.png|left|frame|'''Step 4'''&lt;br&gt;Push off the ground and run (or fight)]]
{{clear}}

== Tips ==
* Use your free arm to protect your face from punches.
* The first movement required is much like the exercise where you stand with your legs apart, bend over and touch your right foot with your left hand and then your left foot with your right hand. Once your shoulder is free reach around the front of their body.
* As you lean backward to pull them over your leg also push them with your arm, digging your elbow into their chest.
* Your head could land on their arm but just in case lean your head forward to avoid hitting it on the ground. Try to shift all of your weight onto your elbow.

{{Subjects|Armed forces and combat}}
{{alphabetical|H}}
{{status|0%}}</text>
      <sha1>e15ctmwjcb17z0i7rpno0uuavmjbt54</sha1>
    </revision>
  </page>
  <page>
    <title>Introduction to Communication Theory/Introduction</title>
    <ns>0</ns>
    <id>40699</id>
    <revision>
      <id>2762543</id>
      <parentid>2762511</parentid>
      <timestamp>2015-02-07T11:52:15Z</timestamp>
      <contributor>
        <username>Leaderboard</username>
        <id>1176064</id>
      </contributor>
      <comment>Rejected the last text change (by [[Special:Contributions/27.255.23.15|27.255.23.15]]) and restored revision 2563643 by Russbellew(Do not remove parts unnecessarily)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Introduction ==
With every interaction, whether active or passive, we find ourselves communicating with other people. Even our silence connotes some intention, which others may interpret at their discretion. Whether by artifact or by attendance, every human being constantly participates in the process of communication. The field of Communication Theory exists at a crossroads of Psychology and Sociology, borrowing heavily from each, illuminating a process that defines what it is to be human.

== Defining Communication ==
Reasonable men and women have put forth plenty of definitions. However, the field and the process are not so easily defined by curt declarative statements or laconic aphorisms. Within every research direction, we discover a new means to describe communication and a new method of investigation. Ironically, many academics encourage their students to develop their own, personal, definition of communication. There is no proper perspective of what communication is, just as there is no limit to the potential of what it is to be human. In this textbook you will be exposed to various perspectives, with which you may find varying concordance. Your role is to approach them with an open but critical mind. Like other Social Sciences, the field of Communication theory is a [[w:Soft Science|soft science]].
  
''communication means exchange of ideas, views, opinion, understanding, feelings, emotions, facts or information between two or more persons by any sources or medium''

== Early Mistakes ==
Early theorists of human interaction believed such activity could be measured and predicted with similar methods to those used in physics and chemistry. [[w:Positivism|Positivism]] within the social sciences often drove the ridiculous notions of determinism rampant in the 19th and early 20th century. [[w:Auguste_Comte|Auguste Comte]], while an invaluable contributor to Sociology, derogated woman to a position of innate intellectual inferiority. Whether by biology or ethnology, positivists often asserted the superior nature of one class over another. Biological determinism was heavily referenced within eugenics movements, and remains a hot topic issue in regard to gender imbalances in academia, business and politics. While the laws of physics provide scientists with exact predictive formula, there are no analoguous laws to human behavior, only corrolates (or probabilities). One can certainly state that in all likelihood upper class children will display superior cognitive abilities to those raised in slums. One could argue that the higher instance of men in engineering professions and women in secretarial positions are corrolated with gendered brain chemistry. However, these remain corrolates. To state that women are inferior in math to men, that poor children (who by majority are of non-European descent) are intellectually inferior, or simply that children who learn to read earlier in life than others are somehow deficient, is to step beyond correlation into prediction. It is to these ends that many scientific endeavours step far out of science and into [[w:Logical_fallacy|fallacious reasoning]]. Just as I.Q. tests presume to measure intelligence, positivists presumed to measure all sorts of amorphous properties, predicting far beyond reasonable evidence.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>8f9c33u50zxssv72ft9ijsutu6ulx37</sha1>
    </revision>
  </page>
  <page>
    <title>User:Takeshi Yamato</title>
    <ns>2</ns>
    <id>40708</id>
    <revision>
      <id>296156</id>
      <parentid>232623</parentid>
      <timestamp>2005-12-01T19:32:28Z</timestamp>
      <contributor>
        <username>Takeshi Yamato</username>
        <id>11393</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">To be added later..</text>
      <sha1>56ypu67nsdnx3kpjhhtz0r5n8yd6qqa</sha1>
    </revision>
  </page>
  <page>
    <title>How to Solve the Rubik's Cube/CF</title>
    <ns>0</ns>
    <id>40710</id>
    <revision>
      <id>2658423</id>
      <parentid>2658414</parentid>
      <timestamp>2014-05-21T08:02:17Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/24.251.246.144|24.251.246.144]] ([[User talk:24.251.246.144|talk]]) to last version by 74.220.50.69</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">There are some things that are very important to know:
*This is the Beginner (Cross) method
*An edge piece is always an edge piece.
*A corner piece is always a corner piece.
*A center piece is always a center piece AND is always in the same place.
*When you position a corner piece or edge piece correctly, its colors are in their respective faces.
*A '''''cubie''''' is an individual cube.
Now that that's out of the way, let's begin! 

===Notation===
While many notations exist, this seems to be pretty much the most common and standardized.

F: Front face&lt;BR&gt;
B: Back face&lt;BR&gt;
L: Left face&lt;BR&gt;
R: Right face&lt;BR&gt;
U: Up face&lt;BR&gt;
D: Down face&lt;BR&gt;


If a side's letter is shown unaltered (e.g. R), it is rotated clockwise (as seen face-on). If it is followed by an apostrophe, it means counterclockwise (e.g. L'). Finally, if it is followed by a 2, turn it twice i.e. 180 degrees (e.g. U2).

While performing one of the move sequences during a step, don't rotate the cube. Only rotate the cube (thus changing the sides referred to by the letters) when instructed to. If when you begin a step the end condition is already fulfilled, simply move on to the following step.

===Step 1: Up face cross===
Select a colour to begin with, e.g. white. Rotate the cube so that this is the up (U) face. Now note the color on the front (F) side. Find the edge cubie with the up colour and the front colour and twist the cube to place it on the edge connecting the front and up sides. Ideally, it will be correctly oriented, but if the colours are swapped to the wrong sides perform the following sequence once:

F U' R U

This will flip the cubie so that the colours are on the correct sides. Next, rotate the cube 90 degrees so that the front side is now the left (L) side, and the right (R) side becomes the front. It &lt;u&gt;must&lt;/u&gt; be rotated this way and not the other. Now repeat the procedure for this side. If the up or left (i.e. previously done) sides are rotated to move the needed edge cubie, rotate them back immediately after 'extracting' the cubie so as to preserve your efforts thus far. Once the up face has a cross on it (regardless of whether any corners are correctly coloured as well), this step is complete. Go onto the next step.

===Step 2: Up face corners===
Find one of the corner cubies on the bottom layer that has one face as the up colour. If, for example, its colours are white (as the up colour), red and green, turn the bottom layer until it is a corner on both the red and green faces, i.e. it is directly below the place where it should be. Perform the following sequence either once, three times or five times until the corner is in the right place and orientation:

R' D' R D

If the sequence puts another corner cubie in the relevant upper corner that is not the correct colours, do not stop the sequence. Keep going until the &lt;u&gt;correct&lt;/u&gt; cubie is placed. If there is a corner cubie in the top layer that is either the  or incorrectly oriented, perform the same sequence once to move it to the bottom layer. From there, repeat the step as above. Once the up face is completely solved, flip the cube over completely, so that the up face is on the bottom and the down (D) face is on the top, and proceed to the next step.

===Step 3: Middle layer edges===
At the start of this step, you should have an upside-down 'T' shape of four correctly placed cubies on each of the side faces and the down face should be solved. 
Find an edge cubie on the top layer that has two colours on it that are not that of the up face: this cubie will now be moved to the middle layer.
Rotate the top layer until the side (not top) face of this cubie extends one of the short T's; the cubie's top face now match the colour of one of the adjacent side faces.
Rotate the whole cube so that the two faces whose colours match the cubie are F and R: the big T is now on either F or R.
If the big T is on F (and the top face matches R), perform:

U R U' R' U' F' U F

If, on the other hand, the big T is on the R face, perform:

U' F' U F U R U' R'

This will place the edge cubie, correctly positioned and oriented, into the middle layer. 

Repeat the step for the other three edge cubies which need to be in the middle layer. If one of them is already in the middle layer, but is not correct, hold the cube so that it is on the F and R face and perform either of the sequences once. It will then be on the top layer, and you can perform the step normally. 

Once you have a 2x3 solved block on the bottom part of each side face, proceed to step four.

===Step 4: Up face cross===
Note that this is the up face &lt;u&gt;now&lt;/u&gt; i.e. the face that is opposite to the ''original'' up face that you chose for step one. Turn the top layer until one of the following patterns is visible:

*Top layer edge cubies on F and R display the colour of the up face.
*Same as above, but the opposite top layer edge cubies have the up colour on their upper faces, forming a 'corner' on the up face with its 'arms' pointing away from the F and R faces.
*A line across the up face parallel to the F face. The edge cubie on F should display the up colour on the F face, not the U face.

Once you locate one of these, perform the following sequence to advance the pattern through the list:

F R U R' U' F'

The result of this is that the first pattern becomes the second, the second becomes the third, and the third becomes the solved cross, completing the step. If necessary, repeat the initial part of the step between sequences to find the pattern if it is not visible (sometimes it isn't).

===Step 5: Top layer edges===
Similarly to step one, you must now have the up face cross with the edge cubeis on the correct side faces as well. The method this time is different: turn the top layer until at least one of the edge cubies is correct. If the colour to its right needs doing, have the just-done one on the F face and perform the following sequence either once or twice until the edge cubie on the R face is done:

R U R' U R U2 R'

Now check the B and L faces. If they also need doing, have the first one (F) on the R face and the L face now on F. Perform the sequence once, and follow it with:

U

This will complete the step.

===Step 6: Top layer corners (placement)===
This step places the corners correctly. Don't worry about orientating them yet. Find a corner piece that's in the right place (regardless of orientation). Rotate the cube so that it is the U/F/R corner and perform:

U R U' L' U R' U' L

If the corners are still not all correctly placed, repeat the sequence once again. If none of the corners are correct, just perform the sequence once on any of the four top corners, then find one that has become correctly placed. Once the corners are in the right places, move on to the final step.

===Step 7: Top layer corners (orientation)===
Choose one of the unsolved top corners and treat it exactly as you did with step two, although it will require an even number of iterations of the sequence this time, either twice or four times:

R' D' R D

After this, rotate the top layer (not the whole cube) to position another unsolved corner where the solved one just was. Repeat the sequence, then do the next corner. After solving the last corner, only one more twist (which should be obvious) remains. Congratulations, you've solved the Rubik's Cube!

Another possible combination for solving the orientation of the corner pieces is to flip two of them at once without affecting the rest of the cube.  Position the two corner pieces that will be flipped in the UFR and URB positions and use the combination...

L U L' U L U2 L'   R' U' R U' R' U2 R

to flip the corners.  You may need to flip a corner that is already correct if you have two diagonal corners incorrect or flip a corner twice.  Notice that the pattern is reversed halfway through, this should make it easier to remember.

==How to solve the 2x2x2 (Mini/Pocket Cube)==
If you know how to solve the 3x3x3 cube (see above), solving the 2x2x2 can be achieved by treating the cube as a 3x3x3 in which the centre and edge cubes are in a permanent solved state regardless of what moves you make. In other words, the solution consists of only the corner-solving steps of the 3x3x3 solution. The important thing is simply to remember which side is which (since you can't see the middle layers, because they aren't actually there), although this shouldn't be too difficult.

{{BookCat}}</text>
      <sha1>a3kci7q1aorke7m2t0ymj92hsx97egz</sha1>
    </revision>
  </page>
  <page>
    <title>Introduction to Communication Theory/Evaluating Theory</title>
    <ns>0</ns>
    <id>40712</id>
    <revision>
      <id>2516194</id>
      <parentid>1507017</parentid>
      <timestamp>2013-04-25T10:45:10Z</timestamp>
      <contributor>
        <ip>139.55.33.229</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">What makes a [[w:theory|theory]] &quot;good&quot;? Six criteria might be said to be properties of a strong theory. (The terminology presented here is drawn from Littlejohn, ''Theories of Human Communication'', but a similar set of criteria are widely accepted both within and outside the field of communication.)

; Theoretical Scope : How general is the theory? That is, how widely applicable is it? In most cases, a theory that may only be applied within a fairly narrow set of circumstances is not considered as useful as a theory that encompasses a very wide range of communicative interactions. The ideal, of course, is a theory that succinctly explains the nature of human communication as a whole.

; Appropriateness : Theories are often evaluated based upon how well their [[w:epistemology|epistemological]], [[w:ontology|ontological]], and [[w:axiology|axiological]] assumptions relate to the issue or question being explained. If a theory recapitulates its assumptions (if it is [[w:tautology|tautological]]), it is not an effective theory.

; Heuristic value : Some theories suggest the ways in which further research may be conducted. By presenting an explanatory model, the theory generates questions or hypotheses that can be [[operationalize|operationalized]] relatively easily. In practical terms, the success of a theory may rest on how readily other researchers may continue to do fruitful work in reaction or support. 

; Validity : It may seem obvious that for a theory to be good, it must also be [[w:validity (psychometric)|valid]]. Validity refers to the degree to which the theory accurately represents the true state of the world. Are the arguments internally consistent and are its predictions and claims derived logically from its assumptions? Many also require that theories be [[w:falsify|falsifiable]]; that is, theories that present predictions that--if they prove to be incorrect--invalidate the theory. The absence of such questions significantly reduces the value of the theory, since a theory that cannot be proven false (perhaps) cannot be shown to be accurate, either. 

; Parsimony : The law of parsimony ([[w:Occam's razor|Occam's razor]]) dictates that a theory should provide the simplest possible (viable) explanation for a phenomenon. Others suggest that good theory exhibits an aesthetic quality, that a good theory is beautiful or natural. That it leads to an &quot;Aha!&quot; moment in which an explanation feels as if it fits. 

; Openness : Theories, perhaps paradoxically, should not exist to the absolute exclusion of other theories. Theory should not be dogma: it should encourage and provide both for skepticism and should--to whatever degree possible--be compatible with other accepted theory.

It is important to note that a theory is not &quot;true,&quot; or &quot;false&quot; (despite the above discussion of falsifiability), but rather better or worse at explaining the causes of a particular event. Especially within the social sciences, we may find several different theories that each explain a phenomenon in useful ways. There is value in being able to use theories as &quot;lenses&quot; through which you can understand communication, and through which you can understand the world ''together'' with other scholars.

As a task, apply the aforementioned criteria to the Universal Communication Law. How does the Universal Law fit?

The Universal Communication Law :&quot;All living entities, beings and creatures communicate.&quot; In a an unpublished interview, Scudder clarified the concept - &quot;All of the living communicate through movements, sounds, reactions, physical changes, gestures, languages, breath, color transformations, etc. Communication is a means of survival, existence and being and does not need another to acknowledge its presence. Examples - the cry of a child (communication that it is hungry, hurt, cold, etc.); the browning of a leaf (communication that it is dehydrated, thirsty per se, dying); the cry of an animal (communicating that it is injured, hungry, angry, etc.). Everything living communicates.&quot;


==Quantitative and Qualitative Research==
Research goals will differ between individual scientists and project demands. There are many studies based on research is accomplished through interviews and social participation with members of cultural groups (see: [[w:Ethnomethodology|Ethnomethodology]]). This type of research is known as [[w:Qualitative_research|qualitative research.]]. It is the task of the author to convey the connection between their research subjects and thesis. Their goal is to describe a phenomenon, to portray a situation so as to enlighten the readers of their work. They stand in stark contrast to quantitative researchers.

The quantitative researcher may eschew the lax methodology of qualitative research. Where qualitative research often demands emotional significance and an engaging rhetorical style, quantitative research is often sterile and to the point.  The quantitative researcher may also participate within the speech community of their subject, but they will do so in a very disciplined fashion. They will be on the look for data with which they can record. They may for instance, interview a person, taking note of personal affects and vocalizations. A [[Sociolinguistics|sociolinguist]] for example, will record every utturance of the vowel &quot;r&quot;. They'll compile the data and compare it with data from a distinct economic class or a similar group. By keeping a count of every &quot;r&quot; spoken with an accent, for instance, the sociolinguist is able to write a quantitative analysis. They are able to identify patterns that may suggest a useful correlation. Accents for instance will often identify which members of a larger speech community a person identifies with. Predictability is a strong criteria for a quantitative researcher. Thus this type of research is often used in marketing studies. Marketing companies want to know how to effect their audience, and to what degree. Though it is futile to predict marketing effects on a single individual, it is quite possible to predict an overall effect within a large group. Marketers will use various [[w:Post-positivist|post-positivist]] studies to enhance the effects of marketing exposure. &quot;Sex sells&quot; can be proven and studied through quantitative means.

These two methods are by no means mutually exclusive. Though they are two different routes they can both be used to further a hypothesis or field of inquiry. [[w:Media_studies|Media studies]] and [[w:Semiotics|Semiotics]] are two strong implimentations of both techniques. They may demand a researcher to wade through thousands of pieces of media to develop a cogent thesis. The researcher may take note of every sexually suggestive image broadcast within Primetime television viewing hours for a given month. This could be compared against other markets to develop a claim. But the researcher could also view single popular series, and again develop a claim as to the motivation for such content. The field of news-entertainment is often criticized for its choice of scare-stories (see: [[w:Cultivation Theory|Cultivation Theory]] and [[w:Agenda-Setting_Theory|Agenda-Setting Theory]]). Only after a series of strong studies, both qualitative and quantitative, can a researcher authoritatively claim that news-entertainment does indeed market trauma, by egregious coverage of violence and catastrophe (if it bleeds it leads). Only then can a researcher credibly claim that such coverage has an effect on television consumers. Only at that point can a study be carried out to identify what that effect is.

Griffin in his textbook, &quot;A First Look at Communication Theory&quot;, provides a small chart meant to aid in the evaluation of quantitative and qualitative theory.
&lt;table border=&quot;0&quot; width=&quot;400&quot;&gt;
&lt;tr&gt;&lt;th&gt;Scientific (Quantitative) Theory&lt;/th&gt;&lt;th&gt;Interpretive (Qualitative) Theory&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Explanation of Data&lt;/td&gt;&lt;td&gt;Understanding of People&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Prediction of Future&lt;/td&gt;&lt;td&gt;Clarification of Values&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Relative Simplicity&lt;/td&gt;&lt;td&gt;Aesthetic Appeal&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Testable Hypotheses&lt;/td&gt;&lt;td&gt;Community of Agreement&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Practical Utility&lt;/td&gt;&lt;td&gt;Reform of Society&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>tmocsvjo00z4j0mdk3w4kpu2vfbvlgu</sha1>
    </revision>
  </page>
  <page>
    <title>Introduction to Communication Theory/Semiotics</title>
    <ns>0</ns>
    <id>40715</id>
    <revision>
      <id>2077011</id>
      <parentid>1507018</parentid>
      <timestamp>2011-03-31T17:12:46Z</timestamp>
      <contributor>
        <ip>66.99.96.11</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The literary theorist [[w:Kenneth Burke|Kenneth Burke]] famously described human beings as &quot;the symbol-making, symbol-using, symbol-misusing animal&quot;. Our broad use of symbols is a contrast from every species on earth. Only our closest relative, the [[w:Bonobo|Bonobo]] has shown any semblance of our symbol-using ability. It is the unique act of creating meaning out of arbitrary signs (be they vocalizations, gestures, or pictographs) that allows us to communicate an infinite range of concepts so fluently.

Through the Looking Glass, Chapter 6, by Lewis Carroll:&lt;br /&gt;
&quot;When I use a word,&quot; Humpty Dumpty said, in rather a scornful tone, &quot;it means just what I choose it to mean -- neither more nor less.&quot;&lt;br /&gt;
&quot;The question is,&quot; said Alice, &quot;whether you can make words mean so many different things.&quot;&lt;br /&gt;
&quot;The question is,&quot; said Humpty Dumpty, &quot;which is to be master -- that's all.&quot;&lt;br /&gt;
&lt;br /&gt;
Put in other words, put forth by different authors, &quot;naming is the fundamental symbolic act&quot;.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>8wwtxmxn8s3l9dpi4yfk15uu8pcuu5n</sha1>
    </revision>
  </page>
  <page>
    <title>Introduction to Communication Theory/Culture</title>
    <ns>0</ns>
    <id>40718</id>
    <revision>
      <id>1507019</id>
      <parentid>1456951</parentid>
      <timestamp>2009-05-24T19:01:25Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Every human being passes through a development period of enculturation. Traits and taboos are passively and actively enculcated through childhood and adolescence. Though individual will curtails some habits, every individual learns at least a part of their native culture. Some may live in interstitial communities, becoming both bilingual and bicultural while others learn later in life how to move through the earth's diverse human populations. But regardless, we all carry our culture with us and in our daily lives, enact culture. Culture, like communication, is a process.

Within communication theory, scientists often study the interaction of people from different cultures. As culture is not a static concept, the very definition of culture becomes broader than you may have assumed. For instance, have you thought of the separation of boys and girls as being a form of cultural separation? For years, Deborah Tannen has studied the language and cultural differences of men and women, girls and boys, within American society. She has found a prevalence of communication differences between genders, that often lead to miscommunication between the two. Consider the difference in culture of people raised in agrarian (rural) and urban (city) environments. The [[w:U.S._presidential_election,_2004|2004 U.S. Presidential Election]] shows both diversity and homogeneity of American voting habits. The dark blue areas, representing democrats, mark the waterways and coastal regions of the U.S. The red areas show the geography of the U.S. with a low population per square mile. While many point out the &quot;purple&quot; mixtures of heterogeneous voters, it is clear that there are vast areas of America differentiated by vote. Might they be distanced in culture as well? Though English is the standard (not official) language of the United States, there are many ways of speaking it and there are many regions where other languages are dominant. Intercultural communication is not necessarily International communication. Nor must the interlocutors necessarily belong to different regions or different towns. Within every context, we recreate culture (see: [[w:Adaptive Structuration Theory|Adaptive Structuration Theory]]) and redefine what our native culture actually is. It is when we come into contact with a person that is separate from our own culture that we engage in intercultural communication, and forge a synthesis of cultures.

Imagine that you have just awoken in a foreign place. There are no trees, no buildings, there is only sand and brush for as far as you can see into the horizon. But there is something else, another person. From the very moment you notice the person, still asleep, you have made judgements. What are they wearing, do they have any markings on their skin, and what color is their skin, and what kind of footwear is that, and are they wearing jewelry, and are they wearing jewelry on their fingers? From the first moment you see a person you're mind produces many questions, questions you've learned from your own culture and from your own experience, questions that make sense of the signs that your senses are perceiving. Signs from the raw data of your environment. But when the signs are about another person, they are forms of communication. If the person has a ring, are they married, if they have jewelry are they rich, if they're not wearing shoes are they laid back, informal, or otherwise defined? With each quantum of perception your brain mind attempts to identify culture.

Your unwitting company has now awoken. Now they are making judgements. Soon one of you will attempt bilateral communication. Until this point you've only been a receiver, and by your own learned admission, a rather unsure receiver. But now you have the opportunity to confirm some of your judgements, whether conscious or unconsciously reached. From the very first moment you notice the other person has seen you, even more judgements rush to your head. How will they acknowledge my presence, and what are they thinking about their own. What is their self-awareness, what is their awareness of me, the Other. If they look into your eyes, is it a sign of compassion or a threat? You open your mouth, a sign from your own culture (and a fairly common sign amongst others) that you intend to speak, to communicate verbally. But the other person upon hearing your words steps back several feet, as if threatened. Nonverbal communication it seems, will be your intercultural starting point. At this point a microculture is being defined. Though it is only a relationship, and a shallow one at that, it has become a confluence of two cultures. How you and the Other will develop this new acquaintance is uncertain. At some point you will have successfully communicated a message nonverbally. Your Other already has. It is through communicative competence whether learned through academia, life or intuition, that you and the Other will build a new culture. This may be a temporary culture, lasting only a day, or it may grow as something more lasting. Still, from the building blocks of universal communication between two people, you will use symbolic communication to convey your intents and negotiate your situation.

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>e7xmx7gk98stq2sui1gb7e8f4806tqo</sha1>
    </revision>
  </page>
  <page>
    <title>User:Andrejj</title>
    <ns>2</ns>
    <id>40719</id>
    <revision>
      <id>232715</id>
      <parentid>232711</parentid>
      <timestamp>2005-09-12T07:22:43Z</timestamp>
      <contributor>
        <username>Andrejj</username>
        <id>11402</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''Andrejj''', [[w:en:Novo mesto]], [[w:en:Slovenia]]

* [[w:sl:Uporabnik:Andrejj|sl:Wikipedija:Uporabnik:Andrejj]] 
* [[w:User:Andrejj|en:Wikipedia:User:Andrejj]]</text>
      <sha1>egs9sr2e4ry9b6nkt22sxm7ctfdsk3k</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Andrejj</title>
    <ns>3</ns>
    <id>40720</id>
    <revision>
      <id>232714</id>
      <parentid>232713</parentid>
      <timestamp>2005-09-12T07:21:22Z</timestamp>
      <contributor>
        <username>Andrejj</username>
        <id>11402</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Please, use this page: '''[[w:sl:Uporabniški pogovor:Andrejj|User talk]]'''. --[[User:Andrejj|Andrejj]] 07:18, 12 September 2005 (UTC)</text>
      <sha1>ljnagf9nzdjvlo4e3a6t5neuw29o5l1</sha1>
    </revision>
  </page>
  <page>
    <title>Muggles' Guide to Harry Potter/Magic/Lumos</title>
    <ns>0</ns>
    <id>40721</id>
    <revision>
      <id>1468230</id>
      <parentid>1468221</parentid>
      <timestamp>2009-04-14T06:42:39Z</timestamp>
      <contributor>
        <username>Chazz</username>
        <id>32521</id>
      </contributor>
      <comment>correcting formatting; adding a cross reference; temporarily commenting out a fact that may be filmic</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Muggles' Guide to Harry Potter/Magic|
name=Lumos|
type=[[Muggles' Guide to Harry Potter/Magic#Spells|Spell]]|
features=Casts light|
appearance=[[Muggles' Guide to Harry Potter/Books/Chamber of Secrets|''Harry Potter and the Chamber of Secrets'']]}}

== Overview ==

The '''''Lumos''''' spell creates light at the end of the caster's wand, and is therefore used for illuminating dark areas.

== Extended Description ==

{{Muggles' Guide to Harry Potter/Beginner Spoiler}}

A relatively basic spell, [[Muggles' Guide to Harry Potter/Characters/Harry Potter|Harry]] is able to use this by the end of his second year – in [[Muggles' Guide to Harry Potter/Books/Chamber of Secrets/Chapter 15|''Harry Potter and the Chamber of Secrets'']], Harry uses it to illuminate his surroundings when visiting [[Muggles' Guide to Harry Potter/Characters/Aragog|Aragog]] in the [[Muggles' Guide to Harry Potter/Places/Forbidden Forest|Forbidden Forest]]; but in his first year, [[Muggles' Guide to Harry Potter/Books/Philosopher's Stone/Chapter 15|''Harry Potter and the Philosopher's Stone'']], he has to use a lantern, and [[Muggles' Guide to Harry Potter/Characters/Hermione Granger|Hermione]] must conjure a fire when she needs light [[Muggles' Guide to Harry Potter/Books/Philosopher's Stone/Chapter 16|in that book]].

== Analysis ==

The spell must be controlled by the caster's intent as well as by the word and any gestures, as it appears that not only the amount of light but the type can be controlled by the caster without any apparent difference in the casting of the spell. The light cast by the wand is described variously as a glimmer or a light, and in some cases appears as a beam, as one would get from a flashlight (UK: torch).
&lt;!-- I'm going to comment this out pending research: if I recall correctly, these two variants were in the films, not the book.
Variants of the spell have been spotted also; Harry once also used the term Lumos Maximus and Hermione used Lumos Solaris. --&gt;

It is unknown how long the end of the wand remains lit; on only one occasion do we see wands consciously extinguished, by means of the [[Muggles' Guide to Harry Potter/Magic/Nox|Nox]] spell, on all other occasions they seem to conveniently go out on their own when no longer needed.

== Greater Picture ==

{{Muggles' Guide to Harry Potter/Intermediate Spoiler}}

[[Category:Muggles' Guide to Harry Potter]]</text>
      <sha1>odnn6bnt8vzlgn4oshyzf1hbax2p15c</sha1>
    </revision>
  </page>
  <page>
    <title>User:Jonon~enwikibooks</title>
    <ns>2</ns>
    <id>40723</id>
    <redirect title="w:User:Jonon" />
    <revision>
      <id>2864992</id>
      <parentid>232756</parentid>
      <timestamp>2015-04-17T22:34:08Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Jonon]] to [[User:Jonon~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Jonon|Jonon]]&quot; to &quot;[[Special:CentralAuth/Jonon~enwikibooks|Jonon~enwikibooks]]&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT [[w:User:Jonon]]</text>
      <sha1>5skyfz5kx1ws49tfpy2jcmn97m2io1w</sha1>
    </revision>
  </page>
  <page>
    <title>REBOL Programming/Language Features/Parse/Screen Validation</title>
    <ns>0</ns>
    <id>40725</id>
    <revision>
      <id>1517724</id>
      <parentid>530073</parentid>
      <timestamp>2009-06-03T03:48:55Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>recat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Let's build an example of how parsing REBOL values might be used to implement some screen entry validation routines for a database application.

Our design aims are:

*validate the screen when we click a submit button
*validate each field without having to explicitly write code to check each field
*somehow reuse the code we write for other data entry screens.

First off, let's make a start by constructing an entry screen with a few representative fields

 lo: layout [
    across
    title &quot;Customer Registration Screen&quot; return
    label &quot;First Name: &quot; fname: field return
    label &quot;Surname: &quot; sname: field return
    label &quot;DOB: &quot; dob: field return
    label &quot;Age: &quot; age: field return
    label &quot;Email: &quot; email: field return
    label &quot;Home Page: &quot; home-page: field return
    button &quot;Register&quot; [ if validate-screen [ register ] ]
 ]

which looks like this

  ... picture goes here ....
  
When we click on the &quot;Register&quot; button, we want the program to validate all the fields to ensure that they have been all filled in, and with values that are probably appropriate.  Our validate-screen function will do this.

First off, we have to collect the values from all the fields.  If we knew enough about the internals of VID, we could probably build a function that collects them from the layout lo, but since we don't expect this degree of familiarity with VID internals from our readers we will do this manually.

 fields: [ fname sname dob age email home-page ]

At this point, they are just word! values inside a block.  We have to force REBOL to evaluate the block so it recognises that they refer to the field objects that were created with the layout function.

 fields: reduce [ fname sname dob age email home-page ]

The data from each of the fields happpens to be in the &quot;text&quot; attribute of each field.  To collect the data in a block, we write a function that iterates through our list of fields, and returns a block containing the data.  The function is designed to return a value.  If we complete the task we return a block of evaluated fields.  Otherwise we return an empty block.

 build-data: func [ fields [block!] /local bl ][
    bl: copy []
    foreach field fields [
        append bl field/text
    ]
    bl
 ]

But this is not quite good enough as it results in a block of text strings.  We really want a block of REBOL values to allow us to parse the data by value.  So, we force the data into REBOL values by '''load'''ing them.

 build-data: func [ fields [block!] /local bl ][
    bl: copy []
    foreach field fields [
        append bl load field/text
    ]
    bl
 ]

Although REBOL is quite good at recognising values, sometimes with '''load''' we can get an error.   Therefore, we should put in an error trap to stop our routines from crashing.  We also want to know where the error occurred so we can give feedback to the user.

 build-data: func [ fields [block!] /local bl ][
    bl: copy []
    foreach field fields [
        if error? try [
            append bl load field/text
        ][
            focus field
            alert join &quot;Error converting this value &quot; field/text    
            return [] 
        ]
    ]
    bl
 ]

Now, at this point, we are expecting to have build-data return us a block of REBOL values with the following sequence of datatypes:

 [ string! string! date! integer! email! url! ]

Anything that does not conform to this indicates a data entry error.

We can now build a validation rule that checks this, and we will also maintain a counter so that we know where the rule stopped due to bad data.

 field-no: 1
 incr: func ['word][set word 1 + get word]
 
 validation-rule: [ (field-no: 1)
    set first-name string! ( incr field-no )
    set last-name string! ( incr field-no )
    set date-of-birth date! ( incr field-no )
    set customer-age integer! ( incr field-no )
    set customer-email email! ( incr field-no )
    set customer-web url! ( incr field-no )
 ]
 
Our final validate-screen function grabs the data that has been entered, applies the validation rule, and returns a logic! value.

 validate-screen: has [ bad-field] [
    either parse build-data fields validation-rule [
        true
    ][
        bad-field: pick fields field-no
        focus bad-field
        show bad-field
        alert &quot;Incorrect data at this field&quot;
        false
    ]
 ]

So, if build-data does not manage to complete, it returns an empty block which causes our validation-rule to fail. If it does return a block, we put it through our validation-rule and again return the success or failure. If it fails, it puts the cursor in the field with the bad data, and pops up an alert to advise the user.

Although the above satisfies our wish to validate the screen in one go semi-automatically, a consequence of the implementation is that if we change the screen layout by adding or removing fields, we have to change our fields block, and we have to change our validation-rule.  That is, we are setting ourselves up for a future failure by creating dependencies elsewhere in our code.

What we want to do is create a data structure where all this information is defined only in one place. Perhaps dialects can help here as well?  Maybe we can create a mini data entry dialect that builds the VID code, and validation rule for us?  

We need to know 4 essential things about the VID code.  We need to know the label text values, the variables associated with each field, a field type for validation purposes, and we need a variable name.  So, we need a minimum quartet of values to specify each field. Let us see if we can automate the rest.

So, if we just specify the screen definition as a block of quartets, we get:

 screen-definition: [
    &quot;First Name: &quot; fname: string! first-name
    &quot;Surname: &quot; sname: string! last-name
    &quot;DOB: &quot; dob: date! date-of-birth
    &quot;Age: &quot; age: integer! customer-age
    &quot;Email: &quot; email: email! customer-email
    &quot;Home Page: &quot; home-page: url! customer-web
 ]

We now define a rule that will be used to create the VID code.

 screen-def: []
 
 field-rule: [ 
    set prompt string!
    set field-name set-word!
    set field-type word! 
    skip
    ( repend screen-def [ 'label prompt field-name 'field 'return ] )
 ]

We create the VID block as follows:

 if not parse screen-definition [ some field-rule end ][
    print &quot;error in screen definition&quot;
    halt
 ]

What we do here is to apply the field-rule iteratively until the rule fails. The parser then goes to the next part of the rule, and should match 'end resulting in a successful parse.  The block screen-def now holds the VID code that defines the data entry fields.

However, our data entry field also has a button, and a title.  So, we add these manually.

 sprucedup-def: compose [
    title &quot;Customer Entry Screen&quot;
    across
    ( screen-def )
    button &quot;Register&quot; [ if validate-screen screen-definition [ register ] ]
 ]
 
 lo: layout copy/deep sprucedup-def

We now write a function that iterates over the screen definition, and grabs the values from the fields.  It returns a block of values, and if there are errors on datatype conversion, it inserts a '''none''' value where the error occurs.
 
 get-values: func [ sdef [block!] /local bl value] [
   bl: copy []
   foreach [ label field type variable ] sdef [
       field: do to-word :field
       if error? try [
            value: load get in field 'text
            case [
                word! = type? value [ value: form value ]
                block! = type? value [ value: none ]
            ]
           append bl value
       ][ append bl none ]
   ]
   bl
 ]
 
We now need to generate the rule that will be used to validate the values.  Our function create-validation-rule again iterates over the screen definition block.

 create-validation-rule: func [ def [block!] /local rule ][
    rule: copy []
    foreach [ label field type variable ] def [
        repend rule [ 'set variable type ( to-paren [incr field-no] ) ]
    ]
    rule
 ]
 
and our final validate-screen function uses these to get:

 validate-screen: func [ sdef [block!]
    /local values rule bad-field
 ][
    values: get-values sdef
    rule: create-validation-rule sdef
    either parse values [ (field-no: 1) some rule end ][
        true
    ][
        bad-field: get pick sdef ( 4 * field-no - 2 )
        focus bad-field
        alert &quot;Bad data entered in this field&quot;
        false
    ]
 ]

Our validate-screen function gets the values from the data entry, creates the rule that will be used to validate the values, and then applies the rule returning a logic! result. 

We reached this stage by creating a sub dialect that allowed us to generate some VID code, and also created a data retrieval function, and auto-generated a validation rule that worked with the same dialect block.  It is possible to further optimise this code since we can see that we have traversed the screen-definition three times when we could do this perhaps in one pass.  However, one preferred way to write code is to create small functions that are easily testable, and so in this example we sacrifice efficiency for readability and maintenance issues.

 register: func [
 ][
 	; &lt;--- register the field values here
 	alert &quot;Registered field values.&quot;
 ]

 view lo

And for reference, here is the final script complete with REBOL header and license.

 Rebol [
    file: %screen-validator.r
    author: &quot;Graham Chiu&quot;
    rights: 'BSD
    date: 12-Sep-2005
    purpose: {
        To construct a data entry screen from a simple dialect
        To generate data validation rule from the same dialect
    
    }
 ]
 
 screen-definition: [
   &quot;First Name: &quot; fname: string! first-name
   &quot;Surname: &quot; sname: string! last-name
   &quot;DOB: &quot; dob: date! date-of-birth
   &quot;Age: &quot; age: integer! customer-age
   &quot;Email: &quot; email: email! customer-email
   &quot;Home Page: &quot; home-page: url! customer-web
 ]
 
 incr: func ['word][set word 1 + get word]
 
 screen-def: []
 
 field-rule: [ 
   set prompt string!
   set field-name set-word!
   set field-type word! 
   skip
   ( repend screen-def [ 'label prompt field-name 'field 'return ] )
 ]
 
 if not parse screen-definition [ some field-rule end ][
   print &quot;error in screen definition&quot;
   halt
 ]
 
 sprucedup-def: compose [
   title &quot;Customer Entry Screen&quot;
   across
   ( screen-def )
   button &quot;Register&quot; [ if validate-screen screen-definition [ register ] ]
 ]
 
 lo: layout copy/deep sprucedup-def
 
 get-values: func [ sdef [block!] /local bl value] [
   bl: copy []
   foreach [ label field type variable ] sdef [
       field: do to-word :field
       if error? try [
            value: load get in field 'text
            case [
                word? value [ value: form value ]
                block? value [ value: none ]
            ]
           append bl value
       ][ append bl none ]
   ]
   bl
 ]
 
 create-validation-rule: func [ def [block!] /local rule ][
   rule: copy []
   foreach [ label field type variable ] def [
       repend rule [ 'set variable type ( to-paren [incr field-no] ) ]
   ]
   rule
 ]
 
 validate-screen: func [ sdef [block!]
   /local values rule bad-field
 ][
   values: get-values sdef
   rule: create-validation-rule sdef
   either parse values [ (field-no: 1) some rule end ][
       true
   ][
       bad-field: get pick sdef ( 4 * field-no - 2 )
       focus bad-field
       alert &quot;Bad data entered in this field&quot;
       false
   ]
 ]
 
 register: func [
 ][
    ; &lt;--- register the field values here
    alert &quot;Data validated ok!&quot;
 ]
 
 view lo

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>4j6wzze90kg1j614vnkgr1uzsvrzjvp</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Solar System/Jupiter/Io</title>
    <ns>111</ns>
    <id>40726</id>
    <revision>
      <id>2536916</id>
      <parentid>2013463</parentid>
      <timestamp>2013-06-18T02:14:08Z</timestamp>
      <contributor>
        <username>Воображение</username>
        <id>978430</id>
      </contributor>
      <comment>/* Could we please add... */ new section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">source for comment on IO's atmosphere was a mention in a book I read way back but other sources include [http://www.windows.ucar.edu/tour/link=/jupiter/moons/io_atmosphere_overview.html&amp;edu=high][http://www.space.com/news/io_aurora.html][http://hubblesite.org/newscenter/newsdesk/archive/releases/1992/24/text/][[User:Geni|Geni]] 10:48, 12 September 2005 (UTC)

== Pronunciation ==
How do you pronounce this moon's name?  In my ignorance, I thought it was a small 'el' instead of a capital &quot;ai&quot;.  A pronunciation guide for this and other strange names would make this book more usefull. [[User:Bounton|Bounton]] 10:45, 10 September 2006 (UTC)

I think we should put the pronunbciation as, for example, 'eye-oh'. [[Special:Contributions/90.202.242.175|90.202.242.175]] ([[User talk:90.202.242.175|talk]]) 16:29, 7 January 2011 (UTC)

== How wide? ==
Is this the diameter?  For us non-scientific people and children, what is this on a practical scale?  Maybe saying how many of these could fit inside the earth would be a help.  Actually, this should be the standard for comparing the planets and moons.  How many earths can fit in the larger planets and how many of the moons or smaller planets can fit inside the earth.  I really think that would make this number come alive in a practical way. [[User:Bounton|Bounton]] 10:51, 10 September 2006 (UTC)

== Could we please add... ==

...a section on Jupiter's magnetosphere interaction with Io, along with Io's interior? Merci. --[[User:Воображение|Воображение]] ([[User talk:Воображение|discuss]] • [[Special:Contributions/Воображение|contribs]]) 02:14, 18 June 2013 (UTC)</text>
      <sha1>axlxe9xg2g0gpp1k415w0gcsm00y4kd</sha1>
    </revision>
  </page>
  <page>
    <title>File:Constudsumm.gif</title>
    <ns>6</ns>
    <id>40727</id>
    <revision>
      <id>638523</id>
      <parentid>232780</parentid>
      <timestamp>2006-11-06T15:53:06Z</timestamp>
      <contributor>
        <username>RobinH</username>
        <id>8141</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{GFDL}}</text>
      <sha1>bqzg6alf693qn5egkcy4lip7de3tqdd</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Ancient Civilizations/Babylonians</title>
    <ns>110</ns>
    <id>40728</id>
    <revision>
      <id>3013243</id>
      <parentid>3013106</parentid>
      <timestamp>2015-11-05T08:51:34Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <comment>Rejected the last text change (by [[Special:Contributions/50.12.171.196|50.12.171.196]]) and restored revision 2838571 by Pi zero</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==What country did they live in?==
The Babylonians were based in what is now modern day Iraq. They controlled much of the land between the rivers the Tigris and the Euphrates. They were the last of a string of city states (civilizations based around a single powerful city) to control this area.

==What did their buildings look like?==

[[Image:Ishtar gate Pergamon Museum.JPG|thumb|right|200px|Ishtar Gate in Pergamon Museum, Berlin Germany]]
In the 24th century BC the city of Babylon was founded on the banks of the river Euphrates. In the 18th century BC it became a capital of Babylonian empire.

Babylon reached its glory in 6th century BC. Constructions like '''Ishtar Gate''' and '''Etemenanki ziggurat''' were built, making Babylon the most beautiful city of the ancient world. 

Ishtar Gate was one of the eight gates of the Babylon city. Dedicated to the goddess Ishtar, the Gate was constructed of blue glazed tiles with alternating rows of relief dragons and bulls. The roof and doors of the gate were of cedar. Through the gate ran the Processional Way, which was lined with walls covered in lions on glazed bricks (about 120 of them). Statues of the gods were paraded through the gate and down the Processional Way each year during the New Year's celebration.

[[Image:Walls of Babylon 2 RB.JPG|thumbnail|200px|left|Walls of Babylon]]
Processional Way led to Etemenanki ziggurat. A ziggurat was a pyramid like tower that they made for their gods. Etemenanki was seven stories, or 91 meters high, and had a temple of Marduk on top of it. 

Ishtar Gate is currently displayed in Pergamon Museum in Berlin. Only ruins are left of Etemenanki ziggurat.

==What did they eat?==
[[Image:Barley_fruit.jpg|150px|right|thumb|Barley]]
The Babylonians ate melons, plums, prunes and dates. Barley was their staple crop that they would make flat breads with. The bread would then be eaten with some fruit. For meat they ate pork, poultry, beef, fish and mutton (sheep meat). Onions and garlic were common seasonings for their food. Babylonians didn't drink wine, but instead they drank beer made out of barley.

==What did they wear?==
[[Image:PLATE3AX.jpg|thumb|right|An illustration of Babylonian people.]]
Babylonians wore a garment that would look like a long t-shirt in our day. For the peasants these garments would have been quite simple but for the wealthy they were decorated with tassels, embroidery, girdles and sashes. Higher ranking people wore longer garments and scarves that indicated their rank by the length of its tassels. 

Hats were also an important fashion accessory. Professionals could be identified by their characteristic headdress. Women wore ribbons, veils or other decorations in their hair.

==What did their writing look like?==
[[Image:CodeOfHammurabi.jpg|thumb|left|150px|The Code of Hammurabi in cuneiform script.]]
Babylonians spoke Akkadian, an ancient language. They used the cuneiform script for writing. Babylonian writing that still exists is all on clay tablets. The symbols of their script were pressed into the wet clay with a piece of dried reed. 

Cuneiform is ancient way of writing. There were about 200-400 common characters that represented different syllables. For example, one symbol might represent the sound &quot;bu&quot; and another symbol would represent the sound &quot;ba&quot;. There were also symbols that represented whole words.

==What did they believe?==

The Babylonians were polytheists; they believed that there were many gods that ruled different parts of the universe. They believed that the king god was Marduk, patron of Babylon. Just as Babylon conquered all city states and became the capital of a mighty empire, so, in the legend, its patron Marduk obtained power over other gods by fighting Tiamat, the evil goddess of chaos.

The Babylonians built each of their gods a primary temple that was considered the home of the god. People would bring sacrifices to the gods and the priests would try to attend to the needs of the gods through ceremonies and festivals. Each temple had an open temple courtyard and then an inner sanctuary that only the priests could enter. Sometimes special pyramid shaped towers, called ziggurats, were built to be a part of the temples. The top of the tower was special sanctuary for the god.

Babylonians believed that after death every soul went to the underworld. The underworld was considered a dark and dismal place. This made death a dreadful event as there was no hope of ever having anything better.

==Are some of them famous even today?==
One of Babylon's most famous kings was Hammurabi. He ruled for 43 years. Hammurabi is famous for creating one of the first formal written set of laws. These laws were written on a stone tablet standing over six feet tall. The most famous rule he set is now known as an eye for an eye. This rule said that the punishment for lawbreakers would be the same as the crime they committed. So if a criminal stabbed a person in the eye, the criminal would be stabbed in the eye too. The laws he made were known as &quot;The Code Of Hammurabi&quot;. This legal system was spread throughout Asia and Europe. The Code of Hammurabi is also interesting because it was the first set of laws which presumed people were innocent, meaning a person must be proven guilty before they could be punished for their crimes.

Nebuchadnezzar II is mentioned in The Bible (The Christian holy book), the Torah (The Jewish holy book) and the Qur'an (The Islamic holy book). He was a ruler of Babylon who destroyed the Jewish temples in Jerusalem.

==What is left of them today?==
The ruins of the city of Babylon still exist although the city has been abandoned for over 2000 years.

Many of the inventions of the Babylonians are still important today. They invented metalworking, copper-working, glassmaking, lamp making, textile weaving, flood control, water storage, as well as irrigation. Interestingly, from their number system we get our concept of there being 60 minutes in an hour and 60 seconds in a minute.


{{BookCat}}

[[de:Wikijunior Alte Zivilisationen/ Babylonier]]</text>
      <sha1>06ciwq6qikbi0dhpxrjvm5yqv1n53xy</sha1>
    </revision>
  </page>
  <page>
    <title>English in Use/Vocabulary Verbs</title>
    <ns>0</ns>
    <id>40731</id>
    <revision>
      <id>1853119</id>
      <parentid>1436996</parentid>
      <timestamp>2010-06-24T02:59:48Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>fixed template link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{English in Use}}
== Verb ==

'''&quot;A doing word.&quot;'''

A verb is a part of speech that usually denotes action (&quot;bring&quot;, &quot;read&quot;), occurrence (&quot;to decompose&quot; (itself), &quot;to glitter&quot;), or a state of being (&quot;exist&quot;, &quot;live&quot;, &quot;soak&quot;, &quot;stand&quot;). Depending on the language, a verb may vary in form according to many factors, possibly including its tense, aspect, mood and voice. It may also agree with the person, gender, and/or number of some of its arguments (what we usually call subject, object, etc.).</text>
      <sha1>ia4blwkoe7rfn36k4rq0vbvu4n4ni5o</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Tcl Programming</title>
    <ns>1</ns>
    <id>40732</id>
    <revision>
      <id>946041</id>
      <parentid>703976</parentid>
      <timestamp>2007-08-19T14:55:00Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>[[Talk:Programming:Tcl]] moved to [[Talk:Tcl Programming]]: make consistent with [[WB:NP]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">A reader asked whether [[Programming:Tcl]] should be split up into several pages. Here's my reply:

Well, at some time, a splitting up of Programming:Tcl must happen. But so far, the automatic table of contents is a big advantage of letting it stay in one page.

Saved as Printable HTML, the file size is now 157 KB, which is still acceptable, considering e-books of 300..500 KB also being deployed as just one .txt or .lit file. OTOH, there are highly structured documents on the web which require quite some work of the user to save, chapter by chapter, say to an offline reading device.

As Wikimedia adds the many [edit] links in the middle, editing still feels as if one has to do with a set of short pages.

So all in all, I'd prefer to leave Programming:Tcl as one page for some while yet. It's simpler, and not really exceeding capacity limits. (I always try to get as far as I can with &quot;underengineering&quot;, most often successful.)

For sample scripts, they might be duplicated on separate pages, without the generous commenting which is now interspersed between code blocks. But I think it isn't so uneducational to copy and paste code blocks to another file: it gives one at least a chance to take a closer look at them :) And I try to put only examples there that are less than a printed page, in pure LOC. [[User:Suchenwi|Suchenwi]] 12:49, 12 September 2005 (UTC)

: You may want to check [[Programming:Python]] to see how both versions: normal and printed look like and how they are organised . --[[User:Derbeth|Derbeth]] [[User talk:Derbeth|&lt;sup&gt;talk&lt;/sup&gt;]] 16:29, 21 November 2005 (UTC)

I agree that the duality of online and print version is interesting, but one thing I like better in Programming:Tcl is the detailed, hierarchical table of contents. - [[User:Suchenwi|Suchenwi]] 00:27, 26 November 2005 (UTC) on cell phone :)

:Would you object to the examples being split off?  With the screenshots and all, they should be.  Also, there's no reason why you can't have a hierarchical toc(maintaining one wouldn't be too difficult).  I wouldn't say anything, except that the size of this page is getting kinda rediculous, at 266,581 bytes + images (at #3 in the longest pages list).  Thanks! &amp;mdash;[[User:Snargle|Snargle]] 08:20, 18 December 2005 (UTC)

I agree, but don't know how to go about it... I have started to pull out the example chapters. Now how to get them back into the TOC? (Right now they appear behind it) [[User:Suchenwi|Suchenwi]] 17:55, 20 December 2005 (UTC) - never mind, I basically found out :) [[User:Suchenwi|Suchenwi]] 18:46, 20 December 2005 (UTC)

A new worry comes up: I split the book into chapters now, and keep adding content to those. However, the print version seems not to reflect these changes - am I doing something wrong? [[User:Suchenwi|Suchenwi]] 15:37, 21 December 2005 (UTC)
:Why would it? It's not a mediawiki feature or anything, so it would need to be done manually.  I wouldn't be so concerned with people wanting to print this book, since it's only got 7 or so modules. [[User:Snargle|Snargle]] 03:33, 22 December 2005 (UTC)

::Well, I at least like to print it out (124 pages last time, 4 per sheet) for proof-reading. I was assuming that the {{:&lt;name&gt;}} syntax in the &quot;Print version page&quot; was including &lt;name&gt; in its current state... [[User:Suchenwi|Suchenwi]] 11:39, 22 December 2005 (UTC)
::Update: print version is upper-to-date than when I last looked at work. Must have been a case of over-eager browser caching. [[User:Suchenwi|Suchenwi]] 12:28, 22 December 2005 (UTC)

This 'External Link' seems like a hidden advert? --[[User:FairPhyllis|FairPhyllis]] 12:46, 1 January 2007 (UTC)

:Thanks - in my view you are correct and I have taken it out (as it was about web hosting rather than the actual topic --[[User:Herbythyme|&lt;font color=&quot;green&quot;&gt;Herby&lt;/font&gt;]] &lt;b&gt;&lt;sup&gt;&lt;small&gt;&lt;span style=&quot;color:#90F&quot;&gt;[[User talk:Herbythyme|talk thyme]]&lt;/span&gt;&lt;/small&gt;&lt;/sup&gt;&lt;/b&gt; 12:50, 1 January 2007 (UTC)</text>
      <sha1>tr9pvfwkn2buytcc6b6obx7n7jhuz4i</sha1>
    </revision>
  </page>
  <page>
    <title>Cookbook:Spicy Chick Pea</title>
    <ns>102</ns>
    <id>40734</id>
    <revision>
      <id>2690878</id>
      <parentid>2158719</parentid>
      <timestamp>2014-08-12T22:45:13Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added side dish, sauteed and mustard cats.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{recipe}} | [[Cookbook:Appetizers|Appetizers]]

A good fall-back meal using ingredients that many pantries will often have lying in a dusty corner, but are also cheap to pick up.

==Ingredients==
*250g [[cookbook:chickpea|chickpeas]]
*2 teaspoons [[cookbook:Dijon Mustard|Dijon mustard]]
*[[cookbook:Pepper|Pepper]] and [[cookbook:Salt|salt]]

==Procedure==
#Strain chick peas and dry with a towel.
#Heat 2 tablespoons oil in large skillet
#Sauté peas until slightly colored, about 6 minutes.
#Add 2 teaspoons Dijon mustard and stir(optional)
#Pepper &amp; salt to taste

[[Category:Chickpea recipes|{{PAGENAME}}]]
[[Category:Side dish recipes|{{PAGENAME}}]]
[[Category:Sautéed recipes]]
[[Category:Mustard recipes]] 
[[Category:Recipes_with_metric_units|{{PAGENAME}}]]</text>
      <sha1>gykry3xl32qmo5zb768mcobdq196koz</sha1>
    </revision>
  </page>
  <page>
    <title>User:Pavlix~enwikibooks</title>
    <ns>2</ns>
    <id>40750</id>
    <revision>
      <id>2877771</id>
      <parentid>519243</parentid>
      <timestamp>2015-04-17T22:54:02Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Pavlix]] to [[User:Pavlix~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Pavlix|Pavlix]]&quot; to &quot;[[Special:CentralAuth/Pavlix~enwikibooks|Pavlix~enwiki...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Also: http://en.wikipedia.org/wiki/User:Pavlix

My name is Pavel Šimerda, I live in [[Prague]], [[Czech Republic]].

Look at my homepage: http://www.pavlix.net/

My blog: http://blog.pavlix.net/</text>
      <sha1>ogcm31io7foz41224fb14iveucyibit</sha1>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:Poaching</title>
    <ns>103</ns>
    <id>40752</id>
    <revision>
      <id>2835171</id>
      <parentid>354031</parentid>
      <timestamp>2015-03-27T10:33:38Z</timestamp>
      <contributor>
        <ip>85.218.194.46</ip>
      </contributor>
      <comment>/* Poaching. */ new section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Fahrenheit / Celsius ==

For us who have no idea how much X degrees fahrenheit is, compared to celsius, is it possible to have both? --[[User:130.225.54.2|130.225.54.2]] 19:50, 12 September 2005 (UTC)

== Poaching. ==

Oversættelse af poaching til krybskytteri her er forkert. I madlavning bruges det franske udtryk POCHERE.[[Special:Contributions/85.218.194.46|85.218.194.46]] ([[User talk:85.218.194.46|discuss]]) 10:33, 27 March 2015 (UTC)</text>
      <sha1>50hy4s4aeydkciwz3m8lsq9ngmww5nl</sha1>
    </revision>
  </page>
  <page>
    <title>Cookbook:Zucchini Pasta Bake</title>
    <ns>102</ns>
    <id>40754</id>
    <revision>
      <id>2692138</id>
      <parentid>2025115</parentid>
      <timestamp>2014-08-16T21:16:12Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added baked and casserole cats.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{recipesummary|Pasta recipes|4|60 minutes|2}}

{{recipe}}

==Ingredients==
*400 g of any small pasta
*250 g cheese
*2 eggs
*200 mL milk
*50 g butter
*3 medium zucchini
*vegetarian stock
*salt and pepper

==Procedure==
#Cook the pasta as directed on the packaging.
#Combine the eggs, milk, salt, and pepper in a mixing bowl.
#Grate the cheese and add to the mixture.
#Melt the butter and add to the mixture.
#Boil a small amount of water and add the stock, then stir it into the mixture.
#Grate the zucchini and stir through the mixture.
#Once the pasta has cooked, stir it into the mixture.
#Grease an oven tray or baking pan and spread the ingredients from the bowl evenly in it.
#In an electric oven, bake at 200 degrees C (400 F) for about 30 minutes, or until the pasta bake is firm all the way through.

[[Category:Pasta recipes|{{PAGENAME}}]]
[[Category:Zucchini recipes|{{PAGENAME}}]]
[[Category:Cheese recipes|{{PAGENAME}}]]
[[Category:Italian recipes|{{PAGENAME}}]]
[[Category:Recipes|{{PAGENAME}}]]
[[Category:Vegetarian recipes|{{PAGENAME}}]]
[[Category:Baked recipes]]
[[Category:Casserole recipes]]</text>
      <sha1>o66mkm5g48b3lorjne321ccpndujzfs</sha1>
    </revision>
  </page>
  <page>
    <title>Engineering Acoustics/Electro-acoustic analogies</title>
    <ns>0</ns>
    <id>40755</id>
    <revision>
      <id>2065469</id>
      <parentid>733914</parentid>
      <timestamp>2011-03-06T02:16:09Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: defination → definition using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Engineering Acoustics}}

== Electro-acoustical Analogies ==

=== Acoustical Mass ===

Consider a rigid tube-piston system as following figure. 

&lt;center&gt;[[Image:acousticalmass.gif]]&lt;/center&gt;

Piston is moving back and forth sinusoidally with frequency of '''f'''.
Assuming &lt;math&gt;f &lt;&lt; \frac{c}{l\ or\ \sqrt{S}}&lt;/math&gt; (where '''c''' is sound velocity &lt;math&gt;c=\sqrt{\gamma R T_0}&lt;/math&gt;),
volume of fluid in tube is,

&lt;center&gt;&lt;math&gt;\Pi_v=S\ l&lt;/math&gt;&lt;/center&gt;


Then mass (mechanical mass) of fluid in tube is given as,

&lt;center&gt;&lt;math&gt;M_M= \Pi_v \rho_0 = \rho_0 S\ l&lt;/math&gt;&lt;/center&gt;


For sinusoidal motion of piston, fluid move as rigid body at same velocity as piston. Namely, every point in tube moves with the same velocity.

Applying the Newton's second law to the following free body diagram,

&lt;center&gt;[[Image:FBD.gif]]&lt;/center&gt;


&lt;center&gt;&lt;math&gt;SP'=(\rho_0Sl)\frac{du}{dt}&lt;/math&gt;&lt;/center&gt;

&lt;center&gt;&lt;math&gt;\hat{P}=\rho_0l(j\omega)\hat{u}=j\omega(\frac{\rho_0l}{S})\hat{U}&lt;/math&gt;&lt;/center&gt;

Where, plug flow assumption is used.

 &quot;Plug flow&quot; assumption:
 Frequently in acoustics, the velocity distribution along the normal surface of
 fluid flow is assumed uniform. Under this assumption, the acoustic volume velocity U is
 simply product of velocity and entire surface. &lt;math&gt;U=Su&lt;/math&gt;

==== Acoustical Impedance ====

Recalling mechanical impedance,

&lt;center&gt;&lt;math&gt;\hat{Z}_M=\frac{\hat{F}}{\hat{u}}=j\omega(\rho_0Sl)&lt;/math&gt;&lt;/center&gt;

acoustical impedance (often termed an '''acoustic ohm''') is defined as,

&lt;center&gt;&lt;math&gt;\hat{Z}_A=\frac{\hat{P}}{\hat{U}}=\frac{Z_M}{S^2}=j\omega(\frac{\rho_0l}{S})\quad  \left[\frac{N s}{m^5}\right]&lt;/math&gt;&lt;/center&gt;

where, acoustical mass is defined.

&lt;center&gt;&lt;math&gt;M_A=\frac{\rho_0l}{S}&lt;/math&gt;
&lt;/center&gt;

==== Acoustical Mobility ====

Acoustical mobility is defined as,

&lt;center&gt;&lt;math&gt; \hat{\xi}_A=\frac{1}{\hat{Z}_A}=\frac{\hat{U}}{\hat{P}}&lt;/math&gt;&lt;/center&gt;

==== Impedance Analog vs. Mobility Analog ====

&lt;center&gt;[[Image:Imp-mov.gif]]&lt;/center&gt;

==== Acoustical Resistance ====

Acoustical resistance models loss due to viscous effects (friction) and flow resistance (represented by a screen).

&lt;center&gt;[[Image:Ra_analogs.png]]

&lt;b&gt;&lt;i&gt;r&lt;sub&gt;A&lt;/sub&gt;&lt;/i&gt;&lt;/b&gt; is the reciprocal of &lt;b&gt;&lt;i&gt;R&lt;sub&gt;A&lt;/sub&gt;&lt;/i&gt;&lt;/b&gt; and is referred to as &lt;i&gt;responsiveness&lt;/i&gt;.&lt;/center&gt;

=== Acoustical Generators ===

The acoustical generator components are pressure, '''P''' and volume velocity, '''U''', which are analogus to force, '''F''' and velocity, '''u''' of electro-mechanical analogy respectively.
Namely, for impedance analog, pressure is analogus to voltage and volume velocity is analogus to current, and vice versa for mobility analog. These are arranged in the following table.


&lt;center&gt;[[Image:e-a_analogy.gif]]&lt;/center&gt;


Impedance and Mobility analogs for acoustical generators of constant pressure and constant volume velocity are as follows:

&lt;center&gt;[[Image:acoustic_gen.png]]&lt;/center&gt;

=== Acoustical Compliance ===

Consider a piston in an enclosure. 

&lt;center&gt;[[Image:Enclosed_Piston.png]]&lt;/center&gt;

When the piston moves, it displaces the fluid inside the enclosure. Acoustic compliance is the measurement of how &quot;easy&quot; it is to displace the fluid.

Here the volume of the enclosure should be assumed to be small enough that the fluid pressure remains uniform.

Assume no heat exchange 
1.adiabatic
2.gas compressed uniformly , p prime in cavity everywhere the same.

from thermo equitation [[Image:Equ1.jpg]]
it is easy to get the relation between disturbing pressure and displacement of the piston
[[Image:Equ3.gif]]
where U is volume rate, P is pressure
according to the definition of the impendance and mobility,
we can get[[Image:Equ4.gif]]

Mobility Analog VS Impedance Analog

&lt;center&gt;[[Image:Comp.gif]]&lt;/center&gt;

=== Examples of Electro-Acoustical Analogies ===

Example 1: Helmholtz Resonator

&lt;center&gt;[[Image:Example1holm.JPG]]&lt;/center&gt;

Assumptions -
(1) Completely sealed cavity with no leaks.
(2) Cavity acts like a rigid body inducing no vibrations.

Solution:

&lt;center&gt;- Impedance Analog -&lt;/center&gt;

&lt;center&gt;[[Image:Example2holm1sol.JPG]]&lt;/center&gt;

Example 2: Combination of Side-Branch Cavities

&lt;center&gt;[[Image:Exam2prob.JPG]]&lt;/center&gt;

Solution:

&lt;center&gt;- Impedance Analog -&lt;/center&gt;

&lt;center&gt;[[Image:Exam2sol.JPG]]&lt;/center&gt;

[http://en.wikibooks.org/wiki/Engineering_Acoustics Back to Main page]</text>
      <sha1>m0vpowaic256jjjk7xv6wxnkguplt42</sha1>
    </revision>
  </page>
  <page>
    <title>File:E-a analogy.gif</title>
    <ns>6</ns>
    <id>40757</id>
    <revision>
      <id>249967</id>
      <parentid>232993</parentid>
      <timestamp>2005-10-06T04:40:30Z</timestamp>
      <contributor>
        <username>Shin31</username>
        <id>10754</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">generators of electro-acoustic and electro-mechanical analogies
{{GFDL-self}}</text>
      <sha1>85dbsbmtqjxdla77uidt9tnhp8ltzkf</sha1>
    </revision>
  </page>
  <page>
    <title>Software Engineers Handbook/Language Dictionary/Perl</title>
    <ns>0</ns>
    <id>40760</id>
    <revision>
      <id>1524604</id>
      <parentid>1524602</parentid>
      <timestamp>2009-06-08T04:12:52Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Perl==
Rather than duplicating information that'll likely get out of date or overlooked, it's best that we simply refer you to:

* the companion [[Perl|Perl Wikibook]] (a full detailed tutorial)
* the [[w:Perl|Perl Wikipedia entry]] (a one-page summary of Perl)
* [http://www.perl.com Perl.com (from O'Reilly Media)]
* [http://learn.perl.org/ The Perl Beginner's site] (with lots of good links)
* [http://www.pm.org Perl Mongers], the global organization of Perl user groups
* [http://www.perlmonks.com PerlMonks], an online discussion forum devoted to Perl
* [http://use.perl.org Use.perl], a Perl news site (much like Slashdot)
* The Australian Perl Community's [http://perl.net.au/wiki/New_to_Perl &quot;new to Perl&quot; wiki page]
* [http://www.perlfoundation.org The Perl Foundation], which supports the current development of perl, including work on Perl 6 and parrot.
* [http://www.tpj.com The Perl Journal], an online Perl magazine
* [http://www.theperlreview.com], the print magazine about Perl

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>a48cee8k1t2xlumnig9s941qjfarpze</sha1>
    </revision>
  </page>
  <page>
    <title>Conlang/Intermediate/Grammar/Verbs</title>
    <ns>0</ns>
    <id>40764</id>
    <revision>
      <id>2990350</id>
      <parentid>2990262</parentid>
      <timestamp>2015-09-06T19:19:45Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>/* Valency */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Navlist/Top}}

The morphology of verbs can be as rich as that of nouns;

* Tense &amp;mdash; The relative time that the action takes place.
* Aspect &amp;mdash; The duration and frequency of the action.
* Mood &amp;mdash; How the action being discussed relates to reality.
* Agreement &amp;mdash; Whether the verb &quot;agrees&quot; with other parts of the sentence, and if so, with what parts?
&amp;nbsp;

== Tense ==

Every speaker of English should be familiar with verb tenses. They show ''when'' (relative to the current time) the action is taking place. Tense is traditionally split into three distinctions: ''past'', ''present'', and ''future''.
 
However, real languages don't always divide time up in the same way. For example, a language can have a distinction between the far-past and the near-past, or it could do away with distinguishing the present and the future on the verb &amp;mdash; It may surprise you to learn that the latter is exactly what English does; English verbs inflect for ''past'' and ''nonpast'', and the so-called &quot;future tense&quot; is formed with an auxiliary verb (&quot;will&quot; or &quot;shall&quot;) plus the nonpast verb form. Some languages even do away with tense inflection altogether, showing time when relevant with (e.g.) adverbs or [[Wikipedia:Adposition|adpositional]] phrases.

== Aspect ==

Aspect is the inflection of a verb to show how the action is distributed in time. It includes, most basically, a distinction between ''perfective'' (completed) and ''imperfect'' (incompleted). Other aspects, such as the ''habitual'' (occurring regularly over a period of time) and the ''iterative'' (done repeatedly), may be found in some languages. Many languages conflate tense and aspect in verbal morphology, so a verb has forms for imperfect past tense vs. perfect past tense.

To give you a better feel for this, in English, verbs are normally imperfect but can be made perfect by turning it into a passive participle and adding the auxiliary verb &quot;have&quot; to the sentence: Contrast &quot;Tom ''ate'' his lunch&quot; and &quot;Tom ''has eaten'' his lunch&quot;. The habitual aspect is more subtle, but can be most easily seen in the distinction between the so-called ''simple present'' and the ''complex present'' tenses: Compare &quot;The penguins ''eat'' fish&quot; and &quot;The penguins ''are eating'' fish&quot;. Other aspects have no really good construction in English and so we often have to rely on implication and adverbial phrases to get the point across.

== Mood ==

Mood (sometimes also called mode) shows a verb's relationship to reality and includes things like the ''indicative'' (it happens as stated) vs. the ''subjunctive'' (it might happen, it is desired to happen) or ''imperative'' (it is commanded to happen). Some languages treat ''negation'' (it doesn't happen) or ''questions'' (is it happening?) as mood inflections on verbs.

Some languages use moods where we use modal verbs (i.e. can, may, will etc), for example where we say &quot;I would drink&quot;, the Spanish say &quot;(yo) bebería&quot;, from &quot;beber&quot;.  Where we say &quot;He wants to drink&quot;, Sanskrit says &quot;pípāsati&quot;.  And where we say &quot;it is likely that he speaks&quot;, Finnish expresses it with &quot;puhunee&quot;.

Some languages indicate how the speaker knows the verb is happening as a kind of mood, called ''evidentiality'' (&quot;I know because I saw it&quot;, &quot;I know because I'm guessing it will happen&quot;, or &quot;It's hearsay&quot; etc.).  Conlangs with extensive evidentiality marking include [[Wikipedia:Láadan|Láadan]] and [http://www.kunstsprachen.de/s7/ Qthyn|gai].

== Agreement ==

Agreement is when a verb is given markings that refer to some detail from another part of the sentence. Most forms of agreement focus around the subject of the sentence but the verbs of some languages will mark details of the object (usually in addition to the subject).

=== Person ===

Many languages inflect the verb for the person. Latin and Spanish, for example, have different verb forms depending on whether the subject is ''first person'', ''second person'', or ''third person'', which is reflected on the last syllable or two of the word (''hablo'' &quot;I speak&quot;, ''hablamos'' &quot;we speak&quot;, etc.) whereas English does this only for the third person singular (&quot;he run'''s'''&quot; versus &quot;they run&quot;). In languages where verbs inflect for person, it is often possible to omit pronouns altogether and still be understood; in some such languages, subject pronouns are ''normally'' omitted, and only included for special emphasis. &lt;!-- should get Latin or Greek example, prob.--&gt;

=== Gender ===

Some languages may include gender-marking on verbs instead of/as well as person marking. For example, in Russian, the &quot;past tense&quot; is formed by using a form ending in -l, -la, -lo, depending on the gender of the subject (while in the &quot;present tense&quot; the verb agrees with the person of the subject and not with the gender). In Arabic, most tense forms indicate the person, number (singular, dual, or plural) and gender of the subject.

=== Polypersonal marking ===

Some languages (e.g. Basque, Georgian, Quenya) mark the verb for the person not only of the subject but of the object.  Thus &quot;I have found it&quot; in Quenya becomes &lt;b&gt;u-túvie-nye-s&lt;/b&gt; &quot;HAVE-FIND-I-IT&quot;. One language even has forms for more than one subject &quot;I and he&quot;, &quot;he and they&quot;, for example.
&lt;!-- what language is that? --&gt;

== Combining the types of inflection ==

&lt;!-- Still needs cleaning up --&gt;
A language may inflect the verb for all of these things or none of them. Typically, isolating/analytic languages, of course, don't inflect their verbs much. Synthetic languages, the fusional and agglutinative languages, tend to inflect their verbs to varying degrees with these features.

Some inflect heavily in one area but not another. Japanese, for example, inflects verbs not just for tense, but for politeness, desire, mood, and various other things. The verb ''miru'' (to see) becomes ''mimasu'' to show politeness and ''minai'' to show negation. These forms can be inflected further, so ''mimashita'' is the past tense form of ''mimasu'' and ''minakatta'' is the past tense form of ''minai''. However, Japanese verbs show no inflection whatsoever for person - there is not even an equivalent for the minimal ''-s'' inflection of English verbs in the 3rd person singular of the present tense.

Polysynthetic languages usually inflect the verb to an incredible degree. In such languages &amp;mdash; like some of those spoken or formerly spoken by people native to the Americas and arguably, modern spoken French &amp;mdash; the verb may be marked for the number, noun class, and person of both the subject and object, allowing the listener to determine which noun in a sentence is playing which role from the inflections on the verbs alone. This is another way, besides noun cases, for free word order to be possible.

== Valency ==

Verbs can be categorized by how many arguments they take, that is, how many nouns are involved by the verb. For example in ''I am writing a letter to you'', the verb ''write'' has a valency of three because there are three objects involved: the letter; you; and me, the subject. There are also verbs which have a valency of zero, as in ''It rains''. In English, there still has to be a subject, ''it'', but the sentence does define what ''it'' is; so ''it'' is called &quot;the grammatical It&quot;.  In some languages, a verb with a valency of zero would simply appear by itself with no noun at all.

== Transitivity ==

This is also not a new inflection of verbs, but a way of categorizing verbs by what arguments they take. Or in other words, how many ''direct/indirect'' objects other than the subject are involved in the action. It tells the difference between the letter and you in ''I am writing a letter to you.'' and also describes why it sounds wrong to say ''I am writing you to a letter''.

{{Navlist/Bottom}}</text>
      <sha1>euh0licholwqnydqu008h05x3gzjx2v</sha1>
    </revision>
  </page>
  <page>
    <title>Engineering Acoustics/Primary variables of interest</title>
    <ns>0</ns>
    <id>40766</id>
    <revision>
      <id>2169453</id>
      <parentid>2065484</parentid>
      <timestamp>2011-09-18T01:47:20Z</timestamp>
      <contributor>
        <username>Xania</username>
        <id>40302</id>
      </contributor>
      <minor />
      <comment>typo</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Engineering Acoustics}}

== Basic Assumptions==
Consider a piston moving in a tube. The piston starts moving at time t=0 with a velocity u=&lt;math&gt;u_p&lt;/math&gt;. The piston fits inside the tube smoothly without any friction or gap. The motion of the piston creates a planar sound wave or acoustic disturbance traveling down the tube at a constant speed c&gt;&gt;&lt;math&gt;u_p&lt;/math&gt;. In a case where the tube is very small, one can neglect the time it takes for acoustic disturbance to travel from the piston to the end of the tube. Hence, one can assume that the acoustic disturbance is uniform throughout the tube domain.
&lt;center&gt;[[Image:Acousticplanewave1.gif]]&lt;/center&gt;
=== Assumptions ===
1. Although sound can exist in solids or fluid, we will first consider the
medium to be a fluid at rest. The ambient, undisturbed state of the fluid will
be designated using subscript zero. Recall that a fluid is a substance that
deforms continuously under the application of any shear (tangential)
stress.

2. Disturbance is a compressional one (as opposed to transverse).

3. Fluid is a continuum: infinitely divisible substance. Each fluid property
assumed to have definite value at each point.

4. The disturbance created by the motion of the piston travels at a constant
speed. It is a function of the properties of the ambient fluid. Since the
properties are assumed to be uniform (the same at every location in the
tube) then the speed of the disturbance has to be constant. The speed of
the disturbance is the speed of sound, denoted by letter &lt;math&gt;c_0&lt;/math&gt; with subscript zero to denote ambient property.

5. The piston is perfectly flat, and there is no leakage flow between the piston
and the tube inner wall. Both the piston and the tube walls are perfectly
rigid. Tube is infinitely long, and has a constant area of cross section, A.

6. The disturbance is uniform. All deviations in fluid properties are the same
across the tube for any location x. Therefore the instantaneous fluid
properties are only a function of the Cartesian coordinate x (see sketch).
Deviations from the ambient will be denoted by primed variables.

== Variables of interest ==

=== Pressure (force / unit area) ===

Pressure is defined as the normal force per unit area acting on any control surface within the fluid. 

&lt;center&gt;[[Image:Acousticcontrolsurface.gif]]&lt;/center&gt;
&lt;math&gt;p = \frac {\tilde{F}.\tilde{n}}{dS} &lt;/math&gt;

For the present case,inside a tube filled with a working fluid, pressure is the ratio of the surface force acting onto the fluid in the control region and the tube area. The pressure is decomposed into two components - a constant equilibrium component, &lt;math&gt;p_0&lt;/math&gt;, superimposed with a varying disturbance &lt;math&gt;p^'(x)&lt;/math&gt;. The deviation &lt;math&gt;p^'&lt;/math&gt;is also called the acoustic pressure. Note that &lt;math&gt;p^'&lt;/math&gt; can be positive or negative.
Unit: &lt;math&gt;kg/ms^2&lt;/math&gt;. Acoustical pressure can be measured using a microphone.

&lt;center&gt;[[Image:Acousticpressure1.gif]]&lt;/center&gt;
===  Density ===
Density is mass of fluid per unit volume. The density, ρ, is also decomposed into the sum of ambient value (usually around ρ0= 1.15 kg/m3) and a disturbance ρ’(x). The disturbance can be positive or negative, as for the pressure.
Unit: &lt;math&gt;kg/m^3&lt;/math&gt;


===  Acoustic volume velocity ===
Rate of change of fluid particles position as a function of time. Its the well known fluid mechanics term, flow rate. 

&lt;center&gt;&lt;math&gt;U=\int_{s}\tilde{u}.\tilde{n}\, dS&lt;/math&gt;&lt;/center&gt;

In most cases, the velocity is assumed constant over the entire cross section (plug flow), which gives acoustic volume velocity as a product of fluid velocity &lt;math&gt;\tilde{u}&lt;/math&gt; and cross section S.

&lt;center&gt;&lt;math&gt;U=\tilde{u}.S &lt;/math&gt;&lt;/center&gt;

[http://en.wikibooks.org/wiki/Engineering_Acoustics Back to Main page]</text>
      <sha1>stqxzr8tdm61pe6mqjnth18fptgf4no</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Modern Greek</title>
    <ns>1</ns>
    <id>40767</id>
    <revision>
      <id>2714476</id>
      <parentid>2714475</parentid>
      <timestamp>2014-10-17T07:54:17Z</timestamp>
      <contributor>
        <username>Aphoneyclimber</username>
        <id>1892368</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{WikiProject Languages}} 

== Restructuring II ==

Hi all, there seems to be much debate over this page, though seemingly not for many years. I'm not sure if any users are still active?

My opinion is that there is quite a lot of good material here but it is simply too muddled. Looks like people have tried to fix this before and given up.

My intention is to put all of the &quot;Alphabet&quot; as Lesson 1 - in the bite-sized chunks which currently exist. Lesson 2 - Basic greetings and things. This should serve as the very basics. Following on from this I thing that it makes sense to follow the last &quot;New organisation&quot; plan.

I will start to clear up bit by bit. I'm not sure of everything which exists yet. If anyone wants to help sketch out an improved contents please let me know.

IKnowNothing's old restructuring page is [[Modern_Greek/Restructuring | here ]], how about we add the new structure plan to that?

I'm also new to wiki editing - so some pages may suffer broken links etc whilst I'm working out what to do, please help out if you see something.

I've sorted out what I think should be the new order and got it on the front page. All the old material still exists and I'm starting to copy it across.

Tasks that I think need doing:

(1) Tidy up this page, discussions from 8 years ago can probably be archived and this turned into an active &quot;To Do&quot; list.

(2) Someone should always be double checking the pages for mistakes - how about comments on each discussion page to show when someone has checked it.

(3) If you want to write extra lessons, add to existing, or just copy something across please do.

(4) Get involved! Especially native Greek speakers, it would be super to have recordings for everything, and not by my, I struggle too much with γ, you should hear me trying to say γάλα...

(5) There are some illustrated pictures on &quot;The Body&quot; page. There needs to be more pictures I think. I believe it helps some people lots to compare images and works (different learning styles).

[[User:Aphoneyclimber|Aphoneyclimber]] ([[User talk:Aphoneyclimber|discuss]] • [[Special:Contributions/Aphoneyclimber|contribs]]) 21:42, 16 October 2014 (UTC)

== Legacy Discussion ==

I've created a [[Modern Greek/User Language Questions|User Language Questions]] page. Here in the discussion any one can ask a question about the language, when it's answered satisfactorily it will go on the main page, so there can be a sort of FAQ's and general queries. Obviously clarification questions should go with the relevant pages but anything that's new should go here.

I've also moved the [[Modern Greek/Legacy Restructuring|Legacy Restructuring]] stuff away so that this can be a clear workspace to make the new plan.

[[User:Aphoneyclimber|Aphoneyclimber]] ([[User talk:Aphoneyclimber|discuss]] • [[Special:Contributions/Aphoneyclimber|contribs]]) 07:47, 17 October 2014 (UTC)</text>
      <sha1>o780wognshkpnjt2hkc5j1sxc3vawvm</sha1>
    </revision>
  </page>
  <page>
    <title>Programming Languages/Introduction</title>
    <ns>0</ns>
    <id>40770</id>
    <revision>
      <id>2735554</id>
      <parentid>1724749</parentid>
      <timestamp>2014-11-23T14:32:24Z</timestamp>
      <contributor>
        <ip>123.63.13.117</ip>
      </contributor>
      <comment>/* Introduction */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Introduction ==

'''A''' programming language is an artificial language that can be used to instruct a computer to do a particular task. To be considered a general programming language, it      
must be computationally complete, or Turing-Complete. It is nevertheless common to regard some languages that are not computationally complete, like database query languages and other domain-specific languages as programming languages as well.

=== High-Level Versus Low-Level Programming Languages ===

A low-level programming language is one that is very basic and close to the machine's native language. A low-level programming language can be thought of as a building block language for software. Assembly code is the most common low-level language and requires very little translation to assemble it to machine code. (The 1's and 0's that make up binary.)

A high-level programming language is one that is closer to a level of human communication. In this method, the compiler does a lot more of the work for the programmer. The closer the language is to our everyday speech, the easier it is to worry about more complex problems. However, this can be taken too far. If a language is too much like English (or other natural languages), it can be harder to create complex programs. This is because verbose languages take more time to read, and so they can take a lot more time to understand.

Machine code is the language the computer can understand directly. Machine code consists of sequences of binary digits. It is almost never programmed in directly, but anything that is to be run on an ordinary computer must be translated to machine code first. The machine code can be different for each computer architecture.

Assembly language is a more human readable representation of the machine code, where the machine instructions are represented as mnemonics rather than binary digits. Assembly language has a 1:1 relationship with machine code as long as the program is not self-modifying. Before an assembly program can be run by a computer, it must be transformed to machine code. A program that does this
translation is known as an assembler. In the early days of computing, assembly language was extensively used, but today it is mainly used for very time critical parts of programs, the core of operating systems, as well as in very small computers, like the chip on a smartcard.

Machine code and assembly language are called first and second generation programming languages respectively. A programming language that has arithmetic expressions, looping constructs, functions, and other constructs that save the programmer from dealing with the machine instructions directly is known as a third-generation programming language. 

High-level, domain-specific programming languages were earlier often mentioned as fourth-generation languages, while expert systems were called fifth-generation programming languages. In later years this distinction has blurred, as many very high-level general purpose programming languages like Python, Haskell and Common Lisp have emerged. Expert systems are in very little use today.

=== Compilation and interpretation of computer programs ===

Before a program can be executed on a computer, it must be translated to
machine code. Alternatively it can be simulated by another program, called
an interpreter. A compiler is a program that translates a programming language, called the source programming language into another programming language, called the destination language. Usually the source language is a high level language, while the destination language is machine code. An interpreter may require that the source programming language be compiled into an intermediate form before interpretetion, called byte code. This is a more low level language, for which it is easier to write an interpreter. In the Java programming language this is a separate step, while in other cases it is performed as an integral part of the interpreter. Examples of such programming languages are Perl and Python. CommonLisp is an exception 
to the above: it's both interpreted and compiled.

=== Type Systems ===

There are two axes to type systems: Dynamic versus Static on the one side and Strong versus Weak.

A Strongly typed language will not allow an operation on an object if this object does not match in type. Examples are CommonLisp, Q-base and Python.

A Weakly typed language will allow such operations. Examples are C and C++. 

Dynamic type languages bind type to value. Staticly typed languages bind it to variable.

(See [http://c2.com/cgi/wiki?WeakAndStrongTyping here] for background.)

=== Memory Management ===

* Manual management
* Garbage Collection

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>kh2siu5cv47ilb2ba6tzcb5g6cbh27u</sha1>
    </revision>
  </page>
  <page>
    <title>Programming Languages/Syntax Specification</title>
    <ns>0</ns>
    <id>40771</id>
    <revision>
      <id>1649110</id>
      <parentid>1496950</parentid>
      <timestamp>2009-10-27T21:45:21Z</timestamp>
      <contributor>
        <ip>90.24.139.26</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">There are two ways to describe a language: by its '''syntax''' or by its '''semantics'''. The syntax of a language is a set of rules that defines what strings of characters ('''sentence''' or '''statements''') belong to this language; the semantics of a language describe the meaning of a given statement.

== Specifying the Syntax of Programming Languages ==
===Lexemes and Tokens===
For a language, one can decompose a statement into a string of '''lexemes''', the indecomposable building blocks of a language. For example, the following [[w:Perl]] statement:
    do { sleep 1; } while (++$i &lt; 10);
contains lexemes: &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;sleep&lt;/code&gt;, 
&lt;code&gt;1&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt;, &lt;code&gt;$i&lt;/code&gt;, &lt;code&gt;&lt;&lt;/code&gt;, &lt;code&gt;10&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt; and &lt;code&gt;;&lt;/code&gt;.

Lexemes can be grouped into categories. Such a category is called a '''token'''.

===Context-Free Grammars===
*Backus-Naur Form(BNF)
*Arithmetic grammar
*Unary negation (~)

===Parse Trees===
*Parse tree of complex formula using exponents, et cetera

===Extended Backus-Naur Form===
'''Extended Backus-Naur Form''' is intended to be a precise method for specifying the syntax of a language. It is a metalanguage, in that it is a language used to describe languages. It is also commonly seen employed in command usage or help documents.

The complete documentation on EBNF is to be found here:
[http://www.cl.cam.ac.uk/~mgk25/iso-14977.pdf].

The basic elements of a language would be described using EBNF '''terminal symbols''', which are then grouped together into logical higher-level expressions of the overall language using '''nonterminal symbols'''.  Terminal symbols specify actual valid character patterns used to represent things like the proper syntax for variable names in the language, or for representing numbers.  Nonterminal symbols group the different possible representations of a given thing (say, numerical constants in decimal, hexadecimal or scientific notation format) into a single logical thing ([Numerical_Constant]).  Ultimately, by building up the various syntactical elements and expressing the ways in which they may be combined, one ends up with a symbol representing a program in the language in question.

A couple of examples are to be found in the man pages for the awk utility.

(excerpts are from [http://www.hmug.org/man/1/awk.php])

First, its usage:

:'''awk [ -F fs ] [ -v var=value ] [ 'prog' | -f progfile ] [ file ...  ]
'''

The items in square brackets are an example of EBNF and denote an optional parameter to use on the awk command line.

Secondly, the usage detail section is partially specified in EBNF.

In the example below, words such as 'pattern', 'action', 'expression' and 'statement' are EBNF nonterminal symbols.

A pattern-action statement has the form

    pattern { action }

A  missing  {  action  } means print the line; a missing pattern always matches. Pattern-action statements are separated by newlines or  semicolons.

An action is a sequence of statements. A statement can be one of the following:

              if( expression ) statement [ else statement ]
              while( expression ) statement
              for( expression ; expression ; expression ) statement
              for( var in array ) statement
              do statement while( expression )
              break
              continue
              { [ statement ... ] }
              expression              # commonly var = expression
              print [ expression-list ] [ &gt; expression ]
              printf format [ , expression-list ] [ &gt; expression ]
              return [ expression ]
              next                    # skip remaining patterns on this input line
              nextfile                # skip rest of this file, open next, start at top
              delete array[ expression ]# delete an array element
              delete array            # delete all elements of array
              exit [ expression ]     # exit immediately; status is expression

Statements are terminated by semicolons, newlines or right braces.  

Entire languages can also be documented in EBNF. The link below documents the ANSI definition of C++, and many parts of this document are written in EBNF.

[http://www.cs.utexas.edu/users/lavender/courses/c++/cd2/index.html]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>tqy12261st0jdzztcl5gx954bmasys6</sha1>
    </revision>
  </page>
  <page>
    <title>Programming Languages/Semantics Specification</title>
    <ns>0</ns>
    <id>40772</id>
    <revision>
      <id>2775564</id>
      <parentid>1496952</parentid>
      <timestamp>2015-03-05T19:31:50Z</timestamp>
      <contributor>
        <ip>99.33.48.154</ip>
      </contributor>
      <comment>/* The Semantics of Programming Languages */  Changed &quot;usual&quot; to &quot;usually&quot;.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">
== The Semantics of Programming Languages ==
Semantics, roughly, are meanings given for groups of symbols: ab+c, &quot;ab&quot;+&quot;c&quot;, mult(5,4).

For example, to express the ''syntax'' of adding 5 with 4, we can say: Put a &quot;+&quot; sign in between the 5 and 4, yielding &quot;&lt;code&gt;5 + 4&lt;/code&gt;&quot;. However, we must also define the semantics of 5+4. If we use arithmetic semantics, 5+4 would be a representation/equivalent(=) of 9.

In computer science, the author of a programming language 'could' either use or create a new definition for '+'. For example, '+' can defined as arithmetic subtraction(-). More commonly however, '+' is defined as a function(takes in a value to output another) for complex numbers, and even strings(an ordered set of symbols) like &quot;123a&quot;,&quot;aFsd&quot;, and &quot;./etc&quot;.

Semantics are from being mere theory or philosophy. Many properties of programming languages can only be determined through rigorous analysis. For example, we'd like to make statements such as &quot;this programming language is secure.&quot; But to demonstrate that a programming language is secure requires more than just a discussion of the language's syntax. Without a formal proof of security, systems can be vulnerable to the unanticipated consequences of many separate interacting concerns. One way to make such proofs is by using mathematical models.

Given the semantics of one programming language we have the option of describing other programming languages in terms of that base language. So, one way to specify the semantics of a programming language is to relate it to another language. However, this creates a bootstrapping problem: what to use for the original base language. Programming language researchers have solved the problem by using a mathematical model that was originally invented for logic, but has dramatic computational applications: '''Lambda Calculus'''.

Lambda Calculus, invented in the 1920s and 30s by Church, Kleene, and others, is one of the simplest to describe Turing Complete languages. It's a language that only has a single value: the function; and only two operations: defining a function and calling a function. To make things even simpler, functions are only allowed to have one parameter.

In the following discussion, gear your mind to thinking about functions that take functions as arguments and return other functions as values. It is a very abstract concept, but, as we'll find, soon we can build up the language through clever definitions into something that looks more like the programming languages we are used to. For example, one of the first tricks we'll explore is how to achieve the same result of allowing multiple parameters even though each function can only take a single parameter.

=== Building Up Operations ===
Before we start working with lambda calculus, let's begin with a puzzle in a more standard programming language. Suppose that Java only had the binary &quot;&lt;&quot; operator, and we needed to define functions to give us &quot;&gt;&quot;, &quot;&gt;=&quot;, and &quot;&lt;=&quot; operators. We also don't have unary operators either, but we still have if-statements.

First, let's look at what we're given:

  ''// &lt; - Returns true if a is less than b''
  public static boolean lessThan(int a, int b) { ... }

Our task is to define greaterThan, greaterThanOrEqualTo, and lessThanOrEqualTo. Remember, for this puzzle, we can only make calls to lessThan, use if-statements, and return boolean values. Think of how you might do this before reading on.

The fist function is not too complicated:

  ''// &gt; - Returns true if a is greater than b''
  public static boolean greaterThan(int a, int b) {
    return lessThan(b, a);
  }

This works because whenever we have &lt;math&gt;b &lt; a&lt;/math&gt; we already know that &lt;math&gt;a &gt; b&lt;/math&gt;. We can use similar reasoning to write implementations for greaterThanOrEqualTo and lessThanOrEqualTo:

  ''// &gt;= - Returns true if a is greater than or equal to b''
  public static boolean greaterThanOrEqualTo(int a, int b) {
    return not(lessThan(a, b));
  }
  
  ''// &lt;= - Returns true if a is less than or equal to b''
  public static boolean lessThanOrEqualTo(int a, int b) {
    return greaterThanOrEqualTo(b, a);
  }
  
  ''// ! - Returns the negation of b''
  public static boolean not(boolean b) {
    if (b)
      return false;
    else
      return true;
  }


In the definition of greaterThanOrEqualTo we are in effect negating the result of lessThan. Thus, when &lt;math&gt;a \not &lt; b&lt;/math&gt; we return true, and when &lt;math&gt;a &lt; b&lt;/math&gt; we return false. But when &lt;math&gt;a \not &lt; b&lt;/math&gt; we know that &lt;math&gt;a\ge b&lt;/math&gt;; this is a case where we must return true, and we do. Similarly, when &lt;math&gt;a &lt; b&lt;/math&gt; we know is cannot be the case that &lt;math&gt;a\ge b&lt;/math&gt;, so we correctly return false.

Given these definitions, we can define equalTo and notEqualTo:

  ''// == - Returns true if a equals b''
  public static boolean equalTo(int a, int b) {
    if (greaterThanOrEqualTo(a, b))
      return greaterThanOrEqualTo(b, a);
    else
      return false;
  }
  
  ''// != - Returns true if a does not equal b''
  public static boolean notEqualTo(int a, int b) {
    return not(equalTo(a, b));
  }

We are now starting to think in ways that will let us build up operations in lambda calculus. Not only will we have to invent &lt; and ==, we'll also need to invent numbers, booleans, all operations on numbers, all relational operations, linked-lists, if expressions, looping constructs and even a model for output and other side effects.

===The Built-in Operations of Lambda Calculus===
Here is the grammar of the complete lambda calculus language:

 expr ::= &quot;&amp;lambda;&quot; id &quot;.&quot; expr         ''abstraction, anonymous function definition''
 expr ::= expr expr               ''application, calling a function''
 expr ::= id                      ''variable use''
 expr ::= &quot;(&quot; expr &quot;)&quot;            ''grouping''

We'll also introduce another notation to allow us to create short-hands:

 definition ::= &quot;let&quot; id &quot;=&quot; expr

After such a &quot;let&quot; is made, the identifier should be expanded to be the expression on the right-hand side. We'll also include another form of parenthesis, which are no different than the curved parenthesis already defined:

 expr ::= &quot;[&quot; expr &quot;]&quot;

Because the language doesn't have much punctuation lots of parenthesis are going to be used, so by allowing two different types of parenthesis readability is improved (because you can better visually match where a grouping starts and ends).

Finally, identifiers can be any sequence of characters provided they aren't already tokens that mean something else:

 id ::= &lt;math&gt;\langle&lt;/math&gt;''any printable, non-whitespace characters except ()[]=.;, &quot;let&quot;, and &quot;&amp;lambda;&quot;''&lt;math&gt;\rangle&lt;/math&gt;

So, unlike most programming languages, in lambda calculus &quot;0&quot;, &quot;+&quot;, &quot;%&quot; and &quot;15&quot; are all valid identifiers, just as &quot;i&quot;, &quot;x&quot;, &quot;y1&quot;, &quot;remainder&quot; and &quot;theReturnValue&quot; are all identifiers in more common programming languages.

We will use &quot;;&quot; for line comments.

====Abstraction: Defining a Function====
We'll begin specifying lambda calculus rules by comparison to a hypothetical Java-like language. The abstraction rule,
 expr ::= &quot;&amp;lambda;&quot; id &quot;.&quot; expr
allows us to create new functions. The lambda &quot;&amp;lambda;&quot; symbol marks a new function is being defined, and the identifier that follows it is the name of its parameter. The expression after the dot &quot;.&quot; is an expression that may refer to the parameter and any other variables in scope. Note that the functions do not have names in lambda calculus. If we want to name them we'll need to use the &quot;let&quot; form to just create a short-hand.

It seems that we can't define much of anything at all so far. The first function that might occur to you is the identity function:
 &amp;lambda;x. x
That is, for any x you supply this function, you'll get x back. Instead of constantly writing &lt;code&gt;&amp;lambda;x. x&lt;/code&gt; each time we want to use the identity function, we can create a short-hand
 let identity = &amp;lambda;x. x
and then refer to &lt;code&gt;identity&lt;/code&gt; instead, which would be the same as referring to the syntactically heavier &lt;code&gt;&amp;lambda;x. x&lt;/code&gt;.

In Java, the same definition would look more like this:
 public static Function identity(Function x) {
   return x;
 }
Because the only values or types in lambda calculus are functions, both the argument and the return value are of a hypothetical &quot;Function&quot; type.

====Application: Calling a Function====
The application rule
 expr ::= expr expr
allows us to ''apply'' (or to &quot;call&quot;) functions. Suppose that &quot;f&quot; were a function and &quot;a&quot; was its argument. To apply f to a, we simply juxtapose them together:
 f a
Because parenthesis just provide groupings, and because ''f'' and ''a'' are already terminal elements, all of the following are equivalent to the above:
 f(a)
 (f a)
 ((f) a)
 ((f) (a))
 (f)a
Supposing that ''f'' was an instance of Function in our hypothetical Java-like language. We might write function application like this:
 f.apply(a)
which would mean &quot;apply ''f'' to ''a''.&quot;

=====The &amp;beta;-reduction=====
The actual semantics of application is the substitution rule (also called the '''&amp;beta;-reduction''' rule). When ''f'' is a lambda function and ''a'' is some value, and they are juxtaposed, an application occurs. Suppose that ''f''s parameter were named ''x'' and some expression ''expr'' used ''x''. Then
 f a
would be the same as
 (&amp;lambda;x. expr) a
An application states to replace all occurences of ''x'' with ''a''. We would write this substitution as:
 expr [a/x]

Given our identity function from before, we can apply it to elements. So,
 identity a
is the same as
 (&amp;lambda;x. x) a
which is the same as
 x [a/x]
which, after the substitution becomes
 a
Also, 
 identity identity
this is the same as saying:
 (&amp;lambda;x. x) (&amp;lambda;x. x)
which is the same as
 x [(&amp;lambda;x. x)/x]
which, after the substitution becomes
 (&amp;lambda;x. x)
or, that is to say, the identity function itself.

=====Precedence order=====
*Left to right

===Multiple Arguments and Lexical Scope===
Currently it doesn't seem like lambda calculus can do much more than create the identity function and apply it to itself. In order get further in the language, we need to start thinking of the abstraction operation as a true operation in its own right. For example, instead of defining the identity function, let's define a function that ''creates'' the identity function:
 &amp;lambda;y. &amp;lambda;x. x
Which should be interpreted as &quot;given any y, return the identity function&quot;.

Previously in our lambda function bodies, we've only returned the parameter. The above example shows that we also have another choice: return the parameter of a function we're defined in. For example, what would the following mean?
 &amp;lambda;y. &amp;lambda;x. y
This function should be interpreted as &quot;given any y, returns a function that, given any x, always returns y.&quot; In other words, it creates a ''constant function,'' which we represent in mathematics as a horizontal line on a graph. (The identity function on a graph would instead be a line at a 45 degree angle, running through the origin.) This section shows how this new option can allow you to express rich concepts. In particular, this section shows how you can simulate functions that take multiple arguments.

One way you might think of simulating functions that take multiple arguments by starting from functions that only take a single argument is to combine all of the arguments into a unit (just as a complex number contains two floating-point numbers) and passing that unit. Such a technique can be described as a tuple technique: as long as you can pass an argument that is actually a collection of multiple values it's really no different than passing in those multiple values in the first place.

You could use the tuple technique, but lambda calculus doesn't have any tuple types in it: The only type is a function that takes in a single argument. But recall the two functions above, that use &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. Because the function &lt;code&gt;&amp;lambda;y&lt;/code&gt; function creates the &lt;code&gt;&amp;lambda;x&lt;/code&gt; function the &lt;code&gt;&amp;lambda;x&lt;/code&gt; function can use either of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.

One way to think of the problem is to focus on a particular example. So, suppose you want to define a new function that takes in arguments &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; and does some computation involving those values. You can think of this function as a machine. The limitation is that in lambda calculus these machines can only take in a single value. But there aren't any strict limitations on what can be returned. So, think first about a machine that can only take in &lt;code&gt;a&lt;/code&gt;: because it doesn't know &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;c&lt;/code&gt; it can't do the desired computation. But because it knows &lt;code&gt;a&lt;/code&gt;, it can return a new machine that also knows &lt;code&gt;a&lt;/code&gt;. Because that machine also takes in a parameter, we can let that be &lt;code&gt;b&lt;/code&gt;. Thus, you now have a machine that knows &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, but not &lt;code&gt;c&lt;/code&gt;. So, this machine should in turn create a machine that know &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; and takes in a parameter &lt;code&gt;c&lt;/code&gt;. Once that machine is given &lt;code&gt;c&lt;/code&gt; it will be able to compute with all three values.

To make this concept clearer, suppose you want to create a machine that can do addition. That is, some kind of function that might read as, &quot;given any n and m, returns the sum of n + m.&quot; We can achieve such an effect if we create a more primitive function first: ''create-adder''. We won't yet implement create-adder, but we'll assume it exists with a specification like this:
 ''; create-adder: given n, returns a function that adds n to its argument''
 let create-adder = &amp;lambda;n. ''(details left out for the moment)''
Assuming ''create-adder'' exists, it's trivial to define addition:
 let + = &amp;lambda;n.&amp;lambda;m. ((create-adder n) m)
First, don't let the &quot;+&quot; trip you up. That's just a symbol like any other identifier. We could have just as well made the short-hand for this function be &quot;plus&quot; or &quot;add&quot; instead of &quot;+&quot;. So, what is the &quot;+&quot; function itself?

The way to read &quot;+&quot; is: &quot;given any n, return a function that, given any m, returns n + m.&quot; Assuming that 5 and 4 are defined to be values (we'll show how we can do this soon), &quot;+&quot; can be used to add them:
 ((+ 5) 4)
Here, first &quot;+&quot; is applied to 5, and that result is applied to 4. Because at a high-level &quot;+&quot; is thought of as taking two arguments, it can be easier to understand if we remove some of the parenthesis:
 (+ 5 4)
which still means the same thing: apply &quot;+&quot; to 5, and then apply that result to 4 (and would still mean that in this case if we remove all of the parenthesis). This way of calling the function is also the same as a prefix notation.

But how exactly does the &quot;+&quot; function return &quot;n + m&quot;? The body is this:
 ((create-adder n) m)
Here, ''create-adder'' is passed n. By definition, it will return a function that, given any number, will return the sum of n plus that number. We then immediately apply that function to m, resulting in the sum of n + m.

This trick is known as Currying and is how we'll accomplish multiple arguments, even though the language itself only technically allows single argument functions.

===Creating Richer Functions===
Now that we can see some way to add multiple arguments to a language where functions only take a single argument we can explore other extensions. In order to create more programming constructs we'll not only need to make control-flow statements, we'll also need to make new values.

The only values we've fully constructed have been: (1) the identity function; (2) a function that returns the identity function; and (3) a function that returns a constant function.

====Boolean Values and Conditionals====
The first values we'll create are the booleans &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. We could start by just defining &lt;code&gt;true&lt;/code&gt; to be the identity function and then letting &lt;code&gt;false&lt;/code&gt; be the function that returns the identity function, but then we might find it hard to make these definitions be useful.

Instead, we should ask first, before defining &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;, What do we want to do with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; supposing that we had them?

One desirable property is that we could perform an &lt;code&gt;if&lt;/code&gt; somehow. We could think of &lt;code&gt;if&lt;/code&gt; as a three-argument function, that takes a boolean value, a &quot;then&quot; value, and then an &quot;else&quot; value:
 if cond A B
Note that if is not a keyword, it is just symbols we're using. We want to define it such that when &quot;cond&quot; is &lt;code&gt;true&lt;/code&gt;
 if cond A B
reduces to
 A
and when &quot;cond&quot; is &lt;code&gt;false&lt;/code&gt; then
 if cond A B
reduces to
 B

To get to this point, we can just think of &lt;code&gt;true&lt;/code&gt; as a function that has two parameters, a ''t'' parameter and an ''f'' parameter, and returns t:
 let true = &amp;lambda;t. &amp;lambda;f. t

And we can think of &lt;code&gt;false&lt;/code&gt; as a function that has two parameters, a ''t'' parameter and an ''f'' parameter, and returns f:
 let false = &amp;lambda;t. &amp;lambda;f. f

Given that, it's simple to define &lt;code&gt;if&lt;/code&gt;:
 let if = &amp;lambda;cond. &amp;lambda;A. &amp;lambda;B. cond A B

Here, the boolean itself (named &lt;code&gt;cond&lt;/code&gt;) is doing all of the heavy lifting: The boolean is passed both A and B. If the boolean is true, it should return A, and if the boolean is false, it should return B. Given our careful definitions of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; this is what will happen.

[TODO: Revise this: For the moment, we should assume some form of lazy evaluation so that the then and else values don't both get evaluated (which could cause an infinite loop)]

====Logical Operations====
Now that we have suitable definitions for true and false, and even an if construct, we can define other boolean operations quite simply. This recalls the previous exercise we did in Java with lessThan and the other relational functions:

not: logical not operation of a boolean value
 let not = &amp;lambda;b.
   if b
     false
     true
You may have noticed by now that the &quot;if&quot; is not actually needed, because we could have cut it out and passed the values on directly to the boolean:
 let not = &amp;lambda;b. b false true
It just a matter of style that we use if, as a way to improve readability.

and: logical and of two booleans if b is true, it returns c, otherwise it returns false, thus, it only returns true when b and c are both true
 let and = &amp;lambda;b. &amp;lambda;c.
   if b
     c
     false

or: logical or operation: returns false only when both b and c are false
 let or = &amp;lambda;b. &amp;lambda;c.
   if b
     true
     c

xor: logical exclusive-or operation: returns true when b and c are different, false otherwise
 let xor = &amp;lambda;b. &amp;lambda;c.
   if b
     (not c)
     c

bool-eq: boolean equality: returns true if b has the same value as c
 let bool-eq = &amp;lambda;b. &amp;lambda;c.
   if b
     c
     (not c)

note that beq could also be written as not (xor b c)

====Integers====
Church numbers -- For all n&gt;=0: The n'th Church number takes in a &quot;zero&quot;
value z and applies a given &quot;successor&quot; function s to that zero value n
times. In algebraic terms, 0 = z (i.e., no applications of s to z are made) and 1 = s(z), 2 = s(s(z)), 3 = s(s(s(z))), ... and so on
 let 0 = &amp;lambda;s. &amp;lambda;z. z
 let 1 = &amp;lambda;s. &amp;lambda;z. s z

successor function: apply the successor to the given numeral one more time
 let succ = &amp;lambda;n.
   &amp;lambda;s. &amp;lambda;z.
     s (n s z)

is-zero?: return true if the number passed in equals zero. This is accomplished by having the zero function be &quot;true&quot; and the successor function be a function that always returns &quot;false&quot;. Thus, true will only be the result when the successor is applied zero times.
 let is-zero? = &amp;lambda;n. n (&amp;lambda;x. false) true

a cute version that uses Currying is: { n (and false) true } which might be easier to understand
 
addition: returns the sum of n and m
 let + = &amp;lambda;n. &amp;lambda;m. n succ m

[TODO: I've also seen this longer form and I'm not sure why it's used:]
 let + = &amp;lambda;s. &amp;lambda;z. m s (n s z)

multiplication: returns the product of n and m, done by applying the &quot;add
n to yourself&quot; operation m times to 0.
 let * = &amp;lambda;n. &amp;lambda;m. m (+ n) 0

natural number exponentiation: raise n to the m power
 let pow = &amp;lambda;n. &amp;lambda;m. m (* n) 1

====Lists====
subtraction is trickier, so we need to define pairs first
 let pair = &amp;lambda;first. &amp;lambda;second. &amp;lambda;bool. bool first second

extract first element of a pair
 let first = &amp;lambda;pair. pair true

extract second element of a pair
 let second = &amp;lambda;pair. pair false

cons, car, cdr: to think of pairs as lists instead
 let cons = pair
 let car = first
 let cdr = second

====Subtraction====
now, back to subtraction: the key idea is to start with an operation that
takes in a pair of numbers (a, b) and returns (a+1, a)
 let next-pair = &amp;lambda;p. pair (succ (first p)) (first p)

now notice that if we start with (0, 0) as a zero, and next-pair as the
successor function, applying the successor function n-times yields the
following:

 times applied   value of pair   value of pair in terms of n
 -------------   -------------   ---------------------------
 n =         0   (0, 0)          (n, n)
 n =         1   (1, 0)          (n, n - 1)
 n =         2   (2, 1)          (n, n - 1)
 n =         3   (3, 2)          (n, n - 1)
 n =         4   (4, 3)          (n, n - 1)

Note, then, that (n next-pair (pair 0 0)) yields the pair (n, n - 1) for
n &gt;= 1, and (0, 0) for n = 0. If we want the predecessor of n to be n - 1 for n &gt;= 1, and 0 for n = 0, we just need to take the second element of this pair! That's exactly how we implement predecessor:
 let pred = &amp;lambda;n. second (n next-pair (pair 0 0))

subtraction: return &lt;math&gt;n - m&lt;/math&gt;; but if that value would be negative, 0 is returned instead
 let - = &amp;lambda;n. &amp;lambda;m. m pred n

====Relational Operations and Division====
now that we have subtraction, we can compare numbers:

is n greater than or equal to m?
 let &gt;= = &amp;lambda;n. &amp;lambda;m. is-zero? (- m n)

is n less than or equal to m?
 let &lt;= = &amp;lambda;n. &amp;lambda;m. &gt;= m n

is n less than m?
 let &lt; = &amp;lambda;n. &amp;lambda;m. not (&gt;= n m)

is n greater than m?
 let &gt; = &amp;lambda;n. &amp;lambda;m. not (&gt;= m n)

equal: are n and m equal numbers?
 let equal = &amp;lambda;n. &amp;lambda;m. and (&gt;= n m) (&gt;= m n)

not-equal: are n and m different numbers?
 let not-equal = &amp;lambda;n. &amp;lambda;m. not (equal n m)

div: given a numerator n and a denominator d, returns the quotient
 let / = &amp;lambda;n. &amp;lambda;d.
   (if (&lt; n d)
      0          ''; -- (n &lt; d)''
      (if (equal n d)
         1          ''; -- (n == d)''
         ''; subtract d from n until the value is &lt; d -- (n &gt; d)''
         (n
           [&amp;lambda;n'.
             (if (&lt; n' d)
                n'
                (- n' d))] n)))

mod: given a numerator n and a denominator d, returns the remainder
 let mod = &amp;lambda;n. &amp;lambda;d. (- n (* (/ n d) d))



===The Y-combinator===
the fixed-point Y-combinator (call-by-value), for implementing recursion
 let fix = &amp;lambda;f.
   [&amp;lambda;x. f (&amp;lambda;y. x x y)] [&amp;lambda;x. f (&amp;lambda;y. x x y)]

Y: alias for fix
 let Y = fix

===Monads: Simulating Storage Locations and Output===

=== Lambda Calculus Extended with Primitives ===
[TODO: Discuss this extension. Typically by extending lambda calculus we make models of programming language. An example is Feather-weight Java, which was used to prove that Java was a secure language (in theory; the model did not take into account implementations, which may have bugs that result in security holes).]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>rqqllfu07aujn9gwwsok5q497p40hxx</sha1>
    </revision>
  </page>
  <page>
    <title>Programming Languages/Functional Languages</title>
    <ns>0</ns>
    <id>40773</id>
    <revision>
      <id>2955144</id>
      <parentid>1543823</parentid>
      <timestamp>2015-05-06T18:10:41Z</timestamp>
      <contributor>
        <username>Ancheta Wis</username>
        <id>274345</id>
      </contributor>
      <comment>/* Functional Programming Languages */ typo</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{mergefrom|Computer Programming/Functional programming}}


== Functional Programming Languages ==

The idea of functional programming is to define rules for the working of the environment and then to let the language figure everything else out.  This contrasts with procedural languages where one tells a machine exactly what to do.  The classic example is a factorial function.  The first step in defining a new function is to handle the trivial cases first.  Factorial of 0, then, would be defined as 1.  The next step is to define non-trivial cases in a way such that they will eventually resolve to the simple cases.  Factorial of n, then, would be defined as n multiplied by the Factorial of one less than n.  In simple cases like this, much more memory and processing time would be commited than if the function had been written using a simple 'for' loop, but functional programming has great uses.  One might use a functional language as a prototype of code --it is in many cases easier write functional code and prove that it will generate the desired result than with procedural languages-- and then optimize it by using procedural techniques.  
Functional techniques can be very efficient at traversing binary trees.

*TODO: Just describe how popular functional languages differ from lambda calculus, importantly side-effects (but mention Haskell)
**Scheme and ML both have built in types, like integers, floats, lists and string
**Scheme has tail-call optimization
**Scheme has multiple argument functions instead of currying
**Scheme uses the functional notation for all constructs, requires the parentheses
**Scheme has hygenic macros
**ML is statically typed with inference
**ML has pattern matching constructs
**ML has only single argument functions, but simulates multiple arguments both with currying and with tuples
**ML uses the lambda calculus notation for function calls (i.e, no parentheses needed), but uses keywords for built in constructs (i.e. it does not use the functional notation for if)

Because lambda keeps references to the variables referenced in the outscope, yet these functions can be stored and called when the calling function has long returned, languages that use lambda have garbage collection.

Combinatory logic is an equivalent theoretical foundation, developed by Moses Schönfinkel and Haskell Curry. It was originally developed to achieve a clearer approach to the foundations of mathematics. Combinatory logic is commonly perceived as more abstract than lambda and preceded it in invention.

* Lexical versus dynamic scope

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>12xk8rgok8ofq5dhcqci2bg1t5eir31</sha1>
    </revision>
  </page>
  <page>
    <title>Programming Languages/Imperative Languages</title>
    <ns>0</ns>
    <id>40774</id>
    <revision>
      <id>1784491</id>
      <parentid>1543827</parentid>
      <timestamp>2010-04-30T19:43:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>/* Imperative Languages */ fixed link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{mergefrom|Computer Programming/Imperative programming}}


== Imperative Languages ==
; Some common examples : C, Algol family of languages, Pascal.
; More on ''&quot;Imperative programming&quot;'': [[Computer Programming/Imperative programming|in wikibooks]] and [[wikipedia:Imperative programming|in wikipedia]].

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>srfvomhxdl2uk3g6usaha3idrfn9z5r</sha1>
    </revision>
  </page>
  <page>
    <title>Programming Languages/Object-oriented Languages</title>
    <ns>0</ns>
    <id>40775</id>
    <revision>
      <id>1496958</id>
      <parentid>1496957</parentid>
      <timestamp>2009-05-11T18:59:26Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Fixed typo.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Object-Oriented Languages ==
* Smalltalk has closures, based on Lisp and Simula67. Squeak is the modern implementation
* Modern OOPLs are Java, C# (both inspired by C++), Dylan (inspired by CLOS), and Python (inspired by Smalltalk).
* Ruby more than Python is an example of a modern OOPL, also Squeak.

; Some common examples : Smalltalk, Java, C#, Ruby

Hybrid languages allow object oriented and classic programming. Examples of such languages are [[Ada Programming|Ada]], OO-COBOL and [[C++ Programming|C++]].

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>c4z5ivr6d04aa1yxqnpmz74ydvq96y1</sha1>
    </revision>
  </page>
  <page>
    <title>Programming Languages/Scripting Languages</title>
    <ns>0</ns>
    <id>40776</id>
    <revision>
      <id>1496961</id>
      <parentid>1149525</parentid>
      <timestamp>2009-05-11T18:59:41Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Scripting Languages ==
These languages are oriented toward single tasks of limited complexity, varying natures, perhaps spanning across networked systems. Scripting languages are chiefly evolved toward the goal of increasing programmer productivity, which can often mean sacrificing efficiency and elegance (because scripts might only be run a couple of times anyway, or only periodically and for short amounts of time). For example, many tedious tasks can be automated, freeing the programmer to do more creative activities. The 'Scripting' derives from the everday occupation of UNIX (and other) system administrators who write adhoc scripts to perform various tasks such as report generation, file copy and installation across a network etc. These scripts vary from a loose collection of commands listed in sequence in a batch file to full programs in scripting languages like Perl. 

Shell scripting may be considered as the first programming activity in this genre leading to dedicated languages embodying these principles. Scripting languages typically have simplified but powerful file-handling constructs, regular expression constructs, associative arrays and other data structures built in.

Python, Perl, TCL, Ruby, PHP, JavaScript

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>9iwf7stabrajt27253nhos5go74mtyx</sha1>
    </revision>
  </page>
  <page>
    <title>Programming Languages/Logical Languages</title>
    <ns>0</ns>
    <id>40778</id>
    <revision>
      <id>1496963</id>
      <parentid>1149523</parentid>
      <timestamp>2009-05-11T19:00:35Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Added category, removed spam, removed reference to bookshelf.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Logical Languages ==
[TODO: Talk about Prolog and Icon]

; More on ''&quot;Logic programming&quot;'' : [[wikipedia:Logic programming|in wikipedia]].

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>1vxzetriefb9y8dfccrgwqnxpkopd5s</sha1>
    </revision>
  </page>
  <page>
    <title>Programming Languages/Aspect-oriented Languages</title>
    <ns>0</ns>
    <id>40779</id>
    <revision>
      <id>1543825</id>
      <parentid>1496965</parentid>
      <timestamp>2009-06-22T18:40:02Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>Added merge notice from [[Computer Programming/Aspect oriented programming]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{mergefrom|Computer Programming/Aspect oriented programming}}


== Aspect-Oriented Languages ==
[TODO: talk about AspectJ]

; More on ''&quot;Aspect-Oriented programming&quot;'' : [[Computer programming/Aspect oriented programming|in wikibooks]] and [[wikipedia:Aspect oriented programming|in wikipedia]].

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>dp22wkcgbtjqc8bhev97br34fd89pgb</sha1>
    </revision>
  </page>
  <page>
    <title>Programming Languages/Domain-specific Languages</title>
    <ns>0</ns>
    <id>40780</id>
    <revision>
      <id>1496967</id>
      <parentid>1149519</parentid>
      <timestamp>2009-05-11T19:01:19Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== Domain-Specific Languages ==
[TODO: Talk about [[w:SQL]], [[w:Lex]], [[w:Yacc]], and answer why these languages are so commonly used, even though general purpose languages can do the same.]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>27je02rmhjn5f5beqarx6hc5mzlw6cx</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Japanese</title>
    <ns>1</ns>
    <id>40781</id>
    <revision>
      <id>2643157</id>
      <parentid>2619436</parentid>
      <timestamp>2014-04-28T17:09:57Z</timestamp>
      <contributor>
        <username>Galzigler</username>
        <id>629569</id>
      </contributor>
      <comment>/* Topics for the appendix */ new section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{WikiProject Languages}} 

{{archive box|
* [[/Archive 1]], 2005 &amp;mdash; 2007
* [[/Archive 2]], Oct. 2007 &amp;mdash; Oct. 2008
* [[/Archive 3]], Oct. 2008 &amp;mdash; Nov. 2008
* [[/Archive 4]], Nov. 2008 &amp;mdash; Aug. 2012
* [[/Deletion Archive 1]]
see also [[Japanese/Discussion]]
}}

== Wow. This is a mess ==
No offense to those involved but this book is a total mess. Any one think I would be distracting from this book too much if I started a new book? More along the &quot;quick and dirty&quot; learning thing. This book seems like if it is ever pulled together (its pretty scattered right now) it will be super intensive and scary for learners who just want the basics so they can communicate. Thoughts? [[User:Nesnad|Nesnad]] ([[User talk:Nesnad|talk]]) 16:20, 9 December 2007 (UTC)
:I agree. The chapters on the contents page are all over the place, and it would be very hard for a beginner to find their way around the book. In my opinion, it requires a major overhaul. [[User:Helpfulstuffnz|Helpfulstuffnz]] ([[User talk:Helpfulstuffnz|talk]]) 05:01, 23 December 2007 (UTC)

:: Ditto! But I'm not sure where you were going with your overhaul, Helpfulstffnz.
:: What's the difference between a &quot;basic&quot; and a &quot;starter&quot; lessons?
:: I think we should move away from the numbering of lessons, and towards naming them according to contents. An electronic book doesn't suffer the same limitations as normal books. Pages can be interelinked and content accessed in a non-linear fashion. That isn't to say that we can't have a linear structure, but naming pages &quot;Lesson 1&quot; is, I think, of little use and possibly a hindrance to its development.
:: While the current state seems to be partly due to people trying to fix this book by restructurning, but not following through, I'm going to suggest we do just that once more.
:: How are these for ideas to simplify the process and reduce the risk of pitfalls:
::# Start the new book at [[Japanese]], moving the current content to [[Japanese/Cover]].
::# Use [[Japanese/Contents]] as a scratch-pad to list all of the material available (and boy, there's a lot).
:: --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 05:05, 10 June 2008 (UTC)

I'm tired of people revising this book.  I think it's been revised over four times already.  Everyone sees that it should be different in someway, and they totally revamp the page for a few days, and then stop.  The latest person to start restructuring this book won't be the last.

As for removing linearity, this is rather pointless.  Unless the desire is to make this a phrasebook, it's difficult to teach a language or learn a language without building on subject points that you've learned from prior lessons.  Removing &quot;Lesson 1&quot; and keeping &quot;Aisatsu. (Greetings)&quot; doesn't make a difference to the development.  The hindrance is the flow of &quot;Lesson 1&quot; to &quot;Lesson #&quot; from Starter to Advanced.  I've been meaning to change this format to &quot;Lesson 1&quot; to &quot;Lesson N&quot; for each section rather than across the board.  A book discussing the language in any detail would need linearity so that each chapter/lesson/whatever is a building block to the next lesson.

If there's going to be multiple sections, there needs to be a complete lesson plan for each section.  If this is to turn into a Japanese phrasebook as some people have suggested, the title should be changed as such, or a bookshelf should be made like the English bookshelf.  The fact that there's no lesson plans remains a problem.  I suppose the JLPT could be used as a guide.

As for the meaning of the different sections, I believe the &quot;Starter&quot; section was used as a phrasebook.  It's probably meant for tourists to get around slightly in Japan with minimal understanding of the language.  I understood Basic as Japanese 101 - or for people who are really interested in learning Japanese on their own.  I didn't like the previous suggested syllabus for Basic, so I started to make a new one, which can be seen here - [[User:Retropunk/Japanese_Cirriculum]].  Whether another approach is decided, I really don't mind.  I rather not see this book changed into YAPB (yet another phrasebook).   --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 06:37, 10 June 2008 (UTC)

: I believe that, to really be useful for people with little experience learning languages, the lessons should follow a &quot;bite-sized&quot; approach. This means basically: 
# grammar sections mustn't be longer than 1/2 of a page; only one point of grammar per lesson
# no more than 15 new words per lesson
# most vocabulary for beginner lessons must be taken from among the 500 most common words and none from beyond the 1000 most common words
# no vocabulary that is introduced through dialogs or exercises without being taught in the vocabulary list
# there may be an optional vocabulary section with words that will interest only part of the students, for example country names and professions
# plenty of exercises, remember that people can always skip them if they are comfortable with the material already, but they can't invent new exercises if they are still confused

: It is possible to create easy lessons without following these rules, but for people not used to writing lessons they are a very good guideline. Also, the European Reference Framework for Languages may be a very good tool in defining Beginner, Intermediate, Advanced series and so on, as it clearly states what students should know and should be able to do after completing each level towards fluency. Most language tests in Europe are based on this framework now.

: Just my two cents. [[User:Junesun|Junesun]] ([[User talk:Junesun|talk]]) 07:25, 10 June 2008 (UTC)

:: I agree with your points, Junesun. Short and concise, they should maybe be a start replace the overly long [[Japanese/Contributor's Guide]]. Maybe you could have a look and suggest something on the [[Talk:Japanese/Contributor's Guide|talk page]].
:: The [[w:Common_European_Framework_of_Reference_for_Languages|CEFR]] you mentioned might be a good tool. We could consider creating categories to reflect these. Alternatively we could try to use some sort of JLPT sorting system. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 08:22, 10 June 2008 (UTC)

: I feel your pain. The current situation we're faced with is that the project is in disarray and goes nowhere with it's sudden bursts of activity followed by periods of inactivity. Starting anew or going with the old won't fix anything since, as you said: &quot;Everyone sees that it should be different in someway&quot; and each revamp creates a whole new set of redundant material. One of the ways we can reduce the damage is by modularising the book and making it easy for new editors to add their content without having to reinvent the wheel.

: Moving away from the &quot;Lesson n&quot; convention will allow users to order existing material in their own way. Yes, users will need some sort of path to trac, but that path doesn't need numerical naming as one moves from one to the other using hyperlinks, not modifying the URL.
: Several users, including yourself, have come up with their take on restructuring pages (e.g. [[User:Balloonguy/Japanese|Balloonguy]], [[User:Telamon/Japanese|Telamon]], [[User:Helpfulstuffnz/Japanese|Helpfulstuffnz]], [[User:Mkn/Japanese|Mkn]] and [[User:Retropunk/Japanese_Cirriculum|Retropunk]]). Balloonguy and Helpfulstuffnz seem to have tried to link to existing pages and make some sense of them. I think that in similar vein we can create parallel versions of structuring the contents.
: While not necessarily useful for users and certainly not a goal in itself, I think it's good for the future of this book, allowing people to draw on existing material rather than having to recreate it. Until we have enough contributors agreeing on a common vision, we need a way to turn these scattered contributions into a synergic collaboration.

: Certainly not all content can be used in parallel, but things like introductions and pages on specific grammatical points can be shared. The main problem (and point of proliferation) seems to be on the conversational part where each editor has their own view of what is a useful approach. I think it's fine to let users add their own flair on this, but simplifying the process of peiecing other modules into their book will benefit everyone.
: Currently there is no path or curriculum &amp;mdash; only bits and pieces of past attempts. The future of this book is rather bleak if we continue on this practice of rebuilding things from the ground up. I see it as a much better approach to start from what we have, make all of it accessible (yes, all of it, even the crappy stuff) and foster rewrites and contributions that don't follow a rigid curriculum.
: I'm not advocating the abolition of structure or curricula. I'm arguing for making them optional; a support rather than a shackle. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 08:22, 10 June 2008 (UTC)

:: So, you're wanting link to all different grammar points that have some relevance?  

:: For example, わたしはロバートです。

:: Have grammar points going to the copula, the pronoun, and the topic marker?  Did you plan on doing this like a glossary, or did you plan to link to another lesson? It may be because it's getting a little late that I don't fully understand, or I may just need to see your concept on here to fully understand.

:: I'm not sure if I agree with Junesun's ideas.  One grammar point per lesson? Talk about a lot 'lessons' that can be generated with that.  And such a small vocabulary?  I believe the average student learning Japanese will learn around 800-1500 for their &quot;Elementary&quot; course.   They also learn around 300 Kanji.  Yay for polite and plain versions.  As for the other points, I totally agree with them.  [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 09:12, 10 June 2008 (UTC)

::: I wasn't quite thinking of quite such aggressive interlinking. In fact, I didn't plan on doing much at all as far as specific lesson structure goes. I was more interested in detaching things in a manner that would make it easier for individual editors to locate material they are interested in.
::: I'm playing around on the [[Japanese/Contents]] page, listing many of the pages that comprise this book (though not part of the previous contents page having been deprecated through previous revolutions). I'm interested in collecting similar pages together to see what we have available. Rather than hiding lessons like &quot;hiragana&quot; inside a series of &quot;lesson n&quot; I'd like to have a collection of
:::* [[Japanese/Pronunciation]]
:::* [[Japanese/Introduction/Reading Japanese]]
:::* [[Japanese/Lessons/Lesson 6]] &amp;mdash; Hiragana Lessons
:::* [[Japanese/Kana Chart]]
:::* [[Japanese/Japanese writing system]]
:::* [[Japanese/Reading Hiragana]]
:::* [[Japanese/Kana]]
::: for users and editors to choose from and modify as they see fit; refactoring content to reduce redundancy and increase reusability through modularisation. This is, of course, more difficult to achieve with conversation lessons (and grammar to a lesser extent) but these will already have fewer contributors and thus isn't as serious an issue.

::: So, how does one take these small bits and turn them into a book? Firstly, I don't think we have to string every page here into a single linear narrative. We can create seperate such paths, each with it's own topic.
::: Secondly, we can have parallel narratives that share content. I really like the [[Japanese/Practical Lessons]] but that page has been dead since September 2006. The kana lessons it links to are however much older, have more development and aren't subject to that any particular lesson plan.

::: I understand you may seriously dislike my proposition since in a way it brings us further from a single Japanese book. While I too would like there to grow a good book out of this, I'm more interested in making this as useful a resource as possible. So far, all attempts to build something on the ruins have failed and unless we see a fundamental change, no book will grow out of this mess while it's being driven by individuals who only survive a little while before burning out. Let's break this up and let the pieces fight for popularity. Let's collect the usable pieces from the rubble and create a little market for users to easily identify pages of interest and contribute where they can.
::: With incremental improvements we can renovate the dingy shacks and identify the redundancy in function. While this will not yield a consistent plan, any attempt to start with the plan and build from there has failed. Let's toss the plan, build up the bits and string them together later.

::: Once we have a better base to build on, we can merge these and concentrate on fuller narratives. As a first step I think we should find the pages that we can share, make them easy to find and then allow users to develop their own linking system through them. If we can foster collaboration even while there is respectful disagreement in how to best chain these pages toghther, we can move away from chaos to create a more accessible resource.

::: In conclusion, I really appreciate your comments and hope you'll give this suggestion critical consideration. I don't propose that I've thought every angle through, but think this is a strategy we can use to build something on. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 10:51, 10 June 2008 (UTC)

:::: One of the things I'd like to do is collect the various closely related or redundant pages together so as to not toss out the hard work or previous editors. Continuing with my example above with the various hiragana pages, there are a couple that are very similar, but still have lived parallel lives. I don't see that there is any need for this redundancy. If there is, both pages would benefit from seeing the others' perspective.
::::* [[Japanese/Grammar Lessons/Chapter 0/Hiragana group ka]]
::::* [[Japanese/Kana/Lessons/Hiragana/Lesson 2]]
:::: At [[Japanese/Contents#Structure/Lesson Plans/Syllabus]] I've gathered a few pages that touch on the matters regarding the structure or contents of lessons. Some of these present a lesson plan while others are more collections themselves.
:::: I found [[Japanese/Reference]] closely relates to what I've ended up using on [[Japanese/Contents]]. I suggest that we use something similar to categorise the available content. One thing that is missing from that page and constitutes much of the available content is a category with conversations introducing vocabulary and illustrating grammar.
:::: I think the next step is to go through these, check redundancies and identify incompatible but intelligent approaches. From there we can start construct lesson bundles. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 17:55, 10 June 2008 (UTC)

：May want to invite a few others.  As you have noticed, people normally stay around a few weeks and jump ship, but maybe some people still linger around.  [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 09:27, 10 June 2008 (UTC)

:: Who might? I? Invite to this discussion?
:: I left messages on [[User talk:Retropunk]], [[User talk:Balloonguy]], [[User talk:Helpfulstuffnz]], [[User talk:Nesnad]] and [[User talk:Kadamczy]]. Do you have anyone else in mind? --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 10:51, 10 June 2008 (UTC)

::: Add anyone who modified the pages in the last couple months, [[User talk:WongFei]], [[User talk:Cysaki]], [[User talk:Luis Sergio Moura]] are a few more that may be interested.  You could also try the Yahoo group, but it's been rather dead.  [[Special:Contributions/76.22.11.133|76.22.11.133]] ([[User talk:76.22.11.133|talk]]) 13:50, 10 June 2008 (UTC)

:::: Done. Also: [[User:Shinjitsu]], [[User:Ian78]], [[User:Ikarsik]], [[User:Zoey473]] and [[User:Hayson1991]]. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 15:07, 10 June 2008 (UTC)

::::: Thanks for telling me about this, I'm still just a novice learning Japanese, so if you want to use me as a guinea pig to see how i think learning this would be I'm fine for that, or if you need me to do research about how the language is in current use, different definitions about how it works, or stuff in general thats just looking stuff up and finding the information I'm good, just send a message about when we'll start doing things, or if like I said, you need me to see how learnable the page is just send a message or a link of some sort [[User:Cysaki|Cysaki]] ([[User talk:Cysaki|talk]]) 01:46, 11 June 2008 (UTC)

:::::Thanks also for telling me about this. Just to make sure I understand correctly, are you proposing to create self-contained modules so that readers can follow their own [[v:learning path|learning path]], similar to the wikiversity [[v:Topic:Web design|Web design learning projects]], or are you proposing to modularize the content to clean up the book so that it is easier to continue forward and create a unified book?--[[User:Balloonguy|Balloonguy]] ([[User talk:Balloonguy|talk]]) 20:34, 11 June 2008 (UTC)

:::::: I'm suggesting the latter: modularising so that current and future editors can more easily build upon existing material.
:::::: The &quot;learning path&quot; idea is very interesting, though. Furthermore, we should perhaps be looking to integrate better with [[v:Japanese]]. Some of the lessons have excercises with answers. Perhaps these belong on Wikiversity? --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 02:27, 12 June 2008 (UTC)
I think a language wikibook should start by teaching the reader the alphabet, grammar, then vocabulary, then lastly by example. The way this book works, it's very confusing. The reader does not even understand how the は particle works and is told to read わたしはロバートです... With no sense of which part of the sentence is which, the reader would be very confused. --'''''&amp;nbsp;[[User:Hayson1991|&lt;span style=&quot;font-size:150%;color:#00FF00&quot;&gt;H&lt;/span&gt;]][[User talk:Hayson1991|&lt;span style=&quot;font-size:125%;color:#00CC00&quot;&gt;A&lt;/span&gt;]]&lt;font color=&quot;#AAAAAA&quot;&gt;YSON&lt;sup&gt;&lt;u&gt;1991&lt;/u&gt;&lt;/sup&gt;&lt;/font&gt;''''' 15:06, 12 June 2008 (UTC)


== How much to teach (was: what a mess...) ==

As the discussion goes into many directions right now, let's make a separate discussion point for this. I still believe that 15 new words and one grammar point covering no more than half the page should be the guideline. Yes this will translate into a lot of lessons: assuming 500 words for the elementary course (not counting optional ones), this means 33 lessons for the elementary level, 25 at the very least. However, I believe it will translate into a much better course:
* you have a much better idea of how much to teach per lesson - unlike other courses, you won't wind up having taught all the elementary grammar after 10 lessons and still be 400 words behind on the vocabulary target
* plenty of opportunity to include exposure to the Japanese language (comparatively more texts/dialogs per taught item) and exercises
* each lesson will correspond to two or three hours of study, not 40 like some textbooks assume
* teachers can complete lessons faster and there will hardly be any half-finished material lying around
* students can complete lessons faster and won't have to keep coming back to the same lesson over and over again, as high school classes do; moving on quickly is motivating and it's better in that each session will leave students with whole knowledge, nothing half-explained half-understood; whole knowledge will not be forgotten as easily

As for burnout among lesson writers: I believe this can be prevented if this is a community effort with several people working together and commending each other. For this, a lesson plan would be a good idea, so that several people can work at the same time and there is more overview of what was/is to be taught when. Otherwise I guess the development would have to be linear, everybody waiting till the previous lesson is finished to see what and how much is covered. Of course the whole idea of a community effort relies on people agreeing on a common methodology, target audience and goal for the lessons.

[[User:Junesun|Junesun]] ([[User talk:Junesun|talk]]) 14:43, 10 June 2008 (UTC)

: I really don't have a problem with making one grammar point per lesson.  However, I think it should probably be decided on the target audience before we have vocabulary restrictions.  If it's decided to make a bookshelf, then I can go with the 400 words.  Just for future reference, the [[JLPT Guide]] has over 600 words for JLPT4 (or basic Japanese.)  Most JLPT guides will suggest learning around 800 for JLPT4.  [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 06:13, 11 June 2008 (UTC)

:: I guess that small lessons won't be such a hurdle. One can, after all simply go through them faster if one wants. Smaller &quot;lessons&quot; would also be simpler to build (especially collaboratively). --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 16:43, 12 June 2008 (UTC)

::: I added the beginning of a curriculum to [[User:Retropunk/Japanese_Cirriculum]] as he seemed to have left space for me there ;) Let me know what you think. [[User:Junesun|Junesun]] ([[User talk:Junesun|talk]]) 09:41, 2 August 2008 (UTC)

== Categorisation ==

Thanks, Retropunk, for finishing the sorting. The list of pages we started with were, however, taken from [[:Category:Japanese]] not [[Special:AllPages/Japanese]] which was a mistake on my part. Sorry. We may be missing some pages. I would suggest just re-doing it, but don't want to piss anyone off. I guess this is good enough.

Anyway, how best to treat these. I've come up with a categorisation scheme with four overlapping categories (or topics) and three &quot;stand-alone&quot; ones.

'''Overlapping categories'''
* Reading &amp; Writing
* Vocabulary
* Phrases
* Grammar
Each of these overlaps with their neighbour. While ''kana'' is under &quot;Reading and Writing&quot;, ''kanji'' and ''reading practice'' falls under both &quot;Reading and Writing&quot; and &quot;Vocabulary&quot;. Vocabulary and phrases will always touch on one another as will phrases and grammar.

How to present these overlapping categories, I don't quite know. 

'''Stand-alone categories'''
* Introductions
* Linguistics
* Dialects

'''Links'''
A notable absence is:
* Links and resources
I don't think we should have a page with links. I don't think many ever go to a links page until they have exhausted themselves searching a site. We should aid the user by linking to external resources at the point where they would normally go to find these.&lt;div style=&quot;float:right; border: thin solid green; border-left: 3px solid green; width: 14em; margin: .5em; padding: .5em;&quot;&gt;[http://ichi2.net/anki/ Anki] is flash-card software that can help you memorise kani&lt;/div&gt;
For example, rather than collecting software and links at [[Japanese/Software]] and [[Japanese/Internet Links]] we should link to these at points of interest. Kanji flash-card software in the Kanji part and online texts in the reading practice. This can be done either in sections at the bottom of a page, or in special external-link/further information boxes.

'''Lessons'''
The lessons would be kept seperate from this scheme since they will often cover all of it in a single lesson. Over time, the lessons will hopefully build on these and take the front stage, possibly pushing these categories out of sight.

As for sorting the lessons out in order to get an overview of what we have. I think we should rather sort them by level and style than by how much work has been put into them.

: Reading practice shouldn't really be tagged under vocabulary.  While you may learn vocabulary while reading, the focus of a reading practice is not vocabulary, but language comprehension.  The current reading practice need to have them overhauled.  Removing the vocabulary sections and having just a translated section.  I don't see how Kanji can be seen as reading practice.  While two pieces of Kanji can be made to a different word, it's still vocabulary.  In the Kanji pages, we can state the meaning of each Kanji or word (since Kanji and Kana can make up a word.)
:Points of interests for the links sounds like a good idea.
:The current categorization of the lessons is not my intended end result.  I did not know what to do with a majority of them, and since they encompassed way too much, I just threw them under stages of development.  We may need to wait for others to join (if any more do so), and see if they agree with Junesun's idea.  I suggest learning more vocabulary than she suggested, but if the majority of people would like to see less, I'm willing to do that.  --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 11:27, 12 June 2008 (UTC)

:: I put &quot;reading practice&quot; under &quot;Vocabulary&quot; because for comprehending the text one needs not only to be able to read it, but also the vocabulary to understand it. I have a feeling that we may simply understand what constitutes reading/writing differently and a semantic debate is maybe not the best use of our time.
:: Kanji, however, is still under the overlap. I guess we could put it under &quot;Vocabulary&quot; for simplicity (where it belongs far better than &quot;Reading/Writing&quot;).
:: '''Lesson categorisation:''' I wasn't sure how to sort them either (which is why I left them 'till last). I'd say we should just leave them be in one long list and let people deal with them as they please. Maybe we could string them together into versions (like the &quot;Konnichiwa&quot; lessons etc.). Each one could be a lesson plan on its own. Contributors can then compare and choose which they like best and contribute there, getting ideas from the other. Possibly even merging content where possible. Different learning paths could then start sharing pages and eventually merge if viable.
:: '''Wikiversity:''' Again, I do think we need to think about how to interface with Wikiversity. It sounds really tempting to just settle for small booklets that are strung together into a course on Wikiversity. Tempting because it seems so much more do-able than to create comprehensive wikibooks on this topic. However, keeping everything here at Wikibooks might make more sense in order to better mold the content to the lesson arch. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 15:15, 12 June 2008 (UTC)

== Removal Suggestions ==
=== Pages ===

=== Templates ===
* {{tlx|Ruby-2}} I've just deprecated this. It's basically a shorthand for two {{tlx|ruby}} but saves only one or two keystrokes keystrokes and has no benefits when being displayed. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 20:09, 23 February 2010 (UTC)

=== Redirects ===

== Levels ==

I was reorganising [[Japanese/Contents#Lesson pages|the lessons]] according to levels. I made &quot;Introduction&quot; for elementary stuff like reading and pronunciation (stuff you sort of have to learn before diving into anything juicy), and then &quot;Beginner&quot; and &quot;Intermediate. I wasn't quite sure where to place the boundary between the last two. Maybe once students are able to engage in a short original conversation? Maybe we need finer levels.

Anyone care to offer their suggestions? --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 00:46, 2 July 2008 (UTC)
:From the previous attempt to overhaul this book, the group came up with [[Japanese/Practical Lessons/Syllabus|
this syllabus]]. It is pretty comprehensive. --[[User:Balloonguy|Balloonguy]] ([[User talk:Balloonguy|talk]]) 20:01, 2 July 2008 (UTC)

:: Thanks. Looking at it, it seems that most are taking the same approach. I sorted the [[Japanese/Contents#Structure.2FLesson_Plans.2FSyllabus|Structure/Lesson Plans/Syllabus]] section a bit, leaving only the really useful pages, moving the others into the lesson sections. If we can now merge these or choose one and toss the others, we're well on our way. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 03:07, 4 July 2008 (UTC)

: I believe using JLPT as a guide would be a good idea.  Here's an extensive guide [http://www.jlptstudy.com/] using the JLPT Test Content Specification book as a source.  The grammar, vocabulary, and kanji competency may be integrated into any conversation difficulty you wish to pick (e.g., short concise sentences to long narratives.)  So, JLPT 1 - Beginner, JLPT 2 - Intermediate, JLPT 3 - Advanced, JLPT 4 - Near-Native.   [[Japanese/Practical Lessons/Syllabus]] is a good starting point, but it really needs a grammar point list, which I think the JLPT would suffice.  --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 08:32, 4 July 2008 (UTC)

: more inspiration for grammar points 
:* http://www.e-japanese.jp/grammar.htm
:* http://www.csse.monash.edu.au/~jwb/j_gram_summ.html
:* http://www.guidetojapanese.org/
:* http://kimallen.sheepdogdesign.net/Japanese/
:* http://www.jgram.org/
:* http://maktos.tripod.com/jip.html
:* http://mercury.ecis.nagoya-u.ac.jp/WebCMJ/contents.htm --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 08:54, 4 July 2008 (UTC)

== Vocabulary ==

As I was looking through the list on [[Japanese/Vocabulary]] I found pages that are just that: pure vocabulary list. The problem with those list, such as [[Japanese/Vocabulary/Government and Politics]], is that they are competing with the category list formed by wiktionary's [[wikt:Category:ja:*Topics|Category:ja:*Topics]], and in the case of the example above, [[wikt:Category:ja:Government|ja:Government]]. So should they be deleted?--[[User:Balloonguy|Balloonguy]] ([[User talk:Balloonguy|talk]]) 22:03, 4 July 2008 (UTC)

: Duplicating in some ways, but maybe not really competing. The Wiktionary lists seem to be listed according to their Japanese entries. [[wikt:Category:ja:Colors]] is a good example. There, the novice will have a hard time looking up the words he's interested in. I think these two can co-exist; the categories on Wiktionary for grouping Wiktionary entries (and for populating lists here on Wikibooks), and the Wikibooks Vocabulary lists as (possibly trimmed) English indexed references for language learners. Cross-linking would be highly useful. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 00:20, 5 July 2008 (UTC)

: The categories on wikt are good for Japanese-&gt;English if you already know the category.  They're not good for English-&gt;Japanese.  However, unlike the Japanese portion, there are no English categories to the granularity as the Japanese words.  There may be another way of connecting the two lists, but I currently do not know of any.  --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 03:50, 5 July 2008 (UTC)

:: Precisely. Since we don't really need much more than lists of terms, indexed by English, to help students of the Japanese language build up their vocabulary and look up terms to practice their phrases and grammar points, I think we should make do with linking the Japanese words in the vocabulary lists to their entries in the English Wiktionary. It would also be helpful to link from topic pages in the vocabulary section to their relevant categories to make it easer for editors to repopulate the vocabulary lists and get an overview of what terms are available on Wiktionary. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 13:24, 5 July 2008 (UTC)

I split up the &quot;Date and time&quot; on the [[Japanese/Vocabulary|Vocab]] list to [[Japanese/Vocabulary/Numbers/Time|Horary Time]] and [[Japanese/Vocabulary/Days | Days]].  However I'm wondering if the list should be merged together as one large list or kept as I have them now.  Let me know what you think.--[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 08:43, 13 July 2008 (UTC)

: I think it could be useful to keep these separate. They are different enough and I think short vocabulary pages are better. We can add relevant-pages links to these for cross-reference.
: Minor detail suggestion: How about calling stuff like [[Japanese/Vocabulary/Numbers/Time]] (Horary Time) simply &quot;Time&quot; while [[Japanese/Vocabulary/Days]] could be &quot;Date&quot;. I think that's close to the colloquial meaning as few really think of days, months and years as time except in a very abstract sense. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 19:12, 13 July 2008 (UTC)

I believe I have &lt;s&gt;all&lt;/s&gt; most of the vocabulary completely moved to the template format.  Thank god for regex editors.  The pages still need to be cleaned of translation errors, misplaced text, and deprecated text and the alike.  We may also want to merge some things.  While I guess we could add superfluous text like the [[Japanese/Vocabulary/Banking]] on the Chemistry and Biology pages, I don't see the point.  Be it as it may, we could always split them again if they get too gaudy.  --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 04:59, 16 July 2008 (UTC)

=== Interlinking ===
I made [[Template:Japanese related vocabulary]] and added it to a few pages ([[Japanese/Vocabulary/Biology]], [[Japanese/Vocabulary/Chemistry]], [[Japanese/Vocabulary/Animals]], [[Japanese/Vocabulary/Sushi]], [[Japanese/Vocabulary/Food and Drink]]). It's a rather ugly template, but what do you think about this approach? --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 04:15, 3 August 2008 (UTC)
: Adding vocabulary sections of interest seems okay to me, but be careful with entering the template to the pages.  Some pages have TOCs, so if you're not careful, you'll have vocabulary above the TOC.   Entering &lt;nowiki&gt;__TOC__&lt;/nowiki&gt; before the vocabulary should fix it, or you can make the vocabulary a section.  An example of this is on the [[Japanese/Vocabulary/Dates]] page, which I just pushed the vocabulary down a level.  [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 21:15, 3 August 2008 (UTC)

:: Actually, I did that on purpose. I don't think it's necessary to have the TOC on top of everything. Not that there is any need to have a list of terms above it, either. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 00:55, 4 August 2008 (UTC)

: {{tlx|Japanese related vocabulary}} has now been deprecated in favour of {{tlx|Japanese related}}. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 04:10, 12 April 2009 (UTC)

== Broken sound files ==

There seem to be two main authors to the [[commons:Category:Japanese pronunciation]] sound files on Commons; [[commons:Special:Contributions/Marsian]] and [[commons:Special:Contributions/Spacecat2]]. When I play the Spacecat2 files, the beginning seems to be cut off. Can anyone confirm this? --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 03:42, 1 October 2008 (UTC)
: I would be wary of the Spacecat2 sound files.  I was going to use his files, but they screamed copyright infringement to me.  --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 06:14, 1 October 2008 (UTC)

:: What gives you that impression? Spacecat2's uplaods seem to have two voices, one male and the other female. They're about the same age so it seems likely that they are by a couple that has added voice recordings to articles they felt would benefit from them.
:: Do these play OK on your computer? I don't find these as high a quality as Marsian's, but we have to work with what we have. If the files are corrupt, however, then we should consider deleting them. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 13:09, 1 October 2008 (UTC)

::: They sound fine on my computer.  Make sure you have a player that handles OGG files, or they may sound garbled/cut-off.    I'll see if I can get anyone on Lang-8.com to produce a wav, or some other sound file, for us.--[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 05:04, 7 October 2008 (UTC)

:::: You'll find that both users whose contributions I linked to upload OGG files. Sorry to be a bother, but just to make sure that we're on the same page: Do these files, for example, sound OK, or are they cut off at the beginning?
::::* The sound of &quot;ら&quot;/&quot;ラ&quot;: [[Image:Ra (Japanese).ogg]]
::::* Nikon: [[Image:Nikon.ogg]]
:::: I've only played the files with mplayer (using the FFmpeg/libavcodec audio decoder) but since Marsian's files play fine, suspected that this might be a problem with the files, rather than my player. Suspicion is a far cry from certainty, and thus I brought it here. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 16:07, 7 October 2008 (UTC)

::::: I used mplayerc, and it did cut it off.  When I used winamp and Cortado (Java) with Firefox, they sounded fine.--[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 05:49, 8 October 2008 (UTC)

== Grammar List Points ==
I've started a list of grammar points for JLPT4.  This are by no means a progressive list.  This would need to be addressed at a later time, but I'm just taking talking points and putting them in a list such that we can really start a syllabus/lesson plan.  There will be some things that absolutely need to go first before others (copula, topic/subject markers, question markers before adjectives, conjuctions), and this would probably need to be more collaborative than a single person.  I'll probably move the points to separate pages, but for now you can review it at [[User:Retropunk/Japanese_Curriculum#JLPT_4]].  Please put any suggestions on the talk page.  If you see a mistake, fee free to modify it.  --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 21:52, 19 October 2008 (UTC)
: I think I'm done with this list.  It's still not progressive to be used as a syllabus.  The list is derived from the Test Specifications for the JLPT test.  As we clean up the actual page, we should look to see how we would like to make a syllabus, or if we should even bother (i.e., we could use a group of topic points and let contributors use those, or we use a strict step-by-step syllabus.)  
:The group of topic points would allow extreme flexibility, but if other information is dependent on the topic point (e.g., you need to know desu, topic particle and such), this group of information or points may not have been covered yet.  There is also a problem with no continuity.  However, there could be links for each topic point to multiple lessons.  People can pick a point they're interested in, and find multiple lessons/entries on it.  It's easy for contributors to add topics.
: If we go with a strict syllabus, we're forced to decide what information should go before other information.  This can be a tough task and is very subjective.  It can be difficult for users to add topics as they need to incorporate whatever amount of topics into one lesson.  However, there's a defined progression list.  People can skip a portion of the list if they're not interested.  Nothing is really forcing contributors to follow a list as they can just go to another lesson, and they could just do a portion of the lesson if defined well enough.
: Let me know what you think.  If you know pros, cons for either side.. There may even be a solution where we can use both.  Let's discuss them. --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 17:43, 30 October 2008 (UTC)

:: I like the idea of mainaining this list with links to relevant lessons. This also allow for multiple, parallel learning paths. It would, furthermore be a great resource for reworking existing material (if one were to link to these as well.
:: Also; how about moving this to the existing [[JLPT Guide]]? It could be a very useful addition to that poor book. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 12:11, 16 November 2008 (UTC)

== Main page colour scheme ==

As Retropunk has tactfully touched on, the colour scheme on the [[Japanese]] page is dreadful. I've never been terribly good at coming up with these. Anyone have any ideas to make this somewhat more aesthetically pleasing? --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 16:35, 17 November 2008 (UTC)

: I've done [http://en.wikibooks.org/w/index.php?title=Japanese&amp;diff=1349870&amp;oldid=1267830 a bit of work] on this and am fairly happy with the result. Comments and critisism welcomed. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 15:43, 2 December 2008 (UTC)

: I think the new color scheme is much better.  -- [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 07:21, 10 December 2008 (UTC)

== Categorising grammar points ==

:''This was brought up in a topic that is now discussed on [[User Talk:Retropunk/Japanese_Curriculum/Outline]]. Since it is relevant not only to the outline itself, I'm adding this here. I apologise for any confusion.''

I'm not sure how best to implement these &amp;mdash; or even whether to do so at all. If we are to go down that road we could set up a hierarchy of categories. They would all have to have the akward &quot;Japanese_&quot; prefix as not to impose on other book categories, but that's mostly an aestethic rather than a functional hurdle. Pages could then be placed in the categories relevant to the grammar points they contain. That way users can look up other lessons that also cover those points.

I'm not sure it would be a good idea to set up this hierarchy before writing the lessons. I'd advocate an ad hoc approach where we use cateogries to connect the material we have as it gets added.

Another way is to just interlink those lessons directly. This requires some more work since that method links pages directly to one another. On the other hand these links can be made more prominent by placing it in a nice box to the side, given annotation and one could select the most useful pages to save readers having to go down dead ends. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 04:28, 18 November 2008 (UTC)

Whether a progressive verb category gets made first and the lessons last, or a lesson with a progressive verb gets generated and the category afterwards, it doesn't matter to me. --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 09:19, 23 November 2008 (UTC)

== Keep it up! ==

A corner of encouragement. Clearly this book isn't finished, but the contributors are already making it easier to &quot;leaf&quot; through. I think you're all wonderful. I am rooting for you. --[[Special:Contributions/74.130.244.188|74.130.244.188]] ([[User talk:74.130.244.188|talk]]) 03:56, 19 November 2008 (UTC)

I wanted to encourage you guys, too! I've been looking over this for about a week and while it is disjointed, I think you all are doing a good job. This book is very helpful to use in addition to other self-learning guides. [[User:Castrophicus|Castrophicus]] ([[User talk:Castrophicus|talk]])

: Many thanks for your words of encouragement. Seeing people use this book helps to both motivate and help focus on the most useful areas. Even the random anonymous spelling correction is nice, but short notes like the above are great. Thanks for taking the time to write them. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 02:34, 29 November 2008 (UTC)

== Furigana template ==

[[Image:WB Japanese-Furigana comparison.png|right|thumb|468px|Text with furigana and special CSS rules enabled]]

The Ruby template at Wikipedia recommends that users use language specific versions in the case of Han characters due to differences in font rendering. I've created the {{tl|furi}} template which also renders the fallback (in the case that a user agent might not render ruby) as a smaller character to better distinguish it from the main text.

Figuring that it's a stylistic nuance which people might want to comment on before moving to it, I thought I'd leave a mention here before switching from one to the other.

I think we should not simply redirect from {{tl|ruby}} as it is still useful as a generic ruby template. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 04:07, 5 December 2008 (UTC)

: Okay, so instead of using the ruby template, we should use the furi template because the furi template addresses potential font display problems seen with ruby? I don't mind the changes. I don't use ruby on here as I thought the font was way too small. --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 23:42, 5 December 2008 (UTC)

:: Yes, that's right.
:: One of the reasons why I wanted to mention it is that the {{tl|furi}} template fallback is parenthesised readings following the kanji, just like {{tl|ruby}}. The former, however, has a smaller font than the latter. I figured this was OK since the kana are that much simpler than kanji that novices would need that much bigger kanji than kana. So, if they aren't able to read the kana, they can't read the kanji adequately, either. Do you have any suggestions for alternative solutions? How are you explaining the reading of kanji? --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 15:16, 6 December 2008 (UTC)

::: I haven't thought about explaining the readings for the kanji right now. I'm just not sure if this book needs furigana. There was a discussion about furigana in this book.. somewhere, and I believe there was some legitamite reasons to remove it. I'll see if I can find it. The only problem I can see with furigana is the ruby text can be too small for long readings. This is my only concern on it. -- [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 07:19, 10 December 2008 (UTC)

:::: The [http://en.wikibooks.org/w/index.php?title=Japanese/Lesson_Relative_Clauses&amp;action=history current version] of [[Japanese/Lesson Relative Clauses]] shows two methods, one is the &quot;ruby&quot; furigana characters, while the other is to place the reading (and meaning) in tool tips which one can then reveal by hovering over the character(s) with the pointers. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 17:40, 5 January 2009 (UTC)
:::: ... and I've just added a screen-capture of that page as rendered by Opera with a user defined cascading style sheet. Unfortunately support for ruby characters doesn't seem to rank high on user agent developers' list of priorities, but these style sheets do a fair job. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 09:42, 6 January 2009 (UTC)
::::: Judging by the picture, this was my original complaint. The kana text is too small. To a novice, he wouldn't know if water is mizu or misu. I don't think there's a real solution to this problem. Even without the ruby text, it's still hard to read. Personally, I use rikiachan, but I don't know if it supports Opera... or any others. --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 06:43, 7 January 2009 (UTC)

:::::: I agree that the kana in that picture are too small. My argument for the furigana, however, is that so are the kanji. The person who cannot recognise the kana, can't recognise the kanji either. Normal font sizes are aimed at those who know the characters — not those who are seeing them for the first time. I was thinking about this and wondering whether we could fairly gracefully increase the font size of the Japanese, without incurring akward line spacing or comically large English text. I'm not sure about that...
:::::: One of the reasons that I like furigana is that it looks so good on paper. Then reading your comment above, I remembered: this isn't paper! I haven't tried the Rikaichan Firefox extension, but I'm not sure if we should require something like that since unfortunately it's browser specific. We could see if we can somehow create fall-backs for people with different setups. I'll install Rikaichan and try it out. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 02:45, 10 January 2009 (UTC)
::::::: Not knowing the Kanji and not knowing the reading are two different problems. There are compound kanji and irregular readings for compound kanji, which can further complicate things. If the novice can read the individual kanji and understand its meaning, he can probably guess the compound kanji meaning - and MAYBE the reading.  There will probably be problems with kanji, too... the really complex kanji, but I'm not sure if the same problem wouldn't exist without the furi.  Anyways, I don't know if there's any real solutions to this.  A person could always just remove the ruby/xhtml input if they wish, so I don't think it's hurting anything. --[[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 03:57, 10 January 2009 (UTC)

:::::::: I never said that they were the same problem. I said that &quot;''[t]he person who cannot recognise the kana, can't recognise the kanji either.''&quot; Note that I differentiate between ''reading'' and ''recognising''. If a student's level is high enough that he/she can recognise the kanji at that font-size, then the student will easily recognise the smaller kana to see the reading. On the other hand, if the student can't recognise the small kana, then the slightly larger kanji are still too small to be of much use. What I'm hinting at is that the problem you identify applies not only to the kana, but to the kanji as well.
:::::::: Still, I have yet to form an opinion as to what might be the best solution. I'm happy with using the furigana template for now. As you said: it can be hidden and it should be simple enough to convert the markup to most other solutions we might come up with. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 02:38, 12 January 2009 (UTC)
::::::::: You're misunderstanding the context of &quot;reading&quot;.  I meant the reading of the kanji (i.e., the kana).   A person with mediocre knowledge of kanji can probably see/recognize/know the kanji rendering is water, but may not know the reading is mizu - and when they try to read the kana, they can not because of the font-size and can not recognize the kana due to the rendering.  This will be very typical with people who know Chinese and people who know radicals or lots kanji, but not some compound kanji.
::::::::: I just noticed that the non-ruby version is about the same size (if not the same font) for the kana.  So, the problem still stands, and maybe even worse in printed form.  Electronic versions are different in the sense that you can have other sources (e.g., changing the default font size, dynamically changing font size (which I guess is possible on most)), but this may be problematic for some people.   Regardless, I think we've both see a problem in the font-size, and the only easy fix would be to either increase the font-size in the template (or page), remove the furi template, or put the burden on the reader to increase their font-size.   -- [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 08:58, 12 January 2009 (UTC)

:::::::::: I understood what you meant about &quot;reading&quot;. While your example of a person who reads kanji but not kana is a clear possibility, I think it is beside the point. Until someone suggests that we start expecting students to know kanji better than kana, the legibility of kanji is as much an issue as that of the kana. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 09:53, 12 January 2009 (UTC)
::::::::::: No, it's a valid point.   I'm not sure why you continue to discount it.  In it's current state, the kana is so much smaller than normal that it's near illegible for some readers.  Removing the reduction in the size when someone does not have ruby html enabled is the best solution that I see.   In non-ruby html, the kanji is not affected.  Keeping the size restraint on kana in ruby-html is fine as it's just an option.  Forcing a person with the same size font, or any equally tiny font, in non-ruby html is ridiculous.  -- [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 10:40, 12 January 2009 (UTC)

:::::::::::: I continue to discount it because it is irrelevant. You say that &quot;''the kana is so much smaller than normal that it's near illegible for some readers.''&quot; You don't need kanji proficient readers to make that point. In fact, you don't need anything to make that point since there hasn't been anyone to disagree with you on that. You may remember that I said earlier in this discussion that &quot;''I agree that the kana in that picture are too small.''&quot; --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 13:38, 12 January 2009 (UTC)
:::::::::::::  I gave the kanji proficiency example because your statements that if a person can't recognize the kana, they can't recognize the kanji.  I've stated many times that I don't care about the ruby-html because the user can just turn it off.  However, the user has little choice but to increase their font size to recognize the kana in the non-ruby html to read the reduced font size of the kana.  Anways, I'm done with this.  I've already stated the same thing three times in a row.  -- [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 16:35, 12 January 2009 (UTC)
:::::::::::::: Good. Let's move on. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 16:38, 12 January 2009 (UTC)

== Review ==

Please review the following pages and give input on their talk pages.  Please do not comment here, as I'll just move the comments to those pages. 

[[User:Retropunk/Japanese_Curriculum/Outline]]
: [[User:Retropunk/Japanese_Curriculum/Outline/Using_This_Book]]
[[User:Retropunk/Japanese_Curriculum/Outline/Beginner_Lessons]]
: [[User:Retropunk/Japanese_Curriculum/Outline/Beginner_Lessons/Using_This_Level]]
: [[User:Retropunk/Japanese_Curriculum/Outline/Beginner_Lessons/Lessons]]

-- [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 07:06, 10 December 2008 (UTC)

== Conversation template ==

I created {{tl|Japanese Phrasebook conversation}} and think it could help with conversation formats. I reckon there shouldn't really be any difference between conversations in the Phrasebook and the Japanese book, in which case this would better belong at {{tl|Japanese conversation}} and simply shared between the two books. Comments appreciated. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 14:01, 2 January 2009 (UTC)

== Under heavy reconstruction ==

when will the &quot;heavy reconstruction&quot; be done? 
I want to learn japanese! :D

[[Special:Contributions/77.127.54.121|77.127.54.121]] ([[User talk:77.127.54.121|talk]]) 11:36, 13 January 2009 (UTC)

: Not for a while, I'm afraid. Still, the current [[Japanese]] page has some content that you can use right away.
: The [[Japanese/Contents]] page has more material, but most of it is incomplete and some pages are redundant. Feel free to browse around, though.
: We're busy reworking these into useful pages that should slowly find their way onto the front page. Thanks for dropping by and good luck with your studies! --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 11:52, 13 January 2009 (UTC)

== Japanese sentence patterns and examples ==

I just created the {{tl|Japanese pattern}} and {{tl|Japanese example}} templates to highlight these. Suggestions, comments and criticisms are welcome.

&lt;pre&gt;&lt;nowiki&gt;{{Japanese pattern|
: &lt;giver&gt; は &lt;receiver&gt; に &lt;object&gt; を あげます。
: &lt;giver&gt; は &lt;receiver&gt; に &lt;object&gt; を あげる。}}&lt;/nowiki&gt;&lt;/pre&gt;[&lt;span style=&quot;font-size:smaller&quot;&gt;Edit: nowiki-ed this. I've changed this template to work differently. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 03:39, 15 February 2009 (UTC)&lt;/span&gt;]

{{Japanese example|
: {{furi|私|わたし}}は{{furi|妹|いもうと}}にお{{furi|菓子|かし}}をあげる。 // I give my sister candy. (plain form)
: {{furi|友達|ともだち}}はお{{furi|母|かあ}}さんにカードをあげた。 // My friend gave his mom a card. (plain form)}}

There is much room for improvement on their look! Maybe a solid background is a bad idea. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 06:56, 18 January 2009 (UTC)

: I've added the {{tl|Japanese example}} to [[:Category:Japanese templates]] and [[Japanese/Contributor's Guide]]. Though it may not look so great right now, it is still a good idea and we might as well start using it right away. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 16:16, 20 January 2009 (UTC)

: I've been putting the patterns in a table. I might modify {{tl|Japanese pattern}} to produce a table heading or style declaration. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 10:54, 6 February 2009 (UTC)

== Japanese todo ==

I recently created {{tl|Japanese todo}} which places pages on which it is included in [[:Category:Japanese todo]]. Please use it if you find it useful. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 06:58, 18 January 2009 (UTC)

== Related content links ==

A while back I created the {{tl|Japanese related vocabulary}}. As we're slowly moving towards lesson pages, I figured we might benefit from expanding the scope. I've modified the template and moved it to {{tl|Japanese related}}. The new template takes two arguments. The first determines the box style. The latter is the same as before. See the template page for usage and examples. I haven't spent any time on picking nice colours yet. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 10:51, 6 February 2009 (UTC)
: I would use these sparingly on grammar pages to lesson pages.  Linking directly to lessons, while a good idea, will be a maintenance nightmare.  I still contend that a categorization of the grammar content would be the best approach.   This way, the user can see all the lessons that are in that category and the contributor can just add the category link within the lesson.  Although, the grammar content link on the lesson page would not be that bad.  You can't really have a ton of links on a grammar page to lesson pages.  It would be nice to have people contributing to this book without someone putting a dozen or so links on the Verb page.
: The categorization has its own evil side.  The category will need to be made.  It'll have some nasty name like &quot;Japanese_Grammar_Copula&quot;, the contributor needs to know about it (but this is not unique), and other things that I'm sure I'm forgetting.  I suppose we can look at this more another time.  -- [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 17:05, 6 February 2009 (UTC)

== Japanese verb style ==

I've just fixed the {{tlx|Japanese verb style}} template and updated [[Japanese/Verb conjugation table]] to use it. My idea behind this was two-fold: To make it easier to navigate and update the verb conjugation table, and to be able to highlight verb forms in the text. This way, we can write:
{{Japanese example|
: 大阪にお好み焼きを{{Japanese verb style|polite past positive|食べました}}。
: 大阪にお好み焼きを{{Japanese verb style|polite past negative|食べませんでした}}。
}}
These are then synchronised with the conjugation table. The latter motive was partly just a neat idea and I'm not sure how much use this could be. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 09:06, 20 February 2009 (UTC)

== Default font ==

My main browser displays Japanese by default with a &quot;serif&quot; font, as opposed to &quot;gothic&quot; (both of these terms used quite liberally as I've not found any better used for Japanese font-faces). Gothic fonts tend to be popular for computer use as some feel they render somewhat better on screen. The [http://dicey.org/vlgothic/ VL Gothic] font is one example.

I've set up a copy of [[Japanese/Lessons/Introduction/Ogenki desu ka/Na-adjectives]] at [[User:Swift/Font test]] and (re-)raised the issue in the [[Wikibooks:Reading_room/Feature_requests#Book_stylesheets|feature request reading room]] of adding book stylesheets. That way we could set the font book-wide. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 06:41, 4 March 2009 (UTC)

== [[Sugu ni Hajimemashō]] ==

I've been dabbling with the list of grammar points that Retropunk put together a while back. There now is a list of about sixty sizeable points that could make up the first step into Japanese. In contemplating where to place this, I first considered &lt;code&gt;Japanese/Lessons&lt;/code&gt; but then figured it might become complicated if someone wanted to add lesson pages outside the scope of that plan.

So, I figured I'd just split these lessons out of the book. I've always considered it completely unnecessary (not to mention highly unoriginal) to name a book on Japanese simply 'Japanese', and harmful to construct too monolithic books. I've therefore placed the grammar point list at [[Sugu ni Hajimemashō]] where it can grow and prosper along side whatever other Japanese lesson plan may spring up; using content from [[Japanese]] as well having its own added. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 23:12, 9 May 2010 (UTC)

: I really don't mind the two books being split, but sooner or later, someone is going to discuss the likeness of the two books and suggest a merge.  I suppose as long as everyone agrees that one book is more of a &quot;grammar book&quot; and another is more of a &quot;progressive lesson book&quot; then the two books should work well split up.  

: I was hoping to find a copyright-free book, but most of the Japanese books that are in this realm are way too old.   I've given up looking for one for quite some time, but I suppose I can start looking again.  I think splitting the ground work would be nice, and should start a book, but it's getting contributers to support the book.  [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 18:46, 15 May 2010 (UTC)

== TODO: Begin Writing Lessons ==
Hello, I am a student of Japanese, and would like to contribute the the wikibook.  Specifically I would like to begin filling out some lessons.  As the number one complaint of this wikibook seems to be &quot;too many people with too many ideas,&quot; I wanted to get the blessing, so to speak, of someone who has been working on this project for awhile.  My plan was to start at the begining and follow the lesson plans laid out at [[Japanese/Practical_Lessons | the lesson plan]]. Because there exists an extensive hiragana/katakana section already, I would probably begin with Dialog Lesson 1.  Do you have any thoughts or suggestions?  Is this lesson plan solid enough to build upon?  Has this already been done and the convoluted nature of the book cause me to miss it? I have tried to read as much material on the wikibook as I could, but I am still digesting what exists.

Would it be best perhaps if I began fleshing out some other section?  I have taken a look at the [[:Category:Japanese_todo | todo]] section, but am unsure what edits have priority. [[User:Elaeum|Elaeum]] ([[User talk:Elaeum|talk]]) 04:30, 15 June 2010 (UTC)

: Hey Elaeum, Welcome to Wikibooks and nice to hear that you're interested in contributing to the Japanese wikibook. If you're interested in writing lessons, I suggest that you think about the scope of the content you'd like to cover and what approach to take. Then see if one of the [[Japanese/Contents#Structure.2FLesson_Plans.2FSyllabus|lesson plans]] fits your approach and start work on it or create your own.
: I personally think the [[Japanese/Practical Lessons]] lesson plan is a bit incomplete which is why I set up [[Sugu ni Hajimemasho]]. They also differ a good deal in content and organisation (SnH doesn't touch on reading and writing but concentrates on the grammar aspect).
: If you have any other questions or would like feedback on your work, please let me know. --[[User:Swift|Swift]] ([[User talk:Swift|talk]]) 20:36, 18 June 2010 (UTC)

:: Hello Swift.  I've been busy filling out lessons using the lesson plan, syllabus, Retropunk's grammar to be covered, and the JLPT4 Vocabulary List.  I've based the lessons around the format created by Retropunk.  They are on my [[User:Elaeum|user page]].  If you take a look, please keep in mind that they are very rough yet, I laid down a very rough ordering to the grammar sections, and am filling them out to get a rough idea of how long they will be.  I'll post to the book when I have a better draft done, and after they've been checked by a few friends of mine.

: Really, there's no order of precedence on the TODO list.  Add what you want.  Fix what you want.  Add things to the TODO list.  Add things anywhere and put a new TODO list.  Doesn't matter.  If you want to add lessons, that's cool.  I'm not really contributing much, but I come around and check out the book every once in awhile.  Good luck, and thanks for contributing.    [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|talk]]) 01:44, 8 July 2010 (UTC)

:: Thanks for replying.  I've been building off the lessons that you created.  They're on my user page right now, and they'll probably stay there until after I get a chance to cement down some of the format.  Right now they could be considered a very rough draft, so that I can work on ordering, and sizing.  Take a look if you like.  I hope to have them brought to the book for group revisions in two or three weeks.  Hopefully someone will want to help me edit them... [[User:Elaeum|Elaeum]] ([[User talk:Elaeum|talk]]) 20:39, 9 July 2010 (UTC)

== Book Title ==

This is really not an issue at the moment, (there seem to be much bigger things to concentrate on) but I agree with what [[Talk:Japanese#Sugu_ni_Hajimemash.C5.8D | Swift said about naming a Japanese lesson book &quot;Japanese&quot;]]  Somewhere down the road, after things have been fleshed out a bit, maybe new names could be proposed?  This is a mainly a reminder note for the future. [[User:Elaeum|Elaeum]] ([[User talk:Elaeum|talk]]) 17:06, 15 June 2010 (UTC)

== Pronunciation indication ==

I think some indication of pronunciation is required. This is usually done in dictionaries. 
10:23, 23 December 2010 (UTC)

: I suggest looking at the [[Japanese/Pronunciation]] page.   It's a good starting point.  [[User:Retropunk|Retropunk]] ([[User talk:Retropunk|discuss]] • [[Special:Contributions/Retropunk|contribs]]) 20:14, 11 September 2011 (UTC)

== [[Japanese/Reader]] ==

It would be very useful if someone who was a native/high level in Japanese read over a few of these to check if they use modern Japanese. Also if they could check if it's easy to read, I can re-style them all if make some sort of official Manual of Style. [[User:Hethrir|Hethrir]] ([[User talk:Hethrir|discuss]] • [[Special:Contributions/Hethrir|contribs]]) 19:07, 18 October 2011 (UTC)

== This is a good start!  ==

It seems no one has been here in a while, so I am going to put in a little work.. 

I'll start putting together some draft lessons in keeping with the theme of the Spanish Wikibook. 

It will hopefully read like a textbook a complete beginner would use, i.e. starting with no assumed knowledge. Any advice along the way will be greatly appreciated. 

I'm new to Wikibooks, so be kind! :)

[[User:Ed345|Ed345]] ([[User talk:Ed345|discuss]] • [[Special:Contributions/Ed345|contribs]]) 01:31, 3 September 2012 (UTC)

== Letter-Writing-Instructions Images ==

Why did you replaced the images which explains how to draw the letters with an animated version? It cannot be printed. The images are still exist and wasn't deleted. They're located at [[commons:Category:Bw.png stroke order images]].

Here's a comparison of the differences between the versions:
&lt;gallery&gt;
一-order.gif|Current version − animated
一-bw.png|Old version − using steps to show how to write the letter − can be printed
一-red.png|Red version
&lt;/gallery&gt;
[[User:Galzigler|Galzigler]] ([[User talk:Galzigler|discuss]] • [[Special:Contributions/Galzigler|contribs]]) 17:29, 31 January 2013 (UTC)

== [[/Transcribing English to Japanese]] ==

This page was an orphaned transwiki in need of a good home.  The best place I could find was this book so I've moved it and added it to the contents.  It needs to be dewikied and formatted in the style of this book.  If it is unwanted then please nominate it for deletion.--[[User:Xania|ЗAНИA]] [[Image:Flag_of_Estonia.svg|15px]][[User talk:Xania|&lt;sup&gt;talk&lt;/sup&gt;]] 22:31, 21 March 2014 (UTC)

== Topics for the appendix ==

* [[w:Japanese writing system|Japanese writing system]]
* [[w:Romanization of Japanese|Romanization of Japanese]] (including an explanation about [[w:Romanization|Romanization]])
* [[w:Japanese language and computers|Japanese language and computers]] (including [[w:Japanese input methods|Japanese input methods]])
* [[w:Horizontal and vertical writing in East Asian scripts|Horizontal and vertical writing in East Asian scripts]]
* [[w:Japanese punctuation|Japanese punctuation]]
* [[w:Japanese script reform|Japanese script reform]]

These can be added as links to Wikipedia - downloading the book as PDF or ordering it from PediaPress should allow these pages to be added to the book.
[[User:Galzigler|Galzigler]] ([[User talk:Galzigler|discuss]] • [[Special:Contributions/Galzigler|contribs]]) 17:09, 28 April 2014 (UTC)</text>
      <sha1>cllu9cvfv5f5b2u9vamx74arx8txwq0</sha1>
    </revision>
  </page>
  <page>
    <title>C++ Programming/All Chapters</title>
    <ns>0</ns>
    <id>40782</id>
    <revision>
      <id>2416389</id>
      <parentid>2415801</parentid>
      <timestamp>2012-10-07T22:30:51Z</timestamp>
      <contributor>
        <username>Recent Runes</username>
        <id>66908</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/66.54.89.110|66.54.89.110]] ([[User talk:66.54.89.110|talk]]) to last version by Vito Genovese</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{DISPLAYTITLE:&lt;span style=&quot;display:block;text-align:center;font-weight: bold;letter-spacing: -4pt;font-size: 65pt;font-style:italic;line-height:1em;color:#003333;&quot;&gt;C++ Programming&lt;/span&gt;}}
{{NOTE|At present there is an issue on how [[Wikipedia:Transclusion|transclusions]] are processed, from [[Wikipedia:Template limits|Template limits]] is seems there are several ways to address this limitation but there seems also to be some bugs pending resolution. As is it is impossible to guarantee that all the book's content is displayed in this page. (Last verification 21 April 2012 Last 3 chapters, the WEB Links and Book References were not shown)&lt;br&gt;
See if you can work with the by Chapter view in the meanwhile or post a request for resolution on at the [[Wikibooks:Reading room/Technical Assistance]].}}

__TOC__
{{:C++ Programming/About the Book}}
{{:C++ Programming/Chapters/C++}}
{{:C++ Programming/Chapters/Fundamentals}}
{{:C++ Programming/Chapter Object Oriented Programming}}
{{:C++ Programming/Chapter Advanced Features}}
{{:C++ Programming/Chapter Beyond the Standard}}

= Appendix A: Internal References =
*List of Keywords
:[included next to The Compiler]
*List of Standard Headers
:[included in The preprocessor Chapter (next to the #include keyword)]
*Table of Preprocessors
:[included in The preprocessor Chapter]
*Table of Operators
:[included in the introduction to Operators]
*Table of Data Types
:[included in the introduction to Variables]
&lt;br&gt;&lt;div style=&quot;width:50%; border: 1px solid #ff7777; background-color: #ffeeee; text-align: center; margin: auto;&quot;&gt;'''To prevent duplication of content references are removed you may find them on the given locations'''.&lt;/div&gt;
&lt;!-- If someone has the time, can you anchor them... txs --&gt;

= Appendix B: External References =
{{:C++ Programming/Weblinks}}
{{:C++ Programming/Booklinks}}

== References ==
&lt;references /&gt;

[[Category:C++ Programming|.}]]</text>
      <sha1>gx8x554411m2mml1iwz8bu36607sb8d</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Turkish/Pronunciation and Alphabet</title>
    <ns>1</ns>
    <id>40783</id>
    <revision>
      <id>1963149</id>
      <parentid>1963040</parentid>
      <timestamp>2010-11-01T16:35:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Talk:Turkish/Contents/Pronunciation and Alphabet]] to [[Talk:Turkish/Pronunciation and Alphabet]]: Easier navigation.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{WikiProject Languages}} 

Keep in mind that Turkish is mostly unaccented, except for a slight stress on the last syllable (in most cases). This can be a challenge for English speakers - we have a natural inclination to accent our words in the middle, the beginning, whatever. That's why when you're listening to a native Turkish speaker, it can sound like one long string of syllables. In Turkish, the words aren't broken up so strongly by accenting a part of them. Work hard on this &quot;no stress&quot; pronunciation. It's key to being intelligible to a person listening to your Turkish.</text>
      <sha1>hvjguelhp01un9fm28gpaoc0rk0jtxu</sha1>
    </revision>
  </page>
  <page>
    <title>Rueda de Casino/Para el Medio</title>
    <ns>0</ns>
    <id>40785</id>
    <revision>
      <id>765570</id>
      <parentid>724160</parentid>
      <timestamp>2007-02-24T20:23:55Z</timestamp>
      <contributor>
        <ip>82.77.102.220</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;includeonly&gt;
{{Rueda_Command_TR|
   title=Para el Medio|
   english=To the middle|
   summary=Step to the middle of the circle|
   related=[[/Enchufa/]], [[/Treinta y Tres/]], [[/Flor/]], [[/Levántanla/]]
}}

&lt;/includeonly&gt;
&lt;noinclude&gt;
{{Rueda_Command|
   title=Para el Medio|
   pronunciation=para el mAY-dio|
   english=To the middle|
   summary=Step to the middle of the circle|
   related=[[Rueda_de_Casino/Enchufa|Enchufa]], [[Rueda_de_Casino/Treinta y Tres|Treinta y Tres]], [[Rueda_de_Casino/Flor|Flor]], [[Rueda_de_Casino/Levántala/|Levántala]]
}}

There are two moves with this name, both danced at different times in the rueda.  The first version listed here is at the start of the rueda, when the leaders are facing anticlockwise.  The second version is for the main part of the rueda, when the leaders are facing clockwise.

The call can be shortened slightly to pa' el medio.

== From the starting position ==

Leaders face anticlockwise, and followers face clockwise, one between each
leader.  Normal partner hold.

Everybody steps into the middle of the circle with the inside foot, and then
closes the other foot to it.  Then they step to the edge of the circle with
the outside foot, and close the inside foot to it.  This happens on beats 1, 3,
5 and 7, so it is slower than most moves.

The idea is to lean into the centre, and out of it, repeatedly.  This usually continues until the group is formed and the caller has been decided upon.  Also, it is usually not called out, as it is always the start of a rueda.

== From the main rueda ==

Usually called as [[Rueda de Casino/Enchufa|Enchufa]] y para el medio.

[[Rueda de Casino/Enchufa|Enchufa]] y [[Rueda de Casino/Dile Que No|Dile que no]], and then the leaders do mambo basics into and out of the
circle, while the followers do the same, but the leaders go into the circle on
1, and the followers on 5.  Usually everybody claps twice when they are stepping
in.

Other moves from this position:

* [[Rueda de Casino/Treinta y Tres|Treinta y tres]] (33)
* [[Rueda de Casino/Flor|Flor]] (flower)
* [[Rueda de Casino/Levántala|Levántala]] (lift her)

&lt;/noinclude&gt;

[[Category:Rueda de Casino]]</text>
      <sha1>dnvgko21l4hxre5jkgh18agn0cu0fbx</sha1>
    </revision>
  </page>
  <page>
    <title>Arabic/Book/Authoring Rules</title>
    <ns>0</ns>
    <id>40803</id>
    <revision>
      <id>2550972</id>
      <parentid>2053788</parentid>
      <timestamp>2013-08-21T14:21:34Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>QuiteUnusual moved page [[Arabic/Book/AuthoringRules]] to [[Arabic/Book/Authoring Rules]] without leaving a redirect</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">These are rules, subject to change, and capable of being broken. 

# Teach mainly the Standard Arabic (often known as &quot;fuS-Ha&quot;). Parts explaining more local language should be distinct from the Standard. Links to pages about learning another dialect may be linked to the appropriate sections.
# Provide exercises for lessons. Provide keys (pages with the answers for the exercises).
# An Arabic word must be represented in Arabic Script.
# Transliteration should be provided, for the beginner levels (i.e. Most if not all levels).
# Phrases should have each word translated, along with the whole phrase translated. This will be explained in an article.
# Keep it simple. If you can teach it without using grammatical terms, do it. Grammatical terms should be included where they would be helpful, to experienced language learners, but the text must be understandable, that is, without the user needing to understand the grammatical terms.

[[Category:Arabic]]</text>
      <sha1>2p2m7uvfy8r2thua5mcr70l5cc4ytxq</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Mshonle/Fork issue 2</title>
    <ns>3</ns>
    <id>40804</id>
    <revision>
      <id>707690</id>
      <parentid>234322</parentid>
      <timestamp>2007-01-03T19:53:50Z</timestamp>
      <contributor>
        <username>Panic2k4</username>
        <id>2865</id>
      </contributor>
      <minor />
      <comment>/* Chapter structure */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The TOC discussion has moved to yet another page: [[Talk:Programming:C plus plus/Table of contents]]. This page can stay here as a history... --[[User:Maxberger|Max]] 00:31, 15 September 2005 (UTC)

----


Begin the discussions where they left off, but don't copy content from the first page. Instead, just start a new section about whatever issue you'd like to talk about.

== Chapter structure ==
If the restructuring complete? Should we now start merging the content? If so, can we make a TODO page that has all the chapters of C -/- on it, so other people (e.g. me) can help? --[[User:Maxberger|Max]] 05:26, 13 September 2005 (UTC)

:You should wait until the administrator &lt;s&gt;joins&lt;/s&gt; clears or does &lt;s&gt;water&lt;/s&gt;whatever editorial work he thinks best on the talk page, then we can start debating the editing of the resulting work--[[User:Panic2k4|Panic]] 05:58, 13 September 2005 (UTC)

Authors and prev. or other base works should be next to the title not at the end of the book like other references. My name should be there and I probably made a mistake by adding others to that section, you can use all there references if you merge only the author should remove (and add) it's name (I did add all the others for historical purpose but after examining the GFDL came to the conclusion that I shouldn't.--[[User:Panic2k4|Panic]] 03:32, 14 September 2005 (UTC)

Hi Max and Panic. Why don't we use this space right here for an outline of the merged book? Ideally the current structure of the existing book will be kept (but with, for example, the chapter on classes in the middle, before the references section). I would like to see the preprocessor section toward the end (although #include should be mentioned earlier; but the #string tokenizing operator and the ## token-concatenation operator, which are a large part of that section, should be mentioned later) and I would like to see the language comparison section be moved to a part of the FAQ chapter.

Here's a start:
# Hello world (the introduction to C++, setting up the compiler, and running your first program-- complex details, like buffer flushing, might be more appropriate later)
# Variables and Operators (used to be &quot;Operators&quot; or &quot;Variables and Expressions&quot;)
## Data Types content
# Statements (control flow content)
# Functions
# Stream and File I/O
# Classes
# The STL and Iterators
# The Preprocessor
# The Debugger
# Reference Tables (only place lists of keywords (and other long lists) here)
# Idioms
## Singleton design pattern content (the stubs for the other patterns can be deleted for now, someone else can write them later; the Model-View-Controller pattern, the Builder pattern, and the Visitor pattern I would say should be done next, due to their imporantance (and iterator is already done earlier))
# FAQ
## Language comparison should go here

This is a large refactoring, but in the end it'll be worth it. What do you guys think? [[User:Mshonle|MShonle]] 03:40, 14 September 2005 (UTC)

=== Max Version of the TOC ===

I'll make this a different section so that readers can see both structures and compare / discuss. '''Please do not edit this section if you are not me'''. Rather add your comments to the end.

The exact order may change, but this is approx. the structure i'd like to see:


Part 0: About this book
* Forword
* About a wikibook (your rights and all that)
* Authors


Part I: Introdution to C++ and Programming
* What is a programming language?
** Binary code
** Assembler
** High level languages (C++)
** Very Short intro: 3 concepts: proc, oo, functional, C++ does all
* What is the compilation / build process, using a sample program. e.g. Hello world.
** Example of a build process on unix (gcc)
** Example of a build process on Win32 (Visual studio)
* Short intro to language features (explain the hello, world)
* Variables and the concept of memory (use only some basic types, link -&gt; ref. tables for all data types).
* Constants
* simple (!) console i/o (link -&gt; explanation later on)
* assignment / operators. (explain, link -&gt; ref tables)


Part II: Procedural Programming Concepts
* Program flow: Branching (if, if/else)
* Logical operators
* Program Flow: repetition (while)
* Program Flow: repetition II (do / while)
* Program Flow: repetition III (for)
* Multi-way branching (switch)
* Function basics
* Scope
* the main function
* Advanced Functions (call-by-value vs. call by reference, overloading, default, etc.)
* Recursion
* Array basics
* Advanced arrays (initialization, partially filled, multi-dimensional, etc.)
* Arrays and functions


Part III: OO-Programming Concepts
(This is completely unordered and probably incomplete, since I have not yet taught an OO-class. So all these should appear, but not necessarily in this order)
* combining of data and control
* classes
* constructors
* destructors
* inhertance
* virtual
* abstract classes
* pure abstract classes (interfaces) and why they make sense
* visibility
* see list in c -/- -/-

Part IV: C++ Language Features
* The enum data type
* The struct data type
* The union data type
* typecasting
* namespaces
* header files and source files / multi-file programming
* Strings as character arrays (C-strings)
* Memory management / Pointers / new, new[], delete,  delete[]
* Operator overloading
* Exceptions
* Templates
* Intro into the praeprocessor
* Hints for the compiler (inline, etc.)

Part V: Standard C++ Libraries
* Intro to the STL
* The String class (C++-Strings)
* Input and output streams:
** cin/cout/cerr
** all those iomanip's 
** text file i/o
* see list in c -/- -/-

Part VI: C++ in the Real world
* C++ vs. other languages
* Common programming styles
* C++ and varios OS's 
** Win32 (short intro, then link to different section / book ?)
** Linux / Unix / OS X (explains that there are different GUI things, link -&gt; different section / book ?)
*** Makefiles

Maye a part on GUI in general? Or a different book?

Part VII: Common Programming idioms in c++
* Intro to design patterns
* Procedural Idioms:
** See list in plus plus
* OO-Idioms
** some design patterns


Part VIII: Reference Tables
* List / Table of Keywords (should link to the explaining chapter)
* List of Standard Headers
* Table of praeprocessor commands
* table of compiler keywords
* Table of Operators
* Table of Data Types
* internal storage of the data types (of floats, size of ints. etc)
* links to other websites
* links to commercial books

Please make your comments after this line. --[[User:Maxberger|Max]] 05:34, 14 September 2005 (UTC)

----
I would:
* Keep the &quot;what is a PL?&quot; high-level and not get into OO vs. Procedural vs. Functional yet. That kind of distinction should be made later in an introductory text. Instead, I would just describe the process of compilers turning code into programs. How it's a series of instructions, how computers work and get things done, and so on.
* Destructors need to be talked about somewhere.
* Inheritance and virtual need to be talked about.
* Headers need to be described somewhere.
Otherwise, it looks great. [[User:Mshonle|MShonle]] 14:39, 14 September 2005 (UTC)
:Ok, how about what is a pl shows opcodes vs. assembler vs. c++ (this explains why we need a compiler) and has only a short intro into prog. concepts.
:For the oo-concepts: I have added them
:Headers / multi-file sources are currently in C++ language features. (thats what i meant by headers and sourcefiles
:--[[User:Maxberger|Max]] 16:58, 14 September 2005 (UTC)
::Sounds good. A description of memory, the CPU, the HD, and how it fetches instructions/executes them (we're talking six paragraphs max), and then machine code versus C++ code (assembly can be more of a footnote, but that all depends on how you write it). [[User:Mshonle|MShonle]] 19:57, 14 September 2005 (UTC)
:::Agreed. --[[User:Maxberger|Max]] 20:27, 14 September 2005 (UTC)
----
I'll be pushing a policy about that part that should inform users (readers/writers) about theyer rights (and be portable with the work), also the 
request that any derivative work not only refers wikibooks but the book title (this must be dif. from wikipedia since we are not dealing with single page articles), the final result will be similar to the old foreword template but with more info and a direct link to the GNU GFDL), but it will take some time.
For now the only change to that section is that about wikibooks should be included below you Foreword section, since it describes or gives an intro to the work, the  next think should be a description of the medium and it's use, heck, the same way as if we were to add a verbatim GFDL license, if I'm not mistaken there is a structure described on the GFDL about it.--[[User:Panic2k4|Panic]] 06:21, 14 September 2005 (UTC)
:Switched authors and &quot;about a wikibook&quot;. I believe thats whay you meant --[[User:Maxberger|Max]] 13:58, 14 September 2005 (UTC)
----
I think removing or losing any information is bad (some Is redundant, like parts of the Hello World as it is almost a stand alone work, some would probably, if extended, be able to fill other books, lets say a book on OOP or MFC and yet another on STL, but then we have a problem, STL is part of the C++ language and the other topics are needed to understand the language, even Win32 that is not part of the C++ language is important since Windows OS is the most (we hope it will change), OS on the Western world, and I don't think removing portions of a book to create another is correct in the first place (since the information is on topic, like the PL (it can also form a closed book) but it's a needed part as an introduction to C++ and leaving it &quot;low-lever&quot; will help C++ reach an newcomers to PL and C++ in particular, if we start using high level CS knowledge in the book it will lose the thing that I, personably was aiming to, and there are already free books that explain the language to that &quot;elite&quot; audience, Thinking in C++ (see ref. section) it's similar to Thinking in Java...--[[User:Panic2k4|Panic]] 16:21, 14 September 2005 (UTC)
:I believe that some parts of this book can be a book on its own once they get big enough. For example: If we have enough STL material, there could be a book on STL. Then this book would intruduce the STL very briefly, and then reference the other book. I would like to see this book as a starting point to collect material, but I would not be afraid to move some of it, as long as it's briefly introduced and the other book is GFDL and linked. --[[User:Maxberger|Max]] 16:58, 14 September 2005 (UTC)

::I think a more brief introduction to STL is better. I think a &quot;lots of 150-page books&quot; approach is better than a &quot;handful of 500-page books&quot; approach, in terms of growing Wikibooks.

::This might be a good opportunity to plan out a charter for the book. Basically, something that describes what the book will talk about and what it won't talk about. The way I see it, this book is:

:::''An introduction to programming concepts using C++. The book covers the most essential features of the language and its standard library. It also provides a survey of important concepts, like the STL, software design, and design patterns, but only as a stepping stone for the reader to learn more from other books. The book does not cover non-standard C++ libraries, some of the more advanced or esoteric concepts, nor general computer science data-structures and algorithms. The book is not intended to be a complete reference.''

::All of the other gaps, like design patterns, should be covered in other books that would list this book (or the available books like it) as a prerequisite. [[User:Mshonle|MShonle]] 20:15, 14 September 2005 (UTC)

:::Agreed. Definitely a long-term goal --[[User:Maxberger|Max]] 20:27, 14 September 2005 (UTC)
----
Just thought about something: Recursion should be in another part, called &quot;Functional programming concepts&quot; (after procedural and before oo). However, this would be too small to be it's own part. I have no solution for that problem. --[[User:Maxberger|Max]] 17:00, 14 September 2005 (UTC)
:Recursion would be better introduced right after loops are (even before switch is, using your current plan). But I think it's pushing it a bit to describe C++ as being functional. Perhaps after operator overloading is discussed the functor idioms can be described, which mimic some of the features in functional languages. [[User:Mshonle|MShonle]] 19:57, 14 September 2005 (UTC)
::The problem with recursion: Recursion requires functions and scope. Functions make more sense after program flow (if / loops, etc.) With recursion introduced early, functions would have to move way up:
:::Function basics
:::Scope
:::Recursion
:::if
:::all the loops
:::More on functions...
::However, this solution does not make me happy... I somehow think that recursion should kinda be on its own.--[[User:Maxberger|Max]] 20:34, 14 September 2005 (UTC)
----
:::I see. Then I think right after the call-by-name/call-by-value discussion that recursion should be covered (before arrays). A good introduction might first show an infinite loop, and describe why it's infinite, and then discuss a recursive loop that terminates (fight the temptation to use factorial). (In my opinion, students should learn recursion first and only later things like loop-constructs and side-effects, but that's more appropriate for languages like Scheme and less suited for C++.) Another note: will references be covered well before pointers then? [[User:Mshonle|MShonle]] 20:43, 14 September 2005 (UTC)
::::Agreed (for recursion). Seems to make sense. --[[User:Maxberger|Max]] 21:05, 14 September 2005 (UTC)
----
References: I see two types of references: call-by-reference for functions (which should be in functions II), and references as in the reference operator used for pointers (which should imo be covered with pointer). Where would you put references then? --[[User:Maxberger|Max]] 21:05, 14 September 2005 (UTC)
:Well, references can exist outside of function formals, as in fields (if I recall correctly, they must be initialized in the initialization list of the constructors) and as local variables. There's no ideal location to place them. It's more dependant on the exposition. Since we appear to really be getting somewhere, why don't you move an updated version of your TOC to here: [[Talk:Programming:C plus plus/Table of contents]]. Thanks. [[User:Mshonle|MShonle]] 21:25, 14 September 2005 (UTC)

==Single letters as variable names==
:'''Single letters are almost always a VERY BAD''' (variables), I can only understand your correction if you lack of experience on doing hard coding single name varialbes are always bad, I can agree with your changes but if a  proiminent warning about scope, loops etc... in a very crowded piece of code of even if you do Extreme Coding keeping the logic of things in your mind is extremely dif. even more because it fail to observe the rule of auto documentation or verbosity in code, most actual IDEs do provide code complition of a similar function.--[[User:Panic2k4|Panic]] 03:47, 14 September 2005 (UTC)
::Panic, there is no one &quot;right way&quot; of doing anything, particularly when it comes to coding style. Your view is just one POV, while my view is another POV. The text of the book should be neutral to these POVs (and all other ''important'' POVs, but not the unimportant, the-moon-is-made-of-cheese POVs). [[User:Mshonle|MShonle]] 04:10, 14 September 2005 (UTC)

Hello World and other hands on examples (with comments) it's my view should be added as extras or appendices to the book, they are almost a closed work in itself, see the index of C -/- -/- I think [[User:Maxberger|Max]] was willing to create other structures to dif. audiences but I don't know his ideas on the subject the same  goes to FAQ etc... If you can do fallow the Index of C -/- -/- the merge was what I was doing (part of my beef with you) so I don't see any major problem, if you fix merge the talk page of the destination location and if possible move the one on C -/- -/- keeping the recent comments of C Plus Plus we can move this talk there...--[[User:Panic2k4|Panic]] 03:58, 14 September 2005 (UTC)

== Cover Art ==

Merging does not necessarily mean changing the cover art, which is what I believe was what panic criticized. I personally don't like either one, but this issue should now be the lowest priority. Maybe, when the merge is complete there can be a cover-art contest? --[[User:Maxberger|Max]] 05:26, 13 September 2005 (UTC)

:As the author of the prev. art work :), your comment does hurt a little but an art work contest sound like a good idea (my image is Public Domain, so I have no beef in having it replaced), the problem is getting people to vote, another problem and that was the one I stated is that since I have added it to the other book and it's part of its the cover can I be replaced or a graphical image can be considered &quot;title&quot;, that wording of the GFDL is hard to get, and since it is not affected only by my rights on the work I don't know--[[User:Panic2k4|Panic]] 05:55, 13 September 2005 (UTC)

::Your picture can only be used with your permission (GFPL 4.A) &quot; Use in the Title Page (and on the covers, if any) a title distinct from that of the Document, and from those of previous versions (which should, if there were any, be listed in the History section of the Document). You may use the same title as a previous version if the original publisher of that version gives permission.&quot;. Now since you said your picture is Public domain, it is ok to use yours as long as you're listed as author. Also, a history page should contain the merge. --[[User:Maxberger|Max]] 06:07, 13 September 2005 (UTC)

:::I had some trouble uploading it to wikibooks, so a user/reader did me that favor, he selected the license as he tought best, I realy didn't check it nor could I re-upload it, I remeber him telling me about it but as it was used for what it wsa created... If that is a problem I give now as the author the permission to anyone to meke it as rights goes, free (I would like to be only mentioned as the author).--[[User:Panic2k4|Panic]] 12:43, 13 September 2005 (UTC)

::Just as a short explanation of what I do not like: Your picture is too full -- to many things going on at the same time. The other picture, however, has too little. But really, content should matter more than the cover art. --[[User:Maxberger|Max]] 06:07, 13 September 2005 (UTC)

:::I think I did a small analisys of the picture after some one commented on it, can't remeber were (try finf here on wikibooks) or google if you have the time for it, it did explain every single object on it, and it's relation with the subject matter.--[[User:Panic2k4|Panic]] 12:43, 13 September 2005 (UTC)

I like simple images the best. If you get Gimp you can end up creating all of these metal, 3D, shadowed, shiny titles that just so happen to look like every other web page. As for Panic's image I think a lot of the buzzwords on it don't really apply today.

For example, the idea that languages would be &quot;hybrid&quot; or &quot;multiparadigm&quot; has largely dropped off of the face of the earth. C++ was one of the first major languages to be hybrid. But these days it just doesn't matter; it doesn't distinguish it in any way from the languages common today. People have found out, for example, that they can write procedural programs in any language. I would say that Java is good with OO, object-based, and procedural. And also (to a certain extent) functional decompositions that are much better in Java than in C++ (the access to final variables in lexical scope is what makes Java's anonymous innerclasses more apt to functional programming than C++, even though C++ is the language with the operator() overloaded-- to find out why I make this claim, ask yourself why the anonymous innerclasses need to be anonymous, and how different they would be if they were named). [[User:Mshonle|MShonle]] 02:57, 14 September 2005 (UTC)

::Prevision? [[User:Mshonle|MShonle]] 03:45, 14 September 2005 (UTC)

:::Expectations (those are based on you, your life, you experience), predictions (I don't think this is also the right work, prediction can be a guess, the word I'm after is on the lines of provision, pre-vision, a visualization of the solution of a problem, that would imply some careful study or some kind of knowledge base to make derivations and elaborate an hypothesis...--[[User:Panic2k4|Panic]] 04:03, 14 September
2005 (UTC)

::::You want me to form a hypothesis that the term &quot;hybrid&quot; is a term no longer used by programming language researchers? [[User:Mshonle|MShonle]] 04:14, 14 September 2005 (UTC)

:::::What I have said so far is that you should try to avoid  having &quot;expectations&quot; when others are concerned  if dealing with medium or large audiences, or even more important, if they are directed toward unknowns (in general and not only applied to this particular case, it's a &quot;logic&quot; flaw that I have found you have, you tend to project your way of thinking directly to others and have problems coming to grasp with the idea that they don't behave/think like you expect, a shortcut solution should be a reversion, to an expectation that no one will do as you expect) if you need to pass a point you should be clear about it or at least try. If you do apply you &quot;small&quot; world KB (Knowledge base, or personal experience, if you prefer) to produce predictions they will have a high probability of being false from the beginning--[[User:Panic2k4|Panic]] 06:07, 14 September 2005 (UTC)

::::::KB? Previsions? [[User:Mshonle|MShonle]] 04:44, 14 September 2005 (UTC)

Oh, I think I may see what you're getting at now. You're saying that, at the time, it sounded like &quot;mutli-paradigm&quot; would be a good word to use on the cover, but now you see that your guess failed to be timeless. [[User:Mshonle|MShonle]] 04:48, 14 September 2005 (UTC)

I think you're mistaking the term &quot;logical flaw&quot; with &quot;things you disagree with.&quot; I'm not sure if you're talking about the cover art or variable names, though. [[User:Mshonle|MShonle]] 14:15, 14 September 2005 (UTC)

Not so, the language status  hasn't changed, even if it is evolving you can't say that it has ceased to be multi-paradigm avery language has a defined paradigm or defined range, even if OOP is now more active that the other facets of C++ the language is  and will have be a  &quot;multi-paradigm&quot; language, if that changes it will seance to be C++ (Object-C or Java) are examples of &quot;derivations&quot; from the concept even if similar in nature to parts of C++.

PS: I really hate that wikipedian way of using the talk page, edits can be hard to sequence and I have huge problems with the #%&amp;# edit window...--[[User:Panic2k4|Panic]]

:But what I ''actually'' said is that it ceased to be an important distinction. [[User:Mshonle|MShonle]] 14:23, 14 September 2005 (UTC)
----
And I disagree with you on that point, if you want to use OOP you would be probably better using Java or Smaltalk and C for PP etc... the advantage of C++ is the capacity or the problem (depends on POV) of mixing all of those concepts freely. That can be a reason for not using C++ as the primary language to  
explaining OOP concepts.--[[User:Panic2k4|Panic]] 16:32, 14 September 2005 (UTC)
----
I am sorry I have to be an a***, but I think this discussion went a little off topic. For the task of merging the book it is probably irrelevant whether multi-paradigm is still used and what languages may or may not be better. Please Focus on the task at hand, people! --[[User:Maxberger|Max]] 17:12, 14 September 2005 (UTC)
:Yes, but aren't you glad we're not talking about the hyphen slashes -/-? [[User:Mshonle|MShonle]] 20:00, 14 September 2005 (UTC)</text>
      <sha1>t49rvzgle5z24o92cs2qsw98p7ic5ez</sha1>
    </revision>
  </page>
  <page>
    <title>A-level Mathematics/OCR/C2/Integration/Solutions</title>
    <ns>0</ns>
    <id>40805</id>
    <revision>
      <id>1971364</id>
      <parentid>1971273</parentid>
      <timestamp>2010-11-13T14:44:36Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <comment>fixed category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">===Worked Solutions===

1a)

:&lt;math&gt; \int 2x^5 \, dx &lt;/math&gt;

:Using our rule: That &lt;math&gt;\int \frac{dy}{dx} = x^n dx&lt;/math&gt; is equal to &lt;math&gt;y = \frac {x^{(n + 1)}}{(n + 1)} + C&lt;/math&gt;

:We get:

:&lt;math&gt;y = \frac {2x^6}{6} + C &lt;/math&gt;

b)

:&lt;math&gt; \int 7x^6 + 2x^3 - x^2 \, dx &lt;/math&gt;

:Again using our rule, we would get:

:&lt;math&gt;y = x^7 + \frac {x^4}{2} - \frac {x^3}{3} + C&lt;/math&gt;

2a)
:&lt;math&gt; \int x +5 \,dx &lt;/math&gt; given that the point &lt;math&gt;(0, 3)&lt;/math&gt; lies on the curve.

:Using our rule, the intergral becomes

:&lt;math&gt;y = \frac {x^2}{2} + 5x + C &lt;/math&gt;

:Now we can sub in our points &lt;math&gt;(0, 3)&lt;/math&gt;, So that:

:&lt;math&gt; 3 = \frac {0^2}{2} + 5(0) + C &lt;/math&gt;

:Therefore C = 3

b)
:&lt;math&gt; \int 3x^2 + 7x +0.1 \,dx &lt;/math&gt;

:Evaulating this we get: &lt;math&gt; x^3 + \frac {7x^2}{2} + 0.1x + C &lt;/math&gt;

:Given (2,2), subing these points in:

:&lt;math&gt; 2 = 2^3 + \frac {7(2^2)}{2} + 0.2 + C&lt;/math&gt;

:&lt;math&gt; 2 = 8 + 14 + 0.2 + C&lt;/math&gt;

:&lt;math&gt; C = -20.2 &lt;/math&gt;

3a)
:&lt;math&gt; \int_{0}^{2} x + 1 \,dx &lt;/math&gt;

:Evaluating this we get:

:&lt;math&gt; \Bigg\lfloor \frac {x^2}{2} + x \Bigg\rceil_{0}^{2} &lt;/math&gt;

:Substituting in values we get:

:&lt;math&gt; \Bigg\lfloor \left(\frac {2^2}{2} + 2\right) - \left(\frac {0^2}{2} + 0\right) \Bigg\rceil &lt;/math&gt;

:&lt;math&gt;= 4 &lt;/math&gt;


b)
:&lt;math&gt; \int_{-3}^{4.7} \frac{1}{7}x^{\frac{1}{3}} + 1 \,dx &lt;/math&gt;

:Evaluating this we get:

:&lt;math&gt; \Bigg\lfloor \frac {3x^{\frac{4}{3}}}{28} + x \Bigg\rceil_{-3}^{4.7} &lt;/math&gt;


:&lt;math&gt; \Bigg\lfloor \left(\frac {3(4.7)^{\frac{4}{3}}}{28} + 4.7\right) - \left(\frac {3(-3)^{\frac{4}{3}}}{28} -3\right) \Bigg\rceil &lt;/math&gt;

:&lt;math&gt;\approx 8.08&lt;/math&gt;


[[Image:IntegrationProblemGraph.png|500px|right]]
4)
:The question is simply to evaluate this definite integral:

:&lt;math&gt;
\begin{align}
\int_{-2}^{0} \bigg(y=-x^4-\frac{1}{2}x^3+3x^2 \bigg) \,dx &amp;= \Bigg\lfloor \left(\frac{-1}{5}x^5-\frac{1}{8}x^4+x^3\right) \Bigg\rceil_{-2}^{0}
\\&amp;= -\bigg(\frac{-1}{5}*-2^5-\frac{1}{8}*-2^4-2^3 \bigg)
\\&amp;=3.6
\end{align}
&lt;/math&gt;
5 ) 
:&lt;math&gt;
\int tan^4 A
&lt;/math&gt;

[[Category:A-level Mathematics/OCR/C2|Integration/Solutions]]</text>
      <sha1>rz802m1b8nm94z0xvnivs0sm3td4u4c</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Mergeto</title>
    <ns>10</ns>
    <id>40807</id>
    <revision>
      <id>2202271</id>
      <parentid>2202263</parentid>
      <timestamp>2011-10-28T04:42:44Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <comment>expanding documentation.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{ambox|type=move|image=[[File:Merge-arrow.svg|50px|link=|alt=]]|text='''A Wikibookian suggests that this book or chapter be [[Help:Pages#Merging|merged]] into ''[[:{{{1}}}]]''{{#if:{{{2|}}}|&amp;nbsp;because:'''&lt;br/&gt;&lt;center&gt;{{{2}}}&lt;/center&gt;|.'''}}&lt;br/&gt;&lt;small&gt;Please discuss whether or not this merge should happen on the [[:{{{3|{{TALKPAGENAME:{{{1|{{TALKPAGENAME}}}}}}}}}}|discussion page]].&lt;/small&gt;}}
&lt;includeonly&gt;{{#ifeq:{{{example|no}}}|no|[[Category:Books to be merged|{{PAGENAME}}]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
''This adds pages to [[:Category:Books to be merged]]''.[[Category:Merge templates]]

===Usage===
This template is used to suggest that the page the template is added to should be merged into another page.

{{tlx|mergeto|page to be merged into}}

Optionally there are two additional arguments that let you specify a reason for merging and give a custom place for the discussion page to happen.	
{{tlx|mergeto|page to be merged into|reason for merge|discussion page}}

===See also===
{{tl|mergefrom}}: used to mark the page intended to be the destination of the merge.

&lt;/noinclude&gt;</text>
      <sha1>s3h2hz3g1jz07ietlkusmwxdu3rweoq</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Mergefrom</title>
    <ns>10</ns>
    <id>40808</id>
    <revision>
      <id>2202272</id>
      <parentid>1998660</parentid>
      <timestamp>2011-10-28T04:43:36Z</timestamp>
      <contributor>
        <username>Thenub314</username>
        <id>38087</id>
      </contributor>
      <comment>expanding documentation.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{ambox|type=move|image=[[File:Mergefrom.svg|50px|link=|alt=]]|text='''A Wikibookian suggests that ''[[:{{{1}}}]]'' be [[Help:Pages#Merging|merged]] into this book or chapter{{#if:{{{2|}}}|&amp;nbsp;because:'''&lt;center&gt;{{{2}}}&lt;/center&gt;|.'''}}&lt;br/&gt;&lt;small&gt;Discuss whether or not this merger should happen on the [[:{{{3|{{TALKPAGENAME}}}}}|discussion page]].&lt;/small&gt;}}
&lt;includeonly&gt;{{#ifeq:{{{example|no}}}|no|[[Category:Books to be merged|{{PAGENAME}}]]}}&lt;/includeonly&gt;&lt;noinclude&gt;
----
''This adds pages to [[:Category:Books to be merged]]''.[[Category:Merge templates]]

===Usage===
This template is used to suggest that another page it should be merged the page the template is added to.

{{tlx|mergefrom|page to be merged into this one}}

Optionally there are two additional arguments that let you specify a reason for merging and give a custom place for the discussion page to happen.
	
{{tlx|mergefrom|page to be merged into this one|reason for merge|discussion page}}

===See also===
{{tl|mergeto}}: used to mark the page intended to be the source of the merge.

&lt;/noinclude&gt;</text>
      <sha1>grre244q1g3o4qqhew4ar2l5j8me9kx</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/All Chapters</title>
    <ns>0</ns>
    <id>40809</id>
    <revision>
      <id>2503355</id>
      <parentid>2503350</parentid>
      <timestamp>2013-03-19T09:51:12Z</timestamp>
      <contributor>
        <username>Dirk Hünniger</username>
        <id>343292</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;noinclude&gt;

{{NOTE|At present there is an issue on how [[Wikipedia:Transclusion|transclusions]] are processed, from [[Wikipedia:Template limits|Template limits]] there are several ways to address this limitation but there seems also to be some bugs pending resolution. As is it is impossible to guarantee that all the book's content is displayed in this page.
See if you can work with the provided alternatives in the meanwhile or post a request for resolution on at the [[Wikibooks:Reading room/Technical Assistance]].}}
{{Print version notice|Ada Programming|Ada_Programming/All_Chapters}}

----

[[Image:Ada Lovelace 1838.jpg|right|caption|thumbnail|270px|[[w:Ada Lovelace|Augusta Ada King]], Countess of Lovelace.]]
__NOEDITSECTION__
__TOC__

= Preface =
{{:Ada Programming}}
&lt;/noinclude&gt;
= Basic Ada=
{{:Ada Programming/Basic}}

= Installing =
{{:Ada Programming/Installing}}
= Building =
{{:Ada Programming/Building}}
= Control Statements =
{{:Ada Programming/Control}}
= Type System =
{{:Ada Programming/Type System}}
= Integer types =
{{:Ada Programming/Types/range}}
= Unsigned integer types =
{{:Ada Programming/Types/mod}}
= Enumerations =
{{:Ada Programming/Types/Enumeration}}
= Floating point types =
{{:Ada Programming/Types/digits}}
= Fixed point types =
{{:Ada Programming/Types/delta}}
= Arrays =
{{:Ada Programming/Types/array}}
= Records =
{{:Ada Programming/Types/record}}
= Access types =
{{:Ada Programming/Types/access}}
= Limited types =
{{:Ada Programming/Types/limited}}
= Strings =
{{:Ada Programming/Strings}}
= Subprograms =
{{:Ada Programming/Subprograms}}
= Packages =
{{:Ada Programming/Packages}}
= Input Output =
{{:Ada Programming/Input Output}}
= Exceptions =
{{:Ada Programming/Exceptions}}
= Generics =
{{:Ada Programming/Generics}}
= Tasking =
{{:Ada Programming/Tasking}}
= Object Orientation =
{{:Ada Programming/Object Orientation}}
= New in Ada 2005 =
{{:Ada Programming/Ada 2005}}
= Containers =
{{:Ada Programming/Containers}}
= Interfacing =
{{:Ada Programming/Interfacing}}
= Coding Standards =
{{:Ada Programming/Coding standards}}
= Tips =
{{:Ada Programming/Tips}}
= Common Errors =
{{:Ada Programming/Errors}}
= Algorithms =
{{:Ada Programming/Algorithms}}
= Function overloading =
{{:Ada Programming/Function overloading}}
= Mathematical calculations =
{{:Ada Programming/Mathematical calculations}}
= Statements =
{{:Ada Programming/Statements}}
= Variables =
{{:Ada Programming/Variables}}
= Lexical elements =
{{:Ada Programming/Lexical elements}}
= Keywords =
{{:Ada Programming/Keywords}}
= Delimiters =
{{:Ada Programming/Delimiters}}
= Operators =
{{:Ada Programming/Operators}}
= Attributes =
{{:Ada Programming/Attributes}}
= Pragmas =
{{:Ada Programming/Pragmas}}
= Libraries =
{{:Ada Programming/Libraries}}
= Libraries: Standard =
{{:Ada Programming/Libraries/Standard}}
= Libraries: Ada =
{{:Ada Programming/Libraries/Ada}}
= Libraries: Interfaces =
{{:Ada Programming/Libraries/Interfaces}}
= Libraries: System =
{{:Ada Programming/Libraries/System}}
= Libraries: GNAT =
{{:Ada Programming/Libraries/GNAT}}
= Libraries: Multi-Purpose =
{{:Ada Programming/Libraries/MultiPurpose}}
= Libraries: Container =
{{:Ada Programming/Libraries/Container}}
= Libraries: GUI =
{{:Ada Programming/Libraries/GUI}}
= Libraries: Distributed Systems =
{{:Ada Programming/Libraries/Distributed}}
= Libraries: Databases =
{{:Ada Programming/Libraries/Database}}
= Libraries: Web =
{{:Ada Programming/Libraries/Web}}
= Libraries: Input Output =
{{:Ada Programming/Libraries/IO}}
= Platform Support =
{{:Ada Programming/Platform}}
= Platform: Linux =
{{:Ada Programming/Platform/Linux}}
= Platform: Windows =
{{:Ada Programming/Platform/Windows}}
= Platform: Virtual Machines =
{{:Ada Programming/Platform/VM}}
= Portals =
{{:Ada Programming/Portals}}
= Tutorials =
{{:Ada Programming/Tutorials}}
= Web 2.0 =
{{:Ada Programming/Web 2.0}}

&lt;noinclude&gt;
[[Category:Ada Programming| All Chapters]]
[[Category:Ada Programming/Print version|All Chapters]]
&lt;/noinclude&gt;</text>
      <sha1>h2t55xgo521q108dilyncwaj00k9rca</sha1>
    </revision>
  </page>
  <page>
    <title>Energy Efficiency Reference/Residential/How to Reduce Energy Usage</title>
    <ns>0</ns>
    <id>40810</id>
    <revision>
      <id>2751261</id>
      <parentid>2751256</parentid>
      <timestamp>2015-01-02T08:55:33Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/14.161.14.188|14.161.14.188]] ([[User talk:14.161.14.188|talk]]) to last version by Pauljohnstone2012</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Energy conservation is the practice of reducing the use of energy. Individual consumers can do numerous things to conserve energy and reduce home energy costs. Adopting just a few of these strategies can make a measurable difference in your overall energy usage, and the energy demands of the planet.

== Home energy usage ==
===General tips===
{| class=&quot;wikitable&quot; width=&quot;30%&quot; align=&quot;right&quot;
!colspan=&quot;2&quot; | Return on investment estimates for household energy efficiency improvements
|-
!Months || Modification
|-
|3 || High efficiency showerhead
|-
|13 || Fireplace pillow-stops air leakage up chimney
|-
|14 || Bathroom Faucet Aerator
|-
|17 || Attic Insulation (R-0 to R-38)
|-
|23 || Compact Fluorescent bulb
|-
|23 || Kitchen faucet aerator
|-
|43 || Attic insulation (average)
|-
|44 || Duct insulation and sealing
|-
|68 || Wall insulation (R-0 to R-25)
|-
|88 || Floor insulation (R-0 to R-13)
|-
! colspan=&quot;2&quot; | Source: [http://www.bankrate.com/brm/news/home-improvement/energy-side1.asp Portland General Electric. April 2003]
|}
*Choose energy-efficient home appliances, which have been designed with energy conservation in mind. In the United States, Energy Star is a government program to promote energy-efficient consumer products. The EU energy label is a similar European Union program.
*Choose natural gas furnaces, water heaters, stoves, and clothes dryers. Natural gas is significantly more efficient than electricity derived from fossil fuel sources, for heating purposes.  An efficient way to use electricity for heating is with a heat pump.
*Try to use natural ventilation and only use your heater when temperatures drop below 20°C(68°F), and try to only use cooling devices when temperatures get above 26°C(78°F).
*For tips on reducing transportation-related energy usage, see the [[#Transportation energy usage|Transportation energy usage]] section below.
*For tips on reducing energy at home, work and at travel, see [http://reducingenergy.blogspot.com Reducing Energy at home, work and travel]

===Reduce heating costs===
*Operate your furnace efficiently:
**Install a programmable thermostat and set it so your home will not be heated as much when you are away or asleep.
**Check your furnace's air filter monthly - replace/clean as required. Do this more often if there is a lot of dust or pet dander in your home's air.
**Get furnace serviced annually, check for slow gas line leaks- especially at the meter and pipe junctions
**Do not obstruct or close heating or air-return vents by placing furniture or other items in front or on top of them.
*Insulate and weatherize your home effectively:
**Ask your local utility to inspect your home to ensure that you have adequate insulation installed. Some may provide incentives for this checkup.
**Seal off rooms that are not in regular use and close heating vents.
**Carefully hold a smoking combustible material (such as an incense stick) near the frames of exterior doors and windows. If the smoke moves toward or away from the window, an air leak is likely. A thin shred of paper or string may also be used if a combustible smoking material is not available, though it may not work as well.
**Replace old, leaky windows (especially single-pane glass) with newer double or triple pane, gas filled, low E windows. If you have single-pane basement windows, consider replacing them with better windows, or, if they are never opened, consider replacing them with glass block, which is about as good as an ordinary double-pane window &lt;ref&gt;http://www.pittsburghcorning.com/homeowners/faq1.asp&lt;/ref&gt;, though not as good as an argon filled and/or low-e double-pane window. Keep at least two basement windows in place, however, so you can vent the basement if needed.
**Install heavy curtains over windows. Use them at night, let the sun in during the day.
**Fit full length curtains that fit snugly with the floor.  Fitting a pelmet above will also help reduce air circulation when the curtains are drawn.
**There are still benefits to be gained in placing radiators beneath windows so as to counteract the down-draft effect that the windows continue to generate despite improvements to window insulation.  Radiators beneath windows will obviously have greatest night time effect if a minimum of window cooled air is enabled to sink into a room while allowing the maximum radiator-warmed air to remain in the living space.  Overlaps between radiators and curtains should typically be avoided.  One practice is to tuck curtains behind the radiators or onto window sills on cold nights.
**Try not to place furniture in front of radiators especially if circulating air is prevented from being drawn in to the radiator's base by either the furniture itself or by all the stuff that gets packed beneath it. [http://leweselectrical.co.uk/energyefficiency/]
**Protect your home from cold winds by using windbreaks or other energy-efficient landscaping methods.
**Choose an apartment or condominium rather than a free-standing house. These dwellings share walls and therefore have fewer exterior walls.
*Heat less space:
**Choose a smaller home and avoid unnecessarily high ceilings to reduce the volume of space your heating system will have to heat.
**Wear several layers of clothing to keep your home's air temperature lower during the day.
**Use thick blankets so you can keep your home's air temperature lower at night. Wearing a cap at night can enable much lower temperatures. Use an electric blanket for comfortable sleeping while allowing the room's air temperature to be lower.
**If you live alone and/or in a large home, it may be more efficient to keep your overall house temperature low (55 to 65°F/13 to 18°C) and use an electric space heater to heat the areas you use most often. For example, keep a heater near your desk, or use one in the bathroom to avoid heating the whole house during your morning routine. You could even carefully use a hair-dryer to preheat your bed in seconds. Take care to use electric heaters safely, especially near water.
*Heat water efficiently:
**Turn down the temperature on your water heater to 120°F/49°C and drain the silt occasionally with a water hose. Be sure to check and replace the anode rods periodically as well.
**Replace your water heater with a heat pump water heater, which is generally 200% or more efficient, compared to regular electric water heaters which are always less than 100% efficient.
**Replace your water heater with a gas tankless water heater, which heats water on demand rather than storing heated water.
**Consider solar water heating options, especially if you live in a sunny region.
*&quot;Reuse&quot; heat:
**Leave hot water in the bathtub or in cooking pots instead of draining it immediately. This allows the water's stored heat to dissipate into your home rather than being lost down the drain. Keep lids on the pots to avoid cooling them by evaporation instead of by delivering heat to the room, and to avoid adding excess humidity.
**If you have an electric dryer, you may vent it inside occasionally. The vented air will be very moist, so track humidity levels; if the humidity is high for extended periods you may encourage mold and mildew growth. Venting the dryer hose into an empty bucket or garbage can will allow much of the humidity to condense and be collected. ''Under no circumstances should you vent gas dryers indoors due to carbon monoxide present in the exhaust.''

===Reduce cooling costs===
*Many of the steps you can take to reduce heating costs, such as insulating and sealing your home, will also reduce air conditioning costs.
*Install (easy for DIY folks) solar shades on the outside or exterior of all east, south and west facing windows. They prevent most of the sun's UV rays from even entering the home through the window. They cost much, much less than say an awning. And, you can still see outside.
*Use fans instead of air conditioning (Fans make the air feel about 4 degrees cooler).
*Turn fans off when no one is directly in the air stream of the fan. Fans do not actually cool the air; they help your skin to evaporate water more quickly, which cools you.
*If you have more than two window air conditioners, it is usually more energy-efficient to install a central air conditioner.
*Pay attention to efficiency ratings when looking for a new air conditioner.
*Size your system properly. Calculate the heat loads. ([http://www.northernac.com/ Free online calculator.])
*If you have a portable air conditioners, be sure that it is vented outside. If it is vented inside, you are actually heating your home.
*In geographic areas where summer night-time temperatures fall below 75°F/24°C, open windows and use window fans to pull cool outside air into your home. Depending on the layout of your home, it may be best to only open certain windows and position fans so outside air is pulled in on one side of the house and interior air is pushed out on the other side of the house. It may be a wise choice to install a whole-house fan (if in a sufficiently dry climate), which pulls air through your home and pushes it out through your attic. [http://hem.dis.anl.gov/eehem/99/990511.html Choosing a whole-house fan.]
*Install awnings over windows and close window blinds or curtains to keep direct sunlight out.
*Plant trees near your home. Choose locations that will shade your house during the afternoon. Even trees not directly shading your home will reduce local air temperatures.
*Drink plenty of fluids to help your body cool itself.
*Keep closet doors closed. This can save you up to 5% in heating/cooling and air costs alone.
*When possible avoid adding heat to your home, by eating cold foods or cooking outside on your grill, solar oven, or earth oven, by line drying instead of using a dryer, etc...

===Reduce lighting costs===
*Take advantage of sunlight and leave lights off during the day. If possible, adjust your daily routine to align your waking hours with sunlit hours.
*Use compact fluorescent light bulbs in place of conventional incandescent light bulbs. A '''CFL''' uses approximately one-fourth the wattage of an incandescent bulb producing a similar level of illumination, and they last 8,000 to 10,000 hours. The savings in electricity typically amounts to over $30 per replaced bulb. Replace your most-used bulbs first for maximum savings.
*Install motion-detection switches or timers for outdoor lighting rather than leaving lights on all night.
*Install dimmer switches for incandescent light fixtures so you can use less light when less is needed. CAUTION: Most CFLs and other fluorescent bulbs are not designed for use with a dimmer.
*Replace incandescent night lights with LED or electroluminescent (Indiglo&amp;trade;, Limelite&amp;trade;, etc.) lights.
*Don't use excessive holiday lighting.
*Dust light bulbs occasionally (with the power off) to increase light levels.
*Use limited, focused lighting when performing a task in a small area instead of lighting the entire room.
*Choose light fixtures that require fewer bulbs, or unscrew some of the bulbs in existing fixtures.
*Change conventional ballast with electronic ballast
*Try to limit the extent to which you put lights in forms of shade.  When &quot;light shades&quot; are needed choose those that merely diffuse light and have less potential to gather dust.[http://leweselectrical.co.uk/energyefficiency/]
*Use special capacitor for lamp, see the example of calculation in[http://saving-the-energy.blogspot.com/]

===Reduce water usage===
*Install water-saving shower heads, faucets, and toilets.
*Fix leaky pipes and plumbing fixtures in your home's plumbing system. Toilet tank leaks are easily detected by adding a few drops of food coloring to the water reservoir. If the water in the toilet bowl becomes dyed, water is leaking from the tank and the valve should be repaired or replaced.
*Lower the water level of your toilet's water reservoir. Be careful not to lower it to the point that it does not flush adequately. If your toilet's flush mechanism does not allow an easy way to lower the water level, place a plastic or glass jar filled with water into the water tank, clear of the flush mechanism, to displace water. Do not use a brick in your water tank, as it can break down and cause plumbing problems.
*Invest in a composting toilet
*Take showers instead of baths.
*Take shorter showers.
*Have an outdoor shower, where one hangs a five gallon bag in the sun throughout the day to heat.  (bags found in camping section)  To wash, wet for 1 minute, close clamp, soap up all bodily parts, then rinse with remaining 2.5 gallons.  Saves water and electricity on heat.
*Use the light cycle when using a dishwasher on dishes that aren't extremely dirty. Try the same when using a washing machine.
*Install a water softener if your water is &quot;hard&quot;.
*Water outdoor plants early in the morning or late in the evening to reduce the amount of water lost to evaporation.
*Mulch plants heavily to prevent weed growth (that would use up water) and water evaporation.
*Invest in a water barrel - use for watering plants, washing the car.
*Use a public swimming pool instead of purchasing your own.
*Wash and rinse clothing by hand with a hand wringer.
*Run full loads for washing dishes or clothes.

===Reduce household waste===
*Do not purchase products with excessive or unnecessary packaging.
*Purchase products in the largest size practical so as to reduce the product:packaging ratio. However, do not purchase products in larger quantities than you will actually use, and be aware that having a larger quantity on hand may cause you to use more of the product than you would have ordinarily used.
*Use and reuse gift bags in place of gift wrap.
*Bring your own bags or boxes along when shopping to carry your purchases home.
*Put off purchases whenever possible. You will often find that you didn't really need the item.
*Use rechargeable batteries instead of conventional batteries.
*Compost food waste instead of throwing it in the garbage.
*Reuse &quot;garbage&quot; for other than intended purposes.  For example, make Easter baskets out of gallon milk jugs,planters out of yogurt cups, butter bowls for saving leftovers in the fridge, etc..

===Reduce electricity usage===
*Turn off all electric appliances (lights, computers, televisions) when they are not in use. Computer printers and photocopiers are typically high energy users.
*Watch TV with the light off.
*Change out a CRT TV with an LCD model of equivalent size.
*Reduce miscellaneous electric use from power adapters and electronics in standby mode by plugging them into a power strip that can be switched off.
*Use the new LED light bulbs available.  You may have to switch to E-27 Sockets in order to fit the new bases for the LED lights.
*Set your computer to automatically shut off the monitor and switch to standby mode (if available) after a certain number of minutes of disuse. Choose a flat panel display instead of a conventional CRT. Adjust your display's brightness to the surrounding light conditions (less brightness is needed in dark rooms).
*Purchase a laptop and use it as a replacement for your desktop computer. Most laptops are optimized for energy efficiency and don't need an uninterruptible power supply, since the battery can be used during thunderstorms and the like.
*Use products with the Energy Star logo (or similar). In particular, recycling and replacing old refrigerators with an Energy Star-approved one can save a few hundred kilowatt-hours a year. Replacing old refrigeration and air conditioning units (even if they are still functional) with more efficient ones is often an economically and ecologically sound decision.
*Consider installing and using a clothes line for drying clothes.  Each load not dried in an electric dryer saves 3 to 5 kilowatt hours.
*Unplug appliances that will not be used for an extended period of time; many devices, especially consumer electronics, use a small amount of electricity even when they are switched off, due to indicator lights or listening for remote-control signals. Direct current converters, which are typically used to connect small consumer electronics devices to household power, lose a significant amount of energy as heat, even when the device is not plugged into the converter.
*Set your furnace/AC fan to &quot;auto&quot; rather than &quot;on&quot; so it will not run when the furnace/AC unit itself is off. The fan uses a significant amount of electricity.
*Your refrigerator is probably among the biggest energy users in the home. Take special care to operate it efficiently:
**Clean the condenser coils on your refrigerator to keep them operating efficiently.
**Reduce the number of trips you make to the refrigerator/freezer and do not leave the door open unnecessarily.
**Refrigerator/freezer configuration affects the unit's efficiency. Bottom-freezer models are generally most efficient. Top-freezers (the most common configuration) are reasonably efficient. Side-by-side models are relatively inefficient. Chest freezers are generally more efficient than conventional front-opening models.
**Small refrigerators are often less efficient than larger models because they usually have less insulation or a less-efficient compressor.
**Keep your refrigerator/freezer reasonably well stocked so that less cold air is lost when the door is opened.
**Cover beverages and moist foods to keep the humidity level in the refrigerator lower. Dry air is easier to cool.
**Keep your refrigerator's temperature above 36°F/2°C and below 42°F/5.5°C. Keep your freezer's temperature at about 0°F/-18°C. A good gauge of freezer temperature is ice cream. If the ice cream is too soft, lower the temperature; if it is very hard and difficult to spoon, raise the temperature.
**As an alternative to using your refrigerator, consider storing less-frequently used foods in a cold-store room, cellar, or garage.
*When cooking:
**Turn off your electric oven or stove shortly before the end of the required cooking time; the heating element will still be hot enough to finish the cooking process.
**Cover pots to reduce heat loss.
**Do not heat a small pot on a large burner.
**Microwave foods when possible. However, microwaving liquids or foods with high moisture content is usually less energy-efficient than heating it on a stove.
**Thaw or partially thaw frozen food in the refrigerator prior to cooking.
**Replace drip pans periodically. Dirty drip pans are much less reflective than new pans and cannot reflect as much heat back up to the pan being heated.
**Avoid opening the oven door unnecessarily. Instead, view the food through the door's window and use a timer to help you determine when the food will be fully cooked. Most foods are fully cooked when the fragrance of the food begins to fill the room from within the oven.
**Invest in a solar oven if your region will allow for it

=== Ventilate properly ===
Proper attic ventilation will:
* keep the house cooler in hot weather. Attics radiate heat downward when they are hotter than the living area.
* keep the attic cold in the winter, which can prevent ice dams.
* allow moisture to escape from the house. Warm, moist air rises from the living area. Ventilation of this humid air is important year-round for preventing mold and rot, but it is especially important in the winter, when the moisture is more likely to condense.

Be aware that decreased ventilation increases the effectiveness of any insulation that is a poor barrier to air infiltration, such as fiberglass batting. The increased ventilation will create low pressure areas, so that the house will push conditioned air through the insulation faster than it normally would.

With insufficient ventilation:
* Attic heat can penetrate into living areas during summer.
* There will be excessive humidity, which can cause mold and eventually rot.
* Water vapor can condense and collect on insulation, on rafters, and on the underside of roof sheathing.  This will reduce the effectiveness of the insulation and can greatly hasten the activity of mold and rot.
* Condensation and mold will also occur in the living area, especially on perimeter walls (because they are coolest) and where ventilation is poorest, such as in corners and around furniture.

You will need more ventilation than usual if:
* You live in a damp climate.
* Your house is in the shade.
* The crawlspace or basement has a dirt floor.
* There isn't much wind.
* You have a modern, super-tight house.
* You have a solid masonry house.
* You have a house with impermeable siding such as vinyl or aluminum.
* You do not have sufficient (or any) vapor barriers.

Most houses treat the attic and basement as unconditioned space. You can think of unconditioned space as outdoor space, minus the rain and snow. The unconditioned space surrounding the living area shouldn’t be wide open, but it shouldn't be sealed shut either. A good compromise is to have two foundation vents in the basement and two different types of vents in the attic. Vents should always exist in pairs (but not necessarily two of the same type) to allow for cross-ventilation. In an attic, one member of the pair should be low on the roof and the other member should be higher up, so that outside air is pulled through one and out the other.  Natural attic ventilation through these vents is usually sufficient. Powered vents in the attic may interfere with proper furnace and fireplace venting.

Some ways to ventilate an attic naturally:
* Soffit vents
* Ridge vents (you can cover the ridge vent with shingles)
* Gable vents

Modern homes often incorporate all three types of attic vents, providing continuous cross-ventilation via multiple air pathways.

Make sure gable vents have screens to keep out insects and animals, and keep the screens clean to maintain proper ventilation.

Never close or block off the vents to a damp basement or crawlspace, except in extreme cold to prevent pipes from freezing.  Closing the vents to a damp basement or crawlspace will cause mold, rot, and structural defects.  Sometimes a basement or crawlspace will look bone dry but is transpiring moisture through the dirt floor at a rapid rate. To see if this is the case, lay down some clear plastic on the dirt floor for a few days and observe how much water collects on its underside.

If your basement or crawlspace is dry and has been dry for several years you can:
* Close the foundation vents in the winter to conserve energy, and open them again in the warmer months to allow interior moisture from the house to escape.
* Close the foundation vents permanently, install a polyethylene vapor barrier on the floor (just to be safe), insulate the basement or crawlspace walls, and part of the floor, if necessary, and include the basement or crawlspace as part of the conditioned space of the house. If you take this route you don’t need to insulate the floor above the basement or crawlspace, but it doesn’t hurt if the floor is already insulated. Keep an eye on humidity.  There will be less condensation on walls and pipes, but possibly greater humidity because of trapped air, requiring increased ventilation in the upper floors and attic to compensate.

Advantages of insulating a dry basement and crawlspace and making them part of the conditioned space of the house:
* Decreased condensation, because walls are closer in temperature to the air inside the house, and because cold pipes are not exposed to outdoor air during the warmer months.
* Reduced energy losses from ducts passing through the basement.
* Reduced risk of pipes freezing in winter.

====Residential ventilation checklist====
* Vent sources of moisture directly to the outside. This is especially important for the bathroom, which normally produces more moisture than any other room in the house, and for the dryer, which produces more moisture than any other appliance.
* Do not vent moisture directly into the attic. The last thing you want to do is put warm, moist air into the attic. In cold climates this can contribute to icing and resulting leaks.  
* A whole-house fan is acceptable because of its usual location, installed in the attic floor near a gable vent, and because it is not directly connected to a source of moisture. The whole-house fan can help to remove cooking odors and can cool the entire house when it is not hot enough to turn on the air conditioning. Use caution: natural-draft heating appliances could be adversely affected by too much exhaust - products of combustion could be drawn into the house.
* If you cannot vent the bathroom directly to the outside, install the vent up through the attic and down through a soffit vent. This will prevent water from dripping back down into the vent as it would if you installed the duct straight up through the roof. Wire the bathroom vent to a timer switch, so that people can turn it on without having to remember to turn it off.
* Always vent the clothes dryer to the outside with a smooth-walled (do not screw into walls of duct), metal (not plastic) duct that is as short as possible. To prevent a house fire check the duct for clogs regularly.  Do not vent the dryer directly into the laundry room.  This puts much too much moisture into the house.
* Kitchens should have a vent hood with an exhaust fan. The vent hood should have a back draft flap to keep out insects and cold air  - but some cold air will inevitably seep in.
* Install ceiling fans to improve ventilation and distribute heat. To disperse heat properly run the ceiling fan in reverse so that it pushes warm air up against the ceiling and down along the walls, where people tend to sit.
* Do not block air intake vents for heating or air conditioning equipment. Blocking these vents will starve the equipment for air, causing it to run inefficiently.
* If your unfinished basement has windows, keep them closed on hot, humid days to prevent moisture from condensing on the walls continuously, all day long. Open the windows once the humidity drops below the natural humidity of the basement so that moisture doesn’t build up inside.
* People, in their zeal to do a good job, sometimes pack insulation into the eaves, blocking the soffit vents, because they don’t know that the vents exist or don’t know what they are for. If you are installing insulation in the attic for the first time do not cover the soffit vents with insulation.
* If your attic is already insulated on the floor make sure insulation is not blocking the soffit vents. This is more of a problem for loose-fill, since wind can scatter the fill around.  To prevent loose-fill from scattering and covering the soffit vents, you can install baffles between the rafters.  You staple the baffles to the underside of the roof sheathing, and the baffles maintain 2 inches of ventilation space next to the sheathing.
* Wind coming through soffit vents can also push batt insulation up off the floor, causing cold airflow against the ceiling and cold spots high up on exterior walls. Baffles installed near the eave should also prevent this problem by keeping the batts from flipping up and over.
* If you are going to install batts or spray foam between the rafters, you should extend the baffles all the way up to the ridge vent.  This will keep the sheathing dry and prevent it from rotting invisibly behind the insulation.
* Likewise, when you insulate between the floor joists in the ceiling of an unconditioned basement or crawlspace, you should leave some space between the insulation and the sheathing (subfloor) to allow water vapor to escape.

===Other conservation tips===
There are many ways to conserve energy that will not economically benefit the consumer directly. However, many of these methods improve overall efficiency of the economy, which can lead to economic growth.
*Rent or borrow items you will not use very often. This eliminates the significant amount of energy that goes into the manufacture and disposal of an additional item.
**Check books out from your local library rather than purchasing your own copy.
**Purchase used items when possible.
**Donate usable clothing and other items to charity rather than discarding them.
*Use &quot;disposable&quot; items (such as paper and plastic dishware and cutlery, or disposable cameras) sparingly. Opt instead for the reusable version.
*At public restrooms, use electric hand dryers (if available) instead of paper towels. The energy needed to heat and blow air at your hands is far less than the energy needed to make and transport paper towels and haul waste away.
*Use a digital camera in place of a conventional film camera and get prints of only the best photographs. Use a printing service rather than purchasing your own photo printer.
*Use toilet paper, paper towels, and other products made of recycled materials.
*Ask your local energy utility about credits or rebates given for the purchase of energy-efficient appliances.
*Make an effort to defer electricity usage to off-peak hours. Reducing usage during peak hours (usually mid-afternoon to early evening on hot days) helps prevent the construction of additional power plants that would be required to keep up with demand during peak hours.
**If you plan to use air conditioning, cool your house early in the day and turn it off around noon, allowing the house to warm up throughout the afternoon.
**Do laundry early in the morning or late at night.
**Eat a &quot;cold&quot; non-cooked meal (sandwiches, fruit, etc.) or cook outside for lunch. This saves the electricity needed for cooking and/or the electricity needed by the air conditioner to cool the heated air.

== Transportation energy usage ==
Moving from one place to another takes energy. This book offers some advice on how to reduce the energy and cost associated with transportation in general, and driving in specific. The first priority is to reduce driving where possible. When driving is necessary, you should try to drive lighter, more conservatively, and in a fuel-efficient vehicle.

===Drive less===
*Walk, bike, carpool, or use public transportation whenever possible.
*If practical for your job, ask your employer to let you telecommute on occasion to save trips to the office. Or, if your work hours are flexible, consider working four 10-hour days a week instead of five eight-hour days, to save a commute each week.
*Choose a home near your workplace if possible.
*Spend some time planning your errands to reduce the number of trips needed.
*Choose routes that have fewer stops and less congestion. A slightly longer freeway route is usually more efficient than a street route. If possible, avoid driving during rush hour so you aren't wasting fuel in slow-moving traffic.

===Drive light===
*When purchasing a vehicle, choose a smaller, lighter vehicle. You may be able to purchase a small vehicle and borrow or rent a truck or other large vehicle when needed. However, take care to compare safety statistics of light vehicles.  The smallest vehicles, especially motorcycles, carry higher risks of injury or death in crashes.
*Don't leave unnecessary items in your vehicle. The clutter may only amount to a few pounds, but hauling it around adds up over time. Consider also that there are around 200 million vehicles in the United States alone; if each of those carried just one pound of excess cargo, it would amount to 100,000 tons.
*Open windows create significant drag when driving at highway speeds. During warm weather, keep your windows up and use the air conditioner (if needed) when traveling at 45 MPH or above. When driving at lower speeds, turn the AC off. However, do ''not'' continually turn the AC on and off. It functions more efficiently during longer periods of operation.
*Don't put magnetic decals, flags, antenna decorations, or the like on your vehicle. These create drag.

===Drive conservatively===
*Reduce your speed. The amount of fuel needed to push air out of your vehicle's path increases rapidly with increases in speed. As a result, fuel efficiency drops rapidly. Most vehicles are most fuel efficient between 50 and 55 MPH. However, do ''not'' drive so slowly that you impede the flow of traffic, which creates dangerous situations.
*Accelerate slowly. Getting your vehicle &quot;up to speed&quot; quickly is hard on your vehicle and uses more fuel than a slow start. Also, braking softly farther from your intended stopping point will make your brakes last longer.
*Use your cruise control. Steady speeds are more efficient. Do not use cruise control in inclement weather.
*If you are parked for more than a minute, turn your vehicle off. A non-moving vehicle gets zero miles per gallon. However, stopping and starting your vehicle too frequently causes excess wear on your engine. Diesel vehicles should not be turned off frequently as the ignition process uses significant fuel.
*Do not push the gas pedal when approaching a red light (if it will not change to green by the time you get to it). Rushing to a red light will not get you to your destination any faster.

===Keep your vehicle running efficiently===
*Keep your tires inflated to the recommended tire pressure.
*Change spark plugs when recommended by your owner's manual.
*Check your air filter regularly; more frequently if you drive in dusty conditions. To check it, hold it up to the light: if you cannot see light through the filter, replace it.
*Use regular-grade gasoline unless premium or mid-grade gasoline is specifically recommended by your owner's manual.

==References==
{{reflist}}
*[http://saving-the-energy.blogspot.com/ Let's Save Our World By Saving The Energy]
*[http://dailyhomerenotips.com/energy-conservation/ Free Energy Savings and Water Savings Guide]
*[http://www.sensegrow.com/blog/ghost-loads-or-phantom-loads Ghost loads or Phantom loads account for 7% of energy wasted.]
*[http://www.rix.co.uk/domestic-fuel/energy-saving-tips/ An energy saving guide by J R Rix and Sons]
*[http://www.crownoil.co.uk/news/call-action-challenge-fuel-poverty/?utm_source=wikibooks&amp;utm_medium=fuel%20poverty&amp;utm_campaign=201114 Reduce energy - fuel poverty]
[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>g2xzld1wjrlh4uadbe6q3q7w0kfl1m6</sha1>
    </revision>
  </page>
  <page>
    <title>File:Acousticalmass.gif</title>
    <ns>6</ns>
    <id>40811</id>
    <revision>
      <id>249968</id>
      <parentid>233346</parentid>
      <timestamp>2005-10-06T04:41:02Z</timestamp>
      <contributor>
        <username>Shin31</username>
        <id>10754</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">piston-rigid tube system
{{GFDL-self}}</text>
      <sha1>1ihfog9n1n1ledwk1s6960fsfkqe4z4</sha1>
    </revision>
  </page>
  <page>
    <title>How to reduce transportation fuel costs</title>
    <ns>0</ns>
    <id>40812</id>
    <redirect title="Energy Efficiency Reference/Residential/How to Reduce Energy Usage" />
    <revision>
      <id>1428622</id>
      <parentid>1127474</parentid>
      <timestamp>2009-02-27T09:12:05Z</timestamp>
      <contributor>
        <username>Dlrohrer2003</username>
        <id>70881</id>
      </contributor>
      <comment>Changing redirect</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT [[Energy Efficiency Reference/Residential/How to Reduce Energy Usage]]</text>
      <sha1>b2ggs2bs86jf3u1zsycd9yr94hbwqgh</sha1>
    </revision>
  </page>
  <page>
    <title>File:FBD.gif</title>
    <ns>6</ns>
    <id>40814</id>
    <revision>
      <id>249969</id>
      <parentid>233370</parentid>
      <timestamp>2005-10-06T04:41:17Z</timestamp>
      <contributor>
        <username>Shin31</username>
        <id>10754</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">free body diagram
{{GFDL-self}}</text>
      <sha1>eslys6caa43xtce8i0jpiq1flrqlk5b</sha1>
    </revision>
  </page>
  <page>
    <title>Template:Radiation Oncology/SCLC/TOC</title>
    <ns>10</ns>
    <id>40815</id>
    <revision>
      <id>1732382</id>
      <parentid>1666955</parentid>
      <timestamp>2010-03-08T21:19:20Z</timestamp>
      <contributor>
        <username>Brim</username>
        <id>2387</id>
      </contributor>
      <minor />
      <comment>moved [[Template:Radiation Oncology/Lung/SCLC:TOC]] to [[Template:Radiation Oncology/SCLC/TOC]]: reorganized Lung topics</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;!-- This is the table of contents that will appear on the top of each page and allow navigation to the front page as well as other chapters of the book --&gt;
&lt;!-- Changes here should also be reflected at Radiation Oncology/Lung/SCLC --&gt;
{| WIDTH=&quot;100%&quot; style=&quot;background-color: #f2fff2; border: solid 1px #bfffbf;&quot; cellspacing=&quot;0&quot;
|- valign=top
| 
'''Front Page:''' [[Radiation Oncology]] | [[Radiation Oncology:RTOG_Trials|RTOG Trials]] | [[Radiation_Oncology/Randomized|Randomized Trials]]
| align=right | {{:Radiation Oncology:Template Edit|Radiation Oncology/Lung/SCLC:TOC|this}}
|-
| colspan=2 |
'''SCLC:''' [[Radiation Oncology/Lung/SCLC|Main Page]] | 
[[Radiation Oncology/Lung/SCLC/Overview|Overview]]  | 
[[Radiation Oncology/Lung/Anatomy|Anatomy]] |
[[Radiation Oncology/Lung/SCLC/Limited_Stage|Limited Stage]] |
[[Radiation_Oncology/Lung/SCLC/Extensive_Stage|Extensive Stage]] |
[[Radiation Oncology/Lung/SCLC/PCI|PCI]] |
[[Radiation_Oncology/Lung/SCLC/Randomized|Randomized]]
|}{{BookCat}}</text>
      <sha1>iqpisrtacld8bgpip7ygc8526g7ryxl</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/SCLC/Overview</title>
    <ns>0</ns>
    <id>40816</id>
    <revision>
      <id>1810046</id>
      <parentid>1745056</parentid>
      <timestamp>2010-05-30T19:37:19Z</timestamp>
      <contributor>
        <username>Tjk</username>
        <id>362594</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Radiation Oncology/SCLC/TOC}}

==Presentation==
About 30% have limited stage disease. 

==Symptoms==
*Clinical presentation: Cough and dyspnea
*Paraneoplastic syndromes: 
**[[w:Lambert-Eaton_myasthenic_syndrome|Lambert-Eaton]]: progressive muscular weakness similar to myasthenia gravis, but starting with proximal leg muscles, caused by autoantibody to voltage-gated calcium channels)
**[[w:Encephalomyelitis|Paraneoplastic encephalomyelitis]]: multiple neurologic deficits, caused by anti-Hu antibody that cross-reacts with SCLC antigens and neuronal RNA-binding proteins
**[[w:Cushing's_syndrome|Cushing's syndrome]]: central obesity (including moon face and buffalo hump), thin skin, hirsutism, striated skin, caused by inappropriate ACTH release  
**[[w:Syndrome_of_inappropriate_antidiuretic_hormone_hypersecretion|SIADH]]: hyponatremia and fluid overload, caused by inapropriate ADH release

==Workup==
*CBC, LFT’s, LDH, electrolytes, Ca++, BUN/Cr
*bronchoscopy/biopsy, sputum cytology. Thoracentesis rec'd if effusion present.
*CT chest/liver/adrenal, CT/MRI brain
*Bone scan or PET (not currently reimbursed by CMS for SCLC).
*Mediastinoscopy or surgical LN evaluation if T1-T2 N0.
*Bone marrow involved in 15-30% of patients, but solitary site in only 2-5% of cases, therefore, biopsy not usually obtained

==Pathology==
*Malignant epithelial tumor, small cells, scant cytoplasm, high mitotic count
*In up to 30% of autopsies, areas of NSCLC differentiation, suggesting pluripotent stem cell origin
*Immunoreactive for keratin, epithelial membrane antigen, TTF-1 and neuroendocrine markers (chromogranin A, NSE, NCAM, synaptophysin) though these alone not sufficient since they are present in ~10% of NSCLC

==Staging==
*There are 3 staging systems that are frequently used:
**AJCC is the official staging in US, which is the same as for NSCLC, but is not routinely used
**VA Lung Study Group defined &quot;limited disease&quot; and &quot;extensive disease&quot; in 1957 in its inoperable lung trials. Limited stage patients could be treated in a reasonable RT portal. However, patients with ipsilateral pleural effusion and contralateral SCV nodes were not well defined. Some investigators treated these as limited stage, others as extensive stage, and they were typically not accrued onto limited stage trials
**International Association of Lung Cancer clarified the VA staging in 1989 to include all non-metastatic patients in the limited stage category


===AJCC===
:''See: [[Radiation Oncology/Lung/NSCLC/Staging]]''

===VA Lung Study Group===
*'''1973''' PMID 4580860 -- &quot;Keynote address on biostatistics and data retrieval.&quot; (Zelen M, Cancer Chemother Rep 3. 1973 Mar;4(2):31-42.)
**Limited Disease: 
***a) Disease confined to one hemithorax, although local extensions may be present;
***b) No extrathoracic metastases except for possible ipsilateral supraclavicular nodes if they can be included in the same portal as the primary tumor; 
***(c) Primary tumor and regional nodes which can be adequatly treated and totally encompassed in every portal. 
**Extensive Disease:
***Inoperable patients who cannot be classified as having limited disease.
**Controversial (not well defined):
***Ipsilateral pleural effusion
***Contralateral supraclavicular nodes

===International Association of Lung Cancer===
*'''IASLC; 2007''' PMID 18090577 -- &quot;The International Association for the Study of Lung Cancer lung cancer staging project: proposals regarding the clinical staging of small cell lung cancer in the forthcoming (seventh) edition of the tumor, node, metastasis classification for lung cancer.&quot; (Shepherd FA, J Thorac Oncol. 2007 Dec;2(12):1067-77.)
**Retrospective. Survival analysis using IASLC and SEER databases
**Conclusion: TNM staging is recommended for SCLC

*'''IASLC; 1989''' &lt;No PMID&gt; -- &quot;Staging and prognostic factors in small cell lung cancer; a consensus report.&quot; (Stahel RA, Lung Cancer 1989;5:119-26.)
**Limited Disease: &quot;The classification of limited disease SCLC should include patients with the disease restricted to one hemithorax with regional lymph node metastases, including hiliar ipsilateral and contralateral mediastinal, and ipsilateral and contralateral mediastinal, and ipsilateral and contralateral supraclavicular nodes and should also include patients with ipsilateral pleural effusion independent whether the cytology is positive or negative.&quot;
**Extensive Disease: &quot;The classification of extensive disease SCLC should comprise all patients with sites of disease beyond the definition of limited disease. Thus extensive disease as proposed here is equivalent to stage IV, whereas limited disease is equivalent to stage I-III of the revised TNM system.&quot;

===Staging Comparison===
*'''Mainz; 2002''' (Germany) PMID 12234695 -- &quot;Staging small cell lung cancer: Veterans Administration Lung Study Group versus International Association for the Study of Lung Cancer--what limits limited disease?&quot; (Micke P, Lung Cancer. 2002 Sep;37(3):271-6.)
**Retrospective. 109 consecutive SCLC patients classified in the 2 staging systems. 21% controversial
**Conclusion: IASLC staging criteria higher prognostic impact than VALG

==Survival==
*No treatment - Median survival - 2-4 months
*Limited stage - Median survival - 16-24 months. 5-yr survival - 20%.
*Extensive stage - Median survival - 6-12 months. Few long term survivors.


*'''NCI; 2002''' (1972-1992) PMID 12237922 -- &quot;Twenty-five years of clinical research for patients with limited-stage small cell lung carcinoma in North America.&quot; (Janne PA, Cancer. 2002 Oct 1;95(7):1528-38.)
**Review of 6564 patients on 30 Phase III trials in North America and SEER database outcomes
**Outcome: Median OS treated 1972-1981 12 months vs. treated 1982-1992 17 months (SS); however only 5/26 RCT showed a significant improvement in OS. SEER database shows improved 5-year OS 5% to 12% (SS)
**Conclusion: Significant improvement in OS over time</text>
      <sha1>53n2h5e66sgpxpws01cruo17vbyl60c</sha1>
    </revision>
  </page>
  <page>
    <title>Old English/Pronouns</title>
    <ns>0</ns>
    <id>40821</id>
    <revision>
      <id>2539517</id>
      <parentid>2539516</parentid>
      <timestamp>2013-06-26T14:44:52Z</timestamp>
      <contributor>
        <username>Actualist</username>
        <id>950734</id>
      </contributor>
      <minor />
      <comment>/* Relative pronouns */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Old English}}
----

Pronouns are used to substitute for nouns. They are words like &quot;I&quot;, &quot;you&quot;, &quot;he&quot;, &quot;they&quot;, &quot;anybody&quot;, &quot;who&quot;, and many more. They are not a requirement of a sentence, and it is possible for them to never to be used in sentences. However, they are useful because they help avoid repeating the same noun over and over again; and they make it easer for a sentence to understand. For an example without using any pronouns, see this sentence:

*Alistair is doing what Alistair thinks is best for Alistair's rights as a human being.

Because it repeats &quot;Alistair&quot; so much it seems strange and tedious. A more usual way to say the above, using pronouns, would be:

*Alistair is doing what he thinks is best for his rights as a human being. 

There are different types of pronouns:
*[[Old English/Pronouns#Personal pronouns|Personal pronouns]] - usually refer to specific persons or objects
*[[Old English/Pronouns#Interrogative pronouns|Interrogative pronouns]] - used to ask questions of identity like Modern English &quot;who&quot;, &quot;what&quot;, and &quot;which one&quot;
*[[Old English/Pronouns#Relative pronouns|Relative pronouns]] - used after another substansive to add additional information, like Modern English &quot;who&quot; in &quot;John is the person who I like&quot;
*[[Old English/Pronouns#Demonstrative pronouns|Demonstrative pronouns]] - words used often when pointing to something, with with a sense of location, as in Modern English &quot;this&quot; or &quot;that&quot;
*[[Old English/Pronouns#Indefinite pronouns|Indefinite pronouns]] - used to talk about nobody in particular, or about everyone in general, like Modern English &quot;anybody&quot; and &quot;everybody&quot;. Also includes negative pronouns - pronouns used to talk about &quot;nobody&quot; or &quot;nothing&quot;.

Like nouns and adjectives, pronouns are declined according to case, gender (only sometimes), and number.

==Personal pronouns==

The simple personal pronouns are declined like this:

===First person===
First person pronouns are pronouns that refer to the speaker (in singular), or the speaker and other people (in dual and plural), like Modern English &quot;I&quot; and &quot;we&quot;.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|-
! style=&quot;background:#e74;&quot; |'''Case'''
! style=&quot;background:#fed;&quot; |'''Singular'''
! style=&quot;background:#fed;&quot; |'''Dual'''
! style=&quot;background:#fed;&quot; |'''Plural'''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || iċ || wit || wē
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || meċ, mē (in later OE) ||uncit, unc || ūsiċ, ūs
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || mīn || uncer || ūser, ūre
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || mē || unc ||ūs
|}

Notice that there is a dual number; it means &quot;both&quot; or &quot;two&quot; as in &quot;we both&quot; or &quot;we two&quot;. The separate dual number is exceptional and rare. If used with an adjective or a verb, it should take the same declensions and conjugations as plural. Since there is a dual number for each set of pronouns, the plural form should only be used for three or more.

===Second person===
Second person pronouns are for the person who is being spoken to, like Modern English &quot;you&quot;.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|-
! style=&quot;background:#e74;&quot; |'''Case'''
! style=&quot;background:#fed;&quot; |'''Singular'''
! style=&quot;background:#fed;&quot; |'''Dual'''
! style=&quot;background:#fed;&quot; |'''Plural'''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || þū || ġit || ġē
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || þeċ, þē (in later OE) || inċit, inċ || ēowiċ, ēow
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || þīn || inċer ||ēower
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || þē || inċ || ēow
|}

===Third person===
Third person pronouns refer to another person not involved in a conversation, like Modern English &quot;he&quot;, &quot;she&quot;, &quot;it&quot;, and &quot;they&quot;.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|-
! style=&quot;background:#e74;&quot; |'''Case'''
! style=&quot;background:#fed;&quot; |'''Masc. sg.'''
! style=&quot;background:#fed;&quot; |'''Neut. sg. sg.'''
! style=&quot;background:#fed;&quot; |'''Fem. sg.'''
! style=&quot;background:#fed;&quot; |'''Pl. all genders'''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || hē || hit || hēo || hīe
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || hine || hit || hīe || hīe
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || his || his || hire || heora
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || him || him || hire || him
|}

==Interrogative pronouns==

Interrogative pronouns are pronouns used to ask questions of identity, such as Modern English &quot;who&quot; and &quot;what&quot; as in &quot;Who are you?&quot; and &quot;What is that animal?&quot; The following are Old English interrogative pronouns:

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#fd8;&quot; colspan=&quot;7&quot;|'''&quot;Hwā&quot; - &quot;who&quot;'''
|-
! style=&quot;background:#e74;&quot; |'''Case'''
! style=&quot;background:#fed;&quot; |'''Sg. and pl.'''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || hwā
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || hwone
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || hwæs
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || hwǣm, hwām
|}

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#fd8;&quot; colspan=&quot;7&quot;|'''&quot;Hwæt&quot; - &quot;what&quot;'''
|-
! style=&quot;background:#e74;&quot; |'''Case'''
! style=&quot;background:#fed;&quot; |'''Sg. and pl.'''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || hwæt
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || hwæt
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || hwæs
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || hwǣm, hwām
|-
| style=&quot;background:#fed;&quot;|'''Instrumental''' || hwȳ
|}

The instrumental form of &quot;hwæt&quot; (''hwȳ'') is used to mean &quot;why&quot;. Also used for &quot;why&quot; is ''for hwȳ''.

In Old English, they had a word meaning &quot;which of two&quot; as might be used in &quot;Which of the two children went with you?&quot;, declined the same as the strong adjective declension.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#fd8;&quot; colspan=&quot;7&quot;|'''&quot;Hwæðer&quot; - &quot;which of two&quot;'''
|-
! style=&quot;background:#e74;&quot; rowspan=&quot;2&quot;|'''Case'''
! style=&quot;background:#fed;&quot; colspan=&quot;3&quot;|'''Singular'''
! style=&quot;background:#fed;&quot; colspan=&quot;3&quot;|'''Plural'''
|-
| style=&quot;background:#fed;&quot;|'''Masculine'''
| style=&quot;background:#fed;&quot;|'''Neuter'''
| style=&quot;background:#fed;&quot;|'''Feminine'''
| style=&quot;background:#fed;&quot;|'''Masculine'''
| style=&quot;background:#fed;&quot;|'''Neuter'''
| style=&quot;background:#fed;&quot;|'''Feminine'''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || colspan=&quot;3&quot;| hwæðer || hwæðre || hwæðer || hwæðra
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || hwæðerne || hwæðer || hwæðere || hwæðre || hwæðer || hwæðra
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || colspan=&quot;2&quot;| hwæðres || hwæðerre || colspan=&quot;3&quot;|hwæðerra
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || colspan=&quot;2&quot;| hwæðrum || hwæðerre || colspan=&quot;3&quot;|hwæðrum
|-
| style=&quot;background:#fed;&quot;|'''Instrumental''' || colspan=&quot;2&quot;| hwæðre || hwæðerre || colspan=&quot;3&quot;|hwæðrum
|}

Like ''hwæðer'' is ''āhwæðer'' &quot;some one, something; any one; anything&quot;, ''ǣġhwæðer'' &quot;of two&quot; &quot;either, both, each&quot;; &quot;of many&quot; &quot;every one, each&quot;, ''nāhwæðer'' &quot;neither&quot;, ''swæðer'' &quot;whichever of two, whosoever of two&quot;.

The following word is also used as an interrogative adjective, like Modern English &quot;which&quot; as in &quot;Which fruit did you eat?&quot; Used standalone as a pronoun, though, it means &quot;which one&quot;. Because it is an adjective, it also simply takes the strong adjectival declension.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#fd8;&quot; colspan=&quot;7&quot;|'''&quot;Hwilċ&quot; - &quot;which one&quot;'''
|-
! style=&quot;background:#e74;&quot; rowspan=&quot;2&quot;|'''Case'''
! style=&quot;background:#fed;&quot; colspan=&quot;3&quot;|'''Singular'''
! style=&quot;background:#fed;&quot; colspan=&quot;3&quot;|'''Plural'''
|-
| style=&quot;background:#fed;&quot;|'''Masculine'''
| style=&quot;background:#fed;&quot;|'''Neuter'''
| style=&quot;background:#fed;&quot;|'''Feminine'''
| style=&quot;background:#fed;&quot;|'''Masculine'''
| style=&quot;background:#fed;&quot;|'''Neuter'''
| style=&quot;background:#fed;&quot;|'''Feminine'''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || colspan=&quot;3&quot;| hwilċ || hwilċe || hwilċ || hwilca
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || hwilcne || hwilċ || hwilċe || hwilċe || hwilċ || hwilca
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || colspan=&quot;2&quot;| hwilċes || hwilcre || colspan=&quot;3&quot;|hwilcra
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || colspan=&quot;2&quot;| hwilcum || hwilcre || colspan=&quot;3&quot;|hwilcum
|-
| style=&quot;background:#fed;&quot;|'''Instrumental''' || colspan=&quot;2&quot;| hwilċe || hwilcre || colspan=&quot;3&quot;|hwilcum
|}

Like ''hwilc'' is ''swilċ'' &quot;such&quot;, ''ġehwilc'' &quot;each/every one&quot;, ''ǣġhwilċ'' &quot;each one, every one&quot;, ''nāthwilċ'' &quot;someone I know not&quot;, ''samhwilċ'' &quot;some&quot;.

==Relative pronouns==
Relative pronouns are pronouns that are used to refer to an earlier substansive, called an antecedant, and give additional information, as the &quot;who&quot; in the following examples: 

*&quot;It was John '''who''' did that&quot; - ''Hit wæs Iohannes '''se þe''' dyde þæt''
*&quot;I like men '''who''' know what they're doing&quot; - ''Mē līciaþ menn '''þā þe''' witon þæt hīe dōþ''

And the &quot;that&quot; in the following examples:

*&quot;The thing '''that''' I hate most about it, is the stupidity of it all&quot; - ''Þæt þing '''þæt''' iċ þæs mǣst hatġe, is his dwola''
*&quot;All the trees '''that''' I cut down had green leaves&quot; - ''Eall þā trēow '''þā''' iċ fylede hæfdon grēnu lēaf''

And the &quot;which&quot; in the following examples:

*&quot;The squirrel, '''which''' was red, ran away&quot; - ''Þæt ācwern '''þæt þe''' rēad wæs, earn aweġ''
*&quot;The house '''which''' I live in is old&quot; - ''Þæt hūs in '''þǣm þe''' iċ wunie is eald''

In Old English, the relative pronoun was the same as the definitive article, but it could be followed in addition by ''þe''. You could also use just ''þe'' by itself.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#fd8;&quot; colspan=&quot;5&quot;|'''&quot;Se (þe)&quot; - &quot;who, which, that&quot;'''
|-
! style=&quot;background:#e74;&quot; |'''Case'''
! style=&quot;background:#fed;&quot; |'''Masculine'''
! style=&quot;background:#fed;&quot; |'''Neuter'''
! style=&quot;background:#fed;&quot; |'''Feminine'''
! style=&quot;background:#fed;&quot; |'''Plural all genders'''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || se (þe) || þæt (þe) || sēo (þe) || þā (þe)
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || þone (þe) || þæt (þe) || þā (þe) || þā (þe)
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || colspan=&quot;2&quot;| þæs (þe) || þǣre (þe) || þāra (þe)
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || colspan=&quot;2&quot;| þǣm (þe), þām (þe) || þǣre (þe) || þǣm (þe), þām (þe)
|}

Note that because ''se'' by itself could also mean &quot;that (one&quot;, alongside this relative pronoun meaning; and ''þe'' alone could be a relative pronoun, ''se þe'' could actually be just a relative pronoun, or a relative pronoun and an indicative pronoun combined, e.g. &quot;that which&quot; or &quot;he who&quot;.

A kind of word which in Modern English could be confused with a relative pronoun, is an indirect interrogative. The '''bold''' words in the following examples are indirect interrogatives:

*&quot;I asked him '''what''' he was doing&quot;
*&quot;Do you know '''who''' they are?&quot;

As in Modern English, the indirect interrogative pronouns in Old English were the same as the normal interrogative pronouns, for which see the &quot;Interrogative pronouns&quot; section of this page.

==Demonstrative pronouns==
Demonstrative pronouns are the kind of pronoun you might use while pointing at something, often having also a sense of location, as in Modern English &quot;this&quot; and &quot;that&quot;, where &quot;this&quot; has a meaning like &quot;the one here&quot; and that has a meaning like &quot;the one there&quot;.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#fd8;&quot; colspan=&quot;7&quot;|'''&quot;Þes&quot; - &quot;this&quot;'''
|-
! style=&quot;background:#e74;&quot; rowspan=&quot;2&quot;|'''Case'''
! style=&quot;background:#fed;&quot; colspan=&quot;3&quot;|'''Singular'''
! style=&quot;background:#fed;&quot; colspan=&quot;3&quot;|'''Plural'''
|-
| style=&quot;background:#fed;&quot;|'''Masculine'''
| style=&quot;background:#fed;&quot;|'''Neuter'''
| style=&quot;background:#fed;&quot;|'''Feminine'''
| style=&quot;background:#fed;&quot;|'''All genders'''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || þes || þis || þēos || þās
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || þisne || þis || þās || þās
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || colspan=&quot;2&quot;| þisses || þisse, þisre || þissa, þisra
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || colspan=&quot;2&quot;| þissum || þisse, þisre || þissum
|-
| style=&quot;background:#fed;&quot;|'''Instrumental''' || colspan=&quot;2&quot;| þȳs || - || -
|}

The plural of ''þes'' (''þās'') has the meaning of &quot;these&quot;.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#fd8;&quot; colspan=&quot;7&quot;|'''&quot;Se&quot; - &quot;that&quot;'''
|-
! style=&quot;background:#e74;&quot; rowspan=&quot;2&quot;|'''Case'''
! style=&quot;background:#fed;&quot; colspan=&quot;3&quot;|'''Singular'''
! style=&quot;background:#fed;&quot; colspan=&quot;3&quot;|'''Plural'''
|-
| style=&quot;background:#fed;&quot;|'''Masculine'''
| style=&quot;background:#fed;&quot;|'''Neuter'''
| style=&quot;background:#fed;&quot;|'''Feminine'''
| style=&quot;background:#fed;&quot;|'''All genders'''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || se || þæt || sēo || þā
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || þone || þæt || þā || þā
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || colspan=&quot;2&quot;| þæs || þǣre || þāra
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || colspan=&quot;2&quot;| þǣm, þām || þǣre || þāra
|-
| style=&quot;background:#fed;&quot;|'''Instrumental''' || colspan=&quot;2&quot;| þȳs || - || -
|}

It is obvious to see that the Modern English word &quot;that&quot; came from the neuter form of this word - ''þæt''. This word was also the definitive article (like Modern English &quot;the&quot;) in Old English, so if it was used to modify a noun, it might either mean &quot;the&quot; or &quot;that&quot;, depending on context.

==Indefinite pronouns==
Indefinite pronouns are pronouns which don't refer to anything specific. They can have the sense of &quot;any&quot; or &quot;every&quot;. They also include negative pronouns - pronouns that mean &quot;nothing&quot; or &quot;nobody&quot;.

*''Ġehwā'' - &quot;anybody&quot; or &quot;everybody&quot;; declined just like the interrogative pronoun ''hwā''. 
*''Ġehwilċ'' - &quot;anything/anyone&quot; or &quot;everything/everyone&quot;; declined just like the interrogative pronoun ''hwilċ''.
*''Ġehwæt'' - &quot;anything&quot; or &quot;everything&quot;; declined just the the interrogate pronoun ''hwæt''.

===Negative pronouns===
Negative indefinite pronouns, or simply negative pronouns, are pronouns which refer to a lack of someone or something, like &quot;nothing&quot; in Modern English. 

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#fd8;&quot; colspan=&quot;7&quot;|'''''Nā(wi)ht'' - &quot;nothing&quot;'''
|-
! style=&quot;background:#e74;&quot; |'''Case'''
! style=&quot;background:#fed;&quot; |'''Sg. (no need for plural)''
|-
| style=&quot;background:#fed;&quot;|'''Nominative''' || nā(wi)ht
|-
| style=&quot;background:#fed;&quot;|'''Accusative''' || nā(wi)ht
|-
| style=&quot;background:#fed;&quot;|'''Genitive''' || nā(wi)ht-es
|-
| style=&quot;background:#fed;&quot;|'''Dative''' || nā(wi)ht-e
|}

Note that ''nā(wi)ht'' is actually a compound of ''nā'' - &quot;not&quot; and ''wiht'' - &quot;something&quot;. The declension is simply the strong singular neuter noun declension.

&quot;Nobody&quot; is in Old English ''nān mann'', which is actually just the [[Old English/Articles|negative article]] (which is declined like a [[Old English/Adjectives#Strong Declension|strong adjective]]) and the noun ''mann'' - &quot;human&quot;, &quot;person&quot;, for whose declension see [[Old English/Nouns#I-mutation nouns|here]].

==Bibliography==

A part of the text in this article, was taken from the public domain English grammar [http://www.gutenberg.net/etext/11615 &quot;The Grammar of English Grammars&quot;] by Goold Brown, 1851.

[[de:Englisch: Pronomina]]
[[fr:Enseignement de l'anglais/Pronoms]]</text>
      <sha1>71msyg3cdlvqusmjzawdlmhg3w4j240</sha1>
    </revision>
  </page>
  <page>
    <title>User:Ideasman42</title>
    <ns>2</ns>
    <id>40822</id>
    <revision>
      <id>233423</id>
      <parentid>233421</parentid>
      <timestamp>2005-09-13T09:19:29Z</timestamp>
      <contributor>
        <username>Ideasman42</username>
        <id>11430</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Hi, I have just started editing some of the blender3d/python wiki content for Blender n00b to pro.
I have written many mesh editing tools and intend to write a tutorial on this subject.
Checkout my website
[[http://members.iinet.net.au/~cpbarton/ideasman/ Campbells Script Log]]</text>
      <sha1>15k7i2mnfztm2j2wc50d9dna04sni5a</sha1>
    </revision>
  </page>
  <page>
    <title>File:Imp-mov.gif</title>
    <ns>6</ns>
    <id>40824</id>
    <revision>
      <id>249970</id>
      <parentid>233425</parentid>
      <timestamp>2005-10-06T04:41:44Z</timestamp>
      <contributor>
        <username>Shin31</username>
        <id>10754</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">acoustical mass analogy to electro component
{{GFDL-self}}</text>
      <sha1>hi146fxy7vrzr4z0k5g8cdhqgtg72vm</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Introduction to Sociology/Deviance</title>
    <ns>1</ns>
    <id>40825</id>
    <revision>
      <id>2009045</id>
      <parentid>1324180</parentid>
      <timestamp>2010-12-27T17:55:14Z</timestamp>
      <contributor>
        <ip>216.219.125.1</ip>
      </contributor>
      <comment>/* To do */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== To do == 

Some suggestions by a friend who specializes in criminology:

#In your section on strain, perhaps include a short discussion of Robert Agnew's General Strain Theory.  Merton is &quot;classic,&quot; of course, but Agnew is what people use these days.  I'd also suggest, to help people comprehend Merton (which I think is a good summation), Rosenfeld and Messner's &quot;Crime and The American Dream.&quot;  In short, they argue crime occurs because the goals are more important than the means (so a person who has acheived a great deal is worth more, socially, than someone who has acheived less, even if person 1 had committed crimes to get that far).  I think their argument helps people get the idea of a collectivity regarding materialism, and how that tends to eliminate the impulse to behave pro-socially at times.
#Have you considered including your section on structual functionalism with labeling theory?  They seem to blend together quite well, in my opinion; especially when you use examples of the Columbine shootings in your section.
#In your discussion of white-collar crime, perhaps Charles Tittle's Control-Balane Theory would help?  It asserts that people have general (overall) and specific (contextual) control ratios (the amount of control you have over others, compared to the amount of control others have over you).  So, a CEO has a significant surplus of control at work, but perhaps not at home, and perhaps not at PTA meetings.  It also makes a unique argument: for those who have the greatest control deficits (which could perhaps imply the infirm, or the poor), there is less crime committed due to a lack of autonomy.
#I think your labeling section would be boosted by a discussion of Charles Lemert's definitions of primary and secondary deviance.  Secondary deviance is what happens when people accept the label they are given as their &quot;master status,&quot; and act accordingly.  I think the Columbine example would work exceptionally well here.  Primary deviance, on the other hand, is, in the words of labeling theorists, &quot;all that other shit.&quot;  To their chagrin, they never bother to explain primary deviance (those actions, criminal, delinquent, or merely not normative, that get the attention of others sufficient to begin using a label), but, as you point out in your section on structural functionalism, there are behaviors that, by virtue of their existence, help unify others socially; it is possibly those acts of primary deviance that help do so (think Megan's Law, or that fucking sex offender relocation act downtown).
#Other theories/theorists you should consider:
*Hirschi and Gottfredson's &quot;A General Theory of Crime&quot; (the $100,000 theory, as it's cited so damned much; it would fit in a section on social control)
*Terrie E Moffit - &quot;Pathways in the Life Course to Crime&quot; (this focuses on developmental theories, and starts with childhood control problems and antisocial tendencies, so it's pretty encompassing)
*Social Disorganization Theory (William Julius Wilson, Robert Sampson, Clifford Shaw and Henry McKay) - Pretty much all &quot;chicago school&quot; stuff, but focuses on unstable areas in communities (housing, employment, and residential instabilities) that lead to crime through a collective breakdown of norms.
*Differential Association/Social Learning Theory (Sutherland and Cressey, Sykes and Matza) - Focuses on the small group processes in which crime is learned through &quot;definitions&quot; favorable to crime/deviance over definitions unfavorable to prosocial behavior.  (perhaps Becker's piece on learning to get high would work well here, and articles on Marijuana, regrettably, always resonate well with undergrads - and probably grads too).
*Biosocial Theory (Lombroso's long-discredited work on the biological criminal archetype, for instance).  Phrenology is also pretty fun, and if you can find a phrenological map (I think I have one saved) is interesting for discussion, since it was developed prior to Lombroso's calls for positivism (the same positivism that discredited his theory), and thus comes from the time when we just made shit up. 

* Add section on the four rationales for punishing offenders.
* Add section on Durkheim's contribution re anomie.
* Add section on the relativity of deviance.
* Compare psychological and biological perspectives on deviance with the sociological perspective.
[[User:Thomasfbrown|Thomasfbrown]] ([[User talk:Thomasfbrown|talk]]) 22:04, 3 November 2008 (UTC)

I think this section is mislabeled or should be changed. There's no (or very little ) discussion of &quot;norms.&quot; some discussion might help since really the two terms -- deviance and norms -- are defined in  tandem and different theories, e.g. structural functionalism, take different positions on the relationship of the two.
[User: rlkap 12/28/2010]

== Gender theory ==

Under the header gender, this nice little textbook (my compliments to those who contributed to it) says: &quot;While the focus of this chapter is not on exploring the motivations behind rape, the number of rapes in the U.S. and internationally can be seen to reflect power imbalances (social-conflict approach) between men and women.&quot; It suggests that a higher rate of rape might be correlated with power imbalances in a country. Maybe I am missing something, but I find it hard to believe that there is more power imbalance between men and women in the United States than in Saudi-Arabia and Oman (see the chart), those are hard-line Islamist countries in which women have few, if any, rights. But I'm not a sociologist. It would be good if someone who actually knew something about this subject, elaborated on this issue in the book. --[[User:Democrat|Democrat]] 23:46, 11 June 2006 (UTC)</text>
      <sha1>kbuuq6z07cuff8hoz2f6se2hth2lvec</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:X86 Disassembly/Assemblers and Compilers</title>
    <ns>1</ns>
    <id>40828</id>
    <revision>
      <id>3015933</id>
      <parentid>1075762</parentid>
      <timestamp>2015-11-14T05:49:39Z</timestamp>
      <contributor>
        <username>Sheep0x</username>
        <id>2555855</id>
      </contributor>
      <comment>/* Update list of &quot;common&quot; compiler to include Clang? */ new section</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">What i think this page needs is just a discussion of assemblers which are functionally dissimilar enough to warrent individual discussion. Many compilers are just clones of MASM or FASM or GAS, and therefore are not going to be discussed. We can, however, include links to all sorts of assemblers in the &quot;Further Reading&quot; section --[[User:Whiteknight|Whiteknight]] 14:30, 13 September 2005 (UTC)

== Update list of &quot;common&quot; compiler to include Clang? ==

It seems that Clang/LLVM is quite popular during the last few years.  I think I've seen Clang on the Internet more times than Intel's compiler in 2015, at least in the Linux world.  (Examples: [https://github.com/minetest/minetest/blob/31b6d2678455c0b3de7f4b97c9607388b06c8f8c/.travis.yml#L4 Minetest][https://wiki.freebsd.org/PortsAndClang#Quickstart ClangBSD] [https://github.com/mpv-player/mpv/blob/0f3dedebb4c84deaa25abbd7dcfca3f3e10ea72c/.travis.yml#L16 mpv])  However, Clang may be only popular in my particular circle, so instead of editing the book, I'd like to know what people think first: do you think Clang is popular enough to be added to the list?  --[[User:Sheep0x|sheep0x]] ([[User talk:Sheep0x|discuss]] • [[Special:Contributions/Sheep0x|contribs]]) 05:49, 14 November 2015 (UTC)</text>
      <sha1>tmh6g6x0bvb312tdvwgl22jdyji609l</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Reverse Engineering/Java Compiler</title>
    <ns>1</ns>
    <id>40832</id>
    <revision>
      <id>925334</id>
      <parentid>285565</parentid>
      <timestamp>2007-07-17T10:16:54Z</timestamp>
      <contributor>
        <ip>82.163.136.229</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">We can bump this page up to 50% if we can list other java implementations. frankly, there isnt alot to talk about in this chapter given the depth we (will) go into in section 6 --[[User:Whiteknight|Whiteknight]] 03:58, 20 September 2005 (UTC)

At least two dead links on this page - the MS java SDK and the GNU Java compiler</text>
      <sha1>5pe0eyfzr3qt8i5x1r1e9qp8a28hg1g</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Reverse Engineering/C Sharp Compiler</title>
    <ns>1</ns>
    <id>40834</id>
    <revision>
      <id>552049</id>
      <parentid>285572</parentid>
      <timestamp>2006-08-08T03:52:38Z</timestamp>
      <contributor>
        <username>Hagindaz</username>
        <id>19723</id>
      </contributor>
      <minor />
      <comment>[[Talk:Reverse Engineering/C sharp Compiler]] moved to [[Talk:Reverse Engineering/C Sharp Compiler]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This page can be 50% completed if we list some other .NET implementations, and perhaps mention a few things about other .NET languages, and their compilers. --[[User:Whiteknight|Whiteknight]] 04:00, 20 September 2005 (UTC)</text>
      <sha1>trtto66qf1j19zlls0fdvhtduz3c2gy</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:X86 Disassembly/Linux</title>
    <ns>1</ns>
    <id>40835</id>
    <revision>
      <id>1075696</id>
      <parentid>556771</parentid>
      <timestamp>2008-01-07T15:28:17Z</timestamp>
      <contributor>
        <username>Whiteknight</username>
        <id>10714</id>
      </contributor>
      <minor />
      <comment>[[Talk:Reverse Engineering/Linux]] moved to [[Talk:X86 Disassembly/Linux]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I listed a few of the Shells and GUIs that i know of, although i dont know enough about any of them to make any kind of authoritative teacher. Shells or GUIs that require alot of discussion to relate the general architecture (at least the stuff a reverser should probably know about) should probably be given their own heading (or subheading). [[User:Whiteknight|Whiteknight]]

== X-Windows ==

What happened to X-Windows? It's the basis for GNOME and KDE (that is, they both run on top of it). I'm not an expert, but it's quite important and deserves a mention.

:Probably does. I'm not a Linux expert either, so i'm not really qualified to add the material. --[[User:Whiteknight|Whiteknight]]&lt;small&gt;([[User talk:Whiteknight|talk]]) ([[User:Whiteknight/Proposed Books|projects]])&lt;/small&gt; 01:18, 26 July 2006 (UTC)

== Tools ==

I've added 2 debuggers and 2 file analyzers, but I'm curious about something. Would it be acceptable to post a link to some swf files demonstrating a real world use of the tools themselves? For example, http://papsy.net/gdb or http://papsy.net/strings and maybe a little explanation to go with them?

:That most certainly would be acceptable. So far this book doesn't have any detailed instructions on how to use debuggers (or how to use them well), and we would benefit from that. --[[User:Whiteknight|Whiteknight]] &lt;small&gt;([[User talk:Whiteknight|talk]]) ([[User:Whiteknight/Proposed Books|projects]])&lt;/small&gt; 11:49, 14 August 2006 (UTC)</text>
      <sha1>7svq5rxk158pb2doz9vkjm3or5db3c4</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:Art Tutorials</title>
    <ns>1</ns>
    <id>40836</id>
    <revision>
      <id>1492739</id>
      <parentid>406144</parentid>
      <timestamp>2009-05-06T14:24:25Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>bypass redirect link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Someone has stated that we should merge this book with [[Introduction to Art|Art]]. However, I think they should remain two separate books. Multiple people on the discussion page think so too. Many stated that that books is more like an Art 101. In my Art 101 type class, we talked very little about media and techniques, which is the primary focus of this books. This book is pretty new and underdeveloped, but so far, the only overlap I see is the &quot;art concepts&quot; bit, which is usually covered in an Art 101 type course. 

Any thoughts? --[[User:Blainegarrett|Blainegarrett]] 15:31, 13 September 2005 (UTC)

== Orphaned Module ==

I'm working on cleaning up [[Special:Lonelypages|orphaned modules]] and found [[Art Tutorials/General Concepts/Light and Shadows|this page]] which apparently belongs to this book, but I'm not sure where to link it in the TOC. Someone familiar with the project should place this module in the appropriate place in the Table of Contents. [[User:Xerol|Xerol Oplan]] 03:48, 23 March 2006 (UTC)</text>
      <sha1>8hx47oo10wvrx2vheqho71yntyet8fj</sha1>
    </revision>
  </page>
  <page>
    <title>Active Server Pages/Expressions</title>
    <ns>0</ns>
    <id>40838</id>
    <revision>
      <id>2373227</id>
      <parentid>2312842</parentid>
      <timestamp>2012-07-05T07:34:06Z</timestamp>
      <contributor>
        <ip>115.109.7.12</ip>
      </contributor>
      <comment>/* Comparison Operators */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{prognav|Active Server Pages|Variable Types|Conditionals and Looping}}

= Objectives =

In this section, you will learn how to build expressions in Active Server Pages.  After studying this section, you will learn how to build an expression and learn how to combine varibles and string literals in combination to manipulate data.

= Content =

An expression is a group of literal and variables which are organized in a structured format using operators.  The best example of an expression is a mathematical expression such as '''x + 3'''.

Expressions are made up of a collection of mathematical, comparison, bit-wise and logical operators as well as literal values and ASP variables which are placed together for evaluation by the ASP Interpreter.  Once an expression is evaluated, it can be assigned to a variable, used as the argument to an ASP procedure or output on an ASP page.

== Assignment ==

One of the most basic statements you can make in ASP is an assignment.  This basically evaluates an expression and places the result into a variable.  The equals sign (=) separates the variable that gets the result (on the left side) and the expression to build the result (on the right side).

&lt;source lang=&quot;asp&quot;&gt;
 &lt;%
 Dim nX, dX, sName, bIsAdmin

 ' assign literal values
 nX = 13
 dX = 7645.34
 sName = &quot;Barney Google&quot;
 bIsAdmin = True

 ' or you can assign complex expressions like
 Dim dDateTime

 dDateTime = Now()
 nX = 13 + 23 - 10
 dx = (5 * nX) / 2.0
 sName = &quot;Barney is &quot; &amp; CStr(nX)
 %&gt;
&lt;/source&gt;

Don't worry too much about some of the more complicated expressions found in this example.  All of this will be explained later in this chapter.  You should note that the left side of the expression is always a variable.  You are only allowed to put a single ASP variable on the left side of the equals sign.

== Evaluation Order ==

The way an expression is evaluated, depends on the operator precedence.  Precedence is kind of an importance assigned to an operator.  Operators that have the highest precedence are evaluated first and those that have the lowest are evaluated last.  When two operators exist that have the same precedence, the operators are evaluated from left-to-right.

Take for example the following expression:

&lt;source lang=&quot;asp&quot;&gt;dX = 6 - 3 * 4 + 2&lt;/source&gt;

In this example, you will see we have three different operators.  The &quot;+&quot; and the &quot;-&quot; operator have the same precedence while the multiplication operator (*) has a higher precedence.  In this case, the multiplication takes place first reducing the expression to:

&lt;source lang=&quot;asp&quot;&gt;dX = 6 - 12 + 2&lt;/source&gt;

Now there are two expressions that have the same precedence.  In this case, we evaluate the left-most expression first.  After two more reductions we get the final result:

&lt;source lang=&quot;asp&quot;&gt;
 dX = -6 + 2
 dx = -4
&lt;/source&gt;

You should note also that if we had evaluated the expression from the other direction we would get a completely different result.  This order of evaluation follows the same method used in mathematics (if you remember your basic algebra.)

== Grouping Sub-Expressions ==

If you want to over-ride the default order-of-evaluation (precedence) for evaluating an expression, you can group expressions that should be evaluated first in parentheses.  You can think of it as an expression embedded in another expression or a &quot;sub-expression&quot;.

If you remember the example from the previous section, we can modify it to change the order-of-evaluation like so:

&lt;source lang=&quot;asp&quot;&gt;dX = (6 - 3) * 4 + 2&lt;/source&gt;

And just like in Algebra, we know that we have to evaluate these sub-expressions first.  So the first step in reducing this type of expression is to evaulate the sub-expression:

&lt;source lang=&quot;asp&quot;&gt;dX = 3 * 4 + 2&lt;/source&gt;

The final reduction will yield a result of 14 which is a completely different result than we got before.  Be careful about how you group your expressions.  It can cause a lot of problems and increase the complexity of your code.  If you want to keep your code simpler, you can always create new variables to store the results of sub-expressions.

&lt;source lang=&quot;asp&quot;&gt;
 ' Using variables to evaluate sub-expressions
 Dim dX, dY
 dY = 6 - 3
 dX = dY * 4 + 2
&lt;/source&gt;

== Mathematical Expressions ==

The following table lists all of the binary mathematical operators.  They are &quot;binary&quot; because they require two arguments.  The first argument is on the left-side and the second argument is on the right-side.  So the operator &quot;+&quot; in the expression &quot;5 + 6&quot; has the binary arguments &quot;5&quot; and &quot;6&quot;.

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;border: solid 1px #b0b0b0&quot;&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''+'''&lt;/td&gt;
&lt;td&gt;Addition&lt;/td&gt;
&lt;td&gt;nX + 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''-'''&lt;/td&gt;
&lt;td&gt;Subtraction&lt;/td&gt;
&lt;td&gt;nX - 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''*'''&lt;/td&gt;
&lt;td&gt;Multiplication&lt;/td&gt;
&lt;td&gt;dX * 1.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''/'''&lt;/td&gt;
&lt;td&gt;Division&lt;/td&gt;
&lt;td&gt;dX / -1.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''\'''&lt;/td&gt;
&lt;td&gt;Integer Division&lt;/td&gt;
&lt;td&gt;dX \ 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''%'''&lt;/td&gt;
&lt;td&gt;Modulus (remainder)&lt;/td&gt;
&lt;td&gt;nX % 6&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

The following table lists all of the unary mathematical operators.  A unary operator only has a single argument to act on.

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;border: solid 1px #b0b0b0&quot;&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''-'''&lt;/td&gt;
&lt;td&gt;Negation&lt;/td&gt;
&lt;td&gt;-nX&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

Of course you can combine binary and unary operators in one expression.  The results of one binary operation might serve as the argument to your unary operation.

&lt;source lang=&quot;asp&quot;&gt;
 ' combining the binary &quot;+&quot; with the unary &quot;-&quot;
 dX = -(nX + nY)
&lt;/source&gt;

There are many advanced mathematical functions that can be used to do complex arithmetic which we will talk about later.  These will not be covered in this chapter.

== String Operators ==

When working with strings, Active Server Pages provides a wealth of functions for manipulating strings.  But since we are only talking about operators that may be used in an expression, we will only be dealing with the one string operator here: the string concatenation operator.

String concatenation means that you want to append one string to another.  This operation is a binary operation meaning that it takes two arguments: the left-side is the string you want to append to and the right-side is the string that you want to append.

&lt;source lang=&quot;asp&quot;&gt;
 Dim sFirst, sLast, sFullName
 sFirst = &quot;Bill&quot;
 sLast = &quot;Gates&quot;
 sFullName = sFirst &amp; &quot; &quot; &amp; sLast
&lt;/source&gt;

As you can see in the example above, we are using the string concatenation operator to append three string values together: &quot;Bill&quot;, &quot; &quot;, and &quot;Gates&quot;.  Two of the strings are stored in variables while the space character is just a string literal.

You may concatenate as many variables as you want together using the string concatenation operator.  It has been shown that string concatenation under Active Server Pages is very inefficient.  So if your page is performing slowly and you have a lot of string concatenations, you should look for ways to eliminate them.

== Comparison Operators ==

Comparison operators, as you might have guessed, are used to compare two different expressions and return a value of &quot;true&quot; or &quot;false&quot;.  In most cases the two expressions being comparted will evaluate to a number, but it is possible to compare string values, dates and booleans.

The following table lists the binary comparison operators.  These operators require two expression arguments: one on the left-side of the operator and one on the right-side.  Just like mathematical expressions, you may combine two-or-more of these expressions together.  In the next section we will explain how to these are combined using logical operators.

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;border: solid 1px #b0b0b0&quot;&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''='''&lt;/td&gt;
&lt;td&gt;Equality&lt;/td&gt;
&lt;td&gt;nX = 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''&amp;lt;&amp;gt;'''&lt;/td&gt;
&lt;td&gt;Inequality (Not Equal)&lt;/td&gt;
&lt;td&gt;nX &amp;lt;&amp;gt; nY&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''&amp;lt;'''&lt;/td&gt;
&lt;td&gt;Less Than&lt;/td&gt;
&lt;td&gt;nX &amp;lt; 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''&amp;gt;'''&lt;/td&gt;
&lt;td&gt;Greater Than&lt;/td&gt;
&lt;td&gt;nX &amp;gt; -5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''&amp;lt;='''&lt;/td&gt;
&lt;td&gt;Less Than or Equal&lt;/td&gt;
&lt;td&gt;nX &amp;lt;= 5 + nY&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''&amp;gt;='''&lt;/td&gt;
&lt;td&gt;Greater Than or Equal&lt;/td&gt;
&lt;td&gt;nX &amp;gt;= dY * 5.0 - 2&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

These operators are most commonly used in an '''If Then''' statement which will take an action based on the boolean result of an expression.  Unless you already have a boolean value stored in an ASP variable, you will need to write an expression like the following:

&lt;source lang=&quot;asp&quot;&gt;
 If nX &gt;= 60 Then Response.Write &quot;You Passed!&quot;
 If nX &lt; 60 Then Response.Write &quot;You Failed&quot;
&lt;/source&gt;

Of course, your expression can be as complicated as you want as long as it evaluates to a boolean value.

== Logical Operators ==

Whereas mathematical expressions are used to manipulate numbers, logical operators are used to work with the two boolean values &quot;true&quot; and &quot;false&quot;.  These operators are always used to combine two expressions that result in boolean values.

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;border: solid 1px #b0b0b0&quot;&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''And'''&lt;/td&gt;
&lt;td&gt;True only if both arguments are true, otherwise false&lt;/td&gt;
&lt;td&gt;nX &amp;gt; 5 And nX &amp;lt; 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Or'''&lt;/td&gt;
&lt;td&gt;True if either argument is true, false only when both arguments are false&lt;/td&gt;
&lt;td&gt;nX &amp;lt; 5 Or nX &amp;gt; 10&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

In addition to these binary operators, there is also one unary operator:

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;{border: solid 1px #b0b0b0}&quot;&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Not'''&lt;/td&gt;
&lt;td&gt;Negation, true becomes false and false becomes true&lt;/td&gt;
&lt;td&gt;Not (nX &amp;gt; 5)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;/table&gt;

The negation operator basically will give you the opposite value of the expression.  So if the expression evaluates to &quot;true&quot; and you perform the '''Not''' operation on it, it becomes &quot;false&quot;.  Conversely, &quot;false&quot; will become &quot;true&quot; when '''Not''' is applied.

So using these logical operators, we can group many comparison expressions together to create a very complex expression like so:

&lt;source lang=&quot;asp&quot;&gt;
 ' example of a complex expression with four comparisons)
 If (nX = 2) Or (nX &lt; 10 And nX &lt; 20) And Not (nY * 5.0 - 2 &lt;= 17.0) Then
     Response.Write &quot;Yes&quot;
 End If
&lt;/source&gt;

The first comparison (''nX = 2'') looks just like an assignment.  You can never put an assignment in an expression like this.  Assignment only occurs at the start of an expression, where the first symbol is an ASP variable which is followed by the assignement (=) operator.

You will notice that we used parentheses to group the expressions.  Even in some cases where parentheses are not required, it sometimes makes your expressions easier to read when you put them in there.

== Bit-Wise Operators ==

For advanced programming, Active Server Pages has operators for working with individual &quot;bits&quot;.  A &quot;bit&quot; is the digit used in the binary number system and was formed from a contraction of the words &quot;binary digit&quot;.  It can only have one of two different values: &quot;0&quot; and &quot;1&quot;.

In the old days of computer, programmers were severely limited in storage and had to make the most of the available storage.  One way they did this was by combining multiple variables into a single &quot;byte&quot;.  This has carried through to modern-day computer systems and this is why we need bit-wise operators.

In computer terms, we talk about &quot;bytes&quot;.  A byte is composed of 8 &quot;bits&quot; and therefore can have 2 ^ (raised-to-the-power) 8 or 256 possible values.  An integer is composed of two bytes so it can have a value of 256 ^ 2 or 65536 possible values.

&lt;pre&gt;
 The 8 bits from a byte and their integer equivalents

 +-------------------------------------------------------+
 | Bit7 | Bit6 | Bit5 | Bit4 | Bit3 | Bit2 | Bit1 | Bit0 |
 +------+------+------+------+------+------+------+------+
 |  128 |   64 |   32 |   16 |    8 |    4 |    2 |    1 |
 +-------------------------------------------------------+
&lt;/pre&gt;

For all of the bits that are set (equal to 1) above, you need to add their integer equivalent to determine the resulting byte value.  So If bits 6, 4, 1 and 0 were set, the equivalent byte value would be: 64 + 16 + 2 + 1 = 83.

Going the other way around, we can convert an integer to binary.  We just take the integer value and subtract the biggest binary value we can and note the corresponding bit.  We continue to do this subtracting binary values until we come up with the resulting bit string:

&lt;source lang=&quot;asp&quot;&gt;
 ' convert integer value (221) to binary
 221 - 128 = 93 (binary 0x10000000)
 93 - 64 = 29 (binary 0x11000000)
 29 - 16 = 13 (binary 0x11010000)
 13 - 8 = 5 (binary 0x11011000)
 5 - 4 = 1 (binary 0x11011100)
 1 - 1 = 0 (binary 0x11011101)
&lt;/source&gt;

When working with the bit-wise operators, we sometimes have to convert between binary and integer like this and vice-versa.

In Active Server Pages, bit-wise operators are only used on numeric expressions to manipulate individual bits.  The numberic expression can evaluate to integers, longs, single or double-precision numbers.  After evaluating the bit-wise operation, the resulting value will be compatible with the original arguments.

The following bit-wise operators require two arguments: one on the left-side of the operator and one on the right-side.

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;border: solid 1px #b0b0b0&quot;&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''&amp;'''&lt;/td&gt;
&lt;td&gt;Bit-wise And&lt;/td&gt;
&lt;td&gt;nX &amp;amp; 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''|'''&lt;/td&gt;
&lt;td&gt;Bit-wise Or&lt;/td&gt;
&lt;td&gt;nX | 48&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''^'''&lt;/td&gt;
&lt;td&gt;Bit-wise Exclusive Or&lt;/td&gt;
&lt;td&gt;nX ^ 48&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''&amp;lt;&amp;lt;'''&lt;/td&gt;
&lt;td&gt;Shift Bits Left&lt;/td&gt;
&lt;td&gt;nX &amp;lt;&amp;lt; 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''&amp;gt;&amp;gt;'''&lt;/td&gt;
&lt;td&gt;Shift Bits Right&lt;/td&gt;
&lt;td&gt;nX &amp;gt;&amp;gt; 1&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

The following operators are &quot;unary&quot; operators meaning they only require one argument.  The single expression argument must be to the right-side of this operator.

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;border: solid 1px #b0b0b0&quot;&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''~'''&lt;/td&gt;
&lt;td&gt;Bit-wise Negation&lt;/td&gt;
&lt;td&gt;~ nX&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

=== Truth Tables ===

Truth tables display the results of the binary operators on a bit-by-bit basis.  You can think of each bit in the arguments being evaluated one-by-one.  Bits are matched up based on their position in the bytes.  So for a 16-bit integer, each bit would be operated on individually and the resulting bits would be strung together in the same order to generate the resulting number.

When viewing these tables, think to yourself &quot;When performing a bit-wise and (&amp;amp;), bit 0 from argument 1 and bit 0 from argument 2 are ''anded'' together and the result is X.  Next bit 1 from argument 1 and bit 1 from argument 2 are ''anded'' together and the result is Y&quot;.  And continuing on for all the bits in the arguments.

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;border: solid 1px #b0b0b0&quot;&gt;
&lt;tr&gt;
&lt;th colspan=3&gt;And (&amp;) Operator Truth Table&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Arg #1&lt;/th&gt;
&lt;th&gt;Arg #2&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;br&gt;

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;border: solid 1px #b0b0b0&quot;&gt;
&lt;tr&gt;
&lt;th colspan=3&gt;Or (|) Operator Truth Table&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Arg #1&lt;/th&gt;
&lt;th&gt;Arg #2&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;br&gt;

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;{border: solid 1px #b0b0b0}&quot;&gt;
&lt;tr&gt;
&lt;th colspan=3&gt;Exclusive Or (^) Operator Truth Table&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Arg #1&lt;/th&gt;
&lt;th&gt;Arg #2&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;br&gt;

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;{border: solid 1px #b0b0b0}&quot;&gt;
&lt;tr&gt;
&lt;th colspan=3&gt;Negation (~) Operator Truth Table&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Arg #1&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''0'''&lt;/td&gt;
&lt;td&gt;'''1'''&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

== Manipulating Date and Time Values ==

ASP has some built-in functions to manipulate datetime values.  Thought technically not operators, we mention them here for completeness since ''datetime'' is a valid data type and it is often necessary to calculate dates and times.

&lt;table border=1 cellpadding=4 cellspacing=0 style=&quot;border: solid 1px #b0b0b0&quot;&gt;
&lt;tr&gt;
&lt;th colspan=2&gt;Date and Time Functions&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Purpose&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Date'''&lt;/td&gt;
&lt;td&gt;Get the current date according to the local machine&lt;br&gt;'''dNow = Date()'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Time()'''&lt;/td&gt;
&lt;td&gt;Get the current time as a datetime value according to the local machine&lt;br&gt;'''dTime = Time()'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Now()'''&lt;/td&gt;
&lt;td&gt;Get the current date AND time according to the local machine&lt;br&gt;'''dNow = Now()'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''DateAdd(Interval, Number, Date'''&lt;/td&gt;
&lt;td&gt;Add a specific ''Number'' of ''Interval'' to the supplied date&lt;br&gt;'''DateAdd(&quot;d&quot;, 3, Now())'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''DateDiff(Interval, Date1, Date2)'''&lt;/td&gt;
&lt;td&gt;Calculate the number of ''Interval'' difference between ''Date1'' and ''Date2''&lt;br&gt;'''dDaysLeft = DateDiff(&quot;d&quot;, Now(), dBirthDay)'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''DatePart(Interval, Number, Date)'''&lt;/td&gt;
&lt;td&gt;Retrieve a specific part of a date such as the hour or month&lt;br&gt;'''DatePart(&quot;yyyy&quot;, Now())'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''DateSerial(Year, Month, Day)'''&lt;/td&gt;
&lt;td&gt;Construct a datetime value from the year, month and day components&lt;br&gt;'''dBirthday = DateSerial(1998, 12, 23)'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''TimeSerial(Hour, Minute, Second)'''&lt;/td&gt;
&lt;td&gt;Construct a datetime value reflecting the time components.&lt;br&gt;'''dNapTime = TimeSerial(14, 0, 0)'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''DateValue(DateTime)'''&lt;/td&gt;
&lt;td&gt;Convert a date string into a datetime value.&lt;br&gt;'''DateValue(&quot;12/23/1998&quot;)'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''TimeValue()'''&lt;/td&gt;
&lt;td&gt;Convert a time string into a valid datetime object.&lt;br&gt;'''dTime = TimeValue(&quot;10:51:43 PM)'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Day(Date)'''&lt;/td&gt;
&lt;td&gt;Retrieve the day-of-the-month (0-31) for a specific datetime value&lt;br&gt;'''Day(Now())'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Month(Date)'''&lt;/td&gt;
&lt;td&gt;Retrieve the month (1-12) for a specific datetime value&lt;br&gt;'''nMonth = Month(dBirthDay)'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Year(Date)'''&lt;/td&gt;
&lt;td&gt;Retrieve the year for a specific datetime value.&lt;br&gt;'''Year(Now())'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Hour(Datetime)'''&lt;/td&gt;
&lt;td&gt;Retrieve the hour (in 24-hour military time format [0-23]) for the datetime value&lt;br&gt;'''Hour(Now())'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Minute(Datetime)'''&lt;/td&gt;
&lt;td&gt;Retrieve the minute (0-59) component for a specific datetime value&lt;br&gt;'''nMinute = Minute(dBirthDay)'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''Second(Datetime)'''&lt;/td&gt;
&lt;td&gt;Retrieve the seconds (0-59) for a specific datetime value.&lt;br&gt;'''Second(Now())'''&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'''FormatDateTime(Datetime)'''&lt;/td&gt;
&lt;td&gt;Format the specified datetime value in a standardized format&lt;br&gt;'''FormatDateTime(Now(), vbLongDate)'''&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

Information about optional arguments for these functions and valid interval types will be discussed in a later chapter.  You should note that none of the mathematical operators apply to datetime values.  You must use the various conversion and calculation functions above to manipulate dates.

== Line Continuation Operator ==

If you have a really long line in ASP that you would like to split into two lines, you can use the ''line continuation operator''.  This is an underscore ('''_''') placed at the end of the line that tells the ASP interpreter that statement or expression continues on the next line.

&lt;pre&gt;
 if ((bDaysLeft &lt; DateDiff(&quot;d&quot;, Now(), dBirthDay)) Or _
   (bDaysLeft &gt; DateDiff(&quot;d&quot;, Now(), dChristMas)) Then
 	Response.Write &quot;Hooray!&quot;
 End If
&lt;/pre&gt;

In the example above, we use the line continuation to continue a boolean expression.  You may use it to continue any type of expression or statement.  It makes sense to split up long lines for readability.  Just be careful how you split lines so that you don't make the line more confusing to read.

= Summary =

There are eight different types of operators in ASP:

* '''Assignment Operators'''
* '''Mathematical Operators'''
* '''String Operators'''
* '''Comparison Operators'''
* '''Logical Operators'''
* '''Bit-wise Operators'''
* '''Grouping Operators'''
* '''Line Continuation Operator'''

All but the assignement operators can be used for building expressions.  Operators are evaluated based on precedence and the grouping operators.  If two operators have the same precedence, then the operators are evaluated from left-to-right.

All date and time values must be manipulated using functions.  The mathematical operators are invalid on datetime values.

= Review Questions =

* What must be on the left-side of the assignment operator?
* What must be on the right-side of the assignment operator?
* What are the eight major types of operators?
* What is meant by operator precedence?
* Which operator is used to group expressions?
* How are datetime values used in expressions?

= Exercises =

* Write the conditional expression to test a variable (nSpeed) is less than or equal to the speed limit (nSpeedLimit)
* Write an expression to convert a temperature in Fahrenheit to degrees and vice-versa
* Create a function that calculates the number of days from now until Christmas.
* Create a page that inputs a user's birthday and then calculates how old that person is.

{{prognav|Active Server Pages|Variable Types|Conditionals and Looping}}

[[Category:Active Server Pages|Expressions]]</text>
      <sha1>4u48ad68s16pwmed3bqs72hzm7n11ls</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Attributes/'Tag</title>
    <ns>0</ns>
    <id>40843</id>
    <revision>
      <id>3048772</id>
      <parentid>1372767</parentid>
      <timestamp>2016-02-18T17:01:31Z</timestamp>
      <contributor>
        <ip>91.55.192.91</ip>
      </contributor>
      <comment>/* Example */ Corrected syntax and added some info CKWG</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Ada/Navigation|Attributes|'Tag}}
__TOC__

== Description ==

X'Tag is an Ada [[Ada Programming/Attributes|attribute]] where X is any [[Ada Programming/Object Orientation|tagged type]]. This attribute returns a value of the private type {{Ada/package|Ada|Tags}}.Tag which identifies the tagged type.

This attribute is useful to check for membership of a type in a class hierarchy. It can also be used if it is known the type is in a class hierarchy and type-specific processing must take place.

== Example ==

 Ref : My_Tagged_Type_Reference;
 ...
 {{Ada/kw|if}} Ref.{{Ada/kw|all}} {{Ada/kw|in}} My_Tagged_Type'Class {{Ada/kw|then}}
   {{Template:Ada/comment|The object pointed at by Ref is in class hierarchy that is rooted at My_Tagged_Type.}}
   {{Ada/kw|if}} Ref.{{Ada/kw|all}}'Tag = My_Tagged_Type'Tag {{Ada/kw|then}}
     {{Template:Ada/comment|Object is of type My_Tagged_Type.}}
   {{Ada/kw|else}}  
     {{Template:Ada/comment|Object is of some other type in the hierarchy.}}
   {{Ada/kw|end}} {{Ada/kw|if}};
 {{Ada/kw|else}}
   {{Template:Ada/comment|Object is not in the class hierarchy rooted at My_Tagged_Type (it might be of a progenitor type though).}}
 {{Ada/kw|end}} {{Ada/kw|if}};

== See also ==

=== Wikibook ===

* [[Ada Programming]]
* [[Ada Programming/Object Orientation]]
* [[Ada Programming/Attributes/'Class]]

=== Ada Reference Manual ===

* {{Ada/RM2|13|3|Operational and Representation Attributes}}
* {{Ada/RMA1|K|Language-Defined Attributes}}

[[Category:Ada Programming|Tag]]</text>
      <sha1>426eofkahhr9wdbqf3gxn7yxo4k39aj</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Rakkar~enwikibooks</title>
    <ns>3</ns>
    <id>40845</id>
    <revision>
      <id>2932917</id>
      <parentid>2880443</parentid>
      <timestamp>2015-04-19T05:24:34Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{welcome}}
* Please also check out the [[Cookbook:Policy|Cookbook policy]] page and the [[Talk:Cookbook|Cookbook talk]] pages.
* Thanks for fixing up [[Cookbook:Zucchini Pasta Bake]]. Some further things you could do is to use the &quot;short&quot; version of the recipe summary as it's easier to reproduce correctly (no typos in variable names), use the &lt;nowiki&gt;{{recipe}}&lt;/nowiki&gt; template instead of &lt;nowiki&gt;{{cooknav}}&lt;/nowiki&gt; and add some categories.
[[User:Kellen|Kellen]]&amp;nbsp;&lt;sup&gt;[[User_talk:Kellen|T]]&lt;/sup&gt; 19:05, 13 September 2005 (UTC)

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called Rakkar. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name Rakkar~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 23:39, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 05:24, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>k025ammdix3iiws7rcst8d0k8tbgotl</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:213.67.40.63</title>
    <ns>3</ns>
    <id>40846</id>
    <revision>
      <id>1088101</id>
      <parentid>233628</parentid>
      <timestamp>2008-01-19T00:07:48Z</timestamp>
      <contributor>
        <username>Mike's bot account</username>
        <id>67847</id>
      </contributor>
      <minor />
      <comment>[[w:Wikipedia:Template substitution|template substitution]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{welcome}}
* Please also check out the [[Cookbook:Policy|Cookbook policy]] page and the [[Talk:Cookbook|Cookbook talk]] pages.
* Instead of &lt;nowiki&gt;{{stub}}&lt;/nowiki&gt;, you might consider using &lt;nowiki&gt;{{cookwork}}&lt;/nowiki&gt; which is cookbook-specific.
[[User:Kellen|Kellen]]&amp;nbsp;&lt;sup&gt;[[User_talk:Kellen|T]]&lt;/sup&gt; 19:05, 13 September 2005 (UTC)</text>
      <sha1>bde1q1e86dz9j5dlxmaasd20pp8zg2c</sha1>
    </revision>
  </page>
  <page>
    <title>Category:Zucchini recipes</title>
    <ns>14</ns>
    <id>40847</id>
    <revision>
      <id>1346382</id>
      <parentid>779759</parentid>
      <timestamp>2008-11-29T21:40:44Z</timestamp>
      <contributor>
        <username>Ragesoss</username>
        <id>99106</id>
      </contributor>
      <comment>refine cat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{cooknav}} | [[Cookbook:Vegetable|Vegetable]]
[[Image:Courgette.jpg|right|thumb|zucchini]]
Recipes using '''zucchinis''' (also known as '''courgettes''').

[[Category:Squash recipes]]</text>
      <sha1>ho2jf1uh27qs8wroo6omls1s0wyc4g6</sha1>
    </revision>
  </page>
  <page>
    <title>Political Science</title>
    <ns>0</ns>
    <id>40849</id>
    <redirect title="Subject:Social sciences" />
    <revision>
      <id>1530632</id>
      <parentid>511272</parentid>
      <timestamp>2009-06-12T20:22:09Z</timestamp>
      <contributor>
        <username>Sfan00 IMG</username>
        <id>99088</id>
      </contributor>
      <comment>Redirected page to [[Subject:Social sciences]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT [[‎ Subject:Social sciences]]</text>
      <sha1>naj33amor7s7v32hd0jj0qzqdlab3iu</sha1>
    </revision>
  </page>
  <page>
    <title>Diagnostic Radiology/Musculoskeletal Imaging/Infection/SAPHO Syndrome</title>
    <ns>0</ns>
    <id>40854</id>
    <revision>
      <id>701580</id>
      <parentid>701578</parentid>
      <timestamp>2006-12-30T21:56:21Z</timestamp>
      <contributor>
        <username>Reece</username>
        <id>46573</id>
      </contributor>
      <comment>/* Radiologic Findings */ Removed images with unknown copyright status</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Definition==
*&lt;b&gt;S&lt;/b&gt;ynovitis
*&lt;b&gt;A&lt;/b&gt;cne -- commonly involving the face and upper back.
*&lt;b&gt;P&lt;/b&gt;ustulosis -- usually involving the palms of the hands and/or soles of the feet (palmo-plantar pustulosis).
*&lt;b&gt;H&lt;/b&gt;yperostosis
*&lt;b&gt;O&lt;/b&gt;steitis


&lt;b&gt;SAPHO syndrome&lt;/b&gt; is thought to comprise a spectrum of disorders that share some clinical, radiologic and pathologic characteristics. An entity known as chronic recurrent multifocal osteomyelitis (CRMO) was first described in 1972. Subsequently in 1978 several cases of CRMO were associated with clinical findings of palmoplantar pustulosis. Since then, a number of associations between skin conditions and osteoarticular disorders have been reported with a variety of different names including sternocostoclavicular hyperostosis, pustulotic arthro-osteitis, and acne-associated spondyloarthropathy. SAPHO was coined in 1987 and basically represents a spectrum of inflammatory osteitis which may or may not be associated with dermatologic pathology.

==Radiologic Findings==
Anterior chest wall (most common site, 65-90% of pts): Hyperostosis, sclerosis and bone hypertrophy especially involving the sternoclavicular joint, often with a soft tissue component.

Above images demonstrate sclerosis and hyperostosis of the medial left clavicle (sternocostoclavicular hyperostosis), a very typical site of involvement in the SAPHO syndrome.

&lt;u&gt;Spine&lt;/u&gt; (second most common site, 33% of pts): Segmental, usually involving the thoracic spine. 4 main presentations include spondylodiscitis, osteosclerosis, paravertebral ossifications, and sacroiliac joint involvement.

&lt;u&gt;Long bones&lt;/u&gt; (30% of pts): usually metadiaphyseal and located in the distal femur and proximal tibia. It looks like chronic osteomyelitis but will not have a sequestrum or abscess.

&lt;u&gt;Flat bones&lt;/u&gt;: mandible and ilium (10% of pts).

&lt;u&gt;Peripheral arthritis&lt;/u&gt; has been reported in 92% of cases of SAPHO as well.

&lt;u&gt;Children&lt;/u&gt;: There is a prediliction for the metaphysis of long bones in the legs (tibia, femur, fibula), followed by clavicles and spine.

==Treatment==

Treatment of patients with SAPHO syndrome is based on clinical symptoms. Generally, treatment involves non-steroidal antiinflammatory drugs and cortisone medications (either in the form of topical creams, tablets, or by injection into the involved area). Topical cold applications may also help in affected areas. If unsuccessful, both sulfasalazine and methotrexate have been tried with mixed results.

==References==
*[http://uwmsk.org/moodle/mod/resource/view.php?id=407 SAPHO Syndrome] by Mike Chang, M.D., University of Washington Department of Radiology
*[http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=PubMed&amp;list_uids=12719925&amp;dopt=Abstract Skeletal Radiology]. 2003 Jun;32(6):311-27.
*[http://www.medicinenet.com/sapho_syndrome/article.htm MedicineNet.com]

[[Category:Diagnostic Radiology]]</text>
      <sha1>q71edmgz6vz8qba7xqy4867msowhd4f</sha1>
    </revision>
  </page>
  <page>
    <title>User:MathMan64~enwikibooks/Arithmetic/Factoring</title>
    <ns>2</ns>
    <id>40855</id>
    <revision>
      <id>2871359</id>
      <parentid>256443</parentid>
      <timestamp>2015-04-17T22:43:19Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:MathMan64/Arithmetic/Factoring]] to [[User:MathMan64~enwikibooks/Arithmetic/Factoring]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/MathMan64|MathMan64]]&quot; to &quot;...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">
= Factoring =

== Factors, multiples, divisors, and divisibility ==

The four terms above apply only to whole numbers.

*2 is a '''factor''' of 6, because 2 times 3 is 6.
*6 is a '''multiple''' of 2 for the same reason.
*2 is a '''divisor''' of 6 because 6 divided by 2 is 3 with no remainder.
*6 is '''divisible''' by 2 for the reasons above.

These four statements all say the same thing from different perspectives.  The terminology used below refers to the smaller numbers as factors, the larger number as being divisible by each of the factors.

== Divisibility ==
There are several ways to tell if one number is divisible by another.

=== Multiplication ===
If the numbers are small, a multiplication fact should come to mind.
*56 is divisible by 7 because 7 times 8 is 56.
*27 is not divisible by 4 because 4 times 6 is 24 and 4 times 7 is 28. Since there is no whole number between 6 and 7, there is no multiple of 4 between 24 and 28.

=== Division ===
A way to show divisibility that always works is to divide and see whether or not there is a remainder.

*42 is divisible by 14 because 42 divided by 14 is 3 with no remainder.
*72 is not divisible by 13 because 72 divided by 13 is 5 with a remainder of 7.
*5391 is not divisible by 61 because on a calculator, 5361 divided by 61 is 88.38 (rounded.)
*5141 is divisible by 53 because on a calculator 5141 divided by 53 is exactly 97.

=== Divisibility tests ===
The most useful way to tell if one number is divisible by another for the following three particular divisors are called the divisibility tests.

==== Two ====
Divisibility by 2 can be seen by looking at the one's digit.  If the number is even, with a one's digit of 0, 2, 4, 6, or 8; then it is divisible by 2.
*It is seen that that 78 is divisible by 2, by looking at the one's digit.  It is 8, thus 78 is an even number and thus divisible by 2.
*It is seen that 9105 is not divisible by 2, by looking at the one's digit.  It is 5, thus 9105 is an odd number, and not divisible by 2.
*It is seen that 392,845,160 is divisible by 2, by looking at the one's digit.  Since it is 0, the number is divisible by 2.

==== Five ====
Divisibility by 5 can be seen by looking at the one's digit.  If the number has a one's digit of 0 or 5, then it is divisible by 5.  (Think of money in nickels.)
*It is seen that 78 is not divisible by 5, by looking at the one's digit.  It is 8.  Since it is not 0 or 5, 78 is not divisible by 5.
*It is seen that 9105 is divisible by 5, by looking at the one's digit.  It is 5.  Thus 9105 is divisible by 5.
*It is seen that 392,845,160 is divisible by 5, by looking at the one's digit.  Since it is 0, the number is divisible by 5.

==== Three ====
Divisibility by 3 is a little more difficult.  It takes an extra step.  Instead of looking just at the one's digit, all the digits must be added up.  If the sum of the digits is divisible by 3, then the original number is divisible by 3.  When the sum of the digits is a one-digit number, if the sum is 3, 6, or 9; the original number is divisible by 3.  If the sum of the digits is any other one-digit number, then the original number is not divisible by three.
*81 can be shown to be divisible by 3, by adding up the digits of 81.  The sum of the digits 8 + 1 is 9, so 81 is divisible by 3.
*71 can be shown to be not divisible by 3, by adding up the digits of 71.  The sum of the digits 7 + 1 is 8, so 71 is not divisible by 3.

If the sum of the digits is greater than 9, the digits of the sum can be added again to see whether or not 3, 6, or 9 results.
*It can be shown that 78 is divisible by 3, by adding up the digits.  The sum of 7 + 8 is 15, and 1 + 5 is 6; thus 78 is divisible by 3.
*It can be shown that 9105 is divisible by 3, by adding up the digits.  The sum of 9 + 1 + 0 + 5 is 18, and 1 + 8  is 9; thus 9105 is divisible by 3.
*It can be shown that 392,845,160 is not divisible by 3, by adding up the digits.  The sum of 3 + 9 + 2 + 4 + 5 + 1 + 6 + 0 is 38, and 3 + 8 is 11, and 1 + 1 is 2; therefore 392,845,160 is not divisible by 3.

== Prime and composite ==

Most whole numbers have several factors.

*As stated above 2 and 3 are factors of 6.  But 1 and 6 are also factors of 6.  The only factors of 6 are 1, 2, 3, and 6 because no other number divides into 6 with no remainder.
*The factors of 12 are 1, 2, 3, 4, 6, and 12.  Notice that these factors occur in pairs whose product is the number being factored: (1 and 12, 2 and 6, 3 and 4.)
*1 and 19 are the only factors of 19.  No other numbers divide into 19 evenly.
*The factors of 100 are 1, 2, 4, 5, 10, 20, 25, 50, and 100.  All these factors occur in pairs except for 10, since 100 divided by 10 is 10 itself.

Notice in these examples, that every whole number is a factor of itself, and that 1 is a factor of every number.  Some numbers have only two factors.  1 and the number itself are the only factors of these numbers.
 
=== Definitions ===
*Numbers with only two factors are '''prime''' numbers.  The only factors of a prime are 1 and the number itself.
*Numbers with more than two factors are '''composite''' numbers.
*Numbers with less than two factors are neither prime nor composite.  Zero and one are the only whole numbers that are neither prime nor composite.

=== Examples ===
The first ten prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, and 29.

=== Composite ===
If a number is divisible by any number besides 1 and the number itself, then it is composite.  If one other factor can be found, (any factor other than 1 and the number itself) then the number is shown to be composite.  Trying primes as factors is all that is needed, but if it is obvious that a composite number is a factor, the original number is shown to be composite.
*124 is divisible by 2, so it is composite.
*125 is divisible by 5, so it is composite.
*126 is divisible by 3, so it is composite.
*140 is equal to 10 times 14, so it is composite.
*143 is not divisible by 2, 5, or 3.  So we divide by 7, but it doesn't come out even.  So we divide by 11, and it does divide with no remainder.  So 143 is composite.

=== Prime ===
If a number is not divisible by any number other than one and the number itself, then it is prime.  This is much more difficult.  It must be shown that the number is not divisible by any other factor.  Only smaller numbers need to be checked.  Trying to divide by smaller primes will be sufficient.  In fact, it's only necessary to use the primes which when multiplied by themselves give a product that is smaller that the original number.
*43 is not divisible by 2, 5, or 3.  And 7 times 7 is larger than 43.  So 43 is prime.
*173 is not divisible by 2, 5, or 3.  When 173 is divided by 7, 11, and 13; none of the divisions result with no remainder.  And 17 times 17 is 289, which is larger than 173.  So 173 is prime.

=== Two rules ===
*The rule of 48 is that any number less than 48 only needs to be checked for divisibility by 2, 3 and 5.  This works because 7 is the next prime, and 7 times 7 is 49.
*The rule of 120 is that any number less than 120 only needs to be checked for divisibility by 2, 3 and 5, and then try dividing by 7.  This works because 11 is the next prime, and 11 times 11 is 121.

== Prime factorization ==

Factoring a number into primes is an important skill in working with the fractions of arithmetic.  Reducing and finding a common denominator when the numbers in the fraction are large, is made easier as the numbers are factored.  The concepts used in working with numeric fractions in this way, are concepts important when working with fractions in algebra.

The fundamental theorem of arithmetic states that every whole number can be factored into the product of primes in only one way.  The order in which the factors are listed does not make any difference.  The easiest way to be consistent in listing the factors is to have them in order with the small ones first.

The process of drawing a tree diagram will be useful as large numbers are considered.  In mathematics, trees are often drawn upside down, with the trunk (or root) at the top and the branches going down from there.

There are three ways to approach the factoring process.

==== Multiplication ====
When the number is less than 100, consider whether or not it is the product of a common multiplication fact.  


* Find the prime factorization of 35.

{|
 | &lt;math&gt;\bullet&lt;/math&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;
 | 
 |When factoring 35, &lt;br&gt; 5 &amp;times; 7 comes to mind. &lt;br&gt; Both are primes. &lt;br&gt; The task is finished.
 |
 {| 
  |- align=&quot;center&quot;
  |  &lt;math&gt; 35 \, &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 5 \quad 7 &lt;/math&gt;
 |}
|}
:* The prime factorization of 35 is 5 &amp;times; 7.


* When trying to factor 43, there is no example in the multiplication table that equals 43; none of the factors 2, 5 or 3, are divisors of 43; and 43 is less than 48; so 43 is prime.  
In the case of a prime number, the factorization is written with only the one number and no multiplication sign.

:* The prime factorization of 43 is 43.


With more than two factors, a larger tree and more steps are needed.  The factoring process continues until the numbers at the bottom of the tree are all prime.

* Find the prime factorization of 72.

{|
 | &lt;math&gt;\bullet&lt;/math&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;
 |
 | The two factors of 72 &lt;br&gt; that come to mind &lt;br&gt; are 9 &amp;times; 8 and they &lt;br&gt; both factor some more. &lt;br&gt; &lt;br&gt; &lt;br&gt;
 |
{|
  |- align=&quot;center&quot;
  | &lt;math&gt; 72 \, &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 9 \quad \ 8 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \backslash \ \ / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 3 \ \ 3 \ \ 2 \ \ 4 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \ / \ \ / \ \ / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 3 \ \ 3 \ \ 2 \ \ 2 \ \ 2 &lt;/math&gt;
 |}
|}
:* The prime factorization of 72 is 2 &amp;times; 2 &amp;times; 2 &amp;times; 3 &amp;times; 3 or 2&lt;sup&gt;3&lt;/sup&gt; &amp;times; 3&lt;sup&gt;2&lt;/sup&gt;.



* Find the prime factorization of 16.

{|
 | &lt;math&gt;\bullet&lt;/math&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;
 |
 | There are two multiplications &lt;br&gt; that have a product of 16. &lt;br&gt; 4 &amp;times; 4 and 2 &amp;times; 8. &lt;br&gt; Both can be further factored. &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;
 |
 |
 {|
  |- align=&quot;center&quot;
  | &lt;math&gt; 16 \, &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 4 \quad \ \; 4 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \backslash \ \ \ / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \ \  2 \ \  2 \ \  2 &lt;/math&gt;
 |}
 | style=&quot;width:30px&quot; align=&quot;center&quot; | or
 |
 {|
  |- align=&quot;center&quot;
  | &lt;math&gt; 16 \, &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \quad 8 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \quad / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \quad 2 \ \ \ 4 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \quad / \quad / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \quad 2 \quad 2 \quad 2 &lt;/math&gt;
 |}
|}
:* In either case, the prime factorization of 16 is 2 &amp;times; 2 &amp;times; 2 &amp;times; 2 or 2&lt;sup&gt;4&lt;/sup&gt;.

==== Divisibility tests ====

The divisibility tests are very useful when there is not an easily remembered multiplication fact with the product that needs factoring.

* Find the prime factorization of 111.

: 111 is not divisible by 2 or 5, but it is divisible by 3.  Division of 111 by 3 gives 37.
:* The prime factorization of 111 is 3 &amp;times; 37.


* Find the prime factorization of 72 using the divisibility tests.

{|
 | &lt;math&gt;\bullet&lt;/math&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;
 |
 |72 is divisible by 2. &lt;br&gt; 72 &amp;divide; 2 = 36. &lt;br&gt; Try 2 again. &lt;br&gt; 36 &amp;divide; 2 = 18. &lt;br&gt; Still even. &lt;br&gt; 18 &amp;divide; 2 = 9. &lt;br&gt; No more 2s. &lt;br&gt; 3 &amp;times; 3 = 9. &lt;br&gt; &lt;br&gt;
 |
  {|
  |- align=&quot;center&quot;
  | &lt;math&gt; 72 \, &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \quad 36 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \quad / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \quad 2 \ \ \ 18 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \quad / \quad / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \quad 2 \quad 2 \quad 9 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \quad / \quad / \quad / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \quad 2 \quad 2 \quad 3 \quad 3 &lt;/math&gt;
 |}
|}
:* The prime factorization of 72 is 2 &amp;times; 2 &amp;times; 2 &amp;times; 3 &amp;times; 3 or 2&lt;sup&gt;3&lt;/sup&gt; &amp;times; 3&lt;sup&gt;2&lt;/sup&gt;.


*  Find the prime factorization of 2310.

{|
 | &lt;math&gt;\bullet&lt;/math&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;
 |
 | &lt;br&gt; 2, 5, and 3 all work. &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; 77 &amp;divide; 7 = 11. &lt;br&gt;
 |
  {|
  |- align=&quot;center&quot;
  | &lt;math&gt; 2310 \, &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \ \ 1155 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \quad / \ \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \quad 5 \ \ \ 231 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \quad / \quad / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \quad 5 \quad 3 \quad 77 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \quad / \quad / \quad / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \quad 5 \quad 3 \quad 7 \quad 11 &lt;/math&gt;
 |}
|}
:* The prime factorization of 72 is 2 &amp;times; 3 &amp;times; 5 &amp;times; 7 &amp;times; 11.

==== Division ====

When all else fails, division must be used.

* Find the prime factorization of 2873.

{|
 | &lt;math&gt;\bullet&lt;/math&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;
 | 
 |The three divisibility tests all fail. &lt;br&gt; 2873 &amp;divide; 7 = 410.43 (rounded). &lt;br&gt; 2873 &amp;divide; 11 = 261.18 (rounded). &lt;br&gt; 2873 &amp;divide; 13 = 221 (with no remainder.) &lt;br&gt; 13 must be tried again. &lt;br&gt; 221 &amp;divide; 13 = 17 (with no remainder.) &lt;br&gt;
 |
 {|
  |- align=&quot;center&quot;
  | &lt;math&gt; 2873 \, &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 13 \quad 221 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \quad \ / \ \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 13 \quad 13 \ \ \ 17 &lt;/math&gt;
 |}
|}
:* The prime factorization of 2873 is 13 &amp;times; 13 &amp;times; 17 or 13&lt;sup&gt;2&lt;/sup&gt; &amp;times; 17.


Often combinations of the three factoring methods can be used.

* Use all three methods to find the prime factorization of 11,730.

{|
 | &lt;math&gt;\bullet&lt;/math&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt; &lt;br&gt;
 | 
 |The zero indicates a factor of 10. &lt;br&gt; 10 &amp;times; 1173 = 11730. &lt;br&gt; Neither 2 nor 5 are factors or 1173. &lt;br&gt; But 1 + 1 + 7 + 3 = 12, &lt;br&gt; which is divisible by 3. &lt;br&gt; 1173 &amp;divide; 3 = 391. &lt;br&gt; 3 is not a factor of 391. &lt;br&gt; 391 &amp;divide; 7 = 55.86 (rounded.) &lt;br&gt; 391 &amp;divide; 11 = 35.55 (rounded.) &lt;br&gt; 391 &amp;divide; 13 = 30.08 (rounded.) &lt;br&gt; 391 &amp;divide; 17 = 23 (exactly.)
 |
 {|
  |- align=&quot;center&quot;
  | &lt;math&gt; 11730 \, &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \ \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 10 \quad \ 1173 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \backslash \quad \ \ / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \ \ 5 \ \ \ 3 \ \ 391 &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; / \ \ / \ \ / \ \ \ / \ \backslash &lt;/math&gt;
  |- align=&quot;center&quot;
  | &lt;math&gt; 2 \ \ 5 \ \ \ 3 \ \ \ 17 \ \ 23 &lt;/math&gt;
 |}
|}
:* The prime factorization of 11,730 is 2 &amp;times; 3 &amp;times; 5 &amp;times; 17 &amp;times; 23.</text>
      <sha1>l5jr3lsqwr00jh9wo7l47hcjdody269</sha1>
    </revision>
  </page>
  <page>
    <title>Diagnostic Radiology/Musculoskeletal Imaging/Joint Disorders/Osteoarthritis</title>
    <ns>0</ns>
    <id>40858</id>
    <revision>
      <id>2065097</id>
      <parentid>701016</parentid>
      <timestamp>2011-03-06T01:26:29Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: devolpmental → developmental using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Etiology==

The cause of OA is generally multifactorial. Joint integrity, local inflammation, mechanical forces, genetic predisposition, and cellular/biomechanical processes all play a role in the development of OA. Although the etiology cannot always be identified, in general it is caused by repetitive biomechanical stress on the articular cartilage and subchondral bone of the affected joint. This is often due to a preexisting deformity such as developmental dysplasia of the hip, or genu varus of the knee. Additionally, there are multiple risk factors that increase a patient’s predisposition for OA. These include:

#Advanced age
#Female sex
#Obesity
#Occupation
#Sports activities
#Previous injury to the affected joint
#Muscle weakness/imbalance around affected joint
#Acromegaly
#Calcium crystal deposition disease 

==Clinical Findings==

Most often seen in patients over 40 year old. The most common complaint is pain worsened with activity and lessened with rest. Joint effusions and crepitus are often seen on clinical exam, and large osteophytes can be palplated at the affected joint.

The joints most commonly involved in primary OA include the knees, hips, hands, and spine, and less often the elbow, wrist, and ankle.

Symptoms in various joints:
*Knees: Crepitus, joint effusion, ostoephytes, pain, decreased ROM.
*Hips: Pain in hip or referred to knee.
*Hands: DIP (Heberden’s nodes), PIP (Bouchard’s nodes), and 1st CMC joint involvement which manifests as enlarged joints.
*Spine: Most commonly seen at points of greatest spinal flexibility (C5, T8, and L3).
*C-Spine: Uncovertebral and facet joint osteophytes can narrow the foramina and spinal canal.
*L-spine: Apophyseal osteophytes can cause spinal stenosis. 

==Radiologic Findings==
Plain films often do not correlate with physical exam findings in early disease. Findings consistent with OA include subchondral sclerosis, osteophytes, subchondral cysts, and joint space narrowing.

==Prognosis==
The most common course of OA is an intermittent, progressive worsening of symptoms over time, although in some patients the disease stabilizes. Prognosis also varies depending on which joint is involved.

Factors associated with progression of OA: 
*Knees: High body mass index, varus or valgus knee deformity.
*Hips: Female gender, night pain, presence of femoral osteophytes and subchondral sclerosis.
*Hands: Older age.

==References==
*[http://uwmsk.org/moodle/mod/resource/view.php?id=65 Osteoarthritis] by Leah Kiviat, M.D., University of Washington Department of Radiology.
*[[Wikipedia:osteoarthritis|Wikipedia listing for osteoarthritis]]

[[Category:Diagnostic Radiology]]</text>
      <sha1>mmqps8uic9yzvre75khb3e9k345ja1f</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:MathMan64~enwikibooks/Arithmetic/Factoring</title>
    <ns>3</ns>
    <id>40861</id>
    <revision>
      <id>2871372</id>
      <parentid>245079</parentid>
      <timestamp>2015-04-17T22:43:19Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User talk:MathMan64/Arithmetic/Factoring]] to [[User talk:MathMan64~enwikibooks/Arithmetic/Factoring]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/MathMan64|MathMan...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">The factoring page is (hopefully) done for now.</text>
      <sha1>be1dav0hbbsev7lcsc8tdtyqa7h3jw4</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:205.221.76.84</title>
    <ns>3</ns>
    <id>40862</id>
    <revision>
      <id>991080</id>
      <parentid>233698</parentid>
      <timestamp>2007-10-04T01:10:34Z</timestamp>
      <contributor>
        <username>Mike's bot account</username>
        <id>67847</id>
      </contributor>
      <minor />
      <comment>substituting templates</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please do not make inappropriate edits to Wikibooks.'''&lt;br/&gt;Edits that you have made have been considered inappropriate or even disruptive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:AN|Administrator's Noticeboard]]. {{{1|}}}}} &amp;mdash; [[User:Laurascudder|Laura Scudder]] | [[User talk:Laurascudder|Talk]] 21:44, 13 September 2005 (UTC)</text>
      <sha1>itx2cs3q12ysjs6v7dgt394mppqcgvf</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Platform/Windows/Console</title>
    <ns>0</ns>
    <id>40863</id>
    <revision>
      <id>1373164</id>
      <parentid>233722</parentid>
      <timestamp>2009-01-05T23:22:24Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>no deprecated templates</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Ada/Navigation|Platform|Windows|Console}}
__TOC__

The following libraries will help you when doing [[Ada Programming/Input Output|Input Output]] in the Windows console.

;[http://lml.ls.fi.upm.es/ftp/lenguajes/ada/nt_console/nt_con03.zip NT Console] : A library for doing output with format and for moving the cursor.
;[http://www.adapower.com/index.php?Command=Class&amp;ClassID=AdaLibs&amp;CID=368 Console IO] : A library for correct I/O of Latin 1 characters (i.e. 'Pos greater than 127) in the Windows console.
;[http://www.adapower.com/index.php?Command=Class&amp;ClassID=AdaLibs&amp;CID=377 NT Mouse] : A library for controlling the mouse under the Windows console.

== See also ==

=== Wikibook ===

* [[Ada Programming]]
* [[Ada Programming/Libraries]]

=== Ada Reference Manual ===

-- does not apply --

[[Category:Ada Programming|Console]]</text>
      <sha1>8bdltragka0w7yuafbotny3csz91i7f</sha1>
    </revision>
  </page>
  <page>
    <title>Diagnostic Radiology/Musculoskeletal Imaging/Trauma/Peroneal Tendon Injury</title>
    <ns>0</ns>
    <id>40883</id>
    <revision>
      <id>2065108</id>
      <parentid>701332</parentid>
      <timestamp>2011-03-06T01:27:21Z</timestamp>
      <contributor>
        <username>Avicennasis</username>
        <id>314063</id>
      </contributor>
      <minor />
      <comment>[[WP:AWB/T|Typo fixing]], typos fixed: dificult → difficult, propogate → propagate, accesory → accessory, the the → the, swellling → swelling using [[Project:AWB|AWB]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==Anatomy==
*The P. longus muscle originates on the proximal and mid lateral fibula and fans along the plantar surface of the foot to insert on the plantar aspect of the base of the 1st metatarsal and the medial cuneiform.
*The P. brevis muscle originates on the mid and distal lateral fibula and inserts on the base of the 5th metatarsal.

&lt;center&gt;
&lt;/center&gt;
&lt;b&gt;Fig. 1&lt;/b&gt;  Peroneus Longus (left) and Brevis (right) Muscles   

*The brevis and longus tendons are located on the posterolateral aspect of the ankle, passing posterior and inferior to the lateral malleolus 
*The  tendons run within a retromalleolar groove on the back of the fibula and are held in place along the lateral malleolus by the superior peroneal retinaculum 
*The tendons course superficial to the calcaneofibular ligament  and  then . . . 
*Next to the calcaneus they may be separated by the calcaneus' peroneal tubercle, with the brevis anterior to the tubercle; or both may pass anterior to the tubercle 
*The longus tendon crosses on the plantar aspect of the brevis before insertion

==Function==

The Peronei are the major foot everters, using the lateral malleolus as a pulley

==Radiologic Findings on MRI==
*The brevis tendon is usually anterior, or less commonly medial, to the longus 
*The brevis' musculotendinous jxn is more distal than the longus', so that just above the lateral malleolus the longus tendon can be seen lateral to the brevis muscle or tendon depending on where the musculotendinous jxn is 
*At or above the retromalleolar groove, the longus tendon is usually rounded while the brevis tendon is usually more flat, though often at the groove the tendons often cannot be appreciated as separate structures (Fig 2)

&lt;center&gt;

&lt;b&gt;Fig. 2&lt;/b&gt; Normal Peroneal Tendons at the Retromalleolar Groove -- Axial T1-weighted image --The tendons often cannot be appreciated as separate structures. The thin black line posterior to the tendons is the superior peroneal retinaculum.  
&lt;/center&gt;

*More distal the brevis tendon is more round/oval 
*Both tendons are normally low signal on T1 weighted images (Fig 3 and 4)

&lt;center&gt;

&lt;b&gt;Fig. 3&lt;/b&gt; Normal Peroneal Tendons Next to Calcaneus Superficial to Calcaneofibular Ligament -- Axial T1-weighted image -- Brevis is Anterior and Longus Posterior
&lt;/center&gt;


&lt;center&gt;

&lt;b&gt;Fig. 4&lt;/b&gt; Normal Peroneal Tendons split at Peroneal Tubercle of Calcaneus -- Axial and Sagittal T1-weighted images -- Brevis is Anterior to the Tubercle (arrow) and Longus is Posterior (arrowhead)
&lt;/center&gt;

*Both tendons are normally low signal on T2 and STIR images as well.  A little high T2/STIR signal around the tendons within the tendon sheath is normal (Fig 5)

&lt;center&gt;

&lt;b&gt;Fig. 5&lt;/b&gt; Normal Peroneus Brevis (anterior, arrow) and Longus (posterior, arrowhead) Tendons -- Axial and Sagittal STIR Images -- Tendons are low signal with a normal small amount of fluid within the tendon sheath around them 
&lt;/center&gt;

*Watch out on low TE sequences for &quot;magic angle&quot; phenomenon making the tendons intermediate/high signal as they curve beneath the distal fibula

===Peroneal Tendon Displacement===
*The peroneal tendons can be displaced --subluxed or dislocated -- when the superior retinaculum is disrupted.  This can occur with complex ankle fractures, calcaneal fractures, or with a forced inversion injuy with plantar flexion.
*The diagnosis is made when tendons are lateral to the distal fibula rather than posterior to it (Fig 6).
*Calcaneal and ankle fractures can also cause tendons to be torn or trapped between fracture fragments.

&lt;center&gt;

&lt;b&gt;Fig. 6&lt;/b&gt; Normal Location of Peroneal Tendons and Displaced Tendons on CT -- Normal tendon location is posterior to the fibula in the retromalleolar groove, as seen on axial (A) and consecutive coronal (B) CT images.  When the tendons are displaced from a torn retinaculum they will move lateral to the fibula as seen on axial (D) and coronal (E) images in a patient with a calcaneal and hindfoot fractures.

&lt;/center&gt;

===Peroneal Tendon Tears===
*Tendon tears most often occur in the brevis. The longus tendon is partially torn in ~30% of brevis tears and infrequently torn in isolation.
*In partial tears of the brevis tendon, there may be any combination of the following findings: 
the tendon may become enlarged, 
may lose its homogenous low signal, or 
may have focal areas of increased T2/STIR signal.
*Longitudinal tears of the brevis tendon are called peroneus brevis splits

&lt;center&gt;

&lt;b&gt;Fig. 7&lt;/b&gt; Peroneus Brevis Split -- Increased signal is seen within the tendon on axial and sagittal STIR images over 1.5 cm portion just distal to the lateral malleolus.
&lt;/center&gt;

*Splits occur in patients of all ages and athletes.  It may be difficult to diagnose clinically b/c of overlap with other ankle injuries and may be minimally symptomatic though pain and swelling are common.
*Splits occur usually when in dorsiflexion as the brevis tendon is wedged between the lateral malleolus and taught longus tendon.
*Thus most brevis tears begin at the lateral malleolus since that it is the main point of contact.  Second most common location would be at the peroneal tubercle.
*Usually brevis splits occur after chronic &quot;wear and tear&quot; frays the tendon from repetitive dorsiflexve stress culminating in a tear.
*Tears can propagate distal or proximal to their origin.
*Certain conditions predispose to splits, such as a shallow retromalleolar groove, lax or torn peroneal retinaculum, low lying brevis muscle belly, and the presence of a peroneus quartus muscle.

&lt;center&gt;

&lt;b&gt;Fig. 8&lt;/b&gt; Peroneus Brevis Split -- Axial T1 image shows a C-shaped brevis tendon around the longus, a common appearance, just above the retromalleolar groove. More distal, on the axial STIR image, the tendon has split into 2 tendons.  This was a patient with rheumatoid arthritis with marked tenosynovitis and an inflamed ankle joint as evidenced by the increased fluid in all compartments.
&lt;/center&gt;

*MRI Findings in Peroneus Brevis Splits
**Splits can be seen as increased T2/STIR signal longitudinally along a part of the tendon 
**Also, more severely, the brevis tendon, which can normally be flat, will be C-shaped, V-shaped, or there will be 2 separate tendons and only 1 muscle body from a longitudinal tear. 
**Brevis splits are most commonly seen on axial images but sometimes you can be lucky and get the longitudinal tear on sagittal or coronal images
**Again, one must be careful of &quot;magic angle&quot; phenoimenon as the tendons course below the fibula.  Oblique axial images angled perpendicular to the peroneal tendons distal to the fibula can be very helpful in this regard.

&lt;center&gt;

&lt;b&gt;Fig. 9&lt;/b&gt; Peroneus Brevis Split -- Axial Gradient image shows an enlarged brevis tendon with the appearnce of multiple small tendons from marked fraying and tears as the tendon passes the retromalleolar groove.  Distal to the fibula the axial T1 image shows a split brevis with small round  tendon posteriorly and C-shaped tendon anteriorly and inflamed tissue/fluid between.
&lt;/center&gt;

*You may see a fibular spur on the posterior lateral malleolus from reactive periostitis
*One must be sure to distinguish a full split (2 tendons) from a bifurcated peroneus brevis tendon (there is a muscle belly for each tendon) and an extra tendon from the separate accessory peroneus quartus muscle.


*Peroneus longus tears usually occur with brevis tears and have a similar appearance on MRI (Fig 10).

&lt;center&gt;

&lt;b&gt;Fig. 10&lt;/b&gt; Peroneus Longus Split -- Axial STIR images show a cleft of increased STIR signal in the posterior aspect of the longus consistent with a small longitudinal tear. The brevis, medial on the left image and anterior on the right, also has high signal within it from a small tear.
&lt;/center&gt;

==References==
*[http://uwmsk.org/moodle/mod/resource/view.php?id=45 Peroneal Tendon Injury] by Marty Smith, M.D., University of Washington Department of Radiology
*Kaplan PA, Dussault R, Helms CA, Anderson MW, Major NM. &lt;i&gt;Musculoskeletal MRI&lt;/i&gt;. Philadelphia, WB Saunders, 2001.

[[Category:Diagnostic Radiology]]</text>
      <sha1>1cfp8zd6y45jgo6h2u45ifkybcmsekz</sha1>
    </revision>
  </page>
  <page>
    <title>User:Johntex~enwikibooks</title>
    <ns>2</ns>
    <id>40884</id>
    <revision>
      <id>2864843</id>
      <parentid>233754</parentid>
      <timestamp>2015-04-17T22:33:56Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Johntex]] to [[User:Johntex~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Johntex|Johntex]]&quot; to &quot;[[Special:CentralAuth/Johntex~enwikibooks|Johntex~...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I'm a new user from the English version of Wikipedia.</text>
      <sha1>ji2wlx9wmfjkltw3rsmi82dazjoyfx3</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Akir~enwikibooks</title>
    <ns>3</ns>
    <id>40885</id>
    <revision>
      <id>2897794</id>
      <parentid>2843810</parentid>
      <timestamp>2015-04-19T04:29:51Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Just so you don't miss it, I left you a comment [[Talk:Learning Japanese|here]]. - [[User:Sik0fewl|Sik0fewl]] 00:32, 14 September 2005 (UTC)

== wikiversity ==

If you cast a [http://meta.wikimedia.org/wiki/Wikiversity wikiversity vote], please make a link at your [http://meta.wikimedia.org/wiki/Main_Page Wikimedia meta-wiki] user page linking back to your wikibooks user page. If you do not do so, your vote will not count. --[[User:JWSchmidt|JWSurf]] 02:47, 5 October 2005 (UTC)

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called Akir. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name Akir~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 22:56, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 04:29, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>rnrbe56fm398b527vwjtvc7osc9gwgg</sha1>
    </revision>
  </page>
  <page>
    <title>User:Zntrip</title>
    <ns>2</ns>
    <id>40886</id>
    <revision>
      <id>233773</id>
      <timestamp>2005-09-14T01:08:10Z</timestamp>
      <contributor>
        <username>Zntrip</username>
        <id>11459</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Hello!  If you would like to contact be please go to my [http://en.wikipedia.org/wiki/User:Zntrip Wikipedia user page] and leave a comment on my discussion page.</text>
      <sha1>aungbmny4pqm6i6jgh30ghty01kzycu</sha1>
    </revision>
  </page>
  <page>
    <title>Template:DS:ADT</title>
    <ns>10</ns>
    <id>40896</id>
    <revision>
      <id>1618258</id>
      <parentid>233889</parentid>
      <timestamp>2009-08-28T18:03:47Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>+category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;div class=&quot;interface&quot; style=&quot;background-color: #FFFFEE; border: solid 1px #FFC92E; padding: 8px; width:85%&quot; title=&quot;{{{1}}} Operations&quot;&gt;
'''{{{1}}} Operations'''&lt;br&gt;
{{{2}}}
&lt;/div&gt;&lt;noinclude&gt;[[Category:Data Structures/Templates|ADT]]&lt;/noinclude&gt;</text>
      <sha1>538lj79bv7p6cdp0dulsk3twzqq3vdw</sha1>
    </revision>
  </page>
  <page>
    <title>Talk:General Mechanics</title>
    <ns>1</ns>
    <id>40897</id>
    <revision>
      <id>1526377</id>
      <parentid>865704</parentid>
      <timestamp>2009-06-09T23:28:58Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>moved [[Talk:Mechanics]] to [[Talk:General Mechanics]]:&amp;#32;Need book's category.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I think that learning about kinematics might be a good starting point, even before dynamics. Straight-line motion is the best place to start with physics, in my opinion.</text>
      <sha1>6d36015mxabx1hf2xphvnlf9l0dki76</sha1>
    </revision>
  </page>
  <page>
    <title>Australian Studies</title>
    <ns>0</ns>
    <id>40899</id>
    <revision>
      <id>1856741</id>
      <parentid>1811165</parentid>
      <timestamp>2010-06-25T18:00:24Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>removing deprecated DDC/LOC classifications</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{stub}}


This book aims to enable students to obtain sufficient information about what is happening locally and throughout Australia today, so that they can:

* reflect on their personal circumstances, and those of their family and friends
* outline some possible employment, work and money-making trends in Australia over the next twenty years
* set some realistic short and long term personal goals.

On completion of this short book, students should be able to meet the following learning outcomes:

#  explain the main social trends in Australia today
#  explain some current trends in Australian politics,industry, business and employment
#  explain how they can equip themselves to thrive in this changing world 
#  discuss ways to become more active citizens in their local communities
#  discuss a range of likely future trends in Australia
#  discuss a range of ways to bring more fun and self-fulfillment into their lives and the lives of those around them
#  demonstrate a range of skills and strategies to adapt to the rapidly changing labour market and social changes in Australia

{{subjects|Cultural sociology}}
{{alphabetical|A}}
{{status|0%}}</text>
      <sha1>49wibegyg00rglof26lxf2i49r7epb5</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Libraries/Ada.Strings</title>
    <ns>0</ns>
    <id>40900</id>
    <revision>
      <id>2504582</id>
      <parentid>1649092</parentid>
      <timestamp>2013-03-22T16:35:42Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>using RM template instead</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Ada/Navigation|Libraries|Ada.Strings}}
__TOC__

The package {{Ada/package|Ada|Strings}} is the base package for all string packages. It defines common exceptions and constants.

These child packages are:
* [[Ada Programming/Libraries/Ada.Strings.Bounded|Ada.Strings.Bounded]]
* [[Ada Programming/Libraries/Ada.Strings.Bounded.Hash|Ada.Strings.Bounded.Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Fixed|Ada.Strings.Fixed]]
* [[Ada Programming/Libraries/Ada.Strings.Fixed.Hash|Ada.Strings.Fixed.Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Hash|Ada.Strings.Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Maps|Ada.Strings.Maps]]
* [[Ada Programming/Libraries/Ada.Strings.Maps.Constants|Ada.Strings.Maps.Constants]]
* [[Ada Programming/Libraries/Ada.Strings.Unbounded|Ada.Strings.Unbounded]]
* [[Ada Programming/Libraries/Ada.Strings.Unbounded.Hash|Ada.Strings.Unbounded.Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Bounded|Ada.Strings.Wide_Bounded]]
* [[Ada Programming/Libraries/Ada.Strings.Wide_Bounded.Wide_Hash|Ada.Strings.Wide_Bounded.Wide_Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Fixed|Ada.Strings.Wide_Fixed]]
* [[Ada Programming/Libraries/Ada.Strings.Wide_Fixed.Wide_Hash|Ada.Strings.Wide_Fixed.Wide_Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Hash|Ada.Strings.Wide_Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Maps|Ada.Strings.Wide_Maps]]
* [[Ada Programming/Libraries/Ada.Strings.Wide_Maps.Wide_Constants|Ada.Strings.Wide_Maps.Wide_Constants]]
* [[Ada Programming/Libraries/Ada.Strings.Wide_Unbounded|Ada.Strings.Wide_Unbounded]]
* [[Ada Programming/Libraries/Ada.Strings.Wide_Unbounded.Wide_Hash|Ada.Strings.Wide_Unbounded.Wide_Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Wide_Bounded|Ada.Strings.Wide_Wide_Bounded]] &lt;small&gt;(Ada 2005)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Wide_Bounded.Wide_Wide_Hash|Ada.Strings.Wide_Wide_Bounded.Wide_Wide_Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Wide_Fixed|Ada.Strings.Wide_Wide_Fixed]] &lt;small&gt;(Ada 2005)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Wide_Fixed.Wide_Wide_Hash|Ada.Strings.Wide_Wide_Fixed.Wide_Wide_Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Wide_Hash|Ada.Strings.Wide_Wide_Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Wide_Maps|Ada.Strings.Wide_Wide_Maps]] &lt;small&gt;(Ada 2005)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Wide_Maps.Wide_Wide_Constants|Ada.Strings.Wide_Wide_Maps.Wide_Wide_Constants]] &lt;small&gt;(Ada 2005)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Wide_Unbounded|Ada.Strings.Wide_Wide_Unbounded]] &lt;small&gt;(Ada 2005)&lt;/small&gt;
* [[Ada Programming/Libraries/Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Hash|Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Hash]] &lt;small&gt;(Ada 2005 generic function)&lt;/small&gt;

== See also ==

=== Wikibook ===

* [[Ada Programming]]
* [[Ada Programming/Libraries]]
* [[Ada Programming/Strings]]

=== Ada Reference Manual ===

==== Ada 95 ====

* {{Ada/95/RM|A|4|1|title=The Package Strings}}

==== Ada 2005 ====

* {{Ada/2005/RM|A|4|1|title=The Package Strings}}

{{BookCat}}</text>
      <sha1>ssnjbago8m65nbvthqskntq07pree6t</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Libraries/Ada.Strings.Unbounded</title>
    <ns>0</ns>
    <id>40901</id>
    <revision>
      <id>2504542</id>
      <parentid>1372737</parentid>
      <timestamp>2013-03-22T15:22:10Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>using RM template instead</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Ada/Navigation|Libraries|Ada.Strings.Unbounded}}
__TOC__

The package {{Ada/package|Ada|Strings|Unbounded}} defines the operations for unbounded string handling.

== Usage ==

{{Ada/package|Ada|Strings|Unbounded}} is used in several places. Here some relevant extracts. As always you can follow the download links to see the full examples.

 {{Ada/Sourceforge|show_commandline_4.adb}}

 {{Ada/kw|with}} {{Ada/package|Ada|Strings|Unbounded}};
 
    {{Ada/kw|package}} SU   {{Ada/kw|renames}} Ada.Strings.Unbounded;
 
    X :  SU.Unbounded_String 
      := SU.To_Unbounded_String (CL.Argument (1));
 
    T_IO.Put_Line (SU.To_String (X));
 
    X := SU.To_Unbounded_String (CL.Argument (2));
 
    T_IO.Put_Line (SU.To_String (X));

 {{Ada/Sourceforge|numeric_4.adb}}
 
 {{Ada/kw|with}} {{Ada/package|Ada|Strings|Unbounded}};
 
   {{Ada/kw|package}} Str {{Ada/kw|renames}} Ada.Strings.Unbounded;
   {{Ada/kw|function}} Get_Line {{Ada/kw|return}} Str.Unbounded_String;
 
   {{Ada/kw|use}} {{Ada/kw|type}} Str.Unbounded_String;
 
   Operation : Str.Unbounded_String;
 
   {{Ada/kw|function}} Get_Line {{Ada/kw|return}} Str.Unbounded_String {{Ada/kw|is}}
      BufferSize : {{Ada/kw|constant}} := 2000;
      Retval     : Str.Unbounded_String := Str.Null_Unbounded_String;
      Item       : String (1 .. BufferSize);
      Last       : Natural;
   {{Ada/kw|begin}}
      Get_Whole_Line :
         {{Ada/kw|loop}}
            T_IO.Get_Line (Item =&gt; Item, Last =&gt; Last);
 
            Str.Append (Source =&gt; Retval, New_Item =&gt; Item (1 .. Last));
 
            {{Ada/kw|exit}} Get_Whole_Line {{Ada/kw|when}} Last &lt; Item'{{Ada/attribute|Last}};
         {{Ada/kw|end}} {{Ada/kw|loop}} Get_Whole_Line;
 
      {{Ada/kw|return}} Retval;
   {{Ada/kw|end}} Get_Line;

== See also ==

=== Wikibook ===

* [[Ada Programming]]
* [[Ada Programming/Libraries]]
* [[Ada Programming/Strings#Unbounded-length string handling]]

=== Ada Reference Manual ===

==== Ada 95 ====

* {{Ada/95/RM|A|4|5|title=Unbounded-Length String Handling}}

==== Ada 2005 ====

* {{Ada/2005/RM|A|4|5|title=Unbounded-Length String Handling}}

[[Category:Ada Programming|Ada.Strings.Unbounded]]</text>
      <sha1>and90eowgqw3kxe3zh6ikumf4dl58m8</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Libraries/Ada.Exceptions</title>
    <ns>0</ns>
    <id>40902</id>
    <revision>
      <id>2504584</id>
      <parentid>1446901</parentid>
      <timestamp>2013-03-22T16:39:05Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>using RM template instead</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;noinclude&gt;{{Ada/Navigation|Libraries|Ada.Exceptions}}
__TOC__&lt;/noinclude&gt;

The package {{Ada/package|Ada|Exceptions}} allows you to analyze exceptions you have caught, to raise exceptions with an associated message or to save exceptions occurrences for later processing.

== Usage ==

The following example shows how to implement a &quot;last resort&quot; error handler which just displays the information related to the error which occurred.

 {{Ada/Sourceforge|numeric_6.adb}}

 {{Ada/kw|with}} {{Ada/package|Ada|Exceptions}};
 
 {{Ada/kw|procedure}} Numeric_6 {{Ada/kw|is}}
   {{Ada/kw|package}} Exept {{Ada/kw|renames}} Ada.Exceptions;
 ...
            {{Ada/kw|exception}}
               {{Ada/kw|when}} An_Exception : {{Ada/kw|others}} =&gt;
                  T_IO.Put_Line
                    (Exept.Exception_Information (An_Exception));
            {{Ada/kw|end}} Try;

== See also ==
 
=== Wikibook ===

* [[Ada Programming]]
* [[Ada Programming/Libraries]]
* [[Ada Programming/Strings]]

=== Ada Reference Manual ===

==== Ada 95 ====

* {{Ada/95/RM|11|4|1|title=The Package Exceptions}}

==== Ada 2005 ====

* {{Ada/2005/RM|11|4|1|title=The Package Exceptions}}

&lt;noinclude&gt;
{{BookCat}}
&lt;/noinclude&gt;</text>
      <sha1>r92w0z04na7xv392tnw78mtdw0eb25d</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Advanced</title>
    <ns>0</ns>
    <id>40908</id>
    <revision>
      <id>3054358</id>
      <parentid>3054218</parentid>
      <timestamp>2016-03-03T11:07:24Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <comment>move</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Collection of essays on more advanced topics - please state authorship here

* [[Rebol programming/Advanced/Bindology|Bindology]]

* [[Rebol programming/Advanced/Identity|Identity]]

* [[Rebol programming/Advanced/Interpreter|The Rebol interpreter]]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>iynivpwmrsl2sm1b0y9dc4ur57py89m</sha1>
    </revision>
  </page>
  <page>
    <title>Geometry for Elementary School/Copying a line segment</title>
    <ns>0</ns>
    <id>40910</id>
    <revision>
      <id>2630656</id>
      <parentid>1666544</parentid>
      <timestamp>2014-04-15T20:13:32Z</timestamp>
      <contributor>
        <username>Xania</username>
        <id>40302</id>
      </contributor>
      <minor />
      <comment>Set edit review settings for &quot;Geometry for Elementary School/Copying a line segment&quot;: Page intended for younger readers or editors [Default: Stable]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Navigate|Prev=Constructing equilateral triangle |Curr=Copying a line segment|Next=Copying a triangle}}


This construction copies a line segment &lt;math&gt;\overline{AB}&lt;/math&gt; to a target point '''T'''. The construction is based on [http://aleph0.clarku.edu/~djoyce/java/elements/bookI/propI2.html Book I, prop 2].

== The construction ==
# Let '''A''' be one of the end points of &lt;math&gt;\overline{AB}&lt;/math&gt;. Note that we are just giving it a name here. (We could replace '''A''' with the other end point '''B''').&lt;br/&gt;[[File:Geom copyseg 01.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
# [[../Our_tools:_Ruler_and_compass# how to draw a line?|Draw a line segment]] &lt;math&gt;\overline{AT}&lt;/math&gt;&lt;br/&gt;[[image:Geom copyseg 02.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
# [[../Constructing equilateral triangle/|Construct an equilateral triangle]] &lt;math&gt;\triangle ATD &lt;/math&gt; (a triangle that has &lt;math&gt;\overline{AT}&lt;/math&gt; as one of its sides).&lt;br/&gt;[[File:Geom copyseg 03.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
#[[../Our_tools:_Ruler_and_compass# how to draw a circle?|Draw the circle ]]  &lt;math&gt;\circ A,\overline{AB} &lt;/math&gt;, whose center is '''A''' and radius is  &lt;math&gt;\overline{AB}&lt;/math&gt;.&lt;br/&gt;[[File:Geom copyseg 04.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
#[[../Our_tools:_Ruler_and_compass# how to draw a line|Draw a line segment]] starting from '''D''' going through  '''A''' until it intersects &lt;math&gt;\circ A,\overline{AB} &lt;/math&gt; and let the intersection point be '''E''' . Get segments  &lt;math&gt;\overline{AE}&lt;/math&gt; and &lt;math&gt;\overline{DE}&lt;/math&gt;.&lt;br/&gt;[[File:Geom copyseg 05.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
#[[../Our_tools:_Ruler_and_compass# how to draw a circle?|Draw the circle ]]  &lt;math&gt;\circ D,\overline{DE} &lt;/math&gt;, whose center is '''D''' and radius is  &lt;math&gt;\overline{DE}&lt;/math&gt;.&lt;br/&gt;[[File:Geom copyseg 06.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
#[[../Our_tools:_Ruler_and_compass# how to draw a line|Draw a line segment]] starting from '''D''' going through  '''T''' until it intersects &lt;math&gt;\circ D,\overline{DE} &lt;/math&gt; and let the intersection point be '''F'''. Get segments  &lt;math&gt;\overline{TF}&lt;/math&gt; and &lt;math&gt;\overline{DF}&lt;/math&gt;.&lt;br/&gt;[[File:Geom copyseg 07.png|225px]]

== Claim ==
The segment &lt;math&gt;\overline{TF}&lt;/math&gt; is equal to &lt;math&gt;\overline{AB}&lt;/math&gt; and starts at '''T'''.&lt;br/&gt;[[image:Geom copyseg claim.png|225px]]

== Proof ==
# Segments &lt;math&gt;\overline{AB}&lt;/math&gt; and &lt;math&gt;\overline{AE}&lt;/math&gt; are both from the center of &lt;math&gt;\circ A,\overline{AB} &lt;/math&gt; to its circumference. Therefore they equal to the circle radius and to each other.&lt;br/&gt;[[File:Geom copyseg proof01.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
# Segments &lt;math&gt;\overline{DE}&lt;/math&gt; and &lt;math&gt;\overline{DF}&lt;/math&gt; are both from the center of &lt;math&gt;\circ D,\overline{DE} &lt;/math&gt; to its circumference. Therefore they equal to the circle radius and to each other.&lt;br/&gt;[[File:Geom copyseg proof02.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
# &lt;math&gt;\overline{DE}&lt;/math&gt; equals to the sum of its parts &lt;math&gt;\overline{DA}&lt;/math&gt; and &lt;math&gt;\overline{AE}&lt;/math&gt;.&lt;br/&gt;[[File:Geom copyseg proof03.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
# &lt;math&gt;\overline{DF}&lt;/math&gt; equals to the sum of its parts &lt;math&gt;\overline{DT}&lt;/math&gt; and &lt;math&gt;\overline{TF}&lt;/math&gt;.&lt;br/&gt;[[File:Geom copyseg proof04.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
# The segment &lt;math&gt;\overline{DA}&lt;/math&gt; is equal to &lt;math&gt;\overline{DT}&lt;/math&gt; since they are the sides of the equilateral triangle &lt;math&gt;\triangle ATD &lt;/math&gt;.&lt;br/&gt;[[File:Geom copyseg proof05.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
# Since the sum of segments is equal and two of the summands are equal so are the two other summands &lt;math&gt;\overline{AE}&lt;/math&gt; and &lt;math&gt;\overline{TF}&lt;/math&gt;.&lt;br/&gt;[[File:Geom copyseg proof06.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
# Therefore &lt;math&gt;\overline{AB}&lt;/math&gt; equals &lt;math&gt;\overline{TF}&lt;/math&gt;.&lt;br/&gt;[[File:Geom copyseg proof07.png|225px]]&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;

[[it:Geometria per scuola elementare/Copia di un segmento]]</text>
      <sha1>k76jupxrve1cemq2fimcm6k4xx6s18r</sha1>
    </revision>
  </page>
  <page>
    <title>Geometry for Elementary School/Parallel lines</title>
    <ns>0</ns>
    <id>40917</id>
    <revision>
      <id>2630645</id>
      <parentid>1800480</parentid>
      <timestamp>2014-04-15T20:10:48Z</timestamp>
      <contributor>
        <username>Xania</username>
        <id>40302</id>
      </contributor>
      <minor />
      <comment>Set edit review settings for &quot;Geometry for Elementary School/Parallel lines&quot;: Page intended for younger readers or editors [Default: Stable]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Navigate|Book=Geometry for Elementary School|Prev=Measurements|Curr=Parallel lines
|Next=Symmetry}}

== Definition ==
{{elements|pg=29|book=I|def=35}}
Let us recall what we learnt from the lines chapter. Parallel lines are straight lines that never intersect, which means that they never cross. Notice that when we look at parallel parts of shapes there is no place where they intersect even if we extend the lines.

As we have learnt from the plane shapes chapter, parallelograms, including squares, rhombi and rectangles, have two pairs of parallel sides. Also, there is one pair in trapeziums. Can you name any other polygons that contain parallel lines?

== Transversals ==
{{elements|pg=55|book=I|prop=27}}
A '''transversal''' is a line segment that cut through two line segments. (They can, of course, be lines and rays as well.) When the two line segments are parallel, the eight angles produced will have some special properties.

In such a case, imagine that one of the angles on one of the segments is called ''x''. It is the top left angle. The top left angle of the other segment would be its corresponding angle, or corr. ∠. Corresponding angles are always the same size. Then imagine the vertically opposite angle of angle ''x''. Let's call it ''y''. The corresponding angle of ''y'' would be the alternate angle, or alt. ∠, of ''x''. Bear in mind that alternate angles are also the same in size as they are vertically opposite angles with the corresponding angles.
[[File:Theorem 11.GIF|400px|right]]
What about the adjacent angles of ''x''? As you can see, these angles are adjacent angles on a straight line with ''x'', so they must be supplementary. These are called interior angles on the same side of the transversal (int. ∠s). They are different from the kind of interior angle in a polygon, so do not mix them up.

When you are doing your sums, you will find out that these three kinds of angles pop up very commonly and are very useful. The reference for these angles are corr./alt./int. ∠s, AB//CD. When you want to prove that two lines are congruent, then use corr./alt. ∠s equal or int. ∠s supp..

Look at the figure. Given that ''m'' and ''n'' are parallel, angles 1 and 5, 2 and 6, 3 and 7, 4 and 8 are corresponding angles, and are therefore equal. 5 and 3, 6 and 4 are alternate angles, so they must be equal as well. 5 and 4, 3 and 6 are interior angles, so they must be supplementary. Note that there are also two sets of angles at a point and eight pairs of adjacent angles on a straight line.

[[File:Transversals problem.GIF|right|250px]]
Let us look at an example. Given that ''DE'' and ''GB'' are parallel, how can we find ''x'', ''y'' and ''z''?

&lt;math&gt;\begin{align} \angle EFC &amp;= \angle BGC \text{ (corr. } \angle \text{s, DE} / / \text{GB)} \\
z &amp;= 125^\circ \end{align}
&lt;/math&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;math&gt;\begin{align} \angle AFD &amp;= \angle BGC \text{ (alt. } \angle \text{s, DE} / / \text{GB)} \\
y &amp;= 125^\circ \end{align}
&lt;/math&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;math&gt;\begin{align} \angle AGB + \angle BGC &amp;= 180^\circ \text{ (adj. } \angle \text{s on st. line)}\\
\angle AGB + 125^\circ &amp;= 180^\circ \\
\angle AGB &amp;= 180^\circ - 125^\circ \\
&amp;= 55^\circ \end{align}&lt;/math&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;math&gt;\begin{align} \angle AGB + \angle EFC &amp;= 180^\circ \text{ (int. } \angle \text{s, DE} / / \text{GB)} \\
55^\circ + x &amp;= 180^\circ \\
x &amp;= 180^\circ - 55^\circ \\
&amp;= 125^\circ \end{align}
&lt;/math&gt;

[[Category:{{FULLBOOKNAME}}]]

[[it:Geometria per scuola elementare/Linee parallele]]</text>
      <sha1>rlaademcblrq0hjz2tzlvy21w5814gx</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Advanced/Interpreter</title>
    <ns>0</ns>
    <id>40918</id>
    <revision>
      <id>3054349</id>
      <parentid>3054220</parentid>
      <timestamp>2016-03-03T11:05:34Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <minor />
      <comment>Ladislav moved page [[Rebol Programming/Advanced/Interpreter]] to [[Rebol programming/Advanced/Interpreter]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">'''Author: Ladislav Mecir'''

=== Interpretation phases ===
The interpretation of Rebol source code (a text contained in a text file, a text contained in a Rebol string, a text typed in from the keyboard, etc.), consists from three basic steps:

#'''make''' phase
#'''load''' phase
#'''do''' phase

=== MAKE phase ===
In this phase the '''make''' function creates a Rebol block.

The created block is filled by '''make''' to refer to the Rebol values received by parsing the supplied source text according to the rules for the corresponding Rebol datatypes.

All words (i.e. all values of '''any-word!''' datatype) referenced by the new block are ''unbound'', i.e. they have no context information. For more details on contexts see [http://www.rebol.net/wiki/Bindology Bindology] essay.

=== LOAD phase ===
In this phase the '''load''' function extends the ''global context'' to contain all words (values of the '''any-word!''' datatype) referenced by the block made in the previous phase, with the  exception of refinements.

All words (except for refinements) in the created blocks are replaced by their global context counterparts.

That is why all words contained in a '''load''' result block are global words (except for the refinements, as was stated above).

=== DO phase ===
For the '''do''' function is immaterial whether the interpreted block is a result of the previous phase or a result of any other operation. This model describes the behaviour of the '''do''' function processing Rebol blocks and parens in all situations.

The '''do''' function processes the values contained in the interpreted block one by one in a way we call ''implicit evaluation''.

====Simple implicit evaluation====
For some values, the result of implicit evaluation is the encountered value itself. Examples are integral values, decimal values, characters, strings and blocks.

====Implicit evaluation of parens====
As opposed to blocks that implicitly evaluate to themselves, parens, when encountered in an interpreted block, are interpreted further in the same way as the '''do''' function interprets blocks.

====Implicit evaluation of functions====
When '''any-function!''' datype values are encountered, it is necessary to collect their arguments and supply them to the evaluated functions.

Specifically, if the '''do''' function is evaluated, it evaluates its argument in a way that we call ''explicit evaluation''. In particular, if the argument is a block, the '''do''' function interprets it recursively as described in the &quot;DO phase&quot; section. Therefore, for a block, the explicit evaluation differs from the implicit evaluation. This is what makes Rebol special.

====Implicit evaluation of words====
When the implicitly evaluated value is a word having the '''word!''' datatype, it is treated as a variable and the value of the variable is looked up and treated depending on its datatype. We call this ''indirect implicit evaluation''.

There is also an ''indirect explicit evaluation'', which happens if a word or a path is supplied as an argument to the '''do''' function.

====The result of the interpretation====
When the '''do''' function finishes the implicit evaluation of all values contained in the block, the last obtained value becomes the result of the interpretation of the block.

Exception: if the '''do''' function obtains an '''error!''' datatype value and the value isn't used as an argument to a function accepting error values, the interpreter causes the error.

In my opinion, this exception is unnecessary and can be painlessly avoided in the future versions of the interpreter.

=== Simulation (simple Rebol interpreter written in Rebol) ===
The '''simulation''' function below is a simple interpreter able to interpret one line of text you input from the keyboard.

   simulation: func [/local input-line created-block loaded-block] [
       ; step #0, INPUT
       input-line: ask &quot;&gt;&gt; &quot;
       ; step #1, MAKE
       created-block: make block! input-line
       ; step #2, LOAD
       loaded-block: load created-block
       ; step #3, DO
       do loaded-block
       ; done
   ]

It illustrates the description written above.

=== Evaluation of Rebol words ===
Rebol words (the values of the '''word!''' datatype) exhibit the most complicated behaviour. When a word is evaluated by the '''do''' function, the '''do''' function first picks the value the word refers to. If the evaluated word has no context, the '''do''' function is unable to pick the value and it causes an error instead:

 &gt;&gt; b: make block! &quot;a&quot; ; == [a]
 == [a]
 &gt;&gt; do b
 ** Script Error: a word has no context
 ** Near: a

The next action depends on the datatype of the picked value. A special case is, when the word is unset, i.e. when the value of the word is of the '''unset!''' datatype:

 &gt;&gt; do [a]
 ** Script Error: a has no value
 ** Near: a

For some values no further action is needed and the picked value becomes the result of the word evaluation, for other values the action is taken in accordance with the datatype. The values of the second kind we could call word-active values, or word-active datatypes. The recent versions of the interpreter use decreasing number of word-active datatypes.

Typical representants of the word-active values are '''any-function!''' values. When such a value is encountered as a value of an evaluated word, the '''do''' function collects all the arguments for the function and &quot;calls the function&quot; like above.

The shrinking list of the word-active datatypes still contains lit-words and lit-paths (unnecessarily, in my opinion). On the other hand, the behaviour of '''unset!''' values could be made more function-like too.

    word-active?: func [
        {finds out, if a Rebol value is word-active}
        value [any-type!]
    ] [
        parse head insert/only copy [] get/any 'value [
            unset! | any-function! | lit-word! | lit-path! 
        ]
    ]

=== Recursive behaviour ===
The word-active values can exhibit recursive behaviour like:

    ; recursive function
    factorial: func [n] [
        either n &lt;= 1 [1] [n * factorial n - 1]
    ]

 &gt;&gt; factorial 5
 == 120

In fact, we can make even not-active values to exhibit recursive behaviour, if we use active values appropriately:

    ; recursive block
    factorial-block: [
        either n &lt;= 1 [1] [n * (n: n - 1 do factorial-block)]
    ]

 &gt;&gt; n: 5 do factorial-block
 == 120

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>4k9ggnenk8ako9yd5sm1yv2q7h8ctow</sha1>
    </revision>
  </page>
  <page>
    <title>Guitar/Scales</title>
    <ns>0</ns>
    <id>40925</id>
    <revision>
      <id>3013786</id>
      <parentid>3013785</parentid>
      <timestamp>2015-11-07T05:48:00Z</timestamp>
      <contributor>
        <username>R.christie</username>
        <id>2784334</id>
      </contributor>
      <comment>/* Major Pentatonic */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">[[File:Apollo Musagetes Pio-Clementino Inv310.jpg|thumb|The god of music Apollo strumming a lyre. In Greek mythology the lyre was invented by Hermes who presented it to Apollo as recompense for stealing his cattle.]]

Western music uses twelve notes called the complete chromatic scale. The seven white keys and their corresponding black keys on a keyboard allows for easy visualization of the complete chromatic scale and the twelve semitones. From this simple twelve note system are all the other scales derived. A scale is simply a way of ordering the twelve sounds found in Western Music. It must be borne in mind that music as an activity precedes musical theory and that the scales we use now have an evolution that predates written records. Today's scale system is referred to as the major-minor system. Go back to the Medieval period and the system used then was called the Church Modes. The study of scales should start with the major scales and minor scales or the blues and pentatonic scales. Unlike the piano where each semitone is represented by a key; on the guitar each semitone is represented by a fret. Pianists visualize the chromatic scale as the seven white keys and five black keys but guitarists should visualize their complete chromatic scale as all the notes from the open E string (low) up to the open high e string. Basically play all the open notes and fretted notes on the first four frets in sequence starting with the low open E string and ending on the high open e string. This is the complete chromatic scale over two octaves as visualized on the guitar. Scales take their names from the first note played - the C major, C minor, C diminished are all scales that start with C. For historical reasons the major scale and the minor scale consists of seven notes. Other scales may use more than seven notes and some (e.g. pentatonic = 5) less than seven notes.

It is important to remember that on the guitar, if you know the pattern of a particular scale, you can move that pattern anywhere else on the fret board and be playing in a different key. By this, I mean if you are playing a major scale, beginning on the low E string at the fifth fret, which is an A note and then you played the same pattern of notes, but you started on the 3rd fret of the low E string, you will be playing a G major scale. If this sounds confusing to you, read the entire article, and if it is still unclear, see the [[w:en:Musical_scale|musical scale]] article on Wikipedia or the [[Music Theory]] wikibook.

There are many different scales: the major scale, three different forms of the minor scale, the blues scale, the pentatonic scale, the whole tone scale, the diminished scale and some scales that originated in Spain and India. There are also very interesting scales from eastern music. It is possible to create your own scales by altering another as you wish, or completely coming up with your own. Note that though there are three minor scales (Natural. Harmonic and Melodic) you don't actually have to learn three different scales. The Harmonic and Melodic Minor scales are variations of the Natural Minor scale. After you have learnt, for example, the A natural minor  scale, you only have to sharpen the seventh note to change it to a Harmonic minor scale. The Melodic Minor has two notes sharpened - the sixth and seventh note. Once again the reasons for the existence of these scales is historical. The Harmonic minor scale is so called because it is from this scale that minor harmony is usually taken. A simpler way of saying this is that the Harmonic minor scale is the scale we use to build the chords in a minor key. The Melodic Minor scale is so called because this scale is frequently used for building melodies.   

The &quot;Circle of Fifths&quot; is a memory aid for learning the major and minor scales which can equally be applied to all scales. The scales in common use have evolved over many centuries and the established major scale, followed by the natural minor and then the two variants: the harmonic minor scale and the melodic minor scale form the basis of Western music. The &quot;Circle of Fifths&quot; and major scales in tab can be found in the Scale Manual section of this book.

All scales in this section are in the key of A and presented in tab except the Hungarian Minor which is given in the key of C. This means that the root note of all these scales is A.

==Pentatonic Scales==

Pentatonic scales are the least complicated, because they have five notes rather than the seven notes used in the major scale. The pentatonic scale is used extensively by blues and rock guitarists and provides an ideal starting point for jamming along with recorded music. A very famous song that uses the A minor pentatonic is &quot;Stairway To Heaven&quot; by Led Zeppelin. 

===A Minor Pentatonic===

    '''A-C-D-E-G-A'''

Most guitarists feel comfortable beginning with the A minor pentatonic, which is the single most popular scale for solos in Western music. Most guitarists know this shape of the Am pentatonic scale by heart, mainly because it is so frequently used in solos. It can also be used for pretty much anything, especially if you want to give it a slightly melancholy sound.

Remember that this scale pattern (and any other scale pattern) can be moved up and down the fretboard therefore allowing the guitarist to play in many different keys using the one shape.

[[Image:Guitar_minor_pentitonic_scale.png|center|600x100]]

In this diagram, the notes are ordered sequentially up the scale (going higher in pitch). The different octaves of the first degree of the scale (in this case, the A note) are highlighted with a yellow dot.

====Learning the Scale====
When you are learning any scale, it is helpful to break it down into smaller chunks, which can be practiced and memorized much more easily. With the A minor pentatonic scale, it is most commonly broken down into these sections. 


Section 1:

&lt;font face=&quot;Courier New&quot;&gt;
 e |--0-------3--
 B |-----1----3--
 G |--0-----2----
 D |--0-----2----
 A |--0-------3--
 E |--0-------3--
&lt;/font&gt;

[[Image:A minor pentatonic for guitar ex1.png|thumb|800px|none|A minor pentatonic Ex1]]


Section 2:

&lt;font face=&quot;Courier New&quot;&gt;
 e |-----3-----5--
 B |-----3-----5--
 G |--2--------5--
 D |--2--------5--
 A |-----3-----5--
 E |-----3-----5--
&lt;/font&gt;

[[Image:A minor pentatonic for guitar ex2.png|thumb|800px|none|A minor pentatonic Ex2]]


Section 3:

&lt;font face=&quot;Courier New&quot;&gt;
 e |--5--------8--
 B |--5--------8--
 G |--5-----7-----
 D |--5-----7-----
 A |--5-----7-----
 E |--5--------8--
&lt;/font&gt;

[[Image:A minor pentatonic for guitar ex3.png|thumb|800px|none|A minor pentatonic Ex3]]


Section 4:

&lt;font face=&quot;Courier New&quot;&gt;
 e |-----8-----10-
 B |-----8-----10-
 G |--7-----9-----
 D |--7--------10-
 A |--7--------10-
 E |-----8-----10-
&lt;/font&gt;

[[Image:A minor pentatonic for guitar ex4.png|thumb|800px|none|A minor pentatonic Ex4]]


Section 5:

&lt;font face=&quot;Courier New&quot;&gt;
 e |----10----12--
 B |----10------13
 G |--9-------12--
 D |----10----12--
 A |----10----12--
 E |----10----12--
&lt;/font&gt;

[[Image:A minor pentatonic for guitar ex5.png|thumb|800px|none|A minor pentatonic Ex5]]


Scales should be practiced repeatedly and slowly. Scales are an ideal way to improve hand co-ordination and finger memory which in turn leads to a personal technique. A common technical problem associated with the guitar is string noise. Even a simple chord movement from C to Am should be played at the slowest speed possible with care being taken not to bend the strings and for each note, open or fretted, to ring out clearly. The A minor pentatonic shapes shown above should be played slowly up and down. If you are playing with a plectrum then practice [[Guitar/Alternate Picking|alternate picking]] or [[Guitar/Tremolo Picking|tremolo picking]]. To play scales with fingers just alternate the index and middle finger of the right hand. If you are using a steel-string acoustic then to avoid tendonitis and hand fatigue it is advised that you tune your guitar down a tone when practising scales.

====The Blues scale====
''Please see the [[Guitar/Blues|Blues]] section for more lessons.''

You can easily modify the minor pentatonic scale by adding a single note and turning it into the blues scale - the flatted fifth note (b5) of the scale. In the diagram below, A blues scale is shown at the fifth fret. The number represent the frets played, and the numbers in parentheses represent the Blue Note which, as the name suggests, is the major source of the blues vibe in the scale. The blue note is not actually part of the Minor Pentatonic scale, although it is often added in for extra colour.

&lt;font face=&quot;Courier New&quot;&gt;
 e |--5--------8--
 B |--5--------8--
 G |--5-----7-(8)-
 D |--5-----7-----
 A |--5-(6)-7-----
 E |--5--------8--
&lt;/font&gt;

[[Image:A minor pentatonic for guitar inc blue notes.png|thumb|left|800px|A minor pentatonic including &quot;blue&quot; notes]]
{{clear}}

===Major Pentatonic===
The A major pentatonic also has five notes:

'''A-B-C#-E-F#-A'''

[[Image:Guitar_A_major_pentatonic_scale.png|none|600x100]]

The major pentatonic can be formed from any seven note major scale by simply leaving out the fourth and seventh note. The difference between the A minor pentatonic and the A major pentatonic is their modality. They both use the same first degree, however it is the interval between the first degree and the third that defines a scales modality. In the major pentatonic we have a major third (A - C#) so therefore the modal quality of this scale is major. The minor pentatonic has a minor third (A - C) and therefore the modal quality of this scale is minor. Though they both have the same tonality by starting on the same note they differ in sound. Understanding that it is the third of a scale that determines whether a scale is minor mode or major mode is important. In a scale the I, IV and V notes are called the tonal degrees and the III, VI, and VII notes are called the modal degrees. 

&lt;font face=&quot;Courier New&quot;&gt;
 e |-----5---------
 B |-----5-----7---
 G |--4-----6------
 D |--4--------7---
 A |--4--------7---
 E |-----5-----7---
&lt;/font&gt;

[[Image:A major pentatonic scale for guitar two octaves 4th position.png|thumb|800px|none|A major pentatonic scale - two octaves]]

Practice this the same way you practice the minor pentatonic scale. When you feel completely comfortable with both pentatonic scales, begin to explore the other different scales.
{{clear}}

==Major Scale==
The pattern for any major scale is 2-2-1-2-2-2-1, meaning that the difference from the first note to the second is 2 frets, from the second to the third is 1 fret, etc. The difference in notes can also be called steps, 2 notes being a whole step, and 1 note being a half step. This pattern in steps can be shown as W-W-H-W-W-W-H or as full tones and semitones T-T-S-T-T-T-S.

Major scale in the key of A

'''A-B-C#-D-E-F#-G#-A''' 

&lt;font face=&quot;Courier New&quot;&gt;
 e |-4-5---------
 B |---5---7-----
 G |-4---6-7-----
 D |-4---6-7-----
 A |-4-5---7-----
 E |---5---7-----
&lt;/font&gt;

[[Image:A major scale for guitar two octave 4th position.png|thumb|800px|left|A major scale - two
 octaves]]
{{clear}}

==Natural Minor Scale==
The pattern for any natural minor scale is 2-1-2-2-1-2-2, shown in steps as W-H-W-W-H-W-W

Natural Minor Scale in the key of A

'''A-B-C-D-E-F-G-A'''

&lt;font face=&quot;Courier New&quot;&gt;
 e |---5--------
 B |---5-6---8--
 G |-4-5---7----
 D |---5---7----
 A |---5---7-8--
 E |---5---7-8--
&lt;/font&gt;

[[Image:A natural minor scale for guitar two octaves 4th position.png|thumb|800px|none|A natural minor scale - two octaves]]


The movable shape for this scale is shown:
&lt;font face=&quot;Courier New&quot;&gt;
 e |-------|---x---|-------|-------|-------|
 B |-------|---x---|---x---|-------|---x---|
 G |---x---|---x---|-------|---x---|-------|
 D |-------|---x---|-------|---x---|-------|
 A |-------|---x---|-------|---x---|---x---|
 E |-------|---x---|-------|---x---|---x---|
              5th
&lt;/font&gt;
{{clear}}

==Harmonic Minor Scale==
The Harmonic minor scale has a very different quality than the minor pentatonic scale. It has a &quot;middle-eastern&quot; sound when used to play lead lines.

'''A-B-C-D-E-F-G#-A'''

This is a moveable shape and to play in other keys just move the shape up or down the neck:

&lt;font face=&quot;Courier New&quot;&gt;
 e |--4--5-----7--8--
 B |-----5--6--------
 G |--4--5-----7-----
 D |--------6--7-----
 A |-----5-----7--8--
 E |-----5-----7--8--
&lt;/font&gt;

[[Image:A harmonic minor scale for guitar two octaves 4th position.png|thumb|800px|none|A harmonic minor scale - two octaves]]

This looks a little more complicated, and is certainly more difficult to get to sound nice, but when you have mastered it, it will sound great!
{{clear}}

==Melodic Minor Scale==
This scale is actually ''two'' scales. Thus when one speaks of a &quot;melodic minor&quot; pattern, one refers to two patterns - one ascending and one descending. 

'''A-B-C-D-E-F#-G#-A''' (ascending)
'''A-G-F-E-D-C-B-A'''   (descending)

This is best illustrated by playing the melodic minor scale. Below is the A melodic minor scale in tab; note the sharps when ascending and the naturals when descending.


[[Image:A melodic minor scale for guitar one octave 4th position.png|thumb|800px|none|A melodic minor scale - one octave]]


The ascending pattern is constructed by raising the 6th and 7th steps of the natural minor scale. 
When descending the normal natural minor scale is used without the 6th and 7th raised. The reason for this is to be found in singing. Vocalists find the augmented second between the F and G sharp in the Harmonic minor scale very awkward to sing. It is not impossible but the dissonance of the interval and the sense of &quot;leaping&quot; meant that a different approach was sought. The answer was to also raise the sixth note. The awkward augmented second was gone and the melody flowed better due to the absence of the leap. 

{{clear}}

==Hungarian Minor==
The Hungarian minor scale is a type of combined musical scale. It is akin to the harmonic minor scale, except that it bears a raised fourth. Its tonal center is slightly ambiguous, due to the large number of half steps. Also known as Double Harmonic Minor, or Harmonic Minor #4, it figures prominently in Eastern European music, particularly in gypsy music. Melodies based on this scale have an exotic, romantic flavor.

&lt;font face=&quot;Courier New&quot;&gt;
 e |--7--8-----10--11--
 B |--7--8--9----------
 G |--7--8-------------
 D |--------9--10------
 A |--------9--10--11--
 E |-----8-----10--11--
&lt;/font&gt;

[[Image:C hungarian minor scale for guitar one octave 8th position.png|thumb|800px|none|C Hungarian minor scale - one octave]]

A Hungarian minor scale in the key of C would proceed as follows: 

'''C-D-Eb-F#-G-Ab-B-C'''

Its scale degrees are 1 2 b3 #4 5 b6 7 and its step pattern w - h - + - h - h - + - h, where w indicates a whole step, h indicates a half step, and + indicates an augmented second.
{{clear}}
===Derived chords===
Chords that may be derived from the Hungarian minor scale are:

&lt;gallery perrow=6&gt;
&lt;font face=&quot;Courier New&quot;&gt;
File:C minor barre chord for guitar 3rd position.png|'''C Minor'''
File:D7b5 chord for guitar 5th position.png|'''D7 Flat Fifth'''
File:E augmented chord for guitar open position.png|'''E Flat Augmented'''
File:G major chord for guitar open position (no doubled third).png|'''G Major'''
File:A flat seventh chord for guitar barre 4th position.png|'''A Flat Seventh'''
File:B minor sixth chord for guitar open position.png|'''B Minor Sixth'''
&lt;/font&gt; 
&lt;/gallery&gt;



This scale is obtainable from the *Arabic scale by starting from the fourth of that scale. Said another way, the C Hungarian minor scale is equivalent to the G Arabic scale.

In the video game, The Illusion of Gaia (published by the Enix Corporation), the flute melody found in the Inca Ruins uses the C Hungarian minor scale (a #4 is used in the second phrase); this music is also quoted when the player reaches the Larai Cliff stage of the game, transposed to D.

Joe Satriani has composed several songs using the Hungarian minor scale.

==Church Modes==
The Church Modes preceded the Major-Minor system. The student is advised to listen to the music of Palestrina as well as the jazz album ''Kind of Blue'' by Miles Davis; both use modes to great effect. 

For example, in the key of C, the notes are:

'''C-D-E-F-G-A-B-C'''

If you wanted to play in the 2nd mode, called the Dorian mode, then you would just play the same notes, but start on the second note. So instead you would play:

'''D-E-F-G-A-B-C-D'''

The different modes are called:

* Ionian
* Dorian
* Phrygian
* Lydian
* Mixolydian
* Aeolian
* Locrian

The Phrygian mode - '''E F G A B C D E''' - is of special interest to flamenco players. The third and seventh degrees are often sharpened, giving the scale notes '''E F G# A B C D# E'''. This arrangement is commonly used in descending form. The second degree of the scale is referred to as a leaning note, which means the note tends to fall one semitone. In this case F falls to E.


{{Guitar}}

[[Category:Guitar]]</text>
      <sha1>bq5v3xya4i92gqat56n1ipfd3jifw75</sha1>
    </revision>
  </page>
  <page>
    <title>Visual Basic/Case Studies</title>
    <ns>0</ns>
    <id>40926</id>
    <revision>
      <id>1489191</id>
      <parentid>1057104</parentid>
      <timestamp>2009-05-03T02:51:53Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Category in template now.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">=Introduction=
Here you will find detailed discussions of actual applications complete with all the source code.  This is not intended to be a software distribution so the code is not provided as zip files but as readable source code linked with comments.  The idea is to learn from the code and the explanations, apply the lessons learnt and create something new.  If anyone wants to improve the code it should be done in such a way that the reader can see both the improved and un-improved versions and, of course, there should be a thorough explanation of why the change was made, what it fixes and so on.

=[[../Regular Expression Tester|Regular Expression Tester]]=
While exploring the possibility for automated download of source code from Wikibooks I found a need to do some regular expression work.  As my Regular Expression skills are a bit rusty I did a quick Google search for a tool that would let me test expressions.  I found several tools but none were entirely suitable so I decided to write my own; it took about 15 minutes.  It proved so useful in its prototype state that i have decided to include it as is without any clean up.

=[[../JArithmetic|JArithmetic]]=
An example of multi-language, multi-paradigm programming.  Or to say it in more down to earth terms: a program that use object oriented and traditional approaches to coding together with code in languages other than Visual Basic Classic as well as the use of external process and libraries.  Take a look.

{{VBClassicNav1|Examples|Regular Expression Tester}}</text>
      <sha1>auypt19rcv60ug0fownx0cq4sw8z1ha</sha1>
    </revision>
  </page>
  <page>
    <title>X86 Disassembly/Assemblers and Compilers</title>
    <ns>0</ns>
    <id>40928</id>
    <revision>
      <id>3018566</id>
      <parentid>3018565</parentid>
      <timestamp>2015-11-24T10:34:55Z</timestamp>
      <contributor>
        <username>Syum90</username>
        <id>1499881</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/59.160.73.118|59.160.73.118]] ([[User talk:59.160.73.118|talk]]) to last version by Arthur200000</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{x86 Disassembly/Page}}

== Assemblers ==
'''[[w:Assembler (computer programming)|Assemblers]]''' are significantly simpler than compilers, and are often implemented to simply translate the assembly code to binary machine code via one-to-one correspondence. Assemblers rarely optimize beyond choosing the shortest form of an instruction or filling delay slots.

Because assembly is such a simple process, disassembly can often be just as simple. Assembly instructions and machine code words have a one-to-one correspondence, so each machine code word will exactly map to one assembly instruction. However, disassembly has some other difficulties which cannot be accounted for using simple code-word lookups. We will introduce assemblers here, and talk about disassembly later.

== Assembler Concepts ==

Assemblers, on a most basic level, translate assembly instructions into machine code with a one to one correspondence. They can also translate named variables into hard-coded memory addresses and labels into their relative code addresses.

Assemblers, in general, do not perform code optimization. The machine code that comes out of an assembler is equivalent to the assembly instructions that go into the assembler. Some assemblers have high-level capabilities in the form of ''Macros.''

Some information about the program is lost during the assembly process. First and foremost, program data is stored in the same raw binary format as the machine code instructions. This means that it can be difficult to determine which parts of the program are actually instructions. Notice that you can disassemble raw data, but the resultant assembly code will be nonsensical. Second, textual information from the assembly source code file, such as variable names, label names, and code comments are all destroyed during assembly. When you disassemble the code, the instructions will be the same, but all the other helpful information will be lost. The code will be accurate, but more difficult to read.

Compilers, as we will see later, cause even more information to be lost, and decompiling is often so difficult and convoluted as to become nearly impossible to do accurately.

== Intel Syntax Assemblers ==

Because of the pervasiveness of Intel-based IA-32 microprocessors in the home PC market, the majority of assembly work done (and the majority of assembly work considered in this wikibook) is x86-based. Many of these assemblers (or new versions of them) can handle amd64/x86_64/EMT64 code as well, although this wikibook will focus primarily on 32 bit (x86/IA-32) code examples.

=== MASM ===

MASM is Microsoft's assembler, an abbreviation for &quot;Macro Assembler.&quot; However, many people use it as an acronym for &quot;Microsoft Assembler,&quot; and the difference isn't a problem at all. MASM has a powerful macro feature, and is capable of writing very low-level syntax, and pseudo-high-level code with its macro feature. MASM 6.15 is currently available as a free-download from Microsoft, and MASM 7.xx is currently available as part of the Microsoft platform DDK.

*MASM uses Intel Syntax.
*MASM is used by Microsoft to implement some low-level portions of its Windows Operating systems.
*MASM, contrary to popular belief, has been in constant development since 1980, and is upgraded on a needs-basis.
*MASM has always been made compatible by Microsoft to the current platform, and executable file types.
*MASM currently supports all Intel instruction sets, including SSE2.

Many users love MASM, but many more still dislike the fact that it isn't portable to other systems.

=== TASM ===

TASM, Borland's &quot;Turbo Assembler,&quot; is a functional assembler from Borland that integrates seamlessly with Borland's other software development tools. Current release version is version 5.0. TASM syntax is very similar to MASM, although it has an &quot;IDEAL&quot; mode that many users prefer. TASM is not free.

=== NASM ===

NASM, the &quot;Netwide Assembler,&quot; is a free, portable, and retargetable assembler that works on both Windows and Linux. It supports a variety of Windows and Linux executable file formats, and even outputs pure binary. NASM is not as &quot;mature&quot; as either MASM or TASM, but is:
* more portable than MASM
* cheaper than TASM
* strives to be very user-friendly

NASM comes with its own disassembler &lt;code&gt;ndisasm&lt;/code&gt;, and supports 64-bit (x86-64/x64/AMD64/Intel 64) CPUs.

NASM is released under the LGPL.

=== FASM ===

FASM, the &quot;Flat Assembler&quot; is an open source assembler that supports x86, and IA-64 Intel architectures.

== (x86) AT&amp;T Syntax Assemblers ==

AT&amp;T syntax for x86 microprocessor assembly code is not as common as Intel-syntax, but the GNU Assembler (GAS) uses it, and it is the ''de facto'' assembly standard on Unix and Unix-like operating systems.

=== GAS ===
The [[w:GNU Assembler|GNU Assembler (GAS)]] is the default back-end to the GNU Compiler Collection (GCC) suite. As such, GAS is as portable and retargetable as GCC is. However, GAS uses the AT&amp;T syntax for its instructions as default, which some users find to be less readable than Intel syntax. Newer versions of gas can be switched to Intel syntax with the directive &quot;.intel_syntax noprefix&quot;.

GAS is developed specifically to be used as the GCC backend. Because GCC always feeds it syntactically correct code, GAS often has minimal error checking.

GAS is available as a part of either the GCC package or the GNU binutils package. [http://www.gnu.org/software/binutils/]

== Other Assemblers ==

=== HLA ===
[[w:High Level Assembly|HLA]], short for &quot;High Level Assembler&quot; is a project spearheaded by Randall Hyde to create an assembler with high-level syntax. HLA works as a front-end to other assemblers such as FASM (the default), MASM, NASM, and GAS. HLA supports &quot;common&quot; assembly language instructions, but also implements a series of higher-level constructs such as loops, if-then-else branching, and functions. HLA comes complete with a comprehensive standard library.

Since HLA works as a front-end to another assembler, the programmer must have another assembler installed to assemble programs with HLA. HLA code output therefore, is as good as the underlying assembler, but the code is much easier to write for the developer. The high-level components of HLA may make programs less efficient, but that cost is often far outweighed by the ease of writing the code. HLA high-level syntax is very similar in many respects to Pascal, which in turn is itself similar in many respects to C, so many high-level programmers will immediately pick up many of the aspects of HLA.

Here is an example of some HLA code:

&lt;source lang=&quot;cpp&quot;&gt;
 mov(src, dest);  // C++ style comments
 pop(eax);
 push(ebp);
 for(mov(0, ecx); ecx &lt; 10; inc(ecx)) do
    mul(ecx);
 endfor;
&lt;/source&gt;

Some disassemblers and debuggers can disassemble binary code into HLA-format, although none can faithfully recreate the HLA macros.

== Compilers ==
A [[Compiler Construction|compiler]] is a program that converts instructions from one language into equivalent instructions in another language. There is a common misconception that a compiler always directly converts a high level language into machine language, but this isn't always the case. Many compilers convert code into assembly language, and a few even convert code from one high level language into another. Common examples of compiled languages are: C/C++, Fortran, Ada, and Visual Basic. The figure below shows the common compile-time steps to building a program using the C programming language. The compiler produces object files which are linked to form the final executable:

[[Image:C language building steps.png|center]]

For the purposes of this book, we will only be considering the case of a compiler that converts C or C++ into assembly code or machine language. Some compilers, such as the Microsoft C compiler, compile C and C++ source code directly into machine code. GCC on the other hand compiles C and C++ into assembly language, and an assembler is used to convert that into the appropriate machine code. From the standpoint of a disassembler, it does not matter exactly how the original program was created. Notice also that it is not possible to exactly reproduce the C or C++ code used originally to create an executable. It is, however, possible to create code that compiles identically, or code that performs the same task.

C language statements do not share a one to one relationship with assembly language. Consider that the following C statements will typically all compile into the same assembly language code:

&lt;source lang=&quot;C&quot;&gt;
*arrayA = arrayB[x++];

*arrayA = arrayB[x]; x++;

arrayA[0] = arrayB[x++];

arrayA[0] = arrayB[x]; x++;
&lt;/source&gt;

Also, consider how the following loop constructs perform identical tasks, and are likely to produce similar or even identical assembly language code:

&lt;source lang=&quot;c&quot;&gt;
for(;;) { ... }

while(1) { ... }

do { ... } while(1)
&lt;/source&gt;

== Common C/C++ Compilers ==

The purpose of this section is to list some of the most common C and [[C++ Programming/Programming Languages/C++/Code/Compiler|C++]] compilers in use for developing ''production-level'' software. There are many many C compilers in the world, but the reverser doesn't need to consider all cases, especially when looking at professional software. This page will discuss each compiler's strengths and weaknesses, its availability (download sites or cost information), and it will also discuss how to generate an assembly listing file from each compiler.

=== Microsoft C Compiler ===

The Microsoft C compiler is available from Microsoft for free as part of the Windows Server 2003 SDK. It is the same compiler and library as is used in MS Visual Studio, but doesn't come with the fancy IDE. The MS C Compiler has a very good optimizing engine. It compiles C and C++, and has the option to compile C++ code into MSIL (the .NET bytecode).

Microsoft's compiler only supports Windows systems, and Intel-compatible 16/32/64 bit architectures.

The Microsoft C compiler is '''cl.exe''' and the linker is '''link.exe'''

==== Listing Files ====

In this wikibook, cl.exe is frequently used to produce assembly listing files of C source code. To produce an assembly listing file yourself, use the syntax:

 cl.exe /Fa&lt;assembly file name&gt; &lt;C source file&gt;

The &quot;/Fa&quot; switch is the command-line option that tells the compiler to produce an assembly listing file.

For example, the following command line:

 cl.exe /FaTest.asm Test.c

would produce an assembly listing file named &quot;Test.asm&quot; from the C source file &quot;Test.c&quot;. Notice that there is no space between the /Fa switch and the name of the output file.

=== GNU C Compiler ===

The GNU C compiler is part of the GNU Compiler Collection (GCC) suite. This compiler is available for most systems and it is free software. Many people use it exclusively so that they can support many platforms with just one compiler to deal with. The GNU GCC Compiler is the ''de facto'' standard compiler for Linux and Unix systems. It is retargetable, allowing for many input languages (C, C++, Obj-C, Ada, Fortran, etc...), and supporting multiple target OSes and architectures. It optimizes well, but has a non-aggressive IA-32 code generation engine.

The GCC frontend program is “gcc&quot; (“gcc.exe” on Windows) and the associated linker is “ld” (“ld.exe” on Windows). Windows cmd searches for the programs with “.exe” extensions automatically, so you don't need to type the filename extension.

==== Listing Files ====

To produce an assembly listing file in GCC, use the following command line syntax:
 gcc -S /path/to/sourcefile.c
For example, the following commandline:
 gcc -S test.c
will produce an assembly listing file named “test.s”. Assembly listing files generated by GCC will be in GAS format. On x86 you can select the syntax with &lt;code&gt;-masm=intel&lt;/code&gt; or &lt;code&gt;-masm=att&lt;/code&gt;. GCC listing files are frequently not as well commented and laid-out as are the listing files for cl.exe. 

You may add `-g3` flags to enable source-code-level debugging symbols so you can see the line numbers in the listing. The &lt;code&gt;-fno-asynchronous-unwind-tables&lt;/code&gt; flag can help eliminate some macros in the listing.

=== Intel C Compiler ===

This compiler is used only for x86, x86-64, and IA-64 code. It is available for both Windows and Linux. The Intel C compiler was written by the people who invented the original x86 architecture: Intel. Intel's development tools generate code that is tuned to run on Intel microprocessors, and is intended to squeeze every last ounce of speed from an application. AMD IA-32 compatible processors are not guaranteed to get the same speed boosts because they have different internal architectures.

=== Metrowerks CodeWarrior ===

This compiler is commonly used for classic MacOS and for embedded systems. If you try to reverse-engineer a piece of consumer electronics, you may encounter code generated by Metrowerks CodeWarrior.

=== Green Hills Software Compiler ===

This compiler is commonly used for embedded systems. If you try to reverse-engineer a piece of consumer electronics, you may encounter code generated by Green Hills C/C++.

{{TopNav|prev=|next=Disassemblers and Decompilers}}</text>
      <sha1>d7ic620py7v616xeyx18s9q8111zzof</sha1>
    </revision>
  </page>
  <page>
    <title>Wikibooks:CCO</title>
    <ns>4</ns>
    <id>40937</id>
    <redirect title="Wikibooks:Card Catalog Office" />
    <revision>
      <id>1030906</id>
      <parentid>1030665</parentid>
      <timestamp>2007-11-15T12:23:48Z</timestamp>
      <contributor>
        <username>Herbythyme</username>
        <id>40889</id>
      </contributor>
      <minor />
      <comment>Reverted edit of [[Special:Contributions/IJstLrndAlotAboutStargateAtWP|IJstLrndAlotAboutStargateAtWP]], changed back to last version by KelvSYC</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#redirect [[Wikibooks:Card Catalog Office]]</text>
      <sha1>mg601mhs8wv2sjxfgfie2rakeg2c3ct</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Attributes/'Count</title>
    <ns>0</ns>
    <id>40938</id>
    <revision>
      <id>1373385</id>
      <parentid>234141</parentid>
      <timestamp>2009-01-05T23:58:57Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>no deprecated templates</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Ada/Navigation|Attributes|'Count}}
__TOC__

== Description ==

X'Count is an Ada [[Ada Programming/Attributes|attribute]] where X is an entry point in a protected type. This attribute returns the number of [[Ada Programming/Tasking|tasks]] currently enqueued waiting for entrance into the entry procedure.

== Example ==

 {{Ada/kw|protected}} {{Ada/kw|type}} My_Protected_Type {{Ada/kw|is}}
   {{Ada/kw|entry}} My_Entry;
   {{Ada/kw|procedure}} Get_Count( Task_Count : {{Ada/kw|out}} Natural );
 {{Ada/kw|end}} My_Protected_Type;
 ...
 {{Ada/kw|procedure}} {{Ada/kw|body}} Get_Count( Task_Count : {{Ada/kw|out}} Natural ) {{Ada/kw|is}} {{Ada/kw|begin}}
   Task_Count := My_Entry'Count;
 {{Ada/kw|end}} Get_Count;
== See also ==

=== Wikibook ===

* [[Ada Programming]]
* [[Ada Programming/Tasking]]

=== Ada Reference Manual ===

* {{Ada/RM2|13|3|Operational and Representation Attributes}}
* {{Ada/RMA1|K|Language-Defined Attributes}}

[[Category:Ada Programming|Count]]</text>
      <sha1>cc8gsbvnf50ctjx2bs3ad5iqrusmbyu</sha1>
    </revision>
  </page>
  <page>
    <title>Visual Basic/JArithmetic</title>
    <ns>0</ns>
    <id>40939</id>
    <revision>
      <id>1489200</id>
      <parentid>1057078</parentid>
      <timestamp>2009-05-03T02:54:20Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>Category in template now.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">=Introduction=
JArithmetic is a prototype application intended to be a sort of poor man's MathCad.

When you start to write a program you need a set of requirements.  Sometimes the goal is very precise and can be exhaustively described but it often happens that while the goal is clear it is neither desirable nor practical to describe in detail what the program is to do.  JArithmetic is an example of the second type.

The basic requirements are these:
*An editor for a document type that can include formulas and show both the formula and the result,
*The editor must support text formatting (typeface, type size, type style.

Obviously such a set of requirements doesn't constrain the developer very much.  In this case an additional consideration is this:

*we aren't sure of the costs and benefits of different capabilities.
*we aren't sure what we mean by formula,
*we aren't sure what we mean by text formatting,
*we aren't sure what we mean by result.

This means that we must develop the program a little before we can decide what additional requirements should be added.  Still we ought not to just wander aimlessly in the programming landscape.  Therefore we define a set of desired features, a wishlist:

*It should be possible to include graphics in the document,
*Results should be displayable as charts.

Another valuable list of characteristics is a negative one.  That is a list of things that are not required.  This doesn't mean that they are forbidden, just that time is not to be spent on developing them at the expense of required or wishlist features:

*We will not demand the ability to format mathematical formulas in textbook style.  That is, we are after some of the capabilities of Mathcad but are not trying to make camera ready copy.

With the basic requirements, the wishlist and the non-requirements in mind we can begin to sketch the outline of an implementation.  However, before we go any further we should remind ourselves of the chief virtues of a programmer.

First the ones that get the process of programming moving, the passionate virtues:

;laziness:never write code when you can 'steal' it, never write anything twice,
;impatience:demand results now,
;hubris:have pride in your power.

and then those that keep it going:

;diligence:don't be satisfied with sloppy work,
;patience:don't be deterred when things get slow and hard,
;humility:take help gladly from whomever and where ever it comes.

The headwords are from [http://www.oreilly.com/catalog/opensources/book/larry.html Larry Wall] but the definitions are mine.

So let's see how far our basic requirements and the passionate virtues can get us.

=Outline Implementation=

Nothing says we have to take the requirements in the order in which they are presented so lets combine the second one:

*The editor must support text formatting (typeface, type size, type style

with the first two virtues: laziness and impatience to get a basic editor.  Once we have that we can start to think about the other principal requirement:

*An editor for a document type that can include formulas and show both the formula and the result.

The essence of this requirement is that the program must somehow read the document, work out the results of executing the formulas and then put the answers back into the document.

==Basic Editor==
Built into Windows is a component called the rich text editor.  Visual Basic Classic can use this component.  This component implements a fancy text box that supports all the typefaces that Windows can use along with type sizes and type styles such as italic, bold, etc.  This looks like it should fulfil the requirement and the first virtue.  Now let's be impatient.

All you have to do is create a new project and add a reference to the Rich Text control.  On NT, Windows 2000 and XP this is usually found in:

  x:\WINNT\system32\RICHTX32.OCX

and you can add the reference by clicking ''Components'' on the ''Project'' menu.
[[image:VBClassicRichTextReference.png]]

Now add a Rich Text box to the form.  Don't worry about naming and resizing just now.
[[image:VBClassicRichTextForm.png|Rich text example form]].

Now run the project.  Even with no code you have an editor in which you can type that understands tabs and newlines.

Now add the following code to the form:

  Private Sub RichTextBox1_KeyPress(KeyAscii As Integer)
    Select Case KeyAscii
      Case Asc(&quot;B&quot;) - 64
        RichTextBox1.SelBold = Not RichTextBox1.SelBold
      Case Asc(&quot;U&quot;) - 64
        RichTextBox1.SelUnderline = Not RichTextBox1.SelUnderline  
      Case Asc(&quot;I&quot;) - 64
        RichTextBox1.SelItalic = Not RichTextBox1.SelItalic
    End Select
  End Sub

Don't worry about the lack of proper naming, constants and so on; this is just throwaway code to play with for the next five minutes.

Run the program, type some text, highlight some text (use the mouse or shift and arrow keys).  Now press control-B, control-I or control-U.  See the text style change.

This little experiment proves that we can get an editor that satisfies at least one of out principal requirements with almost no code.

===Exercises===
*Read the documentation for the rich text control,
*Extend the program to include font selection and indented paragraphs,
*Think of another extension and implement it,
*If you haven't already tried setting the text to italic with control-I try it now.  Explain why it doesn't work.
*Provide an alternative way of setting the bold, italic and underline attributes.

==Processing the Document==

Now we must see if we can find a way to satisfy our other requirement:

*An editor for a document type that can include formulas and show both the formula and the result.

This is very vague and leaves to the readers imagination the definitions of a number of key words:

;formulas:what is a formula?  Does it look like the quadratic equations you see in a school text book?

;result:Is a result a number?  Could it be a set of numbers?  What about a chart?  What about text?

Now we could answer all these questions by doing an in depth study of the real meaning of the words and interview our end users about what they want but there is another way: turn around and face the other way, ask what have we already got that could do the job.

Look into your own experience and surroundings for ideas.  You are or want to be a programmer so ask yourself 'what do our requirements remind me of?'. Look at our document type, it is made of formulas and results; formulas are just a kind of instruction, they say things like ''add a to b and multiply the answer by c'' and ''results'' are just whatever comes out of that process.  Sounds remarkably like a computer program.

So if our document is to be a computer program we need to decide what language it will be written in.  In principle we can use anything from textbook mathematical expressions with all the fancy symbols to Fortran, Lisp, Basic, Pascal, Prolog, etc., etc,. ad nauseam.

We apply Larry Wall's virtues:
;hubris:tells us that we can implement what we like,
;laziness:says that would be hard work,
;impatience: says I can't wait that long!

So are there any languages that are already available to us in a form that our little program can use?  The answer is a resounding yes.  We can use one of the scripting languages: Ruby, Python, VBScript, JavaScript, etc.

Which one should we choose?  We can dismiss some straightaway because they rrequire too much work on our part or make the final program too big:

;Ruby or Python:great languages, clean and powerful but need a significant amount of stuff to be installed before they will run,
;VBScript or JavaScript:you probably already have these in the guise of the Microsoft Script Control.

So to get it flying quickly and be able to deliver it to a user who doesn't have Python or Ruby we'll choose the scripting control.  We'll delay the choice of VBScript or JavaScript until later.

Processing the document is, in principle, simply a case of sending the text to the Scripting Control and reading back the answers.

Lets add the Scripting Control to the little experimental application.  There is no need for a visible control so just add the reference:

[[image:VBClassicScriptControlReference.png|Add Script control reference]]

Now add a command button to the form:

[[image:VBClassicRichTextForm2.png|Form with command button]]

Now add this code to the form:

  Private Sub Command1_Click()
  
    Dim oSC As ScriptControl
    Set oSC = New ScriptControl
    oSC.Language = &quot;JScript&quot;
    oSC.Eval RichTextBox1.Text
  
    With RichTextBox1
      .SelStart = Len(.Text)
      .SelText = vbCrLf &amp; oSC.Eval(&quot;a&quot;)
    End With
  
  End Sub

Run the project and type:

  a=1

in the rich text box.  Make sure you delete anything else that might be there.

Now the moment of truth: click the command button.  If all is well the number one should appear on the line following the ''a=1'' statement.

Pretty boring though.  Try something a little more exciting, clear the text and add this instead:

  b=2
  c=3
  a=b*c

Click the button again.  Should say ''6''.  Click again and another ''6'' should appear.

Now it's time to explain what has been happening.  The script control is actually an interpreter or the front end for an interpreter.  In fact it can interpret both VBScript and JScript.  VBScript is a sort of Visual Basic where all data is Variant and JScript is Microsoft's implementation of JavaScript.

The tiny scrap of code in the command button event handler just creates the script control, tells it which language to use, then asks it to evaluate the code in the rich text box.  After that it asks to evaluate the simplest statement:

  a

This returns the value of the variable ''a'' as the value of the ''Eval'' method.  Then a little bit of magic with the rich text box adds that value to the end of the text.

This tiny application satisfies in essence all our requirements.  Do some exercises before moving on the the next section where we will criticize our poor little application and make some improvements. 

===Exercises===
*Examine the command button event and write a sentence or two of explanation and clarification for each line.  Don't repeat what the code says, concentrate on explaining what it does and why.
*Try the bold, italic and underline formatting commands.  Do they affect the results?
*Add more statements, more variables, make the statement that sets the ''a'' variable more complex.
*If you know JavaScript you can add a function, use the function to set the value of ''a''.  If you don't know JavaScript then it's time to learn.

{{VBClassicNav1|Case Studies|JArithmetic Round Two}}</text>
      <sha1>7x020t7ru1w45sx4dfe00w9e9evw70j</sha1>
    </revision>
  </page>
  <page>
    <title>X86 Disassembly</title>
    <ns>0</ns>
    <id>40943</id>
    <revision>
      <id>2981373</id>
      <parentid>2981360</parentid>
      <timestamp>2015-07-31T22:14:48Z</timestamp>
      <contributor>
        <username>Matiia</username>
        <id>1770740</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/151.228.145.155|151.228.145.155]] ([[User talk:151.228.145.155|talk]]) to last version by Arthur200000</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{x86 Disassembly/Page}}
{| style=&quot;width:100%;&quot;
|style=&quot;width:20%;&quot; |__NOTOC__
|style=&quot;vertical-align:top;&quot; | {{Goodbook/X86 Disassembly}}
|style=&quot;width:20%;&quot; | {{Reading level|Advanced}}
|}
{{Featured book}}
== Preface ==
{{Collection|x86 Disassembly}}
The act of program creation, using common compilers and assemblers, takes software from an information-rich source code format and transforms it into a difficult-to-read machine code format. The reverse process, trying to convert machine code into a human-readable format, is significantly more difficult and requires high-level intuition and pattern matching skills. 

This book is going to discuss the disassembly and decompilation of x86 machine code and x86 assembly code. 

:''This book is new and could use your help. We need help with proof-reading, content authoring, editing and more. This is a wiki, so feel free to join in.''

== Table of Contents ==

{{Print version|/Print Version}}
{{PDF version}}
{{Book Search|prefix=X86 Disassembly}}

*[[x86 Disassembly/Cover|Cover]]
*[[x86 Disassembly/Introduction|Introduction]]

=== Tools ===

*[[x86 Disassembly/Assemblers and Compilers|Assemblers and Compilers]]
*[[x86 Disassembly/Disassemblers and Decompilers|Disassemblers and Decompilers]]
*[[x86 Disassembly/Disassembly Examples|Disassembly Examples]]
*[[x86 Disassembly/Analysis Tools|Analysis Tools]]

=== Platforms ===

* [[x86 Disassembly/Microsoft Windows|Microsoft Windows]]
**[[x86 Disassembly/Windows Executable Files|Windows Executable Files]]
* [[x86 Disassembly/Linux|GNU/Linux]]
**[[x86 Disassembly/Linux Executable Files|Linux Executable Files]]
* [[x86 Disassembly/Mac OS X|OS X]]
**[[x86 Disassembly/Mac OS X|OS X Executable Files]]

=== Code Patterns ===

* [[x86 Disassembly/The Stack|The Stack]]
* [[x86 Disassembly/Functions and Stack Frames|Functions and Stack Frames]]
**[[x86 Disassembly/Functions and Stack Frame Examples|Functions and Stack Frame Examples]]
* [[x86 Disassembly/Calling Conventions|Calling Conventions]]
**[[x86 Disassembly/Calling Convention Examples|Calling Convention Examples]]
* [[x86 Disassembly/Branches|Branches]]
**[[x86 Disassembly/Branch Examples|Branch Examples]]
* [[x86 Disassembly/Loops|Loops]]
**[[x86 Disassembly/Loop Examples|Loop Examples]]

=== Data Patterns === 

* [[x86 Disassembly/Variables|Variables]]
**[[x86 Disassembly/Variable Examples|Variable Examples]]
* [[x86 Disassembly/Data Structures|Data Structures]]
* [[x86 Disassembly/Objects and Classes|Objects and Classes]]
* [[x86 Disassembly/Floating Point Numbers|Floating Point Numbers]]
**[[x86 Disassembly/Floating Point Examples|Floating Point Examples]]

===  Difficulties ===

* [[x86 Disassembly/Code Optimization|Code Optimization]]
**[[x86 Disassembly/Optimization Examples|Optimization Examples]]
* [[x86 Disassembly/Code Obfuscation|Code Obfuscation]]
* [[x86 Disassembly/Debugger Detectors|Debugger Detectors]]

== Resources and Licensing==

*[[x86 Disassembly/Resources|Resources]]
*[[x86 Disassembly/Licensing|Licensing]]
*[[x86 Disassembly/Manual of Style|Manual of Style]]

{{Subjects|Software reverse engineering}}
{{Subjects|Assembly languages}}
{{Alphabetical|x}}
{{status|100%}}
__NOEDITSECTION__</text>
      <sha1>eysguzs7bse5uou7jyq72ljpw711kac</sha1>
    </revision>
  </page>
  <page>
    <title>Cookbook:Garlic Pork Chops with Black Mushrooms</title>
    <ns>102</ns>
    <id>40944</id>
    <revision>
      <id>2683425</id>
      <parentid>1088641</parentid>
      <timestamp>2014-07-21T23:18:59Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Added pan fried and main course cats.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{recipesummary|Pork recipes|4|45 minutes|3}}
{{recipe}} | [[Cookbook:California cuisine|California cuisine]]

Pan fried pork chops are topped with a spicy, mushroom, and garlic sauce to make an elegant Asian inspired dish.

== Ingredients ==

* 1 cup [[Cookbook:Stock|pork broth]]
* 1 ounce dried black chanterelle [[Cookbook:Mushroom|mushrooms]]
* ¼ cup [[Cookbook:Rice vinegar|rice wine vinegar]]
* 2 tablespoons [[Cookbook:Soy Sauce|soy sauce]]
* 2 tablespoons [[Cookbook:honey|honey]]
* ¼ teaspoon [[Cookbook:Chili Powder|hot-pepper flakes]]
* 2 teaspoons [[Cookbook:Sesame Oil|sesame oil]]
* 4 cloves [[Cookbook:Garlic|garlic]], [[Cookbook:Mincing|minced]]
* 1 tablespoon minced fresh [[Cookbook:Ginger|ginger]]
* 4 boneless [[Cookbook:Pork|pork chops]], ½-inch thick

== Procedure ==

# Bring the chicken broth to a boil in a small saucepan. Add the dried mushrooms, and simmer over low heat for about 10 minutes. In a small bowl, stir together the vinegar, soy sauce, honey, and red pepper flakes. Set aside.
# Heat the sesame oil in a large non-stick skillet over medium heat. Add the pork chops, and brown for about 2 minutes on each side. Add the garlic and ginger; cook and stir until fragrant. Stir in the soy sauce mixture, and bring to a boil. Reduce the heat to low, and simmer for 5 minutes, uncovered.
# Remove the mushrooms from the pan using a slotted spoon, and slice into thin strips. Stir the mushrooms and chicken broth into the pan with the pork chops, and simmer uncovered over low heat until the sauce has reduced by about ⅓, and the pork chops are cooked through.
# To serve, place pork chops onto serving plates, and spoon mushroom sauce over them.

== Notes, tips, and variations ==

* When doubling recipe, don't double vinegar or red pepper flakes - use ⅛ more of each.
* When combining vinegar, soy sauce, honey, and red pepper flakes, let it macerate for 5 minutes, then check for balance/taste.
* Pre-brine pork (soak overnight in a salt solution).
* Add baby [[Cookbook:Bok Choy|bok choy]] (bok choy sum) or replace the mushrooms with the baby bok choy.

[[Category:Pork recipes|{{PAGENAME}}]]
[[Category:Mushroom recipes|{{PAGENAME}}]]
[[Category:Garlic recipes|{{PAGENAME}}]]
[[Category:Californian recipes|{{PAGENAME}}]]
[[Category:Pan fried recipes]]
[[Category:Main course recipes]]</text>
      <sha1>iociw3uv1l4dg9tgp7u3cuv5i6ebwfc</sha1>
    </revision>
  </page>
  <page>
    <title>File:Example1holm.JPG</title>
    <ns>6</ns>
    <id>40952</id>
    <revision>
      <id>292121</id>
      <parentid>290949</parentid>
      <timestamp>2005-11-27T17:42:05Z</timestamp>
      <contributor>
        <username>Mpspence</username>
        <id>11488</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{PD-self}}</text>
      <sha1>4x4yneq7vj6t9s0k5w8z6unmjddy03x</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Pragmas/Volatile</title>
    <ns>0</ns>
    <id>40955</id>
    <revision>
      <id>1373387</id>
      <parentid>1364021</parentid>
      <timestamp>2009-01-05T23:59:06Z</timestamp>
      <contributor>
        <username>Suruena</username>
        <id>3371</id>
      </contributor>
      <comment>no deprecated templates</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Ada/Navigation|Pragmas|Volatile}}
__TOC__

 '''pragma''' Volatile (''local_name'');

== Description ==

'''Volatile''' is a [[:Category:Ada Programming/Representation pragmas|representation pragma]] that can be used with types and variables to specify that the variable in question may suddenly change in value. For example, this may occur due to a device writing to a shared buffer.

When this pragma is used, the compiler must suppress any optimizations that would interfere with the correct reading of the volatile variables. For example, two successive readings of the same variable cannot be optimized to just one or reordered.

Compare with pragma [[Ada Programming/Pragmas/Atomic|Atomic]], [[Ada Programming/Pragmas/Atomic_Components|Atomic_Components]], and [[Ada Programming/Pragmas/Volatile_Components|Volatile_Components]].

== Example ==

 {{Ada/kw|type}} Video_Buffer {{Ada/kw|is}} {{Ada/kw|array}} (Natural {{Ada/kw|range}} &lt;&gt;) {{Ada/kw|of}} RGB_Value;
 {{Ada/pragma|Volatile}} (Video_Buffer);

== Incorrect usage ==

{{:Ada Programming/Pragmas/Atomic:3}}

== Portability ==

=== Ada versions ===

* This pragma is available in Ada 95 and Ada 2005 (Annex C, a specialized needs annex).
* In Ada 83 there is not an standard pragma completely equivalent to Volatile. However, pragma [[Ada Programming/Pragmas/Shared|Shared]] is similar to Atomic (although it is obsolescent since Ada 95),&lt;ref&gt;{{cite newsgroup 
 |      title = pragma Shared (was Ada is almost ....)
 |     author = Robert Dewar
 |       date = 1996-02-17
 |  newsgroup = comp.lang.ada
 |        url = http://groups.google.es/group/comp.lang.ada/msg/eeee3a7515837ea2
 | accessdate = 2008-05-28
 |      quote = pragma Atomic is QUITE different from pragma Volatile. pragma Atomic in Ada is essentially identical to pragma Shared in Ada 83. pragma Volatile in Ada is essentially identical to volatile in C, and is a feature that is not available in Ada 83.
}}&lt;/ref&gt; and some compilers added an implementation-defined pragma for this purpose.&lt;ref&gt;{{cite book
|      title = GNAT Pro Reference Manual
|    chapter = Implementation Defined Pragmas
| chapterurl = http://www.adacore.com/wp-content/files/auto_update/gnat-unw-docs/html/gnat_rm_2.html#SEC118
| accessdate = 2008-06-02
|      quote = [pragma Volatile] was supplied in some Ada 83 compilers, including DEC Ada 83. The Ada 95 / Ada 2005 implementation of pragma Volatile is upwards compatible with the implementation in DEC Ada 83.
}}&lt;/ref&gt;

=== Compilers ===

Volatile is a standard pragma since Ada 95, defined in the Systems Programming Annex (Annex C). This is a specialized needs annex, therefore this pragma is not available in those compilers not implementing that annex.

=== Platforms ===

This pragma is portable to different architectures and operating systems.

== Interfacing ==

In C/C++, the &lt;tt&gt;volatile&lt;/tt&gt; qualifier is equivalent to this pragma.  However, this C qualifier is used for both volatile and atomic data, even if atomic access in required. Therefore, when interfacing with existing C code, the programmer must read the code to understand whether the data needs atomic load and stores. If needed, the data should be marked in the Ada side with pragma [[Ada Programming/Pragmas/Atomic|Atomic]] or [[Ada Programming/Pragmas/Atomic_Components|Atomic_Components]], or with pragma Volatile or [[Ada Programming/Pragmas/Volatile_Components|Volatile_Components]] otherwise.

== Coding rules ==

=== Volatile objects without address clauses ===

In many cases, when a volatile object is used for interfacing with a hardware device it should have an address clause too.

* gnatchek:

  +R[http://www.adacore.com/wp-content/files/auto_update/gnat-unw-docs/html/gnat_ugn_24.html#SEC314 Volatile_Objects_Without_Address_Clauses]

* AdaControl:

  check [http://www.adalog.fr/compo/adacontrol_ug.html#Object_005fDeclarations object_declarations] (volatile_no_address);

== See also ==
 
=== Wikibook ===

* [[Ada Programming]]
* [[Ada Programming/Pragmas]]
* [[Ada Programming/Pragmas/Atomic]]
* [[Ada Programming/Pragmas/Atomic_Components]]
* [[Ada Programming/Pragmas/Volatile_Components]]
* [[Ada Programming/Pragmas/Shared]] (obsolescent)

=== Ada Reference Manual ===

* {{Ada/RM2|C|6|Shared Variable Control}}

=== Ada 95 Rationale ===

* {{Ada/95/R2|C|5|Shared Variable Control|part=3}}

=== Ada 95 Quality and Style Guide ===

* {{Ada/SG3|6|2|4|Unprotected Shared Variables}}

== References ==
&lt;references/&gt;

[[Category:Ada Programming|Volatile]] 
[[Category:Ada Programming/Representation pragmas|Volatile]]</text>
      <sha1>d9t17ovqhbdh48jeyacl80vf2tornsu</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Third party</title>
    <ns>0</ns>
    <id>40957</id>
    <revision>
      <id>3033560</id>
      <parentid>1517712</parentid>
      <timestamp>2016-01-04T10:41:55Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <minor />
      <comment>Ladislav moved page [[REBOL Programming/Third Party]] to [[Rebol programming/Third party]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Brief descriptions of third party and other tools commonly used

* [http://cheyenne-server.org/ Cheyenne] - a web server implementation

* [http://softinnov.org/rebol/acall.shtml Async Call] - asynchronous call implementation

* [http://softinnov.org/rebol/ntlm.shtml NTLM] - support for the Microsoft NTLM (NT Lan Manager) authentication scheme over a Windows LAN

*[http://softinnov.org/rebol/captcha.shtml Captcha] - visual captcha generation

* [http://softinnov.org/rebol/nt-services.shtml NT-services] - support for the Windows Services

* [http://softinnov.org/rebol/uniserve.shtml Uniserve] - a client/server network programming framework

* [http://www.rebol.net/docs/makedoc.html MakeDoc] - a tool for creating HTML documents

* [http://www.rebol.org/documentation.r?script=pdf-maker.r Pdf-maker] - a tool for simple and fast PDF creation

* [http://www.fys.ku.dk/~niclasen/nicomdoc/ NicomDoc] - John Niclasen's &quot;simplified-markup to HTML&quot; converter.

* [http://www.codeconscious.com/rebol/articles/introducing-rugby.html Rugby] - a request broker

* [[REBOL Programming/Third Party/Beer Framework|BEER Framework]] - Block Extensible Exchange in REBOL

* [http://www.dobeash.com/rebgui.html RebGUI] - an alternative to VID

==See also==

* [[REBOL Programming/Language Features/Database]]

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>1h1xhwqenk1blzpnk7m4xom07z458k1</sha1>
    </revision>
  </page>
  <page>
    <title>Biblical Studies/Christianity/The Bible/KJV</title>
    <ns>0</ns>
    <id>40959</id>
    <revision>
      <id>2514298</id>
      <parentid>2514295</parentid>
      <timestamp>2013-04-18T16:06:39Z</timestamp>
      <contributor>
        <username>QuiteUnusual</username>
        <id>134830</id>
      </contributor>
      <minor />
      <comment>[[WB:REVERT|Reverted]] edits by [[Special:Contributions/204.39.64.2|204.39.64.2]] ([[User talk:204.39.64.2|talk]]) to last version by Adrignola</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">In 1604, King James VI of Scotland and I of England authorized that a new translation of the Bible into English be started. It was finished in 1611, just 85 years after the first translation of the New Testament from Greek into English appeared (Tyndale, 1526).  It has been the standard English version for the past 400 years.  The [[s:Bible (King James)|King James Bible]] (KJV) is [[w:public domain|public domain]] in the United States.

* [[s:Bible (King James)/Preface|Preface]]

====Old Testament====
* [[s:Bible (King James)/Genesis|Genesis]]
* [[s:Bible (King James)/Exodus|Exodus]]
* [[s:Bible (King James)/Leviticus|Leviticus]]
* [[s:Bible (King James)/Numbers|Numbers]]
* [[s:Bible (King James)/Deuteronomy|Deuteronomy]]
* [[s:Bible (King James)/Joshua|Joshua]]
* [[s:Bible (King James)/Judges|Judges]]
* [[s:Bible (King James)/Ruth|Ruth]]
* [[s:Bible (King James)/1 Samuel|1 Samuel]]
* [[s:Bible (King James)/2 Samuel|2 Samuel]]
* [[s:Bible (King James)/1 Kings|1 Kings]]
* [[s:Bible (King James)/2 Kings|2 Kings]]
* [[s:Bible (King James)/1 Chronicles|1 Chronicles]]
* [[s:Bible (King James)/2 Chronicles|2 Chronicles]]
* [[s:Bible (King James)/Ezra|Ezra]]
* [[s:Bible (King James)/Nehemiah|Nehemiah]]
* [[s:Bible (King James)/Esther|Esther]]
* [[s:Bible (King James)/Job|Job]]
* [[s:Bible (King James)/Psalms|Psalms]]
* [[s:Bible (King James)/Proverbs|Proverbs]]
* [[s:Bible (King James)/Ecclesiastes|Ecclesiastes]]
* [[s:Bible (King James)/Song of Solomon|Song of Solomon]]
* [[s:Bible (King James)/Isaiah|Isaiah]]
* [[s:Bible (King James)/Jeremiah|Jeremiah]]
* [[s:Bible (King James)/Lamentations|Lamentations]]
* [[s:Bible (King James)/Ezekiel|Ezekiel]]
* [[s:Bible (King James)/Daniel|Daniel]]
* [[s:Bible (King James)/Hosea|Hosea]]
* [[s:Bible (King James)/Joel|Joel]]
* [[s:Bible (King James)/Amos|Amos]]
* [[s:Bible (King James)/Obadiah|Obadiah]]
* [[s:Bible (King James)/Jonah|Jonah]]
* [[s:Bible (King James)/Micah|Micah]]
* [[s:Bible (King James)/Nahum|Nahum]]
* [[s:Bible (King James)/Habakkuk|Habakkuk]]
* [[s:Bible (King James)/Zephaniah|Zephaniah]]
* [[s:Bible (King James)/Haggai|Haggai]]
* [[s:Bible (King James)/Zechariah|Zechariah]]
* [[s:Bible (King James)/Malachi|Malachi]]

====New Testament====
* [[s:Bible (King James)/Matthew|Matthew]]
* [[s:Bible (King James)/Mark|Mark]]
* [[s:Bible (King James)/Luke|Luke]]
* [[s:Bible (King James)/John|John]]
* [[s:Bible (King James)/Acts|Acts]]
* [[s:Bible (King James)/Romans|Romans]]
* [[s:Bible (King James)/1st Corinthians|1st Corinthians]]
* [[s:Bible (King James)/2nd Corinthians|2nd Corinthians]]
* [[s:Bible (King James)/Galatians|Galatians]]
* [[s:Bible (King James)/Ephesians|Ephesians]]
* [[s:Bible (King James)/Philippians|Philippians]]
* [[s:Bible (King James)/Colossians|Colossians]]
* [[s:Bible (King James)/1st Thessalonians|1st Thessalonians]]
* [[s:Bible (King James)/2nd Thessalonians|2nd Thessalonians]]
* [[s:Bible (King James)/1st Timothy|1st Timothy]]
* [[s:Bible (King James)/2nd Timothy|2nd Timothy]]
* [[s:Bible (King James)/Titus|Titus]]
* [[s:Bible (King James)/Philemon|Philemon]]
* [[s:Bible (King James)/Hebrews|Hebrews]]
* [[s:Bible (King James)/James|James]]
* [[s:Bible (King James)/1st Peter|1st Peter]]
* [[s:Bible (King James)/2nd Peter|2nd Peter]]
* [[s:Bible (King James)/1st John|1st John]]
* [[s:Bible (King James)/2nd John|2nd John]]
* [[s:Bible (King James)/3rd John|3rd John]]
* [[s:Bible (King James)/Jude|Jude]]
* [[s:Bible (King James)/Revelation|Revelation]]

{{BookCat}}</text>
      <sha1>q2i739gxo09tpay0c71l8pad0wgh5gg</sha1>
    </revision>
  </page>
  <page>
    <title>User:Apina</title>
    <ns>2</ns>
    <id>40964</id>
    <revision>
      <id>234233</id>
      <timestamp>2005-09-14T20:24:54Z</timestamp>
      <contributor>
        <username>Apina</username>
        <id>11475</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Need to know free (as in freedom) electronics CAD program to draw schematics to wikipedia. Preferably is in Debian distribution, but I can compile it from sources, too.</text>
      <sha1>p8bx4si9zp6ybzndiifl92oi43yon1o</sha1>
    </revision>
  </page>
  <page>
    <title>User:Bobwinmill~enwikibooks</title>
    <ns>2</ns>
    <id>40969</id>
    <revision>
      <id>2848941</id>
      <parentid>234598</parentid>
      <timestamp>2015-04-17T22:14:25Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Bobwinmill]] to [[User:Bobwinmill~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Bobwinmill|Bobwinmill]]&quot; to &quot;[[Special:CentralAuth/Bobwinmill~enwik...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">I hope to contribute.

Some experience in space systems.  USAF TAV program from 1982-84, AFWL 1984-86.  Then dropped out because of lack of progress with existing fundamental technologies.  Became interested again with change in policy emphasis to more private activities and some fundamental new technologies.</text>
      <sha1>ki50ytbh8u6c5gutbmsvl563q36ghra</sha1>
    </revision>
  </page>
  <page>
    <title>Rebol programming/Developer</title>
    <ns>0</ns>
    <id>40972</id>
    <revision>
      <id>3033570</id>
      <parentid>1517738</parentid>
      <timestamp>2016-01-04T10:52:00Z</timestamp>
      <contributor>
        <username>Ladislav</username>
        <id>11144</id>
      </contributor>
      <minor />
      <comment>Ladislav moved page [[REBOL Programming/Developer]] to [[Rebol programming/Developer]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Discuss available resources here ...

=== REBOL.com ===

http://www.rebol.com -- Home of REBOL Technologies.

=== REBOL.net ===

http://www.rebol.net -- Links to many other developer resources.

=== REBOL.org ===
http://www.rebol.org -- Script library and searchable archive of the mailing list.

=== RIX ===
http://babelserver.org/rix - Search engine indexing only sites related to REBOL

[[Category:{{FULLBOOKNAME}}|{{FULLCHAPTERNAME}}]]</text>
      <sha1>b61oevrum5gmp88yfsnjb95yqwct2rk</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Ferox~enwikibooks</title>
    <ns>3</ns>
    <id>40979</id>
    <revision>
      <id>2910946</id>
      <parentid>2857505</parentid>
      <timestamp>2015-04-19T04:59:10Z</timestamp>
      <contributor>
        <username>MediaWiki message delivery</username>
        <id>1188004</id>
      </contributor>
      <comment>Renamed</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Hi Ferox,

we are currently working on restructuring the  [[Programming:C plus plus]] book. We would love your input at  [[Talk:Programming:C plus plus/Table of contents]]. Thanks. --[[User:Maxberger|Max]] 00:42, 15 September 2005 (UTC)

== Your account will be renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
Hello,

The developer team at Wikimedia is making some changes to how accounts work, as part of our on-going efforts to provide new and better tools for our users like cross-wiki notifications. These changes will mean you have the same account name everywhere. This will let us give you new features that will help you edit and discuss better, and allow more flexible user permissions for tools. One of the side-effects of this is that user accounts will now have to be unique across all 900 Wikimedia wikis. See [[m:Special:MyLanguage/Single User Login finalisation announcement|the announcement]] for more information.

Unfortunately, your account clashes with another account also called Ferox. To make sure that both of you can use all Wikimedia projects in future, we have reserved the name Ferox~enwikibooks that only you will have. If you like it, you don't have to do anything. If you do not like it, you can [[Special:GlobalRenameRequest|pick out a different name]].

Your account will still work as before, and you will be credited for all your edits made so far, but you will have to use the new account name when you log in.

Sorry for the inconvenience.

Yours,&lt;br /&gt;[[m:User:Keegan (WMF)|Keegan Peterzell]]&lt;br /&gt;Community Liaison, Wikimedia Foundation
&lt;/div&gt; 23:10, 17 March 2015 (UTC)
&lt;!-- SUL finalisation notification --&gt;

== Renamed ==

&lt;div class=&quot;plainlinks mw-content-ltr&quot; lang=&quot;en&quot; dir=&quot;ltr”&gt;
This account has been renamed as part of [[m:Special:MyLanguage/Single User Login finalisation announcement|single-user login finalisation]]. If you own this account you can [[{{#special:userlogin}}|log in using your previous username and password]] for more information. If you do not like this account's new name, you can choose your own using this form after logging in: [[{{#special:GlobalRenameRequest}}]]. -- [[m:User:Keegan (WMF)|Keegan (WMF)]] ([[m:User talk:Keegan (WMF)|talk]])
&lt;/div&gt; 04:59, 19 April 2015 (UTC)
&lt;!-- SUL post-rename notification --&gt;</text>
      <sha1>fyxxnjwal8habh6klumgwxkujn1hhf9</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior:Ancient Civilizations/Aksum</title>
    <ns>110</ns>
    <id>40987</id>
    <revision>
      <id>2702488</id>
      <parentid>2702486</parentid>
      <timestamp>2014-09-22T06:42:27Z</timestamp>
      <contributor>
        <username>Aksum-Dallas</username>
        <id>1840205</id>
      </contributor>
      <comment>Fixed typos</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== What country did they live in? ==
The Aksumites lived in what is now Eritrea and northern Ethiopia. The capital city of their kingdom, also called Aksum, was located in present day northern Ethiopia. 

At the height of their power, the Aksumite controlled parts of present day Yemen and Saudi Arabia.

== What did their buildings look like? ==
Excavations in Aksum revealed much about Askumite buildings. The central part of the town contained buildings that were square or rectangular. The homes were large, consisting of a lodge surrounded by four smaller buildings. The lodge was built on top of a pavilion, with a wide staircase leading to it. Less wealthy citizens lived in homes surrounding these buildings. 

== What did they eat? ==
Little is known about the day to day life of the Aksumites. More research needs to be done on this topic.

== What did their writing look like? ==
The Aksumite developed the Geez language which died out around 1000 AD, but it is stil used in the Ethiopian and Eritrean Orthodox church as a lithurgical language. Some of the languages that are currently spoken in Ethiopia and Eritrea, including Amharic, Tigre, and Tigrigna, developed from the Geez language.

Amharic and Tigrigna which are the national languages of Ethiopia and Eritrea respectively, used the adapted form of the Geez script. 

The Geez script is a unique script, and is one of the few indigenous African alphabets still in use.

== What did they believe? ==
The Aksumites were pagans until they officially became Chrisitans during the 4th century AD under King Ezana.

== Are some of them famous even today? ==
The legacy of the Aksumite live on through through their immense contribution to the Orthodox churches of Ethiopia and Eritrea. 

Some of the Aksumites still remembered to this day include King Ezana and King Sayzana, King Kaleb, King Gebre Meskel, and the last king Dil Naod among others.

== What is left of them today? ==
The Aksumites are famously remembered today for their giant oblisks which they used to mark their graves. The Aksumite obelisks which stand tall in the Ethiopian city of Askum, are UNESCO protected sites. The largest standing obelisk is 24m in height, and is the tallest standing human made structure made out of a single rock. 

Though the Aksumite kingdom died off more than 1000 years ago, the legacy of the Aksumites still affects the psycic and way of life of most Ethiopians and Eritreans. For example, the Ethiopian and Eritrean Orthodox churches were founded during the Aksumite era.

== References ==
{{reflist}}
#Past Worlds Harper Collins Atlas of Archaeology. London:Times Books Ltd, 1996.

{{BookCat}}

[[de:Wikijunior Alte Zivilisationen/ Aksumiter]]


{{Wikijunior article stub}}</text>
      <sha1>rvq36d73ae9g0x94rods5itf5zn13j2</sha1>
    </revision>
  </page>
  <page>
    <title>Dialectical Behavioral Therapy/Interpersonal Effectiveness Skills</title>
    <ns>0</ns>
    <id>40995</id>
    <revision>
      <id>499206</id>
      <parentid>369159</parentid>
      <timestamp>2006-06-24T21:08:00Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">*[[Dialectical Behavioral Therapy/Interpersonal Effectiveness Skills/Attending to Relationships|Attending to Relationships]]
*[[Dialectical Behavioral Therapy/Interpersonal Effectiveness Skills/Balancing Priorities vs. Demands in Life and Relationships|Balancing Priorities vs. Demands in Life and Relationships]]
*[[Dialectical Behavioral Therapy/Interpersonal Effectiveness Skills/Options for Intensity of Asking or Saying No, and Factors to Consider in Deciding|Options for Intensity of Asking or Saying No, and Factors to Consider in Deciding]]
*[[Dialectical Behavioral Therapy/Interpersonal Effectiveness Skills/Objective Effectiveness|Objective Effectiveness]]
*[[Dialectical Behavioral Therapy/Interpersonal Effectiveness Skills/Relationship Effectiveness|Relationship Effectiveness]]
*[[Dialectical Behavioral Therapy/Interpersonal Effectiveness Skills/Self-Respect Effectiveness|Self-Respect Effectiveness]]

[[Category:Dialectical Behavioral Therapy]]</text>
      <sha1>kokpzvyvowwy9hyxixisz8qffypzrga</sha1>
    </revision>
  </page>
  <page>
    <title>Dialectical Behavioral Therapy/Interpersonal Effectiveness Skills/Attending to Relationships</title>
    <ns>0</ns>
    <id>40996</id>
    <revision>
      <id>499208</id>
      <parentid>346145</parentid>
      <timestamp>2006-06-24T21:08:35Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">You need to attend to relationships to keep them in balance, i.e. not blowing up or otherwise ending. Relationships need regular attention so that hurts and problems do not build up. Use interpersonal effectiveness skills to address problems and relieve hurts.

Most people end relationships prematurely – the relationship could have been saved by using skills. Usually, there is a problem that needs to be solved.

Resolve interpersonal conflicts before they get overwhelming. The ability to repair relationships is important, but promptly resolving interpersonal conflicts is even more important.

Some relationships cannot be salvaged. Ending hopeless relationships is difficult; the benefit is that you will not be burdened by a relationship that is not working or too stressful.

[[Category:Dialectical Behavioral Therapy]]</text>
      <sha1>oemqkbk7pm1dnss3bry6l59mbdlr4eh</sha1>
    </revision>
  </page>
  <page>
    <title>Dialectical Behavioral Therapy/Interpersonal Effectiveness Skills/Balancing Priorities vs. Demands in Life and Relationships</title>
    <ns>0</ns>
    <id>40997</id>
    <revision>
      <id>499209</id>
      <parentid>369161</parentid>
      <timestamp>2006-06-24T21:08:43Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <minor />
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Priorities are those things important to you; things that you want to do.

Demands are those things other people want you to do.

Most troubles with priorities and demands are due to your priorities competing with other’s demands. Thus, you feel conflicted.

You need effective interpersonal skills to maintain your own priorities and/or negotiate compromises.

Balancing priorities and demands is a necessary task for structuring one’s life so that you fulfill your goals but still have some time to help others. This is difficult for everyone.

If you feel overwhelmed &amp; over-committed then you must focus on what is important. If overwhelmed, concentrate on what is important and put off low-priority demands. And ask others for help.

Learn how to say “no” when appropriate. Decline some of the less important demands and priorities.

Importance is relative. If you over-commit yourself in order to maintain approval from another person the relationship itself will be unfulfilling.

Feeling overwhelmed leads to blow-ups. Blow-ups result from priorities and demands not getting the attention that was expected. Just as a relationship may blow up if neglected, an individual may blow up if priorities and demands in life are not addressed.

Some people have the opposite problem of having too few demands and priorities. This is especially true for those who are single, living alone, or not working. In these cases, the task is to create structure and increase demands, e.g. helping others, rather than to decrease them. Interpersonal skills are likely to be needed here also.

What can you tolerate before you feel overwhelmed? This depends on many factors including energy level, amount of help &amp; support, available time, how you feel, and attitude toward the task. People are different in how much they can tolerate.

[[Category:Dialectical Behavioral Therapy]]</text>
      <sha1>q87ncl1jtx44c2w942a2yl9jl0g5tm4</sha1>
    </revision>
  </page>
  <page>
    <title>Arabic/Book/Layout</title>
    <ns>0</ns>
    <id>40998</id>
    <revision>
      <id>2622544</id>
      <parentid>2053789</parentid>
      <timestamp>2014-03-28T23:20:25Z</timestamp>
      <contributor>
        <username>Xania</username>
        <id>40302</id>
      </contributor>
      <comment>typos</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This is a place for putting a proposal for how the lessons should be set up. How the book should be split up (chapters, units), and what each part of the book will focus on. For example if the pronouns should be learnt before, learning any verbs, would be indicated by a proposal. The proposals can be simple, make sure they are clear.




I propose: that the fundamental, unit. The unit which teaches how to read Arabic, should be worked on the most. And at the same time, the planning of the book (what each chapter/unit will teach), and the sequence of the lesson, and what each lesson will teach should be figured out. Once what a lesson will teach is planned, a link to a page for the lesson should be added to the appropriate unit/chapter. In the page setup for that lesson information on what the lesson would teach should be added.


Hasan Aljudy: I propose that the book should emphasize on learning Arabic through the Arabic alphabet, and rely less and less on transliteration; if we must, then rely on (and provide) sound files(by your own voice, if you must). 
Readers should become accustomed to reading Arabic words; since unlike English, the pronunciation of most words in Arabic can be inferred from the letters and the Harakat. Once you get yourself acquainted with the rules, (i.e. knowing the differences between the Harakat and the actual vowel letters (alef, waw, ya'), etc.) inferring the pronunciation shouldn't be too hard.



I agree with your proposal, and propose that, the book should not use any transliteration past the 2nd Unit. Any transliteration past the 2nd Unit is not a necessity, transliteration past the 1st Unit will not be necessary either once the 1st Unit is finished. I still think that transliteration is extremely useful, but I do believe we should not rely on it.
--[[User:TwoThirty|TwoThirty]] 08:11, 31 March 2006 (UTC)

[[Category:Arabic]]</text>
      <sha1>nbkv4pxagaa0a3y17mtp7g8x2fyogc4</sha1>
    </revision>
  </page>
  <page>
    <title>Wikijunior talk:Ancient Civilizations/Aksum</title>
    <ns>111</ns>
    <id>41000</id>
    <revision>
      <id>1022088</id>
      <parentid>1010081</parentid>
      <timestamp>2007-11-06T14:56:01Z</timestamp>
      <contributor>
        <username>Xixtas</username>
        <id>35487</id>
      </contributor>
      <comment>Undo revision 1010081 by [[Special:Contributions/130.13.166.148|130.13.166.148]] ([[User talk:130.13.166.148|Talk]])</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">==References==
[[w:Kingdom of Aksum]]
[http://users.vnet.net/alight/aksum/mhak2.html#c5-4 http://users.vnet.net/alight/aksum/mhak2.html#c5-4]

== Axum/Aksum ==

I found that it can also be spelled &quot;Axum&quot;.

http://en.wikipedia.org/wiki/Axum and http://archaeology.about.com/od/aterms/g/aksum.htm

It's not very important, but is still a fact that should atleast be mentioned?</text>
      <sha1>gwh094mupb3wxszn1mdu1dhjbg25055</sha1>
    </revision>
  </page>
  <page>
    <title>Conlang/Intermediate/New Realms</title>
    <ns>0</ns>
    <id>41001</id>
    <revision>
      <id>3027164</id>
      <parentid>3027161</parentid>
      <timestamp>2015-12-13T13:05:05Z</timestamp>
      <contributor>
        <username>Pi zero</username>
        <id>75960</id>
      </contributor>
      <comment>should probably mention it's advanced</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Navlist/Top}}

Most conlangs are designed to be at least somewhat naturalistic as they are often inspired by natlangs or intended to be used by concultures. They usually use grammar, phonemes, etc. that could easily exist in natural languages of today. However, there certainly isn't a rule requiring would-be conlangers to limit themselves to established possibilities in natlangs.

Thinking outside the conlanging box is hardly a crime and there is much room for experimentation. Just as artists in music and painting have pushed the envelope with atonality and dadaism while being told that their works were not art by critics, you can buck the trends of conlanging and take it in bold new directions.

Here are a few ideas to ponder:

* Study some linguistic writings on language universals and design your conlang to violate some of them.

* Imagine a conlang that conflates nouns and verbs into one class. This has actually been attempted many times to varying extents, but it is certainly something rarely seen in natlangs. There's more about this in the Advanced level, at [[{{ROOTBOOKNAME}}/Advanced/Grammar/Noun-Verb_distinction|Noun-Verb distinction]].

* Most conlangs (and natlangs) have or are intended to have thousands of root words. Why not go the other way and try to minimize roots, perhaps to 50 or less? This is known as oligosynthesis; it has been attempted a few times but so far not very successfully. (In Wikipedia, see [[w:Oligosynthetic language|Oligosynthetic language]], [[w:Natural semantic metalanguage|Natural semantic metalanguage]], and [[w:Toki Pona|Toki Pona]].)

* Consider new ways to inflect. Japanese inflects its verbs for the amount of deference between the speaker and listener. Perhaps a conlang could inflect verbs for something unusual like the color of the agent. A slightly more useful idea would be to inflect in relation to the speaker's attitude toward the verbal action. E.g. ''alistus'' ((I like the fact that) you exist), ''alistis'' ((I hate the fact that) you exist), ''alistes'' ((I am indifferent to the fact that) you exist), ''alistas'' ((I don't wish to indicate my attitude to the fact that) you exist). This parallels the &quot;pejorative&quot; noun inflections found in natlangs such as Spanish, or the subjunctive in French.

* Most languages with genders or noun classes will inflect the third-person pronouns for gender; consider doing the same for first and/or second person pronouns.

* There is also room for conlangs that use phonemes or phonemic distinctions that are not found in any natural language. More about this in the [[Conlang/Advanced/Sounds|advanced phonetics]] chapter of this book.

{{Navlist/Bottom}}</text>
      <sha1>i3jrbdhcs9t3ndrzkalnvq1rsi8yt3v</sha1>
    </revision>
  </page>
  <page>
    <title>Arabic/Tasks</title>
    <ns>0</ns>
    <id>41003</id>
    <revision>
      <id>486932</id>
      <parentid>234443</parentid>
      <timestamp>2006-06-14T19:57:28Z</timestamp>
      <contributor>
        <username>Jguk</username>
        <id>18491</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This page is for tasks that need to be done. If you find something that you think should be done, it should go here. Note, comments about what article should be written next, do not go here. 




Rearrange links, so that the first page is more user-friendly, move links for authors to other page, and link that page to the main page.

[[Category:Arabic]]</text>
      <sha1>eqxgehfu5bp5ld58r5aybx1njum2ze5</sha1>
    </revision>
  </page>
  <page>
    <title>Cookbook:Deep Fried Chiles Filled with Chickpea Flour (Mirchi Bhajji)</title>
    <ns>102</ns>
    <id>41007</id>
    <revision>
      <id>2687788</id>
      <parentid>2686584</parentid>
      <timestamp>2014-08-02T12:13:33Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Austncorp moved page [[Cookbook:Mirchi Bhajji]] to [[Cookbook:Deep Fried Chiles Filled with Chickpea Flour (Mirchi Bhajji)]]: Conformed to recipe naming conventions.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{recipesummary
|Category = Indian recipes
|Time = 30 minutes
|Servings = 5-10
|Rating = 2
}}
{{recipe}} | [[Cookbook:Cuisine of India|Indian Cuisine]]

Mirchi (Green peppers) Bhajji, are fried stuffed peppers.

==Ingredients==
* 11-17 long green [[Cookbook:Bell Pepper|peppers]].
* 1½ cup (360g) [[Cookbook:Chickpea Flour|gram flour]] (besan)
* 1 tbsp. [[Cookbook:Rice Flour|rice flour]]
* 6-7 green [[Cookbook:Chili Pepper|chilis]], finely chopped
* 1 T [[Cookbook:Cilantro|coriander leaves]] finely chopped
* 2 T hot [[Cookbook:Oil|oil]]
* [[Cookbook:Salt|Salt]] to taste
* [[Cookbook:Oil|Oil]] to deep fry

==Procedure==
# Slit 5-10 of the peppers, preferably the longest and fattest.
# Mix salt and gram flour. 
# Stuff the slit peppers with this mixture.
# Keep aside for 15-20 minutes. 
# Mix all other dry ingredients.
# Heat oil. 
# Dip each green pepper into this mixture gently to coat it. 
# Deep fry on med. heat until golden brown. 
# Drain on kitchen paper to remove excess oil. 
# Serve hot with chutney or ketchup. 

Preparation Time: 30 minutes 

Makes 5-10 bhajjies, best served fresh.

[[Category:Indian recipes|{{PAGENAME}}]]
[[Category:Chile recipes|{{PAGENAME}}]]
[[Category:Recipes_with_metric_units|{{PAGENAME}}]]</text>
      <sha1>5hijsr6fm39ioa5lakkhw26b87tkleo</sha1>
    </revision>
  </page>
  <page>
    <title>Cookbook talk:Deep Fried Chiles Filled with Chickpea Flour (Mirchi Bhajji)</title>
    <ns>103</ns>
    <id>41008</id>
    <revision>
      <id>2687790</id>
      <parentid>2686586</parentid>
      <timestamp>2014-08-02T12:13:35Z</timestamp>
      <contributor>
        <username>Austncorp</username>
        <id>1540792</id>
      </contributor>
      <minor />
      <comment>Austncorp moved page [[Cookbook talk:Mirchi Bhajji]] to [[Cookbook talk:Deep Fried Chiles Filled with Chickpea Flour (Mirchi Bhajji)]]: Conformed to recipe naming conventions.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">This article was [[m:transwiki|transwiki]]ed from [[w:Mirchi bhajji]]. &amp;mdash;[[User:Cryptic|Cryptic]] [[w:User talk:Cryptic|(talk)]] 11:22, 15 September 2005 (UTC)

The history of the article there was:
*01:01, 8 September 2005 [[w:User:Splash|Splash]] ''(rm vfd tag, to be transwiki'd to Cookbook)''
*14:20, 31 August 2005 [[w:User:Fvw|Fvw]] ''(vfd)''
*14:20, 31 August 2005 [[w:User:Fvw|Fvw]] ''(vfd)''
*04:18, 31 August 2005 [[w:User:Praveenkv|Praveenkv]]
*04:17, 31 August 2005 [[w:User:Praveenkv|Praveenkv]]

----

==Cookwork==
The ingredients and procedure are inconsistent. &quot;Rye mix&quot; does not appear in the ingredients, and the intended order of the procedure is confused. [[User:Kellen|Kellen]]&amp;nbsp;&lt;sup&gt;[[User_talk:Kellen|T]]&lt;/sup&gt; 08:17, 18 September 2005 (UTC)</text>
      <sha1>j7ejobfkj748mwp5gnw5655sutwgm2k</sha1>
    </revision>
  </page>
  <page>
    <title>Ada Programming/Algorithms/Chapter 1</title>
    <ns>0</ns>
    <id>41011</id>
    <revision>
      <id>1928516</id>
      <parentid>1373388</parentid>
      <timestamp>2010-09-05T19:14:17Z</timestamp>
      <contributor>
        <username>Adrignola</username>
        <id>169232</id>
      </contributor>
      <minor />
      <comment>/* Chapter 1: Introduction */ fixed link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">&lt;noinclude&gt;{{Ada/Navigation|Algorithms|Chapter 1}}
__TOC__&lt;/noinclude&gt;

== Chapter 1: Introduction ==

The following subprograms are implementations of the [[Algorithms/Introduction#Inventing an Algorithm|''Inventing an Algorithm'' examples]].

=== To Lower ===

The Ada example code does not append to the array as the algorithms. Instead we create an empty array of the desired length and then replace the characters inside.

 {{Ada/Sourceforge|to_lower_1.adb}}
   {{Ada/kw|function}} To_Lower (C : Character) {{Ada/kw|return}} Character {{Ada/kw|renames}}
      Ada.Characters.Handling.To_Lower;
 
   --  tolower - translates all alphabetic, uppercase characters
   --  in str to lowercase
   {{Ada/kw|function}} To_Lower (Str : String) {{Ada/kw|return}} String {{Ada/kw|is}}
      Result : String (Str'{{Ada/attribute|Range}});
   {{Ada/kw|begin}}
      {{Ada/kw|for}} C {{Ada/kw|in}}  Str'{{Ada/attribute|Range}} {{Ada/kw|loop}}
         Result (C) := To_Lower (Str (C));
      {{Ada/kw|end}} {{Ada/kw|loop}};
      {{Ada/kw|return}} Result;
   {{Ada/kw|end}} To_Lower;

Would the append approach be impossible with Ada? No, but it would be significantly more complex and slower.

=== Equal Ignore Case ===

{{Ada/Sourceforge|to_lower_2.adb}}

   --  equal-ignore-case -- returns true if s or t are equal,
   --  ignoring case
   {{Ada/kw|function}} Equal_Ignore_Case
     (S    : String;
      T    : String)
      {{Ada/kw|return}} Boolean
   {{Ada/kw|is}}
      O : {{Ada/kw|constant}} Integer := S'{{Ada/attribute|First}} - T'{{Ada/attribute|First}};
   {{Ada/kw|begin}}
      {{Ada/kw|if}} T'{{Ada/attribute|Length}} /= S'{{Ada/attribute|Length}} {{Ada/kw|then}}
         {{Ada/kw|return}} False;  --  if they aren't the same length, they
                        --  aren't equal
      {{Ada/kw|else}}
         {{Ada/kw|for}} I {{Ada/kw|in}}  S'{{Ada/attribute|Range}} {{Ada/kw|loop}}
            {{Ada/kw|if}} To_Lower (S (I)) /=
               To_Lower (T (I + O))
            {{Ada/kw|then}}
               {{Ada/kw|return}} False;
            {{Ada/kw|end}} {{Ada/kw|if}};
         {{Ada/kw|end}} {{Ada/kw|loop}};
      {{Ada/kw|end}} {{Ada/kw|if}};
      {{Ada/kw|return}} True;
   {{Ada/kw|end}} Equal_Ignore_Case;

&lt;noinclude&gt;
[[Category:Ada Programming|Chapter 1]]
&lt;/noinclude&gt;</text>
      <sha1>nr2k9pthg4gc7gsb5n625ha73gzac0n</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:Splintax</title>
    <ns>3</ns>
    <id>41013</id>
    <redirect title="w:User talk:Splintax" />
    <revision>
      <id>234584</id>
      <parentid>234581</parentid>
      <timestamp>2005-09-15T15:45:48Z</timestamp>
      <contributor>
        <username>Splintax</username>
        <id>10252</id>
      </contributor>
      <minor />
      <comment>corrected syntax in #redirect</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">#REDIRECT [[w:User talk:Splintax]]</text>
      <sha1>l796orglw49m9d8g10a1j928stbgj7z</sha1>
    </revision>
  </page>
  <page>
    <title>Consciousness Studies/Models Of Access Consciousness</title>
    <ns>0</ns>
    <id>41014</id>
    <revision>
      <id>1051727</id>
      <parentid>1000534</parentid>
      <timestamp>2007-12-11T12:47:03Z</timestamp>
      <contributor>
        <username>RobinH</username>
        <id>8141</id>
      </contributor>
      <minor />
      <comment>[[Consciousness Studies/Models of access consciousness]] moved to [[Consciousness Studies/Models Of Access Consciousness]]: naming</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">There have been numerous attempts to model reflex and access consciousness. These models, being connectionist and information systems based, do not model phenomenal consciousness but are essential steps in understanding global brain function.

==Neural networks==

Neural networks achieve information processing by establishing connections between processing units in a system of processors that have similar characteristics. Neural networks are used for classifying data.  The processing units serve the function of both filtering and storing information.

''This is a stub and requires expansion''

===Classification of sensory stimuli===

''The path from transducers to a single neuron that responds to a single complex stimulus.''

''This is a stub and requires expansion''

===Classification of motor control===

''From premotor activity to skilled behaviour.''

''This is a stub and requires expansion''

===Olfaction: classification out of chaos?===

''This is a stub and requires expansion''

==Quantum information processing==

''This is a '''stub''' and needs expanding''

[[Category:Consciousness Studies]]</text>
      <sha1>66uqv7c58s94h1s42vkdh588x1eihe6</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:81.37.171.212</title>
    <ns>3</ns>
    <id>41015</id>
    <revision>
      <id>991081</id>
      <parentid>234589</parentid>
      <timestamp>2007-10-04T01:10:39Z</timestamp>
      <contributor>
        <username>Mike's bot account</username>
        <id>67847</id>
      </contributor>
      <minor />
      <comment>substituting templates</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{mbox|type=serious|msg='''Please do not make inappropriate edits to Wikibooks.'''&lt;br/&gt;Edits that you have made have been considered inappropriate or even disruptive by your fellow contributors. Please use the [[Wikibooks:Sandbox|sandbox]] in the future if you wish to test something out. For a description of the type of content that we do allow, see [[WB:WIW]]. If you have questions about this, or need help, ask at the [[WB:AN|Administrator's Noticeboard]]. {{{1|}}}}} &amp;mdash; [[User:Laurascudder|Laura Scudder]] | [[User talk:Laurascudder|Talk]] 16:14, 15 September 2005 (UTC)</text>
      <sha1>6jlibims2tp13bxgmuw955zhj02v08v</sha1>
    </revision>
  </page>
  <page>
    <title>Radiation Oncology/NSCLC/Miscellaneous</title>
    <ns>0</ns>
    <id>41017</id>
    <revision>
      <id>1732341</id>
      <parentid>1144594</parentid>
      <timestamp>2010-03-08T21:05:55Z</timestamp>
      <contributor>
        <username>Brim</username>
        <id>2387</id>
      </contributor>
      <minor />
      <comment>moved [[Radiation Oncology/Lung/NSCLC/Miscellaneous]] to [[Radiation Oncology/NSCLC/Miscellaneous]]: reorganized Lung topics</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{:Radiation Oncology/Lung/NSCLC:TOC}}

==Role of Amifostine==
*'''RTOG 98-01''' (1998-2002)
**PMID 15800308, 2005 &amp;mdash; &quot;Randomized trial of amifostine in locally advanced non-small-cell lung cancer patients receiving chemotherapy and hyperfractionated radiation: radiation therapy oncology group trial 98-01.&quot; Movsas B et al. J Clin Oncol. 2005 Apr 1;23(10):2145-54. 
**120 pts. Stage II-III NSCLC. Induction chemo and hyperfractionated RT with concurrent chemotherapy, randomized to +/- Amifostine. 
**Grade 3 esophagitis 30% (Amifostine) vs 34%, N.S. However, improved swallowing diary area under the curve suggests a possible benefit.


==EGFR==
===Gefitinib (Iressa)===
Is an inhibitor of the tyrosine kinase domain of EGFR.  EGFR is overexpressed in 40-80% of NSCLC. 

*Harvard, 2004 - PMID 15118073 &amp;mdash; &quot;Activating mutations in the epidermal growth factor receptor underlying responsiveness of non-small-cell lung cancer to gefitinib.&quot; Lynch TJ et al. N Engl J Med. 2004 May 20;350(21):2129-39. 
**Most patients with NSCLC have no response to gefitinib, however about 10% show a rapid and dramatic response. 
**A subgroup of patients with NSCLC have specific mutations in the EGFR gene which correlate with response to gefinitib. The mutations lead to increased growth factor signaling
**Conclusion: screening for EGFR mutations may enable selection of patients who will respond to treatment with gefitinib.

*'''IDEAL (Iressa Dose Evaluation in Advanced Lung Cancer) trials'''
**Previously treated NSCLC who failed 1-2 prior chemotherapy regimens. 
**IDEAL-1: PMID 12748244 &amp;mdash; &quot;Multi-institutional randomized phase II trial of gefitinib for previously treated patients with advanced non-small-cell lung cancer (The IDEAL 1 Trial)&quot; Fukuoka M et al. J Clin Oncol. 2003 Jun 15;21(12):2237-46.
**IDEAL-2: PMID 14570950 &amp;mdash; &quot;Efficacy of gefitinib, an inhibitor of the epidermal growth factor receptor tyrosine kinase, in symptomatic patients with non-small cell lung cancer: a randomized trial.&quot; Kris MG et al. JAMA. 2003 Oct 22;290(16):2149-58.
**Both trials tested 250 mg vs 500 mg daily doses and showed no difference in efficacy but fewer side effects in the low dose arm.

===Erlotinib (Tarceva)===
Is a tyrosine kinase inhibitor.

*'''NCI Canada Clinical Trials Group trial BR.21'''
**PMID 16014882 &amp;mdash; &quot;Erlotinib in previously treated non-small-cell lung cancer.&quot; Shepherd FA et al. N Engl J Med. 2005 Jul 14;353(2):123-32. 
**731 pts. Stage IIIB-IV who received 1-2 prior chemotherapy regimens. Randomized to erlotinib vs placebo. 
**Response rate 8.9%. PFS 2.2 vs 1.8 months (placebo), S.S. OS 6.7 vs 4.7 m (HR = 0.7).

*'''TRIBUTE trial'''
**PMID 16043829 &amp;mdash; &quot;TRIBUTE: A Phase III Trial of Erlotinib Hydrochloride (OSI-774) Combined With Carboplatin and Paclitaxel Chemotherapy in Advanced Non-Small-Cell Lung Cancer.&quot; Herbst RS et al. J Clin Oncol. 2005 Sep 1;23(25):5892-9.p
**1059 pts. Stage IIIB/IV. Randomized. Received 6 cycles of carboplatin and paclitaxel, combined with erlotinib vs placebo.
**No difference in OS or TTP. Pts who never smoked had improved OS with erlotinib, 22 vs 10 months.

'''Predictors of response:'''
*PMID 16043828 &amp;mdash; &quot;Mutations in the Epidermal Growth Factor Receptor and in KRAS Are Predictive and Prognostic Indicators in Patients With Non-Small-Cell Lung Cancer Treated With Chemotherapy Alone and in Combination With Erlotinib.&quot; Eberhard DA et al. J Clin Oncol. 2005 Sep 1;23(25):5900-9.
**From TRIBUTE trial, treated with chemotherapy +/- erlotinib.  EGFR mutations (in 13%) associated with improved survival in all arms. Among those receiving erlotinib, there is an improved response rate for those with EGFR mutations and a trend toward improved TTP but no difference in survival. K-RAS mutations (21%) associated with decreased TTP and survival.</text>
      <sha1>rvl3u9bjaig3tor6st5apjc2j07yg2r</sha1>
    </revision>
  </page>
  <page>
    <title>Reverse Engineering/Other Compilers</title>
    <ns>0</ns>
    <id>41018</id>
    <revision>
      <id>678280</id>
      <parentid>547332</parentid>
      <timestamp>2006-12-09T00:18:19Z</timestamp>
      <contributor>
        <username>Gcaprino</username>
        <id>44603</id>
      </contributor>
      <minor />
      <comment>minor typo fixes</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Reverse Engineering Chapter}}

This chapter will contain a listing of compilers for languages that do not warrant their own chapters. Some language implementations are significantly unique in certain aspects that they do deserve their own discussion. In the event that a section on any given language becomes large enough, it should probably be separated out into its own chapter. If no languages get listed here, perhaps we will just delete the entire chapter.

== Perl ==

Using the utility &quot;perlcc&quot; program (supplied with the Perl interpreter), a user can optionally attempt to compile the Perl code into any number of other forms. These other forms include C source code (although the C code is very hard to follow), native code, and Perl bytecode.

The perlcc C code output often consists of a series of symbol tables, and calls to internal Perl functions, so the reverser would simply not find these to be of much use. The Perl bytecode however is a little more interesting, but still not easy to read by any stretch of the imagination.

The entire Perl cross-compiler suite is listed as being &quot;very experimental&quot;, so only advanced users should put any stock in the process.

To compile a Perl script into bytecode:
 
 perlcc -B &lt;filename&gt;

The bytecode ''should'' be self-executing, or it ''should'' be able to run by passing it as an argument to Perl.

To compile a Perl script into C:

 perlcc -O &lt;filename&gt;

OR:
  
 perlcc -c &lt;output file&gt; &lt;input file&gt;

The -O option uses the &quot;optimized C backend&quot; which is considered to be the most experimental component of the entire suite.

It is unlikely that too much Perl will be considered throughout the rest of this book.

== Further Reading ==

* Wikibooks: [[Perl]]</text>
      <sha1>7511utw8jq3185wrr7u2lbfiab1aost</sha1>
    </revision>
  </page>
  <page>
    <title>Dialectical Behavioral Therapy/Borderline Personality Disorder</title>
    <ns>0</ns>
    <id>41020</id>
    <revision>
      <id>1236528</id>
      <parentid>499186</parentid>
      <timestamp>2008-07-23T18:38:15Z</timestamp>
      <contributor>
        <ip>129.19.133.58</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">What is Borderline Personality Disorder?
And, do I have to have this diagnosis to benefit from DBT?

Borderline Personality Disorder (BPD) is a label that mental health professionals use to describe the behavior of certain people who have serious problems in living.  People with this diagnosis often experience stronger emotions than the average person, feel afraid or desperate more often, and frequently do impulsive things as a result.  They may have problems getting and keeping good relationships because their feelings of anger or fear are so strong.   People with BPD may think that others are trying to take advantage of them or have hurt feelings easily.  Also, they may have feelings of emptiness or sadness inside that cause them to want to die or to find relief in self-harm.   For some people with this diagnosis, these mood swings and the behaviors that come from them may make it impossible to live a good life.

Most people who have the diagnosis of BPD also have one or several other diagnoses.  These often include a mood disorder (like, Bi-Polar Disorder or Depression), Attention Deficit Disorder, or others.  Also, they may be on one, several, or no medications at all.  There is no single medication that seems to be best for everyone with this disorder, and a wide variety of medications are prescribed.  Sometimes people have to try out several different medications before they find the right single medication or combination that helps them the most.  One rule that applies to almost everyone with BPD is that medication is not enough to help people get better and stay better.   Therapy is also required in order to make satisfying and lasting life changes and to “get over” Borderline Personality Disorder.

[[/Biosocial Model/]] of Borderline Personality Disorder

[[Category:Dialectical Behavioral Therapy]]</text>
      <sha1>ryv7b6m74zry9nqcfglydeuhs4v81jw</sha1>
    </revision>
  </page>
  <page>
    <title>Old English/Orthography</title>
    <ns>0</ns>
    <id>41029</id>
    <revision>
      <id>2764599</id>
      <parentid>1943746</parentid>
      <timestamp>2015-02-11T01:50:32Z</timestamp>
      <contributor>
        <username>AutisticCatnip</username>
        <id>1269854</id>
      </contributor>
      <comment>Fixed a vast sea of redlinks.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Old English}}
----
==How to write Old English correctly==
Technically speaking, there was no standard orthography in Old English, so you could write however you spoke, as the Anglo-Saxons did.  But, for the modern reader, who is accustomed to a uniform writing for his words (one word, one spelling), we will thus use a standard orthography here based on Early West Saxon (an early standard for Old English), without syncopating endings of verbs after t/d/þ (for ease of use to beginners, and for orthographic consistency with the other forms of the same verb).

==Consonants==
There were 18 consonants in the Old English language: b c d f g h l m n p r s t v w x þ ð.  Sometimes, you will see k, q, and z in foreign words.

==Vowels==
There were 7 (sometimes 8) vowels in Old English: a æ, e, i, o, u, y, and sometimes œ (Northumbrian).

==Sounds of Old English==
The inventory of [[w:Phone (phonetics)|surface sounds]] (whether [[w:Allophone|allophone]]s or [[w:Phoneme|phoneme]]s) of Old English is as shown below.

===Consonants===
{| class=&quot;wikitable&quot;
! &amp;nbsp;
![[w:bilabial consonant|Bilabial]]
![[w:labiodental consonant|Labiodental]]
![[w:dental consonant|Dental]]
![[w:alveolar consonant|Alveolar]]
![[w:postalveolar consonant|Postalveolar]]
![[w:palatal consonant|Palatal]]
![[w:velar consonant|Velar]]
![[w:glottal consonant|Glottal]]
|-
|'''[[w:stop consonant|Stop]]'''
| align=center | {{IPA|p&amp;nbsp;&amp;nbsp;b}}
| &amp;nbsp;
| &amp;nbsp;
| align=center | {{IPA|t&amp;nbsp;&amp;nbsp;d}}
| &amp;nbsp;
| &amp;nbsp;
| align=center | {{IPA|k&amp;nbsp;&amp;nbsp;g}}
| &amp;nbsp;
|-
|'''[[w:affricate consonant|Affricate]]'''
| &amp;nbsp;
| &amp;nbsp;
| &amp;nbsp;
| &amp;nbsp;
| align=center | {{IPA|tʃ&amp;nbsp;&amp;nbsp;(dʒ)}}
| &amp;nbsp;
| &amp;nbsp;
| &amp;nbsp;
|-
|'''[[w:nasal consonant|Nasal]]'''
| align=center | {{IPA|m}}
| &amp;nbsp;
| &amp;nbsp;
| align=center | {{IPA|n}}
| &amp;nbsp;
| &amp;nbsp;
| align=center | {{IPA|(ŋ)}}
| &amp;nbsp;
|-
|'''[[w:fricative consonant|Fricative]]'''
| &amp;nbsp;
| align=center | {{IPA|f&amp;nbsp;&amp;nbsp;(v)}}
| align=center | {{IPA|θ&amp;nbsp;&amp;nbsp;(ð)}}
| align=center | {{IPA|s&amp;nbsp;&amp;nbsp;(z)}}
| align=center | {{IPA|ʃ}}
| align=center | {{IPA|(ç)}}
| align=center | {{IPA|(x)&amp;nbsp;&amp;nbsp;(ɣ)}}
| align=center | {{IPA|h}}
|-
|'''[[w:approximant consonant|Approximant]]'''
| &amp;nbsp;
| &amp;nbsp;
| &amp;nbsp;
| align=center | {{IPA|r}}{{ref|r}}
| &amp;nbsp;
| align=center | {{IPA|j}}
| align=center | {{IPA|w}}
| &amp;nbsp;
|-
|'''[[w:lateral consonant|Lateral approximant]]'''
| &amp;nbsp;
| &amp;nbsp;
| &amp;nbsp;
| align=center | {{IPA|l}}
| &amp;nbsp;
| &amp;nbsp;
| &amp;nbsp;
| &amp;nbsp;
|}
&lt;small&gt; 1. {{note|r}} The exact nature of Old English ''r'' is not known. It may have been an [[w:Alveolar approximant|alveolar approximant]] {{IPA|[ɹ]}}, as in most Modern English accents, an [[w:Alveolar flap|alveolar flap]] {{IPA|[ɾ]}}, or an [[w:Alveolar trill|alveolar trill]] {{IPA|[r]}}. In this article we will use the symbol {{IPA|/r/}} indiscriminately to stand for this phoneme.&lt;/small&gt;

===Consonant allophones===
The sounds marked in parentheses in the table above are [[w:Allophone|allophone]]s:
*{{IPA|[dʒ]}} is an allophone of {{IPA|/j/}} occurring after {{IPA|/n/}} and when [[w:gemination|geminated]]
**For example, ''senġan'' &quot;to singe&quot; is {{IPA|[sendʒɑn]}} &lt; {{IPA|/senjɑn/}} &lt; {{PIE|*sangjan}}
**and ''bryċġ'' &quot;bridge&quot; is {{IPA|[bryddʒ]}} &lt; {{IPA|/bryjj/}} &lt; {{PIE|*bruggjō}} &lt; {{PIE|*bruɣjō}}
*{{IPA|[ŋ]}} is an allophone of {{IPA|/n/}} occurring before {{IPA|/k/}} and {{IPA|/g/}}
**For example, ''hring'' &quot;ring&quot; is {{IPA|[hriŋg]}}; {{IPA|[ŋ]}} did not occur alone word-finally in Old English as it does in Modern English.
*{{IPA|[v, ð, z]}} are allophones of {{IPA|/f, θ, s/}} respectively, occurring between [[w:Vowel|vowel]]s or [[w:Voice (phonetics)|voiced consonant]]s.
**For example, ''stafas'' &quot;letters&quot; is {{IPA|[stɑvɑs]}} &lt; {{IPA|/stɑfɑs/}}, ''smiþas'' &quot;blacksmiths&quot; is {{IPA|[smiðɑs]}} &lt; {{IPA|/smiθɑs/}}, and ''hūses'' &quot;house (genitive)&quot; is {{IPA|[huːzes]}} &lt; {{IPA|/huːses/}}.
*{{IPA|[ç, x]}} are allophones of {{IPA|/h/}} occurring in [[w:Syllable#Coda|coda]] position after front and back vowels respectively. The evidence for this is indirect, as it is not indicated in the orthography. Nevertheless, the fact that there was historically a fronting of {{PIE|*k}} to {{IPA|/tʃ/}} and of {{PIE|*ɣ}} to {{IPA|/j/}} after front vowels makes it very likely. Moreover, in late [[w:Middle English|Middle English]], {{IPA|/x/}} sometimes became {{IPA|/f/}} (e.g. ''tough'', ''cough''), but only after back vowels, never after front vowels. This is explained if we assume that the allophone {{IPA|[x]}} sometimes became {{IPA|[f]}} but the allophone {{IPA|[ç]}} never did.
**For example, ''cniht'' &quot;boy&quot; is {{IPA|[kniçt]}}, while ''ġeþōht'' &quot;thought&quot; is {{IPA|[jeˈθoːxt]}}
*The sequences /hw hl hn hr/ were realized as [ʍ l ̥ n ̥ r ̥].
*{{IPA|[ɣ]}} is an allophone of {{IPA|/g/}} occurring after a vowel or [[w:liquid consonant|liquid]]. Historically, {{IPA|[ɣ]}} is older, and originally appeared in word-initial position as well; for [[w:West_Germanic_languages#The_West_Germanic_proto-language|Proto-West Germanic]] (PWG) (and probably the earliest Old English), it makes more sense to say that {{IPA|[g]}} is an allophone of {{IPA|/ɣ/}} after a [[w:nasal consonant|nasal]]. But because {{IPA|[ɣ]}} became {{IPA|[g]}} word-initially, it makes more sense to treat the [[w:stop consonant|stop]] as the basic form and the [[w:fricative consonant|fricative]] as the allophonic variant.
**For example, ''dagas'' &quot;days&quot; is {{IPA|[dɑɣɑs]}} and ''burgum'' &quot;castles (dative)&quot; is {{IPA|[burɣum]}}

===Vowels===
{|class=&quot;wikitable&quot;
! rowspan=2 | [[w:Monophthong|Monophthong]]s
! colspan=2 | [[w:Vowel length|Short]]
! colspan=2 | Long
|-
! [[w:Front vowel|Front]]
! [[w:Back vowel|Back]]
! Front
! Back
|-
| '''[[w:Close vowel|Close]]'''
| align=center | {{IPA|i&amp;nbsp;&amp;nbsp;y}}
| align=center | {{IPA|u}}
| align=center | {{IPA|iː&amp;nbsp;&amp;nbsp;yː}}
| align=center | {{IPA|uː}}
|-
| '''[[w:Mid vowel|Mid]]'''
| align=center | {{IPA|e&amp;nbsp;&amp;nbsp;(ø)}}
| align=center | {{IPA|o}}
| align=center | {{IPA|eː&amp;nbsp;&amp;nbsp;(øː)}}
| align=center | {{IPA|oː}}
|-
| '''[[w:Open vowel|Open]]'''
| align=center | {{IPA|æ}}
| align=center | {{IPA|ɑ}}
| align=center | {{IPA|æː}}
| align=center | {{IPA|ɑː}}
|}

The [[w:front vowel|front]] [[w:mid vowel|mid]] [[w:Rounded vowel|rounded vowel]]s {{IPA|/ø(ː)/}} occur in some [[w:Dialect|dialect]]s of Old English, but not in the best attested [[w:West Saxon dialect (Old English)|Late West Saxon]] dialect. There is also historical evidence suggesting that short /e/ and /o/ were phonetically lower and/or more centralized (perhaps {{IPA|/ɛ/}} and {{IPA|/ɔ/}}) than the corresponding long ones.

{|class=&quot;wikitable&quot;
! [[w:Diphthong|Diphthong]]s
! Short ([[w:mora (linguistics)|monomoraic]])
! Long (bimoraic)
|-
| '''First element is close'''
| align=center | {{IPA|iy}}{{ref|iy}}
| align=center | {{IPA|iːy}}
|-
| '''Both elements are mid'''
| align=center | {{IPA|eo}}
| align=center | {{IPA|eːo}}
|-
| '''Both elements are open'''
| align=center | {{IPA|æɑ}}
| align=center | {{IPA|æːɑ}}
|}
&lt;small&gt; 2. {{note|iy}} It is uncertain whether the diphthongs spelt ''ie''/''īe'' were pronounced {{IPA|[i(ː)y]}} or {{IPA|[i(ː)e]}}. The fact that this diphthong was merged with {{IPA|/y(ː)/}} in many dialects suggests the former.&lt;/small&gt;

==Common words==
Some common words which had many variant spellings include:
*hīe ''they'', ''them'', ''her'' - also as hy, hig, hi
*hira ''their'' - also hiera, heora
*hine ''him'' - also hiene

==Dialects==
There were a four main dialects in Old English: West Saxon, Anglian (consisting of Mercian and Northumbrian), and Kentish.  West Saxon has the most documented evidence, which is why it is used here.  But the other three dialects show some differences in spelling, grammar, and vocabulary which will be explored in the chapter on dialects.</text>
      <sha1>n3dbwfltjlk6vjx7rfmu2lt8pwr7ph6</sha1>
    </revision>
  </page>
  <page>
    <title>Old English/Verbs</title>
    <ns>0</ns>
    <id>41032</id>
    <revision>
      <id>3046581</id>
      <parentid>3016993</parentid>
      <timestamp>2016-02-13T13:53:48Z</timestamp>
      <contributor>
        <username>Wodorabe</username>
        <id>2651900</id>
      </contributor>
      <comment>/* Weak Class 2 verbs */  2 singular present indicative - see discussion.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{Old English}}
----
What is a '''verb'''? Verbs are a class of words. Verbs tell you what a person ''is doing'' in a sentence, or what they ''are''.  They are either ''action verbs'' (like Modern English &quot;do&quot; or &quot;make&quot; as in &quot;I do this&quot; or &quot;He makes cars&quot;) or ''stative verbs'' (like Modern English &quot;be&quot; or &quot;become&quot; as in &quot;I will be a dog&quot; and &quot;You become angry&quot;).

==Verb Agreement==
Verbs have to agree with the subject of the sentence in number (singular when the subject of the verb is just one, and plural when the subject of the verb is more than one), and person (I, you, he/she/it).  This is sometimes the case even in Modern English, but more so for Old English. An example of how change verbs to agree for number and person in Modern English is when we add &quot;-s&quot; to third person singular verb, as in &quot;He sings well&quot;; but we don't add &quot;-s&quot; for anything else, including third person plural, for example &quot;They sing well&quot;.

Look at this example of how an Old English changed depending on the person and number it is used with, compared with how it is done to a lesser extent in Modern English: 
{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
|-
! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot;| Modern English (go) !! colspan=&quot;2&quot; style=&quot;background:#fd8;&quot; | Old English (gān)
|-
|style=&quot;background:#fed;&quot;| I go 
|style=&quot;background:#fed;&quot;| we go 
|style=&quot;background:#fed;&quot;| iċ gā 
|style=&quot;background:#fed;&quot;| wē gāþ
|-
|style=&quot;background:#fed;&quot;| thou goest (outdated)/you alone go 
|style=&quot;background:#fed;&quot;| you all go 
|style=&quot;background:#fed;&quot;| þu gǣst 
|style=&quot;background:#fed;&quot;| ġē gāþ
|-
|style=&quot;background:#fed;&quot;| he/she/it goes/goeth (outdated) 
|style=&quot;background:#fed;&quot;| they go 
|style=&quot;background:#fed;&quot;| hē/hēo/hit gǣþ 
|style=&quot;background:#fed;&quot;| hīe gāþ
|}

You can see that there are four different ways the word &quot;gān&quot; is changed for different people and numbers in Old English: 
#First person singular (iċ gā - I go) 
#Second person singular (þū gǣst - you alone go) 
#Third person singular (hē/hēo/hit gǣþ - he/she/it goes) 
#Plural (which is the same for all people) (wē/ġē/hīe gāþ - we/you all/they go). 

Compare to Modern English, which is simpler and only has two forms:
#&quot;Goes&quot; (third person singular)
#&quot;Go&quot; (for everything else)

==Example of a verb==

Here is an example of the various parts of one Old English verb ''singan'', &quot;to sing&quot;.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#e74;&quot;|'''Conjugation''' 
! style=&quot;background:#e74;&quot;|'''Pronoun''' 
! style=&quot;background:#fd8;&quot;|'''&quot;Singan&quot; - &quot;to sing&quot;'''
|-
| style=&quot;background:#fd8;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| singan
|-
| tō singenne
|-
| style=&quot;background:#fd8;&quot; colspan=&quot;2&quot;| '''Present participle''' || singende
|-
| style=&quot;background:#fd8;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#fed;&quot;|'''iċ''' || singe
|-
| style=&quot;background:#fed;&quot;|'''þū''' || singst
|-
| style=&quot;background:#fed;&quot;|'''hē/hit/hēo''' || singþ
|-
| style=&quot;background:#fed;&quot;|'''wē/ġē/hīe''' || singaþ
|-
| style=&quot;background:#fd8;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#fed;&quot;|'''Singular''' || sing
|-
| style=&quot;background:#fed;&quot;|'''Plural''' || singaþ
|-
| style=&quot;background:#fd8;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#fed;&quot;|'''iċ/þū/hē/hit/hēo''' || singe
|-
| style=&quot;background:#fed;&quot;|''' wē/ġē/hīe ''' || singen
|-
| style=&quot;background:#fd8;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#fed;&quot;|'''iċ''' || sang
|-
| style=&quot;background:#fed;&quot;|'''þū''' || sunge
|-
| style=&quot;background:#fed;&quot;|'''hē/hit/hēo''' || sang
|-
| style=&quot;background:#fed;&quot;|'''wē/ġē/hīe''' || sungon
|-
| style=&quot;background:#fd8;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#fed;&quot;|'''iċ/þū/hē/hit/hēo''' || sunge
|-
| style=&quot;background:#fed;&quot;|'''wē/ġē/hīe''' || sungen
|-
| style=&quot;background:#fd8;&quot; colspan=&quot;2&quot;|'''Past participle''' || (ġe)sungen
|}

Not every verb is conjugated exactly like this: this, as it happens, is a Class III strong verb, and verbs are conjugated differently according to their class. More details of how verbs are conjugated will be supplied later. First, we should look at what the various parts of the verb are for.


Jjiiini

==The infinitives==

In Modern English, we really have two infinitives, as exemplified by the phrases: &quot;I can '''sing'''&quot; and &quot;I want '''to sing'''&quot;. The choice of which to use is dictated by the role that the infinitive plays in the sentence.

In the same way, Old English has two infinitives for each verb: in the case of &quot;to sing&quot; they would be ''singan'' and ''tō singenne''. The choice of which to use essentially follows the same rules as in Modern English. The plain infinitive is used after modal verbs such as &quot;can&quot; or &quot;may&quot; or &quot;shall&quot;. The &quot;tō&quot; infinitive is used:

* After verbs which require an infinitive but which are not modal, as in ''hīe wilniaþ tō singenne'' (&quot;They want to sing&quot;).

* After an adjective, as in ''ic eom gearu tō singenne'' (&quot;I am ready to sing&quot;).

* To indicate purpose, as in ''þū ārise tō singenne'' (&quot;You got up to sing&quot;).

==The present participle==

The present participle (in our example ''singende'') is the equivalent of the Modern English present participle (in this case, &quot;singing&quot;) It could be used as an adjective to show that someone was doing something, or usually did something, for example ''se singenda man'' - &quot;the singing man&quot;. However, it was only rarely used to show a continuous or currently happening action, for example, ''iċ eom singende þone sang'' (&quot;I am singing the song&quot;); it would be much more normal for an Anglo-Saxon to simply say ''iċ singe þone sang'', using the present indicative.

==The present and past indicative==

Old English really only has two tenses: the present and the past (or '''preterite'''). Each of these tenses therefore has to play several roles.

So a statement using the present tense, such as ''iċ singe'' can mean: &quot;I sing&quot;, or &quot;I am singing&quot;, or &quot;I will sing&quot;, or &quot;I will be singing&quot;. (The use of the present for the future is still acceptable in Modern English: for example, it is perfectly OK to say: &quot;I take my driving test on Tuesday.&quot;)

Meanwhile a statement using the preterite, such as ''iċ sang'', can mean &quot;I sang&quot; or &quot;I was singing&quot; or &quot;I have sung&quot;.

You might, then, consider the Old English language as being primitive and inexpressive by contrast with Modern English. However, this is not really the case. After all, in almost every other respect Old English has more grammar than Modern English, and yet we seem to get by: for example, in Modern English we have no grammatical distinction between the second person singular and plural, and yet this never seems to cause any confusion, because context is almost always sufficient to resolve any confusion that might arise.

==The imperative==

The imperative in Old English is just like that in Modern English: it is used for giving commands, so ''sing'' in Old English means the same as &quot;sing!&quot; in Modern English. The only difference is that as with the other parts of the verb, the imperative in Old English is inflected according to number, so that if you wanted to tell more than one person to sing, you would say ''singaþ''.

==The subjunctive==

Old English has present and past subjunctives. The subjunctive is used in Old English to describe hypothetical or counter-factual situations.

The true Old English subjunctive does not occur often in Modern English; but it is sometimes used where no other phrase will do. For example, the ''National Enquirer'', not noted for the excessive formality of its grammar, has this to say in an item of gossip about Brad Pitt and Angelina Jolie:

:''But the 48-year-old “Moneyball” star finally snapped when Angie, 37, insisted '''that he go''' to rehab to conquer his demons, insiders say.''

There is really no substitute for &quot;that he go&quot;. If we tried to substitute: &quot;that he goes&quot;, then Ms. Jolie would be insisting that he ''does presently go'' to rehab, which he doesn't. If we tried to substitute: &quot;that he went&quot;, then she'd be insisting that he ''used to go'' into rehab, which he didn't. If we substituted: &quot;that he ought to go&quot; or &quot;that he should go&quot;, then this would say that she was insisting that this was the right thing for him to do, but not that she was insisting that he do it. Only the subjunctive form &quot;that he go&quot; properly expresses what Ms. Jolie was insisting; that she was presenting him with an ultimatum.

In Old English the usage is rather broader: it would include &quot;that he ought to go&quot;, and &quot;that he should go&quot;.

Here's another example of the true subjunctive in Modern English, in an article discussing the movie ''The Fly'':

:''When David Cronenberg was hired as director, one condition was '''that he be''' able to extensively rewrite the script.''

In this case, &quot;that he was&quot; would also be perfectly good Modern English.

We can see more uses of the subjunctive if we go back a few centuries, and look at Shakespeare or the King James Bible. For example, in ''Romeo and Juliet'', Juliet exclaims:

:'''''If he be''' married, my grave is like to be my wedding bed''.

Again, Juliet is discussing a hypothetical situation, so she uses the subjunctive. Nowadays, any English speaker would write: &quot;If he is married&quot;.

In Modern English, then, we tend to use the subjunctive as the last resort. In Old English, however, the subjunctive is frequently used, and often mandatory. For example, consider the sentence:

:''Ġif messe-preost his āġen līf rīhtliċe '''fadie''', þonne is rīht þæt his wurðscipe '''wexe'''.&quot;

If we translate this into Modern English, keeping the subjunctive mood, that would come out as:

:&quot;If a priest '''govern''' his own life rightly, it is right that his honor '''grow'''.&quot;

This seems strange and stilted in Modern English, and we would be more likely to drop all indication of the subjunctive and translate it into Modern English as follows:

:&quot;If a priest '''governs''' his own life rightly, it is right that his honor '''grows'''.&quot;

But if we tried to drop the subjunctive in the Old English, and rewrite the passage in the indicative, as:

:''Ġif messe-preost his āġen līf rīhtliċe '''fadaþ''', þonne is rīht þæt his wurðscipe '''wexeþ'''.&quot;

... then this would not really be grammatical. We would use the indicative and say &quot;fadaþ&quot; and &quot;wexeþ&quot; if we wanted to assert of a particular priest that he is arranging his own life well, and that as a result his honor is growing. But instead the author wished to assert of a general and hypothetical priest that ''if'' he arranges his own life well, ''then'' his honor ''ought to'' grow as a consequence; therefore he had to use the subjunctive.

So we find, for example, subjunctive forms such as:

:''Ūs dafenaþ þæt wē waċien.''

This might be translated as &quot;It is fitting that we be wakeful&quot;. We couldn't keep this meaning if we put it into the indicative and wrote:

:''Ūs dafenaþ þæt wē waċiaþ.''

... because if that was grammatical at all, it would mean &quot;It is fitting that we ''are'' awake&quot;, which has a different meaning.

==Past participle==

The past participle works like the Modern English past participle, so that ''ġesungen'' just means &quot;sung&quot;. As with the Modern English past participle, it can be used as an adjective, and it can also be used with the verb &quot;to have&quot; to form a perfect tense, as in Modern English &quot;I have sung the song&quot;. However, in Old English the participle tends to go at the end of the clause, as it does in German: ''iċ hæbbe þone sang ġesungen''.

==Verb Classes==
There are several types of verbs in Old English, more than in Modern English, which has many weak (love/loved/loved), some strong (sing/sang/sung), and a few irregular verbs (be/was/been).  Old English has four types of weak verbs, typically called Class 1a, Class 1b, Class 2, and Class 3.  Strong verbs are typically arranged in seven classes, according to their vowel-changes (ablaut).  All verbs do have the following in common: the infinitive ends in ''-an'' for nearly all verbs (a smaller portion end in -ian and -rian), the present participle ends in ''-ende'' (a smaller portion end in -iende), the present plural is always ''-aþ'', and the inflected infinitive ends in ''-enne''.

==Weak Verbs==
Weak verbs are often called ''regular'' verbs in most English texts, because they have a ''regular'' past tense in ''-ed'', with very few exceptions.  In Old English, these verbs were also the majority of verbs, most often derived from nouns, adjectives, and other verbs.  While we can generalize across all classes, it will be easier to lay them out and allow the reader to see the similarities for themselves.  

===Weak Class 1 verbs===

Class 1 weak verbs are traditionally divided into two subclasses.

In class 1a there are:

* Verbs like ''fremman'', where the stem has a short vowel followed by (in the infinitive) two consonants.
* Verbs like ''nerian'', where the stem has a short vowel followed by an ''r'' followed by (in the infinitive) an ''i''.

In class 1b are verbs where the stem consists either of a long vowel followed by a single consonant, or a short vowel followed by two different consonants; both of these behave just the same.

In the table below, we give the complete conjugations of ''fremman'' and ''nerian'', which are Class 1a verbs, and of hīeran, a Class 1b verb.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;do&quot;
! style=&quot;background:#efefef;&quot;|&quot;save&quot;
! style=&quot;background:#efefef;&quot;|&quot;hear&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| fremman || nerian || hīeran
|-
| tō fremmenne || tō nerienne || tō hīerenne
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || fremmende || neriende || hīerende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || fremme || nerie || hīere
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || fremest || nerest || hīerst
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || fremeþ || nereþ || hīerþ
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || fremmaþ || neriaþ || hīeraþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || freme || nere || hīer
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || fremmaþ || neriaþ || hīeraþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || fremme || nerie || hīere
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || fremmen || nerien || hīeren
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || fremede || nerede || hīerde
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || fremedest || neredest || hīerdest
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || fremede || nerede || hīerde
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || fremedon || neredon || hīerdon
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || fremede || nerede || hīerde
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || fremeden || nereden || hīerden
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || (ġe)fremede || (ġe)nerede || (ġe)hīered
|}

There is a clear pattern here. The suffixes of the same parts of the different verbs are very similar across all the verbs. What is more, we can observe that where forms of ''fremman'' have a double ''m'', forms of ''nerian'' have an ''i'', and forms of ''hīeran'' have a suffix beginning with a vowel. Conversely, with one exception, where forms of ''fremman'' have a single ''m'', forms of ''nerian'' have no ''i'', and the suffix of the corresponding form of ''hīeran'' is like the suffix for ''fremman'' and ''nerian'' except for lacking the first ''e'' in the suffix. The one exception is the past participle, where this rule fails more often than not.

In Class 1b verbs, where the -''d''- in the suffix in the past tense is jammed right up against the final consonant of the stem, certain changes occur to make the resulting word easier to pronounce. After an unvoiced consonant (''c'', ''f'', ''h'', ''p'', ''s'', ''t'') the ''d'' will become a ''t''; moreover, if the unvoiced consonant is a ''c'', it will become an ''h''; so we get ''iċ tǣċe'' (&quot;I teach&quot;) but ''iċ tǣhte'' (&quot;I taught&quot;).

Another rule is that when the formation of the past tense of a Class 1b verb would put a double ''d'' or a double ''t'' after another consonant, it contracts to a single ''d'' or ''t''. So with the verb ''myntan'' (&quot;to intent&quot;), &quot;I intended&quot; is not ''iċ myntde'', nor yet ''iċ myntte'', but rather ''iċ mynte''.

===Irregular Class 1 verbs===

There are some common verbs which inflect like Class 1 weak verbs; indeed, they ''are'', technically, Class 1 weak verbs. However, there are changes in the stem between the present tense, infinitive, and present participle forms on the one hand, and the stem in the past and past participle forms on the other.

Some of these verbs survive into Modern English; for example &quot;sell&quot;/&quot;sold&quot; and &quot;buy&quot;/&quot;bought&quot;.

Since these are still Class 1 weak verbs, it is sufficient to give only two forms of the verb; the rest can be figured out with reference to the table showing the Class 1 conjugation. In the table we given the infinitive and 1st person singular past indicative.

{| class=&quot;wikitable&quot;
|-
! Definition !! Infinitive !! 1 sg. past ind.
|-
| '''seem''' || þyncan || þūhte
|-
| '''think''' || þencan || þōhte
|-
| '''bring''' || brenġan || brōhte
|-
| '''care''' || rēċan || rōhte
|-
| '''seek''' || sēċan || sōhte
|-
| '''buy''' || bycgan || bohte
|-
| '''work''' || wyrċan || worhte
|-
| '''stretch''' || streċċan || streahte
|-
| '''wake''' || weċċan || weahte
|-
| '''tell''' || reċċan || reahte
|-
| '''kill''' || cwellan || cwealde
|-
| '''give''' || sellan || sealde
|}

===Weak Class 2 verbs===
Class II weak verbs have an infinitive ending in -''ian'', with the exception of almost all verbs which end in -''rian'', which conjugate like the Class 1 weak verb ''nerian'' as discussed above.

Here is the complete conjugation of the Class 2 weak verb ''lufian'', &quot;to love&quot;.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;love&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| lufian
|-
| tō lufienne
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || lufiende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || lufie
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || lufiast{{fact}}
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || lufaþ
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || lufiaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || lufa
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || lufiaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || lufie
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || lufien
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || lufode
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || lufodest
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || lufode
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || lufodon
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || lufode
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || lufoden
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || (ġe)lufod
|}

This is very like the way Class 1 weak verbs work. Note that ''lufian'' loses its ''i'' in just those cases where ''fremman'' loses one of its ''m''s, ''nerian'' loses its ''i'', and ''hīeran'' has no ''e'' at the start of its suffix.

There are differences, though. In the second and third person singular present indicative the vowel in the suffix is an ''a'', not an ''e''. This means that the third person singular present indicative ends in -''aþ'', an ending which in every other conjugation is associated with the plural present indicative.

Note also the use of an ''o'' instead of an ''e'' in forming the past tense and past participle.

===Weak Class 3 verbs===

The third class of weak verbs contains only four verbs, but they are very common ones: ''habban'', &quot;to have&quot;; ''libban'', &quot;to live&quot;; ''secgan'', &quot;to say&quot;; and ''hycgan'', &quot;to think&quot;. Each class 3 weak verb behaves oddly in its own particular way, and so it is probably best just to give each part of each verb.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;have&quot;
! style=&quot;background:#efefef;&quot;|&quot;live&quot;
! style=&quot;background:#efefef;&quot;|&quot;say&quot;
! style=&quot;background:#efefef;&quot;|&quot;think&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| habban || libban || secgan || hycgan
|-
| tō hæbbenne || tō libbenne || tō secgenne || tō hycgenne
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || hæbbende || libbende || secgende || hycgende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || hæbbe || libbe || secge  || hycge
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || hæfst / hafast || leofast / lifast || sæġst / seġ(e)st || hyġst / hogast
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || hæfþ / hafaþ || leofaþ / lifaþ || sæġþ / seġ(e)þ || hyġþ, hogaþ
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || habbaþ || libbaþ / leofaþ || secgaþ || hycgaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || hafa || leofa || sæġe || hyġe / hoga
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || habbaþ || leofaþ || secgaþ || hycgaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || hæbbe || libbe || secge || hycge
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || hæbben || libben || secgen || hycgen
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || hæfde || lifde / leofode || sæġde || hog(o)de
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || hæfdest || lifdest || sæġdest || hog(o)dest
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || hæfde || lifde / leofode || sæġde || hog(o)de
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || hæfdon || lifdon / leofodon || sæġdon || hog(o)don
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || hæfde || lifde / leofode || sæġde || hog(o)de
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || hæfden || leofoden || sæġden || hog(o)den
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || (ġe)hæfd || (ġe)lifd / (ġe)leofod || (ġe)sæġd || (ġe)hogod
|}

==Strong verbs==

In strong verbs, the vowel in the stem of the verb changes according to person, tense, and mood; this change is known as '''ablaut''' or '''gradation'''. Relics of this system survive in Modern English in such variations as &quot;sing&quot;, &quot;sang&quot;, &quot;sung&quot; or &quot;write&quot;, &quot;wrote&quot;, &quot;written&quot;.

Although strong verbs are fewer in number than weak verbs, they include some very common verbs, and so you will come across them often.

===Example of a strong verb===

Below is an example of all the parts of the strong verb &quot;dūfan&quot; (&quot;to dive&quot;).

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;dive&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| dūfan
|-
| tō dūfenne
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || dūfende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || dūfe
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || dȳfst
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || dȳfþ
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || dūfaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || dūf
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || dūfaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || dūfe
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || dūfen
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || dēaf
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || dufe
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || dēaf
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || dufon
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || dufe
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || dufen
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || (ġe)dofen
|}

Gradation provides us with four variations on the vowel in the stem:

* The infinitive vowel ū is used in the infinitives, present participle, present tense, and imperative.
* The first preterite vowel ēa is used in the first and third person singular of the preterite.
* The second preterite vowel u is used in all the other forms of the preterite: second person singular, plural, and subjunctive.
* The past participle vowel o is used only in the past participle.

But the reader will notice that there are in fact five vowels appearing in the stem of the verb in this table: in the second and third person present indicative we have the vowel ȳ. This is not, technically, gradation, it is i-mutation: these parts of strong verbs undergo i-mutation whenever the vowel is one of the kind of vowel that undergoes i-mutation; this change is perfectly regular.

===The seven classes of strong verbs===

Strong verbs can be divided into classes according to the vowels in their ablaut systems. We can see relics of the classes in Modern English: write/wrote/written goes like drive/drove/driven; whereas sing/sang/sung goes like ring/rang/rung.

In the table below we show the gradation series of the seven classes of strong verbs.

{| class=&quot;wikitable&quot;
|-
! Class !!Inf. !! 1st pret. !! 2nd pret. !! P.p.
|-
| I || ī || ā || i || i
|-
| II || ēo or ū || ēa || u || o 
|-
| IIIa || e || æ || u || o 
|-
| IIIb || eo || ea || u || o 
|-
| IIIc || e || ea || u || o 
|-
| IIId || ie || ea || u || o 
|-
| IIIe || i || a || u || u 
|-
| IV || e || æ || ǣ || o 
|-
| V || e || æ || ǣ || e 
|-
| VI || a || ō || ō || a 
|-
| VIIa || Various || ēo || ēo || Same as inf. 
|-
| VIIb || ā || ē || ē || ā 
|}

===What happened to Class III?===

Class III verbs would originally have all conjugated the same way. However, the vowels in their stems then underwent changes according to the consonants adjacent to them.

Class IIIa represents the unaltered form of the verb.

In Class IIIb verbs, the vowel was followed by an h or r, and so underwent '''breaking''' to a diphthong in the infinitive and first preterite forms.

In Class IIIc verbs, breaking is caused in the first preterite by a l following the vowel.

In Class IIId, the vowel is preceded by ċ, ġ, or sċ, and undergoes what is known as palatal diphthongization.

In Class IIIe, the quality of the vowel was changed by being followed by a nasal consonant, that is m or n.

A further complication is that there are some Class IIIa verbs in which the vowel is followed by an r, and yet have not turned into Class IIIb verbs. An example is the verb berstan, meaning &quot;to burst&quot;. What has happened here is that the word was originally brestan, then the sound changes occurred that produced class IIIb verbs, and ''then'' the word brestan underwent what is known as '''metathesis of r''' to produce berstan.

===Stems ending in g===

In the 2nd and 3rd person present singular indicative, the same cases in which i-mutation takes place, if the verb stem ends in g, this usually becomes an h. So for example in the verb belgan (&quot;to be angry) we have þū bilhst and hē bilhþ.

===Stems ending in s, t, or d===

Also in the 2nd and 3rd person present singular indicative, certain changes take place to prevent awkwardness when the dental consonants in the suffix are stuck onto dental consonants at the end of the stem.

* If the stem of the verb ends in s, then instead of the 2nd person ending in -sst, this becomes -st; and instead of the 3rd person ending in -sþ, this becomes -st.

* If the stem of the verb ends in t, then instead of the 3rd person ending in -tþ, this becomes -tt.

* If the stem of the verb ends in d, then instead of the 3rd person ending in -dþ, this becomes -tt, and instead of the 2rd person ending in -dst, this becomes -tst

===Verner's law===

There are certain consonants occurring at the end of the stem which change along with the vowel in gradation, having one consonant to go with the indicative and 1st preterite vowels, and another to go with the 2nd preterite and past participle vowels.

{| class=&quot;wikitable&quot;
|-
! Inf. + 1st pret !! 2nd pret + p.p
|-
| s || r
|-
| þ || d
|-
| h || g
|}

So for example the table below shows the conjugation of the Class II verb sēoþan (&quot;to boil&quot;). Note that apart from this change in the consonant, it is a perfectly ordinary Class II verb.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;boil&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| sēoþan
|-
| tō sēoþenne
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || sēoþende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || sēoþe
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || sīeþst
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || sīeþþ
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || sēoþaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || sēoþ
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || sēoþaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || sēoþe
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || sēoþen
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || sēaþ
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || sude
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || sēaþ
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || sudon
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || sude
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || suden
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || (ġe)soden
|}

===Contracted verbs===

Where a verb stem originally ended in an h, various things happened. First, the h caused breaking, turning the vowel into a diphthong; then when the h came between two vowels, it disappeared, lengthening the vowel it comes after, and then the second vowel disappeared.

So, for example, the the Class VI verb lēan (&quot;to blame&quot;) would originally have been lahan. Breaking turned this into leahan; loss of h and lengthening of the vowel would give us lēaan, and loss of the vowel that came after the h gives us lēan. By contrast, in the 3rd person singular present indicative, there is no vowel after the h, so only the breaking will occur, and we get hē liehþ.

Such verbs will also undergo the Verner's Law variation of the consonant, so the h will only appear with the infinitive vowel and the 1st pret. vowel.

Putting all this together, here is the complete conjugation of the verb lēan.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;blame&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| lēan
|-
| tō lēanne
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || lēande
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || lēa
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || liehst
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || liehð
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || lēaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || lieh
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || lēaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || lēa
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || lēan
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || lōh
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || lōge
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || lōh
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || lōgon
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || lōge
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || lōgen
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || (ġe)lagen
|}

==Preterite-present verbs==

In a preterite-present verb, the past (preterite) tense has taken on a present-tense meaning, and the verb has then acquired a weak past tense.

As an example, consider the verb ''witan'' (to know). It is derived from what was once a perfectly ordinary verb meaning &quot;to see&quot; (cognate, as it happens, with the Latin verb &quot;videre&quot;). It is not hard to understand how the past tense could have taken on a present-tense meaning; if you saw something in the past, then you know about it in the present.

Hence we have forms such as ''iċ wāt'' (&quot;I know&quot;) and ''wē witon'' (&quot;we know&quot;) which look like the past tense of a strong verb, specifically a class I strong verb, but which have a present-tense meaning. Then a weak past tense is formed with a dental suffix.

While the verb ''witan'' has not survived into Modern English, a number of preterite-present verbs have, such as &quot;can&quot; and &quot;shall&quot;; it is because they are preterite-present verbs that the 3rd person present indicative is &quot;he can&quot; and &quot;he shall&quot; rather than &quot;he cans&quot; and &quot;he shalls&quot;.

The preterite-present verbs are shown in the tables below. The only reason there are three tables is so that they fit on the page; there is no particular significance to a verb being in one table rather than another.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;own&quot;
! style=&quot;background:#efefef;&quot;|&quot;know&quot;
! style=&quot;background:#efefef;&quot;|&quot;be useful&quot;
! style=&quot;background:#efefef;&quot;|&quot;dare&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| āgan || cunnan || dugan || durran
|-
| tō āgenne || tō cunnenne || tō dugenne || tō durrenne
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || āgende || cunnende || dugende || durrende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || āh || cann || dēah || dear
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || āhst || canst || dēaht || dearst
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || āh || cann || dēah || dear
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || āgon || cunnon || dugon || durron
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || āht || cunne || duge || durre
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || āhtaþ || cunnaþ || dugaþ || durraþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || āge || cunne || duge || durre
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || āgen || cunnen || dugen || durren
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || āhte || cūþe || dohte || dorste
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || āhtest || cūþest || dohtest || dorstest
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || āhte || cūþe || dohte || dorste
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || āhton || cūþon || dohton || dorston
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || āhte || cūþe || dohte || dorste
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || āhten || cūþen || dohten || dorsten
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || (ġe)āgen || cunnen / (ġe)cūþ || dugen || dorren
|}

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;be able to&quot;
! style=&quot;background:#efefef;&quot;|&quot;be allowed to&quot;
! style=&quot;background:#efefef;&quot;|&quot;remember&quot;
! style=&quot;background:#efefef;&quot;|&quot;suffice&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| magan || mōtan || ġemunan || ġenugan
|-
| tō magenne || tō mōtenne || tō ġemunenne || tō ġenugenne
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || magende || mōtende || ġemunende || ġenugende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || mæġ || mōt || ġeman || ġenēah
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || meaht || mōst || ġemanst || ġenēaht
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || mæġ || mōt || ġeman || ġenēah
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || magon || mōton || ġemunon || ġenugon
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || - || mōte || ġemune || ġenuge
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || - || mōtaþ || ġemunaþ || ġenugaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || mæġe || mōte || ġemune || ġenuge
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || mæġen || mōten || ġemunen || ġenugen
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || mihte / meahte || mōste || ġemunde || ġenohte
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || meahtest || mōstest || ġemundest || ġenohtest
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || mihte || mōste || ġemunde || ġenohte
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || meahton || mōston || ġemundon || ġenohton
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || mihte || mōste || ġemunde || ġenohte
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || mihten || mōsten || ġemunden || ġenohten
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || magen || mōten || munen || nugen
|}

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;have to&quot;
! style=&quot;background:#efefef;&quot;|&quot;need&quot;
! style=&quot;background:#efefef;&quot;|&quot;grant&quot;
! style=&quot;background:#efefef;&quot;|&quot;know&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| sculan || þurfan || unnan || witan
|-
| tō sculenne || tō þurfenne || tō unnenne || tō witenne
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || sculende || þurfende || unnende || witende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || sceal || þearf || ann || wāt
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || scealt || þearft || anst || wāst
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || scealt || þearf || ann || wāt
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || sculdon || þurfon || unnon || witon
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || scyle || þurf || unne || wite
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || scylaþ || þurfaþ || unnaþ || witaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || scyle || þurfe || unne || wite
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || scylen || þurfen || unnen || witen
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || sceolde || þorfte || ūþe || wiste
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || sceoldest || þorftest || ūþest || wistest
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || sceolde || þorfte || ūþe || wiste
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || sceoldon || þorfton || ūþon || wiston
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || sceolde || þorfte || ūþe || wiste
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || sceolden || þorften || ūþen || wisten
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || sculen || þurfen || unnen || (ġe)witen
|}

Some of the entries in the table are not actually attested in manuscripts, but are reconstructions of how the verb forms probably would have looked if they were.

==Irregular Verbs==

This class consists of four verbs which have little in common except that they are very difficult to classify. It is usual in any language that the most irregular verbs are also among the most common, and these are a case in point.

===Bēon and wesan===

The Old English verb for &quot;to be&quot; is actually made up of bits of three different verbs; as is the Modern English verb which descends from it.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;be&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| wesan / bēon
|-
| -
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || wesende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || eom / bēo
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || eart / bist
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || is / biþ
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || sind(on) / sint / bēoþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || wes / bēo
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || wesaþ / bēoþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || bēo / sīe
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || bēon / sīen
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || wæs
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || wǣre
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || wæs
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || wǣron
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || wǣre
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || wǣren
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || -
|}

As we have noted above, the present tense can be used as a future tense. In this case, ''eom'' / ''eart'' / ''is'' / ''sindon'' are typically used for the present. ''Bēo'' / ''bist'' / ''biþ'' / ''bēoþ'' are typically used for the future. They are also used to state timeless truths. For example the poem known as ''Resignation'' ends with the lines:

:Giet biþ þæt selast,         þonne mon him sylf ne mæg
:wyrd onwendan,         þæt he þonne wel þolige. 

(&quot;Yet it is best, if a man cannot change his fate, that he bear it well.&quot;) Clearly the poet thinks that this is a general statement about the human condition, and so used ''biþ'' rather than ''is''.

===Dōn and gān===

The verbs ''dōn'' (&quot;to do&quot;) and ''gān'' (to go) don't inflect exactly the same, but there are certain similarities that justify putting them in the same table.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;do&quot; || go
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| dōn || gān
|-
| tō dōnne || tō gānne
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || dōnde || gāngende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || dō || gā
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || dēst || gǣst
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || dēst || gǣþ
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || dōþ || gāþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || dō || gā
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || dōþ || gāþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || dō || gā
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || dōn || gān
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || dyde || eode
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || dydest || eodest
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || dyde || eode
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || dydon || eodon
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || dyde || eode
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || dyden || eoden
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || (ġe)dōn || (ġe)gān
|}

===Willan===

Finally, the verb ''willan'', meaning &quot;to want&quot; or &quot;to wish&quot;.

{| border=1 style=&quot;text-align:center; margin:1em 1em 1em 0; border:1px #333 solid; border-collapse:collapse;&quot;
! style=&quot;background:#efafef;&quot;|'''Conjugation''' 
! style=&quot;background:#efafef;&quot;|'''Pronoun''' 
! style=&quot;background:#efefef;&quot;|&quot;want&quot;
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot; colspan=&quot;2&quot;|'''Infinitives'''
| willan
|-
| -
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;| '''Present participle''' || willende
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;5&quot;|'''Present indicative'''
|-
| style=&quot;background:#efefef;&quot;|'''iċ''' || wille
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || wilt
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || wille
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || willaþ
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Imperative'''
| style=&quot;background:#efefef;&quot;|'''Singular''' || -
|-
| style=&quot;background:#efefef;&quot;|'''Plural''' || -
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Present subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || wille
|-
| style=&quot;background:#efefef;&quot;|''' wē/ġē/hīe ''' || willen
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;4&quot;|'''Past indicative'''
| style=&quot;background:#efefef;&quot;|'''iċ''' || wolde
|-
| style=&quot;background:#efefef;&quot;|'''þū''' || woldest
|-
| style=&quot;background:#efefef;&quot;|'''hē/hit/hēo''' || wolde
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || woldon
|-
| style=&quot;background:#efefef;&quot; rowspan=&quot;2&quot;|'''Past subjunctive'''
| style=&quot;background:#efefef;&quot;|'''iċ/þū/hē/hit/hēo''' || wolde
|-
| style=&quot;background:#efefef;&quot;|'''wē/ġē/hīe''' || wolden
|-
| style=&quot;background:#efefef;&quot; colspan=&quot;2&quot;|'''Past participle''' || -
|}

==References==
*[[/List of verbs with dative objects/]]
*[[/List of verbs with accusative objects/]]
*[[/List of verbs with dative or accusative objects/]]</text>
      <sha1>1w9hxu4kunnj17hilj9yr57f8s7htlo</sha1>
    </revision>
  </page>
  <page>
    <title>Blender 3D: Noob to Pro/Beginning Tips</title>
    <ns>0</ns>
    <id>41033</id>
    <revision>
      <id>1958237</id>
      <parentid>1942721</parentid>
      <timestamp>2010-10-25T23:31:21Z</timestamp>
      <contributor>
        <username>Stepheng3</username>
        <id>389827</id>
      </contributor>
      <comment>update NAV and recategorize</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{B3D:N2P/NAV
|next=
|previous=
|subcat=Attic
}}

These are some basic tips that are often asked for in one form or another.  Sometimes it is in reference to something completely different, but the basic methodology will work.

== Starting with a box ==


[[Image:Blender_object_mode_1.png|thumb|right|Default cube]]
Tutorials will often start with the default cube you see right after opening Blender. Here are two ways to reset the scene without quitting the application:
* '''Ctrl'''-'''X''' (while holding the '''Ctrl''' key, press the '''X''' key);
* or select ''File -&gt; New'' from the menu.
Then, you will see a prompt box asking '''OK?''' under your mouse pointer. You can confirm that you want to erase your current scene by clicking '''Erase All''' (or move the mouse around to dismiss it).

The cube is shown as a square in the 3D viewport. If you rotate the view while holding down '''MMB''' (middle mouse button), you'll see it is actually a cube. It is selected by default (pink outlines color).  Also, you can hold down the Alt key and Left Click to simulate the Middle Mouse Button.  Another way to do this for mice with only two buttons is by holding down both buttons at the same time.  Navigating in 3D Space is assumed. Please see the excellent tutorials on Blender about User Interface Tutorial [http://www.blender.org/education-help/tutorials/tutorial-folder/blender-user-interface-tutorial/]
, The Blender Windows[http://www.blender.org/education-help/tutorials/tutorial-folder/the-blender-windows/], and Navigating in 3D Space[http://www.blender.org/education-help/tutorials/tutorial-folder/navigating-in-3d-space/] which are located on the Blender Quickstart page here: http://www.blender.org/education-help/quickstart/

{{Info|You can change the default scene (and return to a personalized one when pressing '''Ctrl-X'''). Just modify the scene and arrange dialogs to suit your needs, then click ''File &gt; Save Default Settings''. Your current scene will now be used as the default when you click ''File &gt; New''. This is very handy indeed. To return to factory defaults, you can delete the file which contains those settings: '''.B.blend''' in your home directory. Starting from version 2.44, a new ''Load Factory Settings'' item is available from the ''File'' menu.}}
{{clr}}

== Subdivision Surfaces ==
Subdivision surfaces, or subsurfing, is a common technique in 3D modeling. It uses a mathematical process of simulating a curved plane in space according to the placement of control points, or vertices.  What this means is that you can create an object with a smooth surface that is easily controlled by relatively few vertices.

=== Adding a Subsurf modifier ===
[[Image:Blender_panel_modifiers.png|framed|right|The Subsurf modifier]]

First, select the cube by clicking '''RMB''' (right mouse button) on the cube in the 3D window (pink outlines indicate the selected objects). Now choose the ''Editing'' panel set in the &quot;Buttons&quot; (bottom) window:
* click on the [[Image:Blenderediting.png]] icon in the panel list: [[File:Blender edit buttons.png]]
* or press '''F9'''.

If you're not seeing a bunch of windows in the bottom view panel, such as ''Link and Materials'', ''Mesh'', ''Multires'', ''Modifiers'', ''Shapes'', then there's a good chance you haven't got the cube itself selected or you are still in object mode. 

In the ''Modifiers'' window, click on the ''Add Modifier'' button and select ''Subsurf''. Click on the arrow to the right of ''Levels:1'' to increase the subsurf level. With each increment the cube becomes more smooth, and more planes are added. Don't do the following, but '''''if''''' you were to hit ''apply'', the original form of the cube becomes lost. If you don't apply the changes they remain on the cube as if it was a filter, of sorts.

In order to complete the rest of this tutorial successfully, it is vital that you do '''''NOT''''' click ''apply'' within the ''Subsurf'' modifier tab.

''Noobie asks: I did this, and I cannot change the &quot;Level&quot;. Why not?''
''Noobie2 responds: Make sure you didn't hit multitires by mistake.''
''Noobie3 responds: Maybe you accidentally clicked something else.''
''Noobie4 responds: Maybe you overlooked the level &quot;gauge&quot;''

[[Image:Blender_tips_cube_subsurfed.png|thumb|320px|left|Levels set to 1]]
[[Image:Blender_tips_cube_subsurfed2.png|thumb|320px|none|Levels set to 2]]
{{Clr}}

=== But I want a box! ===
Often, you will want to render with your model having some sort of subsurf turned on.  Face it, most things in real life just do not have super sharp edges. Unless the object is a knife edge, an object in the real world will have some sort of softer edge on it. It is just this fact that is often overlooked by people starting out in 3D: computer geometry can sometimes look ''too perfect'', resulting from impossibly sharp, clean, and well defined edges.

This effect can be fixed by telling Blender that we want our cube to retain more of its original shape. We'll do this using a tool called '''Edge Creasing'''. Each edge in a Blender model has a crease value associated with it, which is used to tell the Subsurf modifier how sharp we want that edge to be. By default, all edges have a crease of 0, which is why our cube has lost all its sharp edges.

=== Show subdivision surface's cage ===
[[Image:Blender_cube_crease_0.png|thumb|right|Subsurfed cube in Edit mode]]

Now, remember what we said about the Subsurf modifier remembering our original cube shape? Press '''TAB''' to go into edit mode and you'll see that the original cube has come back to haunt us as a wire frame around the smoothed cube. (unless you're using version 2.45 of Blender)

Before we fiddle with the creasing, set the Subsurf ''Levels'' up to &quot;4&quot; so you can see the effect more clearly.

=== Choose an edge to crease ===
Enter face mode by either:
* Placing the cursor in the 3D View &amp;rarr; changing to ''Edit Mode'' {{ref|editmode}} &amp;rarr; '''CTRL+TAB''' &amp;rarr; choosing ''Faces'' (or pressing 3KEY)
* Changing to ''Edit Mode'' &amp;rarr; clicking [[Image:Blenderface.png|Blender Face button]] (Face Mode Icon).

Select one of the faces of our wire cube with '''RMB''' by clicking near the dot in the centre of the face. You'll know when it's been selected because the other faces will change colour to grey, and the face you've selected will be highlighted.

Note that, although we are in Face mode, it is really the ''edges'' that we are creasing; selecting a face is just a quick way of selecting its four edges.

=== Crease selected edges ===
[[Image:Blender_cube_crease_1.png|thumb|left|Editing edge creases]]
Now crease the edges of the selection by&lt;br&gt;
''either'':
* Press '''SHIFT+E''' and slowly move the mouse observing the result of Crease operation on the selected face.
* In the 3D Viewport's header select Mesh &amp;rarr; Edges &amp;rarr; Crease SubSurf. 

Your mouse will be tied to the cube with a dotted line. Move it gently left and right to see the effect it has on the mesh. Mesh will change when pulling the dotted line on the opposite side of the creased face.



In the style of Blender, click '''LMB''' to apply the changes, or '''RMB''' to cancel creasing.

{{Clr}}

=== Finally build a real box ===
[[Image:Blender_cube_crease_2.png|thumb|right|All edges creased for a bevelled effect]]
Either cancel the above edge crease, press Ctrl-Z to undo the last change, or start from scratch to get back to our simple subsurfed cube. (To get the same result as the picture on the right, set the subsurf to 3 or 4.) Then press the '''A''' key twice to select all faces. Crease them with '''SHIFT+E''' like before, until your cube looks like the image on the right.

''Note By a Nooby: If you are looking for a bevel effect that doesn't require so many polygons, try (in Edit Mode) pressing the '''W''' key then selecting Bevel.''

Click LMB to apply the changes then press '''TAB''' to cancel out of edit mode. Behold: your smooth cube.

&lt;div style=&quot;width: 550px; margin: 5px; padding: 3px; background: #eee; border: 1px solid #ccc;&quot;&gt;
When rendering:
* Make sure you have set the &quot;Renders Level&quot; in the Subsurf Modifiers tab.  
* Also, double check that the &quot;Enable modifier during rendering&quot; toggle is on (dark) as it should be by default. It is the very small icon next to the Subsurf title button.
&lt;/div&gt;

== Footnotes ==
# {{note|editmode}} You can change to ''Edit Mode'' by selecting it from the drop down list on the 3D Viewport's header. Or, you can toggle between the current mode, and ''Edit Mode'' by using '''TAB'''.

{{B3D:N2P/NAV
|next=
|previous=
|subcat=Attic
}}

[[ru:Blender 3D: Noob to Pro/Beginning Tips]]</text>
      <sha1>5rhpvyag5qvdg06g26jpmw45x1p0ujq</sha1>
    </revision>
  </page>
  <page>
    <title>User:Sik0fewl~enwikibooks</title>
    <ns>2</ns>
    <id>41038</id>
    <revision>
      <id>2885807</id>
      <parentid>296176</parentid>
      <timestamp>2015-04-17T23:09:03Z</timestamp>
      <contributor>
        <username>Maintenance script</username>
        <id>2283202</id>
      </contributor>
      <minor />
      <comment>Maintenance script moved page [[User:Sik0fewl]] to [[User:Sik0fewl~enwikibooks]] without leaving a redirect: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/Sik0fewl|Sik0fewl]]&quot; to &quot;[[Special:CentralAuth/Sik0fewl~enwikibooks|Sik...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" />
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    </revision>
  </page>
  <page>
    <title>Category:Books to be merged</title>
    <ns>14</ns>
    <id>41040</id>
    <revision>
      <id>1971426</id>
      <parentid>1788075</parentid>
      <timestamp>2010-11-13T15:30:39Z</timestamp>
      <contributor>
        <username>Darklama</username>
        <id>7662</id>
      </contributor>
      <minor />
      <comment>hide cat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">__HIDDENCAT__
These are books that are suggested to be merged with another book.

Use {{tl|merge|page}}, {{tl|mergeto|page}} and {{tl|mergefrom|page}}.

[[Category:Merge maintenance|Books]]

[[pt:Categoria:Módulos a sofrerem fusão]]</text>
      <sha1>ghxblwb8ydx1cba4b4upj3q7dimqmn8</sha1>
    </revision>
  </page>
  <page>
    <title>User talk:GorgeUbuasha</title>
    <ns>3</ns>
    <id>41046</id>
    <revision>
      <id>2725023</id>
      <parentid>2384059</parentid>
      <timestamp>2014-11-14T18:49:00Z</timestamp>
      <contributor>
        <username>MBisanz</username>
        <id>85319</id>
      </contributor>
      <minor />
      <comment>MBisanz moved page [[User talk:GeorgBauhaus]] to [[User talk:GorgeUbuasha]]: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/GeorgBauhaus|GeorgBauhaus]]&quot; to &quot;[[Special:CentralAuth/GorgeUbuasha|GorgeUbuasha]]&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">== ObjectAda ==

Thank you for your explanations on [[Ada Programming/Building]]. Would you also help us out to create an &lt;var style=&quot;color:OliveDrab4&quot;&gt;wikibook-ada-2_x_0/ObjectAda&lt;/var&gt; Directory? As the name suggest it should contain ObjectAda Project (GUI/IDE) files similar to the files found in &lt;var style=&quot;color:OliveDrab4&quot;&gt;wikibook-ada-2_x_0/GNAT&lt;/var&gt;.

--[[User:Krischik|Krischik]]&amp;nbsp;&lt;sup&gt;[[User_talk:Krischik|T]]&lt;/sup&gt; 06:35, 16 September 2005 (UTC)

IDE project files seem to be rather binary. The UNIT.MAP and ADA.LIB
files OTOH are rather self-explanatory, or at least they can
be explained without too much effort. 

(Updated, [[User:GeorgBauhaus|gb]] 22:43, 15 May 2006 (UTC))

== scrap book ==
A &lt;ref&gt;footnote&lt;/ref&gt; appears?

&lt;references/&gt;

== TODO list ==

in Packages, remove the &lt;tt&gt;match&lt;/tt&gt; function. It will
interrupt understanding the parent/child relation.

in limited types, the solution provided by constructor
functions is really based on in place initialization. The other
constructs (aggregates of limited type and extended return
statements) only help with this.

==Reviewer==

{{tmbox|image=[[File:Wikibooks award.svg|50px]]|imageright = [[Image:Nuvola apps bookcase.svg|40px]]|text=&lt;big&gt;'''You have been automatically promoted to &lt;u&gt;''Reviewer!''&lt;/u&gt;'''&lt;/big&gt;&lt;br/&gt;

Your recent contributions mean that you have met the requirements to be automatically promoted to [[Wikibooks:Reviewer|Reviewer]]. If you have any questions about using the review functionality please ask in the [[Wikibooks:Reading room|Reading Room]]. Thanks and Congratulations! &lt;font color=&quot;#E66C2C&quot;&gt;[[User:QuiteUnusual|'''QU''']]&lt;/font&gt; &lt;sup&gt;&lt;font color=&quot;#306754&quot;&gt;[[User talk:QuiteUnusual|TalkQu]]&lt;/font&gt;&lt;/sup&gt; 09:12, 26 July 2012 (UTC)}}</text>
      <sha1>sz0a8p5u300mhy5okmqqhrb4qz9snlh</sha1>
    </revision>
  </page>
  <page>
    <title>User:GorgeUbuasha</title>
    <ns>2</ns>
    <id>41047</id>
    <revision>
      <id>2725019</id>
      <parentid>1733311</parentid>
      <timestamp>2014-11-14T18:48:58Z</timestamp>
      <contributor>
        <username>MBisanz</username>
        <id>85319</id>
      </contributor>
      <minor />
      <comment>MBisanz moved page [[User:GeorgBauhaus]] to [[User:GorgeUbuasha]]: Automatically moved page while renaming the user &quot;[[Special:CentralAuth/GeorgBauhaus|GeorgBauhaus]]&quot; to &quot;[[Special:CentralAuth/GorgeUbuasha|GorgeUbuasha]]&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">{{user language|en|3}}{{programming language|java|3}}{{programming language|ada|3}}

* An Emacs Lisp file, for transforming Ada programs to MediaWiKi. Eases writing code examples for the [[Ada_Programming]] book.
 Usage:
   mark a region, then command M-x Ada-to-WiKi.  Modifies the
   current buffer by replacing the text in the region.
Available as [http://home.arcor.de/bauhaus/Ada/ada-to-wiki.el ada-to-wiki.el]

* [http://home.arcor.de/bauhaus/Tools/ASnip/ ASnip] transforms to MediaWiKi Ada templates, too. It processes a character stream and is written in plain Ada 95.

 Usage:
   $ asnip from Ada generate Wikibook [encoding ...]

Can be used with pipes, shell scripts,
or from within editing programs like vi using the `!' command.
Available as [http://home.arcor.de/bauhaus/Tools/ASnip/ ASnip]</text>
      <sha1>jvfyogg6y0nz4xf95yyoaiai3fw9ank</sha1>
    </revision>
  </page>
  <page>
    <title>A-level Physics/Forces, Fields and Energy/Motion in a circle</title>
    <ns>0</ns>
    <id>41052</id>
    <revision>
      <id>2735040</id>
      <parentid>2052886</parentid>
      <timestamp>2014-11-22T17:26:25Z</timestamp>
      <contributor>
        <username>Fimatic</username>
        <id>1902259</id>
      </contributor>
      <comment>{{A-level physics}}</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve">Motion in a circle is a very interesting concept, and not very complicated either. There are many lines (in the non literal sense) that can be drawn between circular motion and linear motion. In fact, as you progress, you will find circular motion much more convinient that linear motion, because of some basic properties, most importantly, that the angular motion, of a body is the same for all particles, though their velocities may change. However, this will be dealt in rotational mechanics, not here. Before reading this section, ensure that you have a thorough understanding of linear motion, vectors and differentiation.

==Angular Variables==

Similar to the variables, &lt;math&gt; \vec r , \vec s , \vec v , \vec a &lt;/math&gt; found in linear motion, representing the position vector, displacement, velocity and acceleration respectively, we have a few terms in angular motion.

The first variable is &lt;math&gt;\ \theta &lt;/math&gt;, which is the angle subtended at the centre of the circle. This can be compared with the position vector &lt;math&gt; \vec r &lt;/math&gt; of linear motion. It is measured in radians, or ''rads''.

The second variable is angular velocity, &lt;math&gt;\ \vec \omega &lt;/math&gt;. Like velocity is the change in your position vector, or your displacement by time, t, &lt;math&gt;\ \vec \omega &lt;/math&gt; is the change in angle per unit time. It is measured in radians per second, ''rads/s''. Also, it is not your displaced angle. If you cover 360 &amp;deg, and full circle, in one second, it does not mean that your angular velocity is zero, but 2 &amp;pi radians per second. Mathematically we have, 
&lt;math&gt;\ \vec \omega = d \theta / dt &lt;/math&gt;

The third variable is angular acceleration, &lt;math&gt;\ \vec \alpha &lt;/math&gt;. It is the change in angular velocity by time.  It is measured in radians per second, &lt;math&gt;rads/s^2&lt;/math&gt;. Mathematically,
&lt;math&gt;\ \vec \alpha = d \omega / dt &lt;/math&gt;

Notice that these quantities are not dependent on radius. All angular terms depend only on the axis of rotation, or the centre of the circle, a fact that makes circular motion useful.

== Axial Vectors ==

It should be noted that these vectors are '''not''' normal vectors, but are '''axial''' vectors. Axial vectors are vectors along the axis. Rather that along the direction of motion, these angular variables are along the axis, in an upward direction or downward direction. 

This concept is quite difficult to visulalise. Imagine a rod, which is your axis of rotation, passing through a disc. If you try and spin the disc, the axis will start to rotate. As such, your axis '''does not''' possess a real velocity. It does not move at all.

Now if you put a small ring on the rod. It should be in contact, but not too tightly attached. If you spin the rod, the ring will start to move up, or down. This is due to a physical phenomenon, but for this purpose, ignore the dynamics of its motion, only consider that it is moving up, or down. Also notice, that generally, when you rotate it in '''anticlockwise direction''', it moves ''' up '''. By this experiment, you can visualise how the axial vector operates.

By convention, an anticlockwise rotation the direction of the axial vector is taken as the positive upward vector on the axis, and vice versa for clockwise rotation. Another point to not is that though axial vectors can be resolved, to simulate a body rotating in two axes, it more often than not complicates the situation. There are also several technical complications if your two axes of rotation are not passing through the same point. This is a very complicated situation, and will not be discussed.

== Using Angular Variables ==

Here are a few examples showing the usage of the angular variables we have just learnt.

===Example 1===
Suppose a body is rotating, such that it subtends an angle of 1200 &amp;deg at the centre every minute. Find its angular velocity in S.I. units.

We know that angular velocity is the angle covered per unit time. Since it covers 1200 degrees per minute, with uniform angular velocity, we can say that it covers 20 degrees in one second. 20 degrees is &lt;math&gt; \pi / 9 &lt;/math&gt; radians. So we get &lt;math&gt;\ \vec \omega = \pi / 9 &lt;/math&gt; rad/s.

===Example 2===
If a body's angular displacement increases by  &lt;math&gt; \pi &lt;/math&gt; per second, find its,  angular velocity, and acceleration at some time, t.

It is clear that the angular velocity is not constant from this. The average angular velocity in the first second is &lt;math&gt; \pi &lt;/math&gt; rads/s, in the second second, &lt;math&gt; 2\pi &lt;/math&gt; rads/s, and in the third second &lt;math&gt; 3\pi &lt;/math&gt; rads/ sec. You can observe that the angular velocity is the time, t into &lt;math&gt; \pi &lt;/math&gt; radians per second. So, &lt;math&gt; \vec \omega = t \pi &lt;/math&gt; rads/s. 

We can also see that the angular acceleration is constant, and equal to &lt;math&gt; \pi &lt;/math&gt; radians per second square. So, &lt;math&gt; \vec \alpha = \pi &lt;/math&gt;.

==Equations of Motion==
We now move onto a few equations, bearing striking resemblance to those of linear motion. The second example given above, is much better solved with these equations. All these equations are applicable '''only''' under '''constant angular acceleration'''.

&lt;ol&gt;
&lt;li&gt; &lt;math&gt; \vec \omega = \vec \omega_0 + \vec \alpha t &lt;/math&gt;
This equation gives a relation between your angular velocity and time. &lt;math&gt; \vec \omega_0 &lt;/math&gt; is the angular velocity initially. &lt;/li&gt;

&lt;li&gt;&lt;math&gt; \theta = \theta_0 + \vec \omega_0 t + \frac{1}{2} \vec \alpha t^2 &lt;/math&gt;
This equation gives a relation between your angular displacement and time. &lt;math&gt; \theta_0 &lt;/math&gt; is the initial angular displacement. &lt;/li&gt;

&lt;li&gt; &lt;math&gt; \omega^2 - \omega_0^2 = 2 \theta \alpha  &lt;/math&gt;
This equation gives a relation between your angular velocity and angular displacement. Remember that the &amp;omega is '''not a vector'''.
&lt;/li&gt;

&lt;/ol&gt;

=== Example 3 ===
If a body spins about an axis, accelerating at a rate of 4 rad/s^2, find
# the angular displacement after 5 seconds, and angular velocity at that time
# the angular displacement when it attains an angular velocity of 12 rad/s

&lt;ol&gt;

&lt;li&gt; The time has been given. In the first part, we need a relation between &amp;theta and time. This is the second equation. So, we have the equation identified, &lt;math&gt; \theta = \theta_0 + \vec \omega_0 t + \frac{1}{2} \vec \alpha t^2 &lt;/math&gt;. We also know the values of &lt;math&gt; \theta_0, \omega_0 and \alpha &lt;/math&gt;. Substituting,
&lt;math&gt; \theta = 0 + 0*5 + \frac{1}{2} 4 5^2 = 2 \times 25 &lt;/math&gt;
&lt;math&gt; \theta = 50 &lt;/math&gt; radians

The second part requires us to establish a relation between &amp;omega and time. This is the first equation.

&lt;math&gt; \vec \omega = \vec \omega_0 + \vec \alpha t = 0 + 4 \times 5 = 20 &lt;/math&gt;
&lt;math&gt; \vec \omega = 20 &lt;/math&gt; rads/s

&lt;\li&gt;

&lt;li&gt; There are two methods to solve this equation. One is to find time through the first equation, and substitute it in the second, the other is to directly use the third equation. 
&lt;math&gt; \vec \omega = \vec \omega_0 + \vec \alpha t &lt;/math&gt;
&lt;math&gt; 12 = 0 + 4 \times t &lt;/math&gt; or &lt;math&gt; t = 3 &lt;/math&gt;

Substituting in equation 2,

&lt;math&gt; \theta = 0 + 1/2 \times 4 \times 3^2 = 2 \times 9 = 18 &lt;/math&gt;

In the other method,

&lt;math&gt; 12^2 = 2\times \theta \times 4 &lt;/math&gt; or  &lt;math&gt; \theta = \frac {144}{2\times4} = 18 &lt;/math&gt;
&lt;/li&gt;

One might ask why the first method was even considered. This is because, if the angular '''velocity''' was given, not your '''speed''', the third equation would require us to first find the speed, i.e. magnitude, of the &amp;omega, and we would proceed further. This too is not a serious impediment, and could be carried out. But if the angular velocity were asked, the third equation would not give us that.  These are important things to be kept in mind, even if they are not applied often.

== Angular Unit Vectors ==
For the sake of convenience, two different vectors are used in circular motion, radial vectors and tangential vectors. Rather than our usual &lt;math&gt; \hat i &lt;/math&gt; and &lt;math&gt; \hat j &lt;/math&gt; vectors used for components in the x-axis and y-axis, the radial vector, &lt;math&gt; \hat r &lt;/math&gt; gives the outward component along the radial line. The tangential vector, &lt;math&gt; \hat \tau &lt;/math&gt; gives the component along the tangent, anticlockwise being positive.

If the angle subtended at the centre is known, then it becomes quite easy to convert these vectors into normal x-axis and y-axis vectors, by trigonometry.

== Conversion of angular terms into radial terms ==
{{A-level physics}}
[[Category:A-level Physics|Motion in a circle]]</text>
      <sha1>4s3i5usi2qld9y6o6yackinyle5xlac</sha1>
    </revision>
  </page>
</mediawiki>